{"nodes":[{"content":"A container timeline that provides object and property targeting information for its child animations.","nodes":[{"pos":[0,102],"content":"A container timeline that provides object and property targeting information for its child animations.","nodes":[{"content":"A container timeline that provides object and property targeting information for its child animations.","pos":[0,102]}]}],"pos":[7067,7170],"yaml":true},{"content":"## Interactively Controlling Storyboards  \n A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n## Data Binding and Animating Timelines  \n Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.  \n  \n When a timeline is activated, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them. These clocks do the actual work of animating the targeted properties. If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created. Even though the original timeline might continue to change, its clock does not.  \n  \n For a timeline to reflect data binding or animation changes, its clock must be re-created. Clocks are not re-created for you automatically. The following are several ways to apply timeline changes:  \n  \n-   If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method. This has the side effect of also restarting the animation. In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.  \n  \n-   If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.  \n  \n-   If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.  \n  \n For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .","nodes":[{"pos":[3,40],"content":"Interactively Controlling Storyboards","linkify":"Interactively Controlling Storyboards","nodes":[{"content":"Interactively Controlling Storyboards","pos":[0,37]}]},{"pos":[44,901],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in markup, you specify the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> object that creates it; for an example, see <bpt id=\"p1\">[</bpt>How to: Use Event Triggers to Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[73,490],"source":" To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)."},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[491,700],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[701,857],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[910,946],"content":"Data Binding and Animating Timelines","linkify":"Data Binding and Animating Timelines","nodes":[{"content":"Data Binding and Animating Timelines","pos":[0,36]}]},{"pos":[950,1239],"content":"Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.","nodes":[{"content":"Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.","pos":[0,289],"nodes":[{"content":"Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.","pos":[0,198]},{"content":"To understand their behavior, it helps to understand what it means to activate a timeline.","pos":[199,289]}]}]},{"pos":[1246,1711],"content":"When a timeline is activated, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them. These clocks do the actual work of animating the targeted properties. If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created. Even though the original timeline might continue to change, its clock does not.","nodes":[{"content":"When a timeline is activated, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them. These clocks do the actual work of animating the targeted properties. If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created. Even though the original timeline might continue to change, its clock does not.","pos":[0,465],"nodes":[{"content":"When a timeline is activated, copies are made of the timeline and its child timelines.","pos":[0,86]},{"content":"These copies are frozen (made read-only) and <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created from them.","pos":[87,206],"source":" These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them."},{"content":"These clocks do the actual work of animating the targeted properties.","pos":[207,276]},{"content":"If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.","pos":[277,385]},{"content":"Even though the original timeline might continue to change, its clock does not.","pos":[386,465]}]}]},{"pos":[1718,1915],"content":"For a timeline to reflect data binding or animation changes, its clock must be re-created. Clocks are not re-created for you automatically. The following are several ways to apply timeline changes:","nodes":[{"content":"For a timeline to reflect data binding or animation changes, its clock must be re-created. Clocks are not re-created for you automatically. The following are several ways to apply timeline changes:","pos":[0,197],"nodes":[{"content":"For a timeline to reflect data binding or animation changes, its clock must be re-created.","pos":[0,90]},{"content":"Clocks are not re-created for you automatically.","pos":[91,139]},{"content":"The following are several ways to apply timeline changes:","pos":[140,197]}]}]},{"pos":[1925,2410],"content":"If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method. This has the side effect of also restarting the animation. In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.","nodes":[{"content":"If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method. This has the side effect of also restarting the animation. In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.","pos":[0,485],"nodes":[{"content":"If the timeline is or belongs to a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, you can make it reflect changes by reapplying its storyboard using a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> or the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method.","pos":[0,280],"source":"If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method."},{"content":"This has the side effect of also restarting the animation.","pos":[281,339]},{"content":"In code, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Seek%2A&gt;</ph> method to advance the storyboard back to its previous position.","pos":[340,485],"source":" In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position."}]}]},{"pos":[2420,2694],"content":"If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.","nodes":[{"content":"If you applied an animation directly to a property using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, call the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method again and pass it the animation that has been modified.","pos":[0,274],"source":"If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified."}]},{"pos":[2704,2848],"content":"If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.","nodes":[{"content":"If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.","pos":[0,144]}]},{"pos":[2855,2979],"content":"For an example of a data bound animation, see <bpt id=\"p1\">[</bpt>Key Spline Animation Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160011)</ept> .","source":"For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) ."}],"pos":[7181,10179],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class."}],"pos":[18223,18327],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.","nodes":[{"pos":[0,173],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets within the specified template and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them."}],"pos":[19966,20140],"yaml":true},{"content":"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,161],"content":"To interactively control this storyboard, you must specify the same <ph id=\"ph1\">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard"},{"pos":[168,358],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[365,560],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]},{"pos":[569,602],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[606,1123],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[1130,1391],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[1401,1929],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1939,2967],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2974,3147],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[3154,3321],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[20151,23492],"yaml":true,"extradata":"MT"},{"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,223],"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"The object to which the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">frameworkTemplate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been applied.","pos":[0,82],"source":"The object to which the specified <code>frameworkTemplate</code> has been applied."},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[83,223],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[23828,24052],"yaml":true},{"content":"The template to animate.","nodes":[{"pos":[0,24],"content":"The template to animate.","nodes":[{"content":"The template to animate.","pos":[0,24]}]}],"pos":[24144,24169],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[24273,24356],"yaml":true},{"content":"`true` if the storyboard should be interactively controllable; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the storyboard should be interactively controllable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the storyboard should be interactively controllable; otherwise, `false`."}],"pos":[24427,24512],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[25931,26075],"yaml":true},{"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,167],"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard"},{"pos":[174,364],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[371,566],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]},{"pos":[575,608],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[612,1129],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[1136,1397],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[1407,1935],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1945,2973],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2980,3153],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[3160,3327],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[26086,29433],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,245],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,245],"source":" Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[31300,31546],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[31650,31733],"yaml":true},{"content":"Declares whether the animation is controllable (can be paused) once started.","nodes":[{"pos":[0,76],"content":"Declares whether the animation is controllable (can be paused) once started.","nodes":[{"content":"Declares whether the animation is controllable (can be paused) once started.","pos":[0,76]}]}],"pos":[31804,31881],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.","nodes":[{"pos":[0,173],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets within the specified template and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them."}],"pos":[33384,33558],"yaml":true},{"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,190],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[197,392],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]},{"pos":[401,434],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[438,955],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[962,1223],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[1233,1761],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1771,2799],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2806,2979],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[2986,3153],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[33569,36740],"yaml":true,"extradata":"MT"},{"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,223],"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"The object to which the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">frameworkTemplate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been applied.","pos":[0,82],"source":"The object to which the specified <code>frameworkTemplate</code> has been applied."},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[83,223],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[37055,37279],"yaml":true},{"content":"The template to animate.","nodes":[{"pos":[0,24],"content":"The template to animate.","nodes":[{"content":"The template to animate.","pos":[0,24]}]}],"pos":[37371,37396],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[37500,37583],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.","nodes":[{"pos":[0,173],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets within the specified template and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them."}],"pos":[38944,39118],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,335],"content":"To interactively control this storyboard, you must specify the same <ph id=\"ph1\">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard"},{"pos":[342,532],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[539,734],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[39129,39872],"yaml":true,"extradata":"MT"},{"content":"The object to which the specified <code>frameworkTemplate</code> has been applied.  Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,224],"content":"The object to which the specified <code>frameworkTemplate</code> has been applied.  Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"The object to which the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">frameworkTemplate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been applied.","pos":[0,82],"source":"The object to which the specified <code>frameworkTemplate</code> has been applied."},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[84,224],"source":"  Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[40144,40369],"yaml":true},{"content":"The template to animate.","nodes":[{"pos":[0,24],"content":"The template to animate.","nodes":[{"content":"The template to animate.","pos":[0,24]}]}],"pos":[40461,40486],"yaml":true},{"content":"`true` if the storyboard should be interactively controllable; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the storyboard should be interactively controllable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the storyboard should be interactively controllable; otherwise, `false`."}],"pos":[40557,40642],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.","nodes":[{"pos":[0,232],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them, using the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;&lt;/xref&gt;</ph>.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>."}],"pos":[42103,42336],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the specified handoff behavior.  \n  \n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,104],"content":"If the targeted properties are already animated, they are replaced using the specified handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the specified handoff behavior.","pos":[0,104]}]},{"pos":[111,272],"content":"To interactively control this storyboard, you must specify the same <ph id=\"ph1\">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard"},{"pos":[279,469],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[476,671],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]},{"pos":[680,713],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[717,1234],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[1241,1502],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[1512,2040],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[2050,3078],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[3085,3258],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[3265,3432],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[42347,45801],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,245],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,245],"source":" Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[48074,48320],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[48424,48507],"yaml":true},{"content":"Declares whether the animation is controllable (can be paused) once started.","nodes":[{"pos":[0,76],"content":"Declares whether the animation is controllable (can be paused) once started.","nodes":[{"content":"Declares whether the animation is controllable (can be paused) once started.","pos":[0,76]}]}],"pos":[48578,48655],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.","nodes":[{"pos":[0,173],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets within the specified template and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them."}],"pos":[49944,50118],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,364],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[371,566],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[50129,50702],"yaml":true,"extradata":"MT"},{"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,223],"content":"The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"The object to which the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">frameworkTemplate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been applied.","pos":[0,82],"source":"The object to which the specified <code>frameworkTemplate</code> has been applied."},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[83,223],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[50953,51177],"yaml":true},{"content":"The template to animate.","nodes":[{"pos":[0,24],"content":"The template to animate.","nodes":[{"content":"The template to animate.","pos":[0,24]}]}],"pos":[51269,51294],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.","nodes":[{"pos":[0,232],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them, using the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;&lt;/xref&gt;</ph>.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>."}],"pos":[52619,52852],"yaml":true},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,245],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,245],"source":" Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[54146,54392],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[54496,54579],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.","nodes":[{"pos":[0,232],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them, using the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;&lt;/xref&gt;</ph>.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>."}],"pos":[55968,56201],"yaml":true},{"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,517],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically."}]},{"pos":[524,785],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[795,1323],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This removes all animation clocks from the property.","pos":[476,528]}]},{"pos":[1333,2361],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not called if the effective duration of the clock is forever.","pos":[768,911],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[913,1028],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2368,2541],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[0,173],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks are also disconnected and garbage collected.","pos":[81,173]}]}]},{"pos":[2548,2715],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[56212,58940],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,235],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,235],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[60296,60532],"yaml":true},{"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"pos":[0,82],"content":"The behavior the new animation should use to interact with any current animations.","nodes":[{"content":"The behavior the new animation should use to interact with any current animations.","pos":[0,82]}]}],"pos":[60636,60719],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[61988,62132],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,335],"content":"To interactively control this storyboard, you must specify the same <ph id=\"ph1\">`containingObject`</ph> when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard"},{"pos":[342,532],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[539,734],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[62143,62886],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,235],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,235],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[64030,64266],"yaml":true},{"content":"`true` if the storyboard should be interactively controllable; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the storyboard should be interactively controllable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the storyboard should be interactively controllable; otherwise, `false`."}],"pos":[64337,64422],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[65555,65699],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,620],"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.","nodes":[{"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.","pos":[0,446],"nodes":[{"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.","pos":[0,125]},{"content":"To make a storyboard controllable, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29&gt;</ph> method.","pos":[126,446],"source":" To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method."}]}]},{"pos":[627,822],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[65710,66539],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,235],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,235],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[66738,66974],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[68171,68315],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,469],"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.","nodes":[{"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.","pos":[0,295],"nodes":[{"content":"Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.","pos":[0,125]},{"content":"To make a storyboard controllable, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method.","pos":[126,295],"source":" To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method."}]}]},{"pos":[476,671],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[68326,69004],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,235],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,235],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[70072,70308],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[71316,71460],"yaml":true},{"content":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.","nodes":[{"pos":[0,143],"content":"Applies the animations associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to their targets and initiates them.","source":"Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them."}],"pos":[72751,72895],"yaml":true},{"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard  \n  \n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \n  \n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"pos":[0,167],"content":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.","nodes":[{"content":"If the targeted properties are already animated, they are replaced using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace&gt;</ph> handoff behavior.","pos":[0,167],"source":"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior."}]},{"pos":[174,341],"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard","source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard"},{"pos":[348,538],"content":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.","nodes":[{"content":"When this method is called, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects are created for the storyboard and any timelines it contains.","pos":[0,141],"source":"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains."},{"content":"These clocks are stored with <ph id=\"ph1\">`containingObject`</ph>.","pos":[142,190],"source":" These clocks are stored with `containingObject`."}]},{"pos":[545,740],"content":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.","nodes":[{"content":"Beginning a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.","pos":[0,195],"source":"Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."}]}],"pos":[72906,73655],"yaml":true,"extradata":"MT"},{"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"pos":[0,235],"content":"An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.","nodes":[{"content":"An object contained within the same name scope as the targets of this storyboard's animations.","pos":[0,94]},{"content":"Animations without a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> are applied to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">containingObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[95,235],"source":" Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>."}]}],"pos":[73875,74111],"yaml":true},{"content":"`true` if the storyboard should be interactively controllable; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the storyboard should be interactively controllable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the storyboard should be interactively controllable; otherwise, `false`."}],"pos":[74182,74267],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,314],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","pos":[0,142],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[143,314]}]}],"pos":[75275,75590],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[75601,75949],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true.`</ph>","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`"}]}],"pos":[76135,76368],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class.","nodes":[{"pos":[0,99],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class."}],"pos":[77454,77554],"yaml":true},{"content":"This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).","nodes":[{"pos":[0,316],"content":"This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).","nodes":[{"content":"This method is called internally by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CreateInstance%2A&gt;</ph> when creating new instances of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> class for the various cloning methods (such as <ph id=\"ph3\">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph>).","pos":[0,316],"source":"This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>)."}]}],"pos":[77565,77882],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> instance.","nodes":[{"pos":[0,78],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> instance.","source":"A new <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> instance."}],"pos":[78585,78664],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,245],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[79928,80174],"yaml":true},{"content":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,166],"content":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.","nodes":[{"content":"A clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> speed is the rate at which its time is currently progressing, compared to real-world time.","pos":[0,166],"source":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time."}]},{"pos":[173,647],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[80185,80837],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[81064,81377],"yaml":true},{"content":"The current global speed, or `null` if the clock is stopped.","nodes":[{"pos":[0,60],"content":"The current global speed, or <ph id=\"ph1\">`null`</ph> if the clock is stopped.","source":"The current global speed, or `null` if the clock is stopped."}],"pos":[81451,81512],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,245],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[82632,82878],"yaml":true},{"content":"The current global speed, or 0 if the clock is stopped.","nodes":[{"pos":[0,55],"content":"The current global speed, or 0 if the clock is stopped.","nodes":[{"content":"The current global speed, or 0 if the clock is stopped.","pos":[0,55]}]}],"pos":[83017,83073],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,245],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[84382,84628],"yaml":true},{"content":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,166],"content":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.","nodes":[{"content":"A clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> speed is the rate at which its time is currently progressing, compared to real-world time.","pos":[0,166],"source":"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time."}]},{"pos":[173,647],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[84639,85291],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[85532,85852],"yaml":true},{"content":"The current global speed, or `null` if the clock is stopped.","nodes":[{"pos":[0,60],"content":"The current global speed, or <ph id=\"ph1\">`null`</ph> if the clock is stopped.","source":"The current global speed, or `null` if the clock is stopped."}],"pos":[85926,85987],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,243],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[87095,87339],"yaml":true},{"content":"A clock's first iteration has a value of 1.  \n  \n If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,43],"content":"A clock's first iteration has a value of 1.","nodes":[{"content":"A clock's first iteration has a value of 1.","pos":[0,43]}]},{"pos":[50,240],"content":"If this storyboard has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id=\"ph2\">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.","source":"If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments."},{"pos":[247,721],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[87350,88078],"yaml":true,"extradata":"MT"},{"content":"This clock's current iteration within its current active period, or `null` if this clock is stopped.","nodes":[{"pos":[0,100],"content":"This clock's current iteration within its current active period, or <ph id=\"ph1\">`null`</ph> if this clock is stopped.","source":"This clock's current iteration within its current active period, or `null` if this clock is stopped."}],"pos":[88211,88312],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,243],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[89607,89851],"yaml":true},{"content":"A clock's first iteration has a value of 1.  \n  \n If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,43],"content":"A clock's first iteration has a value of 1.","nodes":[{"content":"A clock's first iteration has a value of 1.","pos":[0,43]}]},{"pos":[50,240],"content":"If this storyboard has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id=\"ph2\">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.","source":"If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments."},{"pos":[247,721],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[89862,90590],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[90826,91146],"yaml":true},{"content":"This clock's current iteration within its current active period, or `null` if this clock is stopped.","nodes":[{"pos":[0,100],"content":"This clock's current iteration within its current active period, or <ph id=\"ph1\">`null`</ph> if this clock is stopped.","source":"This clock's current iteration within its current active period, or `null` if this clock is stopped."}],"pos":[91219,91320],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,243],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[92573,92817],"yaml":true},{"content":"A clock's first iteration has a value of 1.  \n  \n If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \n  \n Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,43],"content":"A clock's first iteration has a value of 1.","nodes":[{"content":"A clock's first iteration has a value of 1.","pos":[0,43]}]},{"pos":[50,247],"content":"If this clock's timeline has an <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id=\"ph2\">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.","source":"If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments."},{"pos":[254,402],"content":"Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.","nodes":[{"content":"Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.","pos":[0,148],"nodes":[{"content":"Regardless of its current iteration, seeking a clock returns its current iteration to 1.","pos":[0,88]},{"content":"Restarting a clock also returns its current iteration to 1.","pos":[89,148]}]}]},{"pos":[409,883],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[92828,93720],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[93942,94255],"yaml":true},{"content":"This clock's current iteration within its current active period, or `null` if this clock is stopped.","nodes":[{"pos":[0,100],"content":"This clock's current iteration within its current active period, or <ph id=\"ph1\">`null`</ph> if this clock is stopped.","source":"This clock's current iteration within its current active period, or `null` if this clock is stopped."}],"pos":[94328,94429],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,242],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[95507,95750],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[95761,96238],"yaml":true,"extradata":"MT"},{"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"pos":[0,575],"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"content":"<ph id=\"ph1\">`null`</ph> if this clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>, or 0.0 if this clock is active and its <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Clock.Timeline\"&gt;&lt;/xref&gt;</ph> has a <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph5\">&lt;xref href=\"System.Windows.Duration.Forever\"&gt;&lt;/xref&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.","pos":[0,453],"source":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration."},{"content":"A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","pos":[454,575]}]}],"pos":[96374,96952],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,242],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[98240,98483],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[98494,98971],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[99209,99529],"yaml":true},{"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"pos":[0,575],"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"content":"<ph id=\"ph1\">`null`</ph> if this clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>, or 0.0 if this clock is active and its <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Clock.Timeline\"&gt;&lt;/xref&gt;</ph> has a <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph5\">&lt;xref href=\"System.Windows.Duration.Forever\"&gt;&lt;/xref&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.","pos":[0,453],"source":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration."},{"content":"A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","pos":[454,575]}]}],"pos":[99603,100181],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,242],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[101427,101670],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[101681,102158],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[102382,102695],"yaml":true},{"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"pos":[0,575],"content":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","nodes":[{"content":"<ph id=\"ph1\">`null`</ph> if this clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>, or 0.0 if this clock is active and its <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Clock.Timeline\"&gt;&lt;/xref&gt;</ph> has a <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph5\">&lt;xref href=\"System.Windows.Duration.Forever\"&gt;&lt;/xref&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.","pos":[0,453],"source":"`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration."},{"content":"A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","pos":[454,575]}]}],"pos":[102769,103347],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,239],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[104406,104646],"yaml":true},{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,186],"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","nodes":[{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","pos":[0,186],"nodes":[{"content":"This method does not tell you whether a storyboard is paused.","pos":[0,61]},{"content":"To determine whether a storyboard is paused, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.","pos":[62,186],"source":" To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method."}]}]},{"pos":[193,667],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[104657,105329],"yaml":true,"extradata":"MT"},{"content":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.","nodes":[{"pos":[0,277],"content":"The current state of the clock created for this storyboard: <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Active\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Filling\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>.","source":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>."}],"pos":[105525,105805],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,239],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[107072,107312],"yaml":true},{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,186],"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","nodes":[{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","pos":[0,186],"nodes":[{"content":"This method does not tell you whether a storyboard is paused.","pos":[0,61]},{"content":"To determine whether a storyboard is paused, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.","pos":[62,186],"source":" To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method."}]}]},{"pos":[193,667],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[107323,107995],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[108255,108575],"yaml":true},{"content":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.","nodes":[{"pos":[0,277],"content":"The current state of the clock created for this storyboard: <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Active\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Filling\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>.","source":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>."}],"pos":[108660,108940],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,239],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[110165,110405],"yaml":true},{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \n  \n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,186],"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","nodes":[{"content":"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.","pos":[0,186],"nodes":[{"content":"This method does not tell you whether a storyboard is paused.","pos":[0,61]},{"content":"To determine whether a storyboard is paused, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A&gt;</ph> method.","pos":[62,186],"source":" To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method."}]}]},{"pos":[193,667],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[110416,111088],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[111334,111647],"yaml":true},{"content":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.","nodes":[{"pos":[0,277],"content":"The current state of the clock created for this storyboard: <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Active\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Filling\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>.","source":"The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>."}],"pos":[111732,112012],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,238],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[113084,113323],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[113334,113811],"yaml":true,"extradata":"MT"},{"content":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">`null`</ph> if this storyboard's clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>; otherwise, the current time of the storyboard's clock.","source":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock."}],"pos":[113947,114115],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,238],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[115375,115614],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[115625,116102],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[116338,116658],"yaml":true},{"content":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">`null`</ph> if this storyboard's clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>; otherwise, the current time of the storyboard's clock.","source":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock."}],"pos":[116734,116902],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,238],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[118120,118359],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[118370,118847],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[119069,119382],"yaml":true},{"content":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">`null`</ph> if this storyboard's clock is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"&gt;&lt;/xref&gt;</ph>; otherwise, the current time of the storyboard's clock.","source":"`null` if this storyboard's clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>; otherwise, the current time of the storyboard's clock."}],"pos":[119458,119626],"yaml":true},{"content":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.","nodes":[{"pos":[0,202],"content":"Retrieves a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused.","source":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused."}],"pos":[120868,121071],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[121082,121559],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[121778,122098],"yaml":true},{"content":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.","nodes":[{"pos":[0,182],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`."}],"pos":[122156,122341],"yaml":true},{"content":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.","nodes":[{"pos":[0,202],"content":"Retrieves a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused.","source":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused."}],"pos":[123369,123572],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[123583,124060],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.","nodes":[{"pos":[0,182],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`."}],"pos":[124188,124373],"yaml":true},{"content":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.","nodes":[{"pos":[0,202],"content":"Retrieves a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused.","source":"Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused."}],"pos":[125570,125773],"yaml":true},{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,474],"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.","pos":[0,107]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[108,317],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[318,474],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[125784,126261],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[126466,126779],"yaml":true},{"content":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.","nodes":[{"pos":[0,182],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> created for this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> is paused; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`."}],"pos":[126837,127022],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.","nodes":[{"pos":[0,168],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Target\"&gt;&lt;/xref&gt;</ph> value of the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>."}],"pos":[128207,128376],"yaml":true},{"content":"Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"pos":[0,433],"content":"Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> attached property with animation timelines to indicate the object that they target.","pos":[0,150],"source":"Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.","pos":[151,277],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[278,433],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]}],"pos":[128387,128821],"yaml":true,"extradata":"MT"},{"content":"The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>.","nodes":[{"pos":[0,114],"content":"The timeline from which to retrieve the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph>.","source":"The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>."}],"pos":[129040,129155],"yaml":true},{"content":"The dependency object targeted by <code>element</code>.","nodes":[{"pos":[0,55],"content":"The dependency object targeted by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">element</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The dependency object targeted by <code>element</code>."}],"pos":[129230,129286],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.","nodes":[{"pos":[0,172],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> value of the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>."}],"pos":[130510,130683],"yaml":true},{"content":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"pos":[0,409],"content":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"This method gets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> attached property on the specified object.","pos":[0,126],"source":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.","pos":[127,253],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[254,409],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]}],"pos":[130694,131104],"yaml":true,"extradata":"MT"},{"content":"The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>.","nodes":[{"pos":[0,114],"content":"The timeline from which to retrieve the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph>.","source":"The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>."}],"pos":[131302,131417],"yaml":true},{"content":"The name of the dependency object targeted by <code>element</code>.","nodes":[{"pos":[0,67],"content":"The name of the dependency object targeted by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">element</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The name of the dependency object targeted by <code>element</code>."}],"pos":[131474,131542],"yaml":true},{"content":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.","nodes":[{"pos":[0,176],"content":"Retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"&gt;&lt;/xref&gt;</ph> value of the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>."}],"pos":[132777,132954],"yaml":true},{"content":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).  \n  \n Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.","nodes":[{"pos":[0,435],"content":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"This method gets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property on the specified object.","pos":[0,130],"source":"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property.","pos":[131,279],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[280,435],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]},{"pos":[442,692],"content":"Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.","nodes":[{"content":"Note that if the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> was set in markup, this method returns an empty <ph id=\"ph2\">&lt;xref:System.Windows.PropertyPath&gt;</ph> because the property reference is resolved and stored internally when it is parsed.","pos":[0,250],"source":"Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed."}]}],"pos":[132965,133662],"yaml":true,"extradata":"MT"},{"content":"The dependency object from which to get the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref>.","nodes":[{"pos":[0,122],"content":"The dependency object from which to get the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"&gt;&lt;/xref&gt;</ph>.","source":"The dependency object from which to get the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref>."}],"pos":[133885,134008],"yaml":true},{"content":"The property targeted by <code>element</code>.","nodes":[{"pos":[0,46],"content":"The property targeted by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">element</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The property targeted by <code>element</code>."}],"pos":[134079,134126],"yaml":true},{"content":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,158],"content":"Pauses the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[135146,135305],"yaml":true},{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \n  \n A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n## Beginning a Paused Storyboard  \n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"pos":[0,164],"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","pos":[0,164],"nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.","pos":[0,105]},{"content":"As a side effect, all associated children are also paused.","pos":[106,164]}]}]},{"pos":[171,610],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[73,282],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[283,439],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[619,648],"content":"Beginning a Paused Storyboard","linkify":"Beginning a Paused Storyboard","nodes":[{"content":"Beginning a Paused Storyboard","pos":[0,29]}]},{"pos":[652,1360],"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[0,708],"nodes":[{"content":"When you <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.","pos":[0,130],"source":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart."},{"content":"However, that is not what actually happens.","pos":[131,174]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces the paused <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with a new unpaused version.","pos":[175,350],"source":" The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version."},{"content":"Each time the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.","pos":[351,486],"source":" Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard."},{"content":"These clocks are distributed to the properties they animate.","pos":[487,547]},{"content":"So, when the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[548,708],"source":" So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks."}]}]}],"pos":[135316,136684],"yaml":true,"extradata":"MT"},{"content":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkContentElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,230],"content":"Pauses the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> of the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkContentElement\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkContentElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[137945,138176],"yaml":true},{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \n  \n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  \n  \n## Beginning a Paused Storyboard  \n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"pos":[0,164],"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","pos":[0,164],"nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.","pos":[0,105]},{"content":"As a side effect, all associated children are also paused.","pos":[106,164]}]}]},{"pos":[171,513],"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","nodes":[{"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","pos":[0,342],"nodes":[{"content":"Seeking a paused storyboard does not resume it.","pos":[0,47]},{"content":"The only way to resume a paused storyboard is to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.","pos":[48,171],"source":" The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","pos":[172,342],"source":" Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it."}]}]},{"pos":[520,1128],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"Fro an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[1135,1260],"content":"Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Pausing a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,125],"source":"Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]},{"pos":[1269,1298],"content":"Beginning a Paused Storyboard","linkify":"Beginning a Paused Storyboard","nodes":[{"content":"Beginning a Paused Storyboard","pos":[0,29]}]},{"pos":[1302,1954],"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[0,652],"nodes":[{"content":"When you <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.","pos":[0,130],"source":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart."},{"content":"However, that is not what actually happens.","pos":[131,174]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces itself with an unpaused version.","pos":[175,294],"source":" The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version."},{"content":"Each time the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.","pos":[295,430],"source":" Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard."},{"content":"These clocks are distributed to the properties they animate.","pos":[431,491]},{"content":"So, when the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[492,652],"source":" So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks."}]}]}],"pos":[138187,140153],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[141276,141596],"yaml":true},{"content":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,223],"content":"Pauses the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> of the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkElement\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[142751,142975],"yaml":true},{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \n  \n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  \n  \n## Beginning a Paused Storyboard  \n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"pos":[0,164],"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.","pos":[0,164],"nodes":[{"content":"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.","pos":[0,105]},{"content":"As a side effect, all associated children are also paused.","pos":[106,164]}]}]},{"pos":[171,513],"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","nodes":[{"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","pos":[0,342],"nodes":[{"content":"Seeking a paused storyboard does not resume it.","pos":[0,47]},{"content":"The only way to resume a paused storyboard is to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.","pos":[48,171],"source":" The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.","pos":[172,342],"source":" Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it."}]}]},{"pos":[520,1128],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[1135,1260],"content":"Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Pausing a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,125],"source":"Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]},{"pos":[1269,1298],"content":"Beginning a Paused Storyboard","linkify":"Beginning a Paused Storyboard","nodes":[{"content":"Beginning a Paused Storyboard","pos":[0,29]}]},{"pos":[1302,1954],"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","nodes":[{"content":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[0,652],"nodes":[{"content":"When you <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> a storyboard that was paused, it appears to resume and restart.","pos":[0,130],"source":"When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart."},{"content":"However, that is not what actually happens.","pos":[131,174]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method actually replaces itself with an unpaused version.","pos":[175,294],"source":" The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version."},{"content":"Each time the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called, clock objects are created for the storyboard.","pos":[295,430],"source":" Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard."},{"content":"These clocks are distributed to the properties they animate.","pos":[431,491]},{"content":"So, when the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method is called again, it does not restart its clocks; it replaces them with new clocks.","pos":[492,652],"source":" So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks."}]}]}],"pos":[142986,144952],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[145151,145464],"yaml":true},{"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"pos":[0,417],"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","pos":[0,168],"source":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."},{"content":"Animations that belong to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"&gt;&lt;/xref&gt;</ph> setting.","pos":[169,417],"source":" Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting."}]}],"pos":[146478,146896],"yaml":true},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render. This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time. In other words, the next time the frame is displayed, the storyboard is removed. If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.","nodes":[{"pos":[0,439],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[73,282],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[283,439],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[446,1099],"content":"All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render. This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time. In other words, the next time the frame is displayed, the storyboard is removed. If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.","nodes":[{"content":"All interactive actions taken on a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>, and therefore also on a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, occur on the next tick of the timing engine, which happens shortly before the next render.","pos":[0,244],"source":"All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render."},{"content":"This means that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Remove%2A&gt;</ph> method still affects the animated properties until this time.","pos":[245,385],"source":" This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time."},{"content":"In other words, the next time the frame is displayed, the storyboard is removed.","pos":[386,466]},{"content":"If you need to disassociate an animation from a property before this time, use the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.BeginAnimation%2A&gt;</ph> method with an <ph id=\"ph2\">`animation`</ph> parameter value of <ph id=\"ph3\">`null`</ph>.","pos":[467,653],"source":" If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`."}]}],"pos":[146907,148011],"yaml":true,"extradata":"MT"},{"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"pos":[0,417],"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","pos":[0,168],"source":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."},{"content":"Animations that belong to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"&gt;&lt;/xref&gt;</ph> setting.","pos":[169,417],"source":" Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting."}]}],"pos":[149280,149698],"yaml":true},{"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.","nodes":[{"pos":[0,608],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[615,727],"content":"Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.","nodes":[{"content":"Removing a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> event.","pos":[0,112],"source":"Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event."}]}],"pos":[149709,150441],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[150655,150975],"yaml":true},{"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"pos":[0,417],"content":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","pos":[0,168],"source":"Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."},{"content":"Animations that belong to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> no longer affect the properties they once animated, regardless of their <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"&gt;&lt;/xref&gt;</ph> setting.","pos":[169,417],"source":" Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting."}]}],"pos":[152137,152555],"yaml":true},{"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.","nodes":[{"pos":[0,608],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[615,727],"content":"Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.","nodes":[{"content":"Removing a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.RemoveRequested&gt;</ph> event.","pos":[0,112],"source":"Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event."}]}],"pos":[152566,153298],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[153498,153811],"yaml":true},{"content":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,159],"content":"Resumes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[154973,155133],"yaml":true},{"content":"Resuming a storyboard that is not paused has no effect.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  \n  \n Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"pos":[0,55],"content":"Resuming a storyboard that is not paused has no effect.","nodes":[{"content":"Resuming a storyboard that is not paused has no effect.","pos":[0,55]}]},{"pos":[62,670],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[677,1028],"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","nodes":[{"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","pos":[0,351],"nodes":[{"content":"Seeking a paused storyboard does not resume it.","pos":[0,47]},{"content":"The only way to resume a paused storyboard is to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.","pos":[48,171],"source":" The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","pos":[172,351],"source":" Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it."}]}]},{"pos":[1035,1170],"content":"Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Resuming a paused a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,135],"source":"Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]}],"pos":[155144,156323],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[156523,156836],"yaml":true},{"content":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,159],"content":"Resumes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[157851,158011],"yaml":true},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,439],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[73,282],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[283,439],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[158022,158464],"yaml":true,"extradata":"MT"},{"content":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,159],"content":"Resumes the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[159733,159893],"yaml":true},{"content":"Resuming a storyboard that is not paused has no effect.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  \n  \n Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"pos":[0,55],"content":"Resuming a storyboard that is not paused has no effect.","nodes":[{"content":"Resuming a storyboard that is not paused has no effect.","pos":[0,55]}]},{"pos":[62,670],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[677,1028],"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","nodes":[{"content":"Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","pos":[0,351],"nodes":[{"content":"Seeking a paused storyboard does not resume it.","pos":[0,47]},{"content":"The only way to resume a paused storyboard is to use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Resume%2A&gt;</ph> method.","pos":[48,171],"source":" The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.","pos":[172,351],"source":" Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it."}]}]},{"pos":[1035,1170],"content":"Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Resuming a paused a storyboard's clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,135],"source":"Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]}],"pos":[159904,161083],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[162207,162527],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"pos":[0,228],"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to the specified position.","pos":[0,100],"source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> performs the requested seek when the next clock tick occurs.","pos":[101,228],"source":" The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs."}]}],"pos":[163605,163834],"yaml":true},{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,402],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[409,1017],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[163845,164867],"yaml":true,"extradata":"MT"},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","nodes":[{"pos":[0,109],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","nodes":[{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","pos":[0,109]}]}],"pos":[165006,165116],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"pos":[0,228],"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to the specified position.","pos":[0,100],"source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> performs the requested seek when the next clock tick occurs.","pos":[101,228],"source":" The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs."}]}],"pos":[166378,166607],"yaml":true},{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,402],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[409,1017],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[166618,167640],"yaml":true,"extradata":"MT"},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[167833,167982],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[168076,168132],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"pos":[0,228],"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to the specified position.","pos":[0,100],"source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> performs the requested seek when the next clock tick occurs.","pos":[101,228],"source":" The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs."}]}],"pos":[169586,169815],"yaml":true},{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"pos":[0,402],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[409,730],"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.","nodes":[{"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.","pos":[0,321],"nodes":[{"content":"This method changes the storyboard clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.","pos":[0,162],"source":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>."},{"content":"This method has no effect on the timing tree until the next time a tick is processed.","pos":[163,248]},{"content":"As a side-effect, the appropriate events are also not raised until then.","pos":[249,321]}]}]},{"pos":[737,1345],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[1352,1545],"content":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Seeking a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,193],"source":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]}],"pos":[169826,171380],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[172445,172765],"yaml":true},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[172829,172978],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[173072,173128],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"pos":[0,228],"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.","nodes":[{"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to the specified position.","pos":[0,100],"source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> performs the requested seek when the next clock tick occurs.","pos":[101,228],"source":" The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs."}]}],"pos":[174540,174769],"yaml":true},{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"pos":[0,402],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[409,730],"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.","nodes":[{"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.","pos":[0,321],"nodes":[{"content":"This method changes the storyboard clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.","pos":[0,162],"source":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>."},{"content":"This method has no effect on the timing tree until the next time a tick is processed.","pos":[163,248]},{"content":"As a side-effect, the appropriate events are also not raised until then.","pos":[249,321]}]}]},{"pos":[737,1372],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.","pos":[169,268]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[269,478],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[479,635],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[1379,1572],"content":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Seeking a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,193],"source":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]}],"pos":[174780,176361],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[177815,178128],"yaml":true},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[178192,178341],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[178435,178491],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).","nodes":[{"pos":[0,120],"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to a new position immediately (synchronously).","source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously)."}],"pos":[180005,180126],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \n  \n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to  \n  \n <xref:System.Windows.Media.Animation.ClockState.Active>.  \n  \n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,394],"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","nodes":[{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","pos":[0,394],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.","pos":[0,178],"source":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick."},{"content":"Values are immediately updated to reflect the changes due to <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.","pos":[179,394],"source":" Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates."}]}]},{"pos":[401,803],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[810,915],"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to","nodes":[{"content":"This method changes the storyboard clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to","pos":[0,105],"source":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to"}]},{"pos":[922,978],"content":"<xref:System.Windows.Media.Animation.ClockState.Active>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.","pos":[0,56],"source":"<xref:System.Windows.Media.Animation.ClockState.Active>."}]},{"pos":[985,1178],"content":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Seeking a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,193],"source":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]},{"pos":[1185,1793],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[180137,181943],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[182873,183186],"yaml":true},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[183250,183399],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[183493,183549],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).","nodes":[{"pos":[0,120],"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to a new position immediately (synchronously).","source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously)."}],"pos":[185122,185243],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \n  \n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to  \n  \n <xref:System.Windows.Media.Animation.ClockState.Active>.  \n  \n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,394],"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","nodes":[{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","pos":[0,394],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.","pos":[0,178],"source":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick."},{"content":"Values are immediately updated to reflect the changes due to <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.","pos":[179,394],"source":" Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates."}]}]},{"pos":[401,803],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[810,915],"content":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to","nodes":[{"content":"This method changes the storyboard clock's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to","pos":[0,105],"source":"This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to"}]},{"pos":[922,978],"content":"<xref:System.Windows.Media.Animation.ClockState.Active>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.","pos":[0,56],"source":"<xref:System.Windows.Media.Animation.ClockState.Active>."}]},{"pos":[985,1178],"content":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Seeking a storyboard triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,193],"source":"Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]},{"pos":[1185,1793],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[185254,187060],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[188142,188462],"yaml":true},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[188526,188675],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[188769,188825],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).","nodes":[{"pos":[0,120],"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to a new position immediately (synchronously).","source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously)."}],"pos":[190206,190327],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \n  \n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,394],"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","nodes":[{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","pos":[0,394],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.","pos":[0,178],"source":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick."},{"content":"Values are immediately updated to reflect the changes due to <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.","pos":[179,394],"source":" Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates."}]}]},{"pos":[401,803],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[810,1176],"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[0,209],"source":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[210,366],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[190338,191521],"yaml":true,"extradata":"MT"},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.","nodes":[{"pos":[0,148],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>."}],"pos":[191731,191880],"yaml":true},{"content":"The position from which <code>offset</code> is applied.","nodes":[{"pos":[0,55],"content":"The position from which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied.","source":"The position from which <code>offset</code> is applied."}],"pos":[191974,192030],"yaml":true},{"content":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).","nodes":[{"pos":[0,120],"content":"Seeks this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph> to a new position immediately (synchronously).","source":"Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously)."}],"pos":[193203,193324],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \n  \n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \n  \n To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,394],"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","nodes":[{"content":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.","pos":[0,394],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> with the last clock tick.","pos":[0,178],"source":"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick."},{"content":"Values are immediately updated to reflect the changes due to <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen does not reflect these changes until the screen updates.","pos":[179,394],"source":" Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates."}]}]},{"pos":[401,803],"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","nodes":[{"content":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.","pos":[0,402],"nodes":[{"content":"Note that seek operations do not take the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings into account.","pos":[0,212],"source":"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account."},{"content":"The storyboard is treated as though it has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.","pos":[213,402],"source":" The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>."}]}]},{"pos":[810,1176],"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[0,209],"source":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[210,366],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[193335,194518],"yaml":true,"extradata":"MT"},{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","nodes":[{"pos":[0,109],"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","nodes":[{"content":"A positive or negative value that describes the amount by which the timeline should move forward or backward.","pos":[0,109]}]}],"pos":[194674,194784],"yaml":true},{"content":"Sets the interactive speed ratio for the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,188],"content":"Sets the interactive speed ratio for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the interactive speed ratio for the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[195919,196108],"yaml":true},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,439],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[73,282],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[283,439],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[196119,196561],"yaml":true,"extradata":"MT"},{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"pos":[0,625],"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard.","pos":[0,91]},{"content":"This value is multiplied against the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> value to determine the storyboard's effective speed.","pos":[92,266],"source":" This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed."},{"content":"This value does not overwrite the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> property.","pos":[267,395],"source":" This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property."},{"content":"For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.","pos":[396,625],"source":" For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5."}]}],"pos":[196713,197339],"yaml":true},{"content":"Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,187],"content":"Sets the interactive speed ratio of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[198636,198824],"yaml":true},{"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"pos":[0,608],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[615,731],"content":"Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Calling this method triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,116],"source":"Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]}],"pos":[198835,199571],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[200721,201041],"yaml":true},{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"pos":[0,625],"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard.","pos":[0,91]},{"content":"This value is multiplied against the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> value to determine the storyboard's effective speed.","pos":[92,266],"source":" This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed."},{"content":"This value does not overwrite the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> property.","pos":[267,395],"source":" This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property."},{"content":"For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.","pos":[396,625],"source":" For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5."}]}],"pos":[201107,201733],"yaml":true},{"content":"Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,187],"content":"Sets the interactive speed ratio of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[203010,203198],"yaml":true},{"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \n  \n Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"pos":[0,608],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]},{"pos":[615,731],"content":"Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.","nodes":[{"content":"Calling this method triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.","pos":[0,116],"source":"Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."}]}],"pos":[203209,203945],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[204171,204484],"yaml":true},{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"pos":[0,625],"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.","nodes":[{"content":"A finite value greater than zero that is the new interactive speed ratio of the storyboard.","pos":[0,91]},{"content":"This value is multiplied against the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> value to determine the storyboard's effective speed.","pos":[92,266],"source":" This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed."},{"content":"This value does not overwrite the storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> property.","pos":[267,395],"source":" This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property."},{"content":"For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"&gt;&lt;/xref&gt;</ph> of 0.5 gives the storyboard an effective speed of 1.5.","pos":[396,625],"source":" For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5."}]}],"pos":[204550,205176],"yaml":true},{"content":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object.","nodes":[{"pos":[0,110],"content":"Makes the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> target the dependency object.","source":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object."}],"pos":[206513,206624],"yaml":true},{"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>. It is not guaranteed that this object can be correctly referenced from XAML.","nodes":[{"pos":[0,405],"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"This method sets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> attached property on the specified object.","pos":[0,122],"source":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.","pos":[123,249],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[250,405],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]},{"pos":[413,662],"content":"[!NOTE]\n The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>. It is not guaranteed that this object can be correctly referenced from XAML.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>. It is not guaranteed that this object can be correctly referenced from XAML.","pos":[8,247],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Target%2A&gt;</ph> property is not serializable, because it can be set to any <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject&gt;</ph>.","pos":[1,162],"source":" The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>."},{"content":"It is not guaranteed that this object can be correctly referenced from XAML.","pos":[163,239]}]}]}],"pos":[206635,207303],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> that should target the specified dependency object.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object."}],"pos":[207534,207651],"yaml":true},{"content":"The dependency object to target.","nodes":[{"pos":[0,32],"content":"The dependency object to target.","nodes":[{"content":"The dependency object to target.","pos":[0,32]}]}],"pos":[207730,207763],"yaml":true},{"content":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object with the specified name.","nodes":[{"pos":[0,134],"content":"Makes the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> target the dependency object with the specified name.","source":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object with the specified name."}],"pos":[209036,209171],"yaml":true},{"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"pos":[0,409],"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"This method sets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph> attached property on the specified object.","pos":[0,126],"source":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>.","pos":[127,253],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[254,409],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]}],"pos":[209182,209592],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> that should target the specified dependency object.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object."}],"pos":[209801,209918],"yaml":true},{"content":"The name of the dependency object to target.","nodes":[{"pos":[0,44],"content":"The name of the dependency object to target.","nodes":[{"content":"The name of the dependency object to target.","pos":[0,44]}]}],"pos":[209978,210023],"yaml":true},{"content":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the specified dependency property.","nodes":[{"pos":[0,122],"content":"Makes the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> target the specified dependency property.","source":"Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the specified dependency property."}],"pos":[211362,211485],"yaml":true},{"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"pos":[0,417],"content":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).","nodes":[{"content":"This method sets the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph> attached property on the specified object.","pos":[0,130],"source":"This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object."},{"content":"For more information about how storyboard targeting works, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A&gt;</ph>.","pos":[131,261],"source":" For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>."},{"content":"For more information about how attached properties work, see <bpt id=\"p1\">[</bpt>Attached Properties Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.","pos":[262,417],"source":" For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md)."}]}],"pos":[211496,211914],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> with which to associate the specified dependency property.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> with which to associate the specified dependency property.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> with which to associate the specified dependency property."}],"pos":[212148,212272],"yaml":true},{"content":"A path that describe the dependency property to be animated.","nodes":[{"pos":[0,60],"content":"A path that describe the dependency property to be animated.","nodes":[{"content":"A path that describe the dependency property to be animated.","pos":[0,60]}]}],"pos":[212346,212407],"yaml":true},{"content":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.","nodes":[{"pos":[0,137],"content":"Advances the current time of this storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> to the end of its active period.","source":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period."}],"pos":[213457,213595],"yaml":true},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,439],"content":"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[0,72]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[73,282],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[283,439],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[213606,214048],"yaml":true,"extradata":"MT"},{"content":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.","nodes":[{"pos":[0,137],"content":"Advances the current time of this storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> to the end of its active period.","source":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period."}],"pos":[215349,215487],"yaml":true},{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.  \n  \n Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  \n  \n Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,478],"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.","nodes":[{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.","pos":[0,478],"nodes":[{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting.","pos":[0,215],"source":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the storyboard fills; if the property is set to <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the storyboard stops.","pos":[216,478],"source":" If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops."}]}]},{"pos":[485,657],"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.","nodes":[{"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.","pos":[0,172],"nodes":[{"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.","pos":[0,111]},{"content":"Calling this method on an inactive storyboard has no effect.","pos":[112,172]}]}]},{"pos":[664,873],"content":"Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Advancing a clock to its fill period triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,209],"source":"Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]},{"pos":[880,1488],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[215498,216995],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[218123,218443],"yaml":true},{"content":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.","nodes":[{"pos":[0,137],"content":"Advances the current time of this storyboard's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> to the end of its active period.","source":"Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period."}],"pos":[219633,219771],"yaml":true},{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.  \n  \n Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  \n  \n Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,478],"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.","nodes":[{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.","pos":[0,478],"nodes":[{"content":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting.","pos":[0,215],"source":"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the storyboard fills; if the property is set to <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the storyboard stops.","pos":[216,478],"source":" If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops."}]}]},{"pos":[485,657],"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.","nodes":[{"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.","pos":[0,172],"nodes":[{"content":"Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.","pos":[0,111]},{"content":"Calling this method on an inactive storyboard has no effect.","pos":[112,172]}]}]},{"pos":[664,873],"content":"Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.","nodes":[{"content":"Advancing a clock to its fill period triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events.","pos":[0,209],"source":"Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events."}]},{"pos":[880,1488],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[219782,221279],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[221483,221796],"yaml":true},{"content":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,157],"content":"Stops the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[222803,222961],"yaml":true},{"content":"Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.","nodes":[{"pos":[0,113],"content":"Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.","nodes":[{"content":"Note that stopping a storyboard does not fire the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.","pos":[0,113],"source":"Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event."}]}],"pos":[222972,223086],"yaml":true,"extradata":"MT"},{"content":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,157],"content":"Stops the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[224339,224497],"yaml":true},{"content":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  \n  \n Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,173],"content":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> storyboard no longer affects its target properties: properties that were animated revert to their previous values.","pos":[0,173],"source":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values."}]},{"pos":[180,445],"content":"Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.","nodes":[{"content":"Stopping a clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events, but not the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.","pos":[0,265],"source":"Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event."}]},{"pos":[452,1060],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[224508,225575],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,319],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,172],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[173,319],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[226697,227017],"yaml":true},{"content":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.","nodes":[{"pos":[0,157],"content":"Stops the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> that was created for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard\"&gt;&lt;/xref&gt;</ph>.","source":"Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>."}],"pos":[228143,228301],"yaml":true},{"content":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  \n  \n Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.  \n  \n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"pos":[0,173],"content":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph> storyboard no longer affects its target properties: properties that were animated revert to their previous values.","pos":[0,173],"source":"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values."}]},{"pos":[180,445],"content":"Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.","nodes":[{"content":"Stopping a clock triggers the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> events, but not the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Timeline.Completed&gt;</ph> event.","pos":[0,265],"source":"Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event."}]},{"pos":[452,1060],"content":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).","nodes":[{"content":"To interactively control this storyboard, you must use the same <ph id=\"ph1\">`containingObject`</ph> parameter when calling the interactive methods that you used to begin the storyboard.","pos":[0,168],"source":"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard."},{"content":"A controllable storyboard can pause, resume, seek, stop, and be removed.","pos":[169,241]},{"content":"To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard.Begin%2A&gt;</ph> method and specify <ph id=\"ph2\">`true`</ph> to make it controllable.","pos":[242,451],"source":" To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Control a Storyboard After It Starts<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)</ept>.","pos":[452,608],"source":" For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)."}]}],"pos":[228312,229379],"yaml":true,"extradata":"MT"},{"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"pos":[0,312],"content":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.","nodes":[{"content":"The object specified when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method was called.","pos":[0,165],"source":"The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called."},{"content":"This object contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> objects that were created for this storyboard and its children.","pos":[166,312],"source":" This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children."}]}],"pos":[229577,229890],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> attached property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> attached property."}],"pos":[230968,231076],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> attached property.","nodes":[{"pos":[0,103],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.Target\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> attached property."}],"pos":[232250,232354],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> attached property.","nodes":[{"pos":[0,111],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> attached property."}],"pos":[233572,233684],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.Storyboard\n  commentId: T:System.Windows.Media.Animation.Storyboard\n  id: Storyboard\n  children:\n  - System.Windows.Media.Animation.Storyboard.#ctor\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.Begin\n  - System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\n  - System.Windows.Media.Animation.Storyboard.Clone\n  - System.Windows.Media.Animation.Storyboard.CreateInstanceCore\n  - System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed\n  - System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentIteration\n  - System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentProgress\n  - System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentState\n  - System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentTime\n  - System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.GetIsPaused\n  - System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.Storyboard.Pause\n  - System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.Remove\n  - System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.Resume\n  - System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)\n  - System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  - System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)\n  - System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)\n  - System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)\n  - System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)\n  - System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)\n  - System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)\n  - System.Windows.Media.Animation.Storyboard.SkipToFill\n  - System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.Stop\n  - System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)\n  - System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)\n  - System.Windows.Media.Animation.Storyboard.TargetNameProperty\n  - System.Windows.Media.Animation.Storyboard.TargetProperty\n  - System.Windows.Media.Animation.Storyboard.TargetPropertyProperty\n  langs:\n  - csharp\n  name: Storyboard\n  nameWithType: Storyboard\n  fullName: System.Windows.Media.Animation.Storyboard\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: A container timeline that provides object and property targeting information for its child animations.\n  remarks: \"## Interactively Controlling Storyboards  \\n A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n## Data Binding and Animating Timelines  \\n Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.  \\n  \\n When a timeline is activated, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them. These clocks do the actual work of animating the targeted properties. If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created. Even though the original timeline might continue to change, its clock does not.  \\n  \\n For a timeline to reflect data binding or animation changes, its clock must be re-created. Clocks are not re-created for you automatically. The following are several ways to apply timeline changes:  \\n  \\n-   If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method. This has the side effect of also restarting the animation. In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.  \\n  \\n-   If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.  \\n  \\n-   If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.  \\n  \\n For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .\"\n  syntax:\n    content: 'public class Storyboard : System.Windows.Media.Animation.ParallelTimeline'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.TimelineGroup\n  - System.Windows.Media.Animation.ParallelTimeline\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  - System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  - System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.AccelerationRatio\n  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.AutoReverse\n  - System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  - System.Windows.Media.Animation.Timeline.BeginTime\n  - System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  - System.Windows.Media.Animation.Timeline.Completed\n  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Timeline.DecelerationRatio\n  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  - System.Windows.Media.Animation.Timeline.Duration\n  - System.Windows.Media.Animation.Timeline.DurationProperty\n  - System.Windows.Media.Animation.Timeline.FillBehavior\n  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.Timeline.Name\n  - System.Windows.Media.Animation.Timeline.NameProperty\n  - System.Windows.Media.Animation.Timeline.RemoveRequested\n  - System.Windows.Media.Animation.Timeline.RepeatBehavior\n  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  - System.Windows.Media.Animation.Timeline.SpeedRatio\n  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  - System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)\n  - System.Windows.Media.Animation.TimelineGroup.AddText(System.String)\n  - System.Windows.Media.Animation.TimelineGroup.AllocateClock\n  - System.Windows.Media.Animation.TimelineGroup.Children\n  - System.Windows.Media.Animation.TimelineGroup.ChildrenProperty\n  - System.Windows.Media.Animation.TimelineGroup.CreateClock\n  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.#ctor\n  commentId: M:System.Windows.Media.Animation.Storyboard.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Storyboard()\n  nameWithType: Storyboard.Storyboard()\n  fullName: Storyboard.Storyboard()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class.\n  syntax:\n    content: public Storyboard ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.\n  remarks: \"To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: frameworkTemplate\n      type: System.Windows.FrameworkTemplate\n      description: The template to animate.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n    - id: isControllable\n      type: System.Boolean\n      description: '`true` if the storyboard should be interactively controllable; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, HandoffBehavior, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  remarks: \"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  example:\n  - \"The following example shows how to create a controllable storyboard.  \\n  \\n [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]\\n [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  \\n  \\n The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n    - id: isControllable\n      type: System.Boolean\n      description: Declares whether the animation is controllable (can be paused) once started.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.\n  remarks: \"When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: frameworkTemplate\n      type: System.Windows.FrameworkTemplate\n      description: The template to animate.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, FrameworkTemplate, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object to which the specified <code>frameworkTemplate</code> has been applied.  Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: frameworkTemplate\n      type: System.Windows.FrameworkTemplate\n      description: The template to animate.\n    - id: isControllable\n      type: System.Boolean\n      description: '`true` if the storyboard should be interactively controllable; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  id: Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.\n  remarks: \"If the targeted properties are already animated, they are replaced using the specified handoff behavior.  \\n  \\n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  \\n  \\n The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n    - id: isControllable\n      type: System.Boolean\n      description: Declares whether the animation is controllable (can be paused) once started.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, FrameworkTemplate)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets within the specified template and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object to which the specified <code>frameworkTemplate</code> has been applied. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: frameworkTemplate\n      type: System.Windows.FrameworkTemplate\n      description: The template to animate.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)\n  id: Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkElement, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkElement, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)\n  id: Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkContentElement, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkContentElement, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them, using the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref>.\n  remarks: \"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This removes all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  example:\n  - \"The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: The behavior the new animation should use to interact with any current animations.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\n  id: Begin(System.Windows.FrameworkContentElement,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkContentElement, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, Boolean)\n  fullName: Storyboard.Begin(FrameworkContentElement, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: isControllable\n      type: System.Boolean\n      description: '`true` if the storyboard should be interactively controllable; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)\n  id: Begin(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement)\n  nameWithType: Storyboard.Begin(FrameworkElement)\n  fullName: Storyboard.Begin(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)\n  id: Begin(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkContentElement)\n  nameWithType: Storyboard.Begin(FrameworkContentElement)\n  fullName: Storyboard.Begin(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started. To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  example:\n  - \"The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin\n  id: Begin\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin()\n  nameWithType: Storyboard.Begin()\n  fullName: Storyboard.Begin()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  syntax:\n    content: public void Begin ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\n  id: Begin(System.Windows.FrameworkElement,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Begin(FrameworkElement, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Applies the animations associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to their targets and initiates them.\n  remarks: \"If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard  \\n  \\n When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains. These clocks are stored with `containingObject`.  \\n  \\n Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.\"\n  syntax:\n    content: public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> are applied to <code>containingObject</code>.\n    - id: isControllable\n      type: System.Boolean\n      description: '`true` if the storyboard should be interactively controllable; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.Begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Clone\n  commentId: M:System.Windows.Media.Animation.Storyboard.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Storyboard.Clone()\n  fullName: Storyboard.Clone()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.Storyboard Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.Storyboard\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`\n  overload: System.Windows.Media.Animation.Storyboard.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: Storyboard.CreateInstanceCore()\n  fullName: Storyboard.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> class.\n  remarks: This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A new <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> instance.\n  overload: System.Windows.Media.Animation.Storyboard.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)\n  id: GetCurrentGlobalSpeed(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentGlobalSpeed(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentGlobalSpeed(FrameworkElement)\n  fullName: Storyboard.GetCurrentGlobalSpeed(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<double> GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Double}\n      description: The current global speed, or `null` if the clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed\n  id: GetCurrentGlobalSpeed\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentGlobalSpeed()\n  nameWithType: Storyboard.GetCurrentGlobalSpeed()\n  fullName: Storyboard.GetCurrentGlobalSpeed()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  syntax:\n    content: public double GetCurrentGlobalSpeed ();\n    parameters: []\n    return:\n      type: System.Double\n      description: The current global speed, or 0 if the clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)\n  id: GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentGlobalSpeed(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentGlobalSpeed(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentGlobalSpeed(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<double> GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Double}\n      description: The current global speed, or `null` if the clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration\n  id: GetCurrentIteration\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentIteration()\n  nameWithType: Storyboard.GetCurrentIteration()\n  fullName: Storyboard.GetCurrentIteration()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A clock's first iteration has a value of 1.  \\n  \\n If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public int GetCurrentIteration ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: This clock's current iteration within its current active period, or `null` if this clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentIteration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)\n  id: GetCurrentIteration(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentIteration(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentIteration(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentIteration(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A clock's first iteration has a value of 1.  \\n  \\n If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<int> GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Int32}\n      description: This clock's current iteration within its current active period, or `null` if this clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentIteration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)\n  id: GetCurrentIteration(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentIteration(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentIteration(FrameworkElement)\n  fullName: Storyboard.GetCurrentIteration(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentIteration\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A clock's first iteration has a value of 1.  \\n  \\n If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \\n  \\n Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<int> GetCurrentIteration (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Int32}\n      description: This clock's current iteration within its current active period, or `null` if this clock is stopped.\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentIteration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress\n  id: GetCurrentProgress\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentProgress()\n  nameWithType: Storyboard.GetCurrentProgress()\n  fullName: Storyboard.GetCurrentProgress()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public double GetCurrentProgress ();\n    parameters: []\n    return:\n      type: System.Double\n      description: '`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentProgress*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)\n  id: GetCurrentProgress(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentProgress(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentProgress(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentProgress(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<double> GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Double}\n      description: '`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentProgress*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)\n  id: GetCurrentProgress(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentProgress(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentProgress(FrameworkElement)\n  fullName: Storyboard.GetCurrentProgress(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<double> GetCurrentProgress (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.Double}\n      description: '`null` if this clock is <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>, or 0.0 if this clock is active and its <xref href=\"System.Windows.Media.Animation.Clock.Timeline\"></xref> has a <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> of <xref href=\"System.Windows.Duration.Forever\"></xref>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentProgress*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentState\n  id: GetCurrentState\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentState()\n  nameWithType: Storyboard.GetCurrentState()\n  fullName: Storyboard.GetCurrentState()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public System.Windows.Media.Animation.ClockState GetCurrentState ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.ClockState\n      description: 'The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)\n  id: GetCurrentState(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentState(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentState(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentState(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Windows.Media.Animation.ClockState\n      description: 'The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)\n  id: GetCurrentState(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentState(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentState(FrameworkElement)\n  fullName: Storyboard.GetCurrentState(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentState\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method does not tell you whether a storyboard is paused. To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.  \\n  \\n To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Windows.Media.Animation.ClockState\n      description: 'The current state of the clock created for this storyboard: <xref href=\"System.Windows.Media.Animation.ClockState.Active\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState.Filling\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\"></xref>.'\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentTime\n  id: GetCurrentTime\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentTime()\n  nameWithType: Storyboard.GetCurrentTime()\n  fullName: Storyboard.GetCurrentTime()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public TimeSpan GetCurrentTime ();\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"`null` if this storyboard's clock is <xref href=\\\"System.Windows.Media.Animation.ClockState.Stopped\\\"></xref>; otherwise, the current time of the storyboard's clock.\"\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentTime*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)\n  id: GetCurrentTime(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentTime(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentTime(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentTime(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<TimeSpan> GetCurrentTime (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: \"`null` if this storyboard's clock is <xref href=\\\"System.Windows.Media.Animation.ClockState.Stopped\\\"></xref>; otherwise, the current time of the storyboard's clock.\"\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentTime*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)\n  id: GetCurrentTime(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetCurrentTime(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentTime(FrameworkElement)\n  fullName: Storyboard.GetCurrentTime(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public Nullable<TimeSpan> GetCurrentTime (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: \"`null` if this storyboard's clock is <xref href=\\\"System.Windows.Media.Animation.ClockState.Stopped\\\"></xref>; otherwise, the current time of the storyboard's clock.\"\n  overload: System.Windows.Media.Animation.Storyboard.GetCurrentTime*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)\n  id: GetIsPaused(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetIsPaused(FrameworkContentElement)\n  nameWithType: Storyboard.GetIsPaused(FrameworkContentElement)\n  fullName: Storyboard.GetIsPaused(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.GetIsPaused*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetIsPaused\n  id: GetIsPaused\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetIsPaused()\n  nameWithType: Storyboard.GetIsPaused()\n  fullName: Storyboard.GetIsPaused()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public bool GetIsPaused ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.GetIsPaused*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)\n  id: GetIsPaused(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetIsPaused(FrameworkElement)\n  nameWithType: Storyboard.GetIsPaused(FrameworkElement)\n  fullName: Storyboard.GetIsPaused(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves a value that indicates whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused.\n  remarks: \"To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public bool GetIsPaused (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> is paused; otherwise, `false`.'\n  overload: System.Windows.Media.Animation.Storyboard.GetIsPaused*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)\n  id: GetTarget(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetTarget(DependencyObject)\n  nameWithType: Storyboard.GetTarget(DependencyObject)\n  fullName: Storyboard.GetTarget(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.\n  remarks: Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).\n  syntax:\n    content: public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>.\n    return:\n      type: System.Windows.DependencyObject\n      description: The dependency object targeted by <code>element</code>.\n  overload: System.Windows.Media.Animation.Storyboard.GetTarget*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)\n  id: GetTargetName(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetTargetName(DependencyObject)\n  nameWithType: Storyboard.GetTargetName(DependencyObject)\n  fullName: Storyboard.GetTargetName(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.\n  remarks: This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).\n  syntax:\n    content: public static string GetTargetName (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The timeline from which to retrieve the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref>.\n    return:\n      type: System.String\n      description: The name of the dependency object targeted by <code>element</code>.\n  overload: System.Windows.Media.Animation.Storyboard.GetTargetName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)\n  commentId: M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)\n  id: GetTargetProperty(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: GetTargetProperty(DependencyObject)\n  nameWithType: Storyboard.GetTargetProperty(DependencyObject)\n  fullName: Storyboard.GetTargetProperty(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Retrieves the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> value of the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.\n  remarks: \"This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).  \\n  \\n Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.\"\n  syntax:\n    content: public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to get the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref>.\n    return:\n      type: System.Windows.PropertyPath\n      description: The property targeted by <code>element</code>.\n  overload: System.Windows.Media.Animation.Storyboard.GetTargetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Pause\n  commentId: M:System.Windows.Media.Animation.Storyboard.Pause\n  id: Pause\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Pause()\n  nameWithType: Storyboard.Pause()\n  fullName: Storyboard.Pause()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \\n  \\n A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n## Beginning a Paused Storyboard  \\n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.\"\n  syntax:\n    content: public void Pause ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.Pause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)\n  id: Pause(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Pause(FrameworkContentElement)\n  nameWithType: Storyboard.Pause(FrameworkContentElement)\n  fullName: Storyboard.Pause(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkContentElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \\n  \\n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  \\n  \\n## Beginning a Paused Storyboard  \\n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void Pause (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Pause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)\n  id: Pause(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Pause(FrameworkElement)\n  nameWithType: Storyboard.Pause(FrameworkElement)\n  fullName: Storyboard.Pause(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Pauses the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> of the specified <xref href=\"System.Windows.FrameworkElement\"></xref> associated with this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"This method pauses the storyboard, but has no discernible effect if it is not active or currently paused. As a side effect, all associated children are also paused.  \\n  \\n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  \\n  \\n## Beginning a Paused Storyboard  \\n When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart. However, that is not what actually happens. The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version. Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard. These clocks are distributed to the properties they animate. So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.\"\n  syntax:\n    content: public void Pause (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Pause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Remove\n  commentId: M:System.Windows.Media.Animation.Storyboard.Remove\n  id: Remove\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Remove()\n  nameWithType: Storyboard.Remove()\n  fullName: Storyboard.Remove()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.\n  remarks: \"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render. This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time. In other words, the next time the frame is displayed, the storyboard is removed. If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.\"\n  syntax:\n    content: public void Remove ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)\n  id: Remove(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Remove(FrameworkContentElement)\n  nameWithType: Storyboard.Remove(FrameworkContentElement)\n  fullName: Storyboard.Remove(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.\n  remarks: \"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.\"\n  syntax:\n    content: public void Remove (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)\n  id: Remove(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Remove(FrameworkElement)\n  nameWithType: Storyboard.Remove(FrameworkElement)\n  fullName: Storyboard.Remove(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Removes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>. Animations that belong to this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> no longer affect the properties they once animated, regardless of their <xref href=\"System.Windows.Media.Animation.Timeline.FillBehavior\"></xref> setting.\n  remarks: \"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.\"\n  syntax:\n    content: public void Remove (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)\n  id: Resume(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Resume(FrameworkElement)\n  nameWithType: Storyboard.Resume(FrameworkElement)\n  fullName: Storyboard.Resume(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"Resuming a storyboard that is not paused has no effect.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  \\n  \\n Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.\"\n  syntax:\n    content: public void Resume (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Resume*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Resume\n  commentId: M:System.Windows.Media.Animation.Storyboard.Resume\n  id: Resume\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Resume()\n  nameWithType: Storyboard.Resume()\n  fullName: Storyboard.Resume()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void Resume ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.Resume*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)\n  id: Resume(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Resume(FrameworkContentElement)\n  nameWithType: Storyboard.Resume(FrameworkContentElement)\n  fullName: Storyboard.Resume(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Resumes the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"Resuming a storyboard that is not paused has no effect.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Seeking a paused storyboard does not resume it. The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method. Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.  \\n  \\n Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void Resume (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Resume*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)\n  id: Seek(System.TimeSpan)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Seek(TimeSpan)\n  nameWithType: Storyboard.Seek(TimeSpan)\n  fullName: Storyboard.Seek(TimeSpan)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.\n  remarks: \"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void Seek (TimeSpan offset);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward.\n  overload: System.Windows.Media.Animation.Storyboard.Seek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Seek(TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.\n  remarks: \"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.Seek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.\n  remarks: \"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.\"\n  example:\n  - \"The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]\"\n  syntax:\n    content: public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.Seek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to the specified position. The <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> performs the requested seek when the next clock tick occurs.\n  remarks: \"Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events are also not raised until then.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.\"\n  example:\n  - \"The following example shows how to seek (skip) to one second after a Storyboard begins.  \\n  \\n [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]\\n [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  \\n  \\n The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]\"\n  syntax:\n    content: public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.Seek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).\n  remarks: \"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \\n  \\n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to  \\n  \\n <xref:System.Windows.Media.Animation.ClockState.Active>.  \\n  \\n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  example:\n  - \"The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]\"\n  syntax:\n    content: public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).\n  remarks: \"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \\n  \\n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to  \\n  \\n <xref:System.Windows.Media.Animation.ClockState.Active>.  \\n  \\n Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  example:\n  - \"The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]\"\n  syntax:\n    content: public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  id: SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).\n  remarks: \"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \\n  \\n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <code>origin</code>.\n    - id: origin\n      type: System.Windows.Media.Animation.TimeSeekOrigin\n      description: The position from which <code>offset</code> is applied.\n  overload: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)\n  id: SeekAlignedToLastTick(System.TimeSpan)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SeekAlignedToLastTick(TimeSpan)\n  nameWithType: Storyboard.SeekAlignedToLastTick(TimeSpan)\n  fullName: Storyboard.SeekAlignedToLastTick(TimeSpan)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Seeks this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref> to a new position immediately (synchronously).\n  remarks: \"<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick. Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.  \\n  \\n Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account. The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  \\n  \\n To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void SeekAlignedToLastTick (TimeSpan offset);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: A positive or negative value that describes the amount by which the timeline should move forward or backward.\n  overload: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)\n  id: SetSpeedRatio(System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetSpeedRatio(Double)\n  nameWithType: Storyboard.SetSpeedRatio(Double)\n  fullName: Storyboard.SetSpeedRatio(Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Sets the interactive speed ratio for the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void SetSpeedRatio (double speedRatio);\n    parameters:\n    - id: speedRatio\n      type: System.Double\n      description: A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.\n  overload: System.Windows.Media.Animation.Storyboard.SetSpeedRatio*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)\n  id: SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetSpeedRatio(FrameworkContentElement, Double)\n  nameWithType: Storyboard.SetSpeedRatio(FrameworkContentElement, Double)\n  fullName: Storyboard.SetSpeedRatio(FrameworkContentElement, Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: speedRatio\n      type: System.Double\n      description: A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.\n  overload: System.Windows.Media.Animation.Storyboard.SetSpeedRatio*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)\n  id: SetSpeedRatio(System.Windows.FrameworkElement,System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetSpeedRatio(FrameworkElement, Double)\n  nameWithType: Storyboard.SetSpeedRatio(FrameworkElement, Double)\n  fullName: Storyboard.SetSpeedRatio(FrameworkElement, Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Sets the interactive speed ratio of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  \\n  \\n Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.\"\n  syntax:\n    content: public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n    - id: speedRatio\n      type: System.Double\n      description: A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <xref href=\"System.Windows.Media.Animation.Timeline.SpeedRatio\"></xref> of 0.5 gives the storyboard an effective speed of 1.5.\n  overload: System.Windows.Media.Animation.Storyboard.SetSpeedRatio*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  id: SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetTarget(DependencyObject, DependencyObject)\n  nameWithType: Storyboard.SetTarget(DependencyObject, DependencyObject)\n  fullName: Storyboard.SetTarget(DependencyObject, DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object.\n  remarks: \"This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>. It is not guaranteed that this object can be correctly referenced from XAML.\"\n  syntax:\n    content: public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object.\n    - id: value\n      type: System.Windows.DependencyObject\n      description: The dependency object to target.\n  overload: System.Windows.Media.Animation.Storyboard.SetTarget*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)\n  id: SetTargetName(System.Windows.DependencyObject,System.String)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetTargetName(DependencyObject, String)\n  nameWithType: Storyboard.SetTargetName(DependencyObject, String)\n  fullName: Storyboard.SetTargetName(DependencyObject, String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the dependency object with the specified name.\n  remarks: This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).\n  syntax:\n    content: public static void SetTargetName (System.Windows.DependencyObject element, string name);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> that should target the specified dependency object.\n    - id: name\n      type: System.String\n      description: The name of the dependency object to target.\n  overload: System.Windows.Media.Animation.Storyboard.SetTargetName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)\n  id: SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SetTargetProperty(DependencyObject, PropertyPath)\n  nameWithType: Storyboard.SetTargetProperty(DependencyObject, PropertyPath)\n  fullName: Storyboard.SetTargetProperty(DependencyObject, PropertyPath)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Makes the specified <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> target the specified dependency property.\n  remarks: This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object. For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>. For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).\n  syntax:\n    content: public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> with which to associate the specified dependency property.\n    - id: path\n      type: System.Windows.PropertyPath\n      description: A path that describe the dependency property to be animated.\n  overload: System.Windows.Media.Animation.Storyboard.SetTargetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill\n  commentId: M:System.Windows.Media.Animation.Storyboard.SkipToFill\n  id: SkipToFill\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SkipToFill()\n  nameWithType: Storyboard.SkipToFill()\n  fullName: Storyboard.SkipToFill()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.\n  remarks: \"A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void SkipToFill ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.SkipToFill*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)\n  id: SkipToFill(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SkipToFill(FrameworkContentElement)\n  nameWithType: Storyboard.SkipToFill(FrameworkContentElement)\n  fullName: Storyboard.SkipToFill(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.\n  remarks: \"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.  \\n  \\n Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  \\n  \\n Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void SkipToFill (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.SkipToFill*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)\n  id: SkipToFill(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: SkipToFill(FrameworkElement)\n  nameWithType: Storyboard.SkipToFill(FrameworkElement)\n  fullName: Storyboard.SkipToFill(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Advances the current time of this storyboard's <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to the end of its active period.\n  remarks: \"This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting. If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.  \\n  \\n Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect. Calling this method on an inactive storyboard has no effect.  \\n  \\n Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void SkipToFill (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.SkipToFill*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Stop\n  commentId: M:System.Windows.Media.Animation.Storyboard.Stop\n  id: Stop\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: Storyboard.Stop()\n  fullName: Storyboard.Stop()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Storyboard.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)\n  id: Stop(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Stop(FrameworkContentElement)\n  nameWithType: Storyboard.Stop(FrameworkContentElement)\n  fullName: Storyboard.Stop(FrameworkContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  \\n  \\n Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  example:\n  - \"The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>. The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.  \\n  \\n [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\\n [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]\"\n  syntax:\n    content: public void Stop (System.Windows.FrameworkContentElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkContentElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)\n  id: Stop(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: Stop(FrameworkElement)\n  nameWithType: Storyboard.Stop(FrameworkElement)\n  fullName: Storyboard.Stop(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Stops the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> that was created for this <xref href=\"System.Windows.Media.Animation.Storyboard\"></xref>.\n  remarks: \"A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.  \\n  \\n Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.  \\n  \\n To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard. A controllable storyboard can pause, resume, seek, stop, and be removed. To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable. For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).\"\n  syntax:\n    content: public void Stop (System.Windows.FrameworkElement containingObject);\n    parameters:\n    - id: containingObject\n      type: System.Windows.FrameworkElement\n      description: The object specified when the <xref href=\"System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\"></xref> method was called. This object contains the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> objects that were created for this storyboard and its children.\n  overload: System.Windows.Media.Animation.Storyboard.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.TargetNameProperty\n  commentId: F:System.Windows.Media.Animation.Storyboard.TargetNameProperty\n  id: TargetNameProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: TargetNameProperty\n  nameWithType: Storyboard.TargetNameProperty\n  fullName: Storyboard.TargetNameProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetName\"></xref> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TargetNameProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.TargetProperty\n  commentId: F:System.Windows.Media.Animation.Storyboard.TargetProperty\n  id: TargetProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: TargetProperty\n  nameWithType: Storyboard.TargetProperty\n  fullName: Storyboard.TargetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.Target\"></xref> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TargetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Storyboard.TargetPropertyProperty\n  commentId: F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty\n  id: TargetPropertyProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  langs:\n  - csharp\n  name: TargetPropertyProperty\n  nameWithType: Storyboard.TargetPropertyProperty\n  fullName: Storyboard.TargetPropertyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.Storyboard.TargetProperty\"></xref> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TargetPropertyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.ParallelTimeline\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ParallelTimeline\n  nameWithType: ParallelTimeline\n  fullName: System.Windows.Media.Animation.ParallelTimeline\n- uid: System.Windows.Media.Animation.Storyboard.#ctor\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Storyboard()\n  nameWithType: Storyboard.Storyboard()\n  fullName: Storyboard.Storyboard()\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior, Boolean)\n- uid: System.Windows.FrameworkElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkElement\n  nameWithType: FrameworkElement\n  fullName: System.Windows.FrameworkElement\n- uid: System.Windows.FrameworkTemplate\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkTemplate\n  nameWithType: FrameworkTemplate\n  fullName: System.Windows.FrameworkTemplate\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, HandoffBehavior, Boolean)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, FrameworkTemplate, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate, Boolean)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n  fullName: Storyboard.Begin(FrameworkContentElement, HandoffBehavior, Boolean)\n- uid: System.Windows.FrameworkContentElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkContentElement\n  nameWithType: FrameworkContentElement\n  fullName: System.Windows.FrameworkContentElement\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, FrameworkTemplate)\n  nameWithType: Storyboard.Begin(FrameworkElement, FrameworkTemplate)\n  fullName: Storyboard.Begin(FrameworkElement, FrameworkTemplate)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkElement, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkElement, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkContentElement, HandoffBehavior)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, HandoffBehavior)\n  fullName: Storyboard.Begin(FrameworkContentElement, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkContentElement, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkContentElement, Boolean)\n  fullName: Storyboard.Begin(FrameworkContentElement, Boolean)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement)\n  nameWithType: Storyboard.Begin(FrameworkElement)\n  fullName: Storyboard.Begin(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkContentElement)\n  nameWithType: Storyboard.Begin(FrameworkContentElement)\n  fullName: Storyboard.Begin(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.Begin\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin()\n  nameWithType: Storyboard.Begin()\n  fullName: Storyboard.Begin()\n- uid: System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin(FrameworkElement, Boolean)\n  nameWithType: Storyboard.Begin(FrameworkElement, Boolean)\n  fullName: Storyboard.Begin(FrameworkElement, Boolean)\n- uid: System.Windows.Media.Animation.Storyboard.Clone\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Clone()\n  nameWithType: Storyboard.Clone()\n  fullName: Storyboard.Clone()\n- uid: System.Windows.Media.Animation.Storyboard\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Storyboard\n  nameWithType: Storyboard\n  fullName: System.Windows.Media.Animation.Storyboard\n- uid: System.Windows.Media.Animation.Storyboard.CreateInstanceCore\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: Storyboard.CreateInstanceCore()\n  fullName: Storyboard.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentGlobalSpeed(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentGlobalSpeed(FrameworkElement)\n  fullName: Storyboard.GetCurrentGlobalSpeed(FrameworkElement)\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Double\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: System.Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentGlobalSpeed()\n  nameWithType: Storyboard.GetCurrentGlobalSpeed()\n  fullName: Storyboard.GetCurrentGlobalSpeed()\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentGlobalSpeed(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentGlobalSpeed(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentGlobalSpeed(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentIteration()\n  nameWithType: Storyboard.GetCurrentIteration()\n  fullName: Storyboard.GetCurrentIteration()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentIteration(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentIteration(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentIteration(FrameworkContentElement)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentIteration(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentIteration(FrameworkElement)\n  fullName: Storyboard.GetCurrentIteration(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentProgress()\n  nameWithType: Storyboard.GetCurrentProgress()\n  fullName: Storyboard.GetCurrentProgress()\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentProgress(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentProgress(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentProgress(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentProgress(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentProgress(FrameworkElement)\n  fullName: Storyboard.GetCurrentProgress(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentState()\n  nameWithType: Storyboard.GetCurrentState()\n  fullName: Storyboard.GetCurrentState()\n- uid: System.Windows.Media.Animation.ClockState\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ClockState\n  nameWithType: ClockState\n  fullName: System.Windows.Media.Animation.ClockState\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentState(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentState(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentState(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentState(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentState(FrameworkElement)\n  fullName: Storyboard.GetCurrentState(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentTime()\n  nameWithType: Storyboard.GetCurrentTime()\n  fullName: Storyboard.GetCurrentTime()\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentTime(FrameworkContentElement)\n  nameWithType: Storyboard.GetCurrentTime(FrameworkContentElement)\n  fullName: Storyboard.GetCurrentTime(FrameworkContentElement)\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: false\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentTime(FrameworkElement)\n  nameWithType: Storyboard.GetCurrentTime(FrameworkElement)\n  fullName: Storyboard.GetCurrentTime(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetIsPaused(FrameworkContentElement)\n  nameWithType: Storyboard.GetIsPaused(FrameworkContentElement)\n  fullName: Storyboard.GetIsPaused(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetIsPaused()\n  nameWithType: Storyboard.GetIsPaused()\n  fullName: Storyboard.GetIsPaused()\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetIsPaused(FrameworkElement)\n  nameWithType: Storyboard.GetIsPaused(FrameworkElement)\n  fullName: Storyboard.GetIsPaused(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTarget(DependencyObject)\n  nameWithType: Storyboard.GetTarget(DependencyObject)\n  fullName: Storyboard.GetTarget(DependencyObject)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTargetName(DependencyObject)\n  nameWithType: Storyboard.GetTargetName(DependencyObject)\n  fullName: Storyboard.GetTargetName(DependencyObject)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTargetProperty(DependencyObject)\n  nameWithType: Storyboard.GetTargetProperty(DependencyObject)\n  fullName: Storyboard.GetTargetProperty(DependencyObject)\n- uid: System.Windows.PropertyPath\n  parent: System.Windows\n  isExternal: false\n  name: PropertyPath\n  nameWithType: PropertyPath\n  fullName: System.Windows.PropertyPath\n- uid: System.Windows.Media.Animation.Storyboard.Pause\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Pause()\n  nameWithType: Storyboard.Pause()\n  fullName: Storyboard.Pause()\n- uid: System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Pause(FrameworkContentElement)\n  nameWithType: Storyboard.Pause(FrameworkContentElement)\n  fullName: Storyboard.Pause(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Pause(FrameworkElement)\n  nameWithType: Storyboard.Pause(FrameworkElement)\n  fullName: Storyboard.Pause(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.Remove\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Remove()\n  nameWithType: Storyboard.Remove()\n  fullName: Storyboard.Remove()\n- uid: System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Remove(FrameworkContentElement)\n  nameWithType: Storyboard.Remove(FrameworkContentElement)\n  fullName: Storyboard.Remove(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Remove(FrameworkElement)\n  nameWithType: Storyboard.Remove(FrameworkElement)\n  fullName: Storyboard.Remove(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Resume(FrameworkElement)\n  nameWithType: Storyboard.Resume(FrameworkElement)\n  fullName: Storyboard.Resume(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.Resume\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Resume()\n  nameWithType: Storyboard.Resume()\n  fullName: Storyboard.Resume()\n- uid: System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Resume(FrameworkContentElement)\n  nameWithType: Storyboard.Resume(FrameworkContentElement)\n  fullName: Storyboard.Resume(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Seek(TimeSpan)\n  nameWithType: Storyboard.Seek(TimeSpan)\n  fullName: Storyboard.Seek(TimeSpan)\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Seek(TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.TimeSeekOrigin\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: TimeSeekOrigin\n  nameWithType: TimeSeekOrigin\n  fullName: System.Windows.Media.Animation.TimeSeekOrigin\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.Seek(FrameworkElement, TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(FrameworkElement, TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(FrameworkContentElement, TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n  nameWithType: Storyboard.SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n  fullName: Storyboard.SeekAlignedToLastTick(TimeSpan, TimeSeekOrigin)\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SeekAlignedToLastTick(TimeSpan)\n  nameWithType: Storyboard.SeekAlignedToLastTick(TimeSpan)\n  fullName: Storyboard.SeekAlignedToLastTick(TimeSpan)\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetSpeedRatio(Double)\n  nameWithType: Storyboard.SetSpeedRatio(Double)\n  fullName: Storyboard.SetSpeedRatio(Double)\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetSpeedRatio(FrameworkContentElement, Double)\n  nameWithType: Storyboard.SetSpeedRatio(FrameworkContentElement, Double)\n  fullName: Storyboard.SetSpeedRatio(FrameworkContentElement, Double)\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetSpeedRatio(FrameworkElement, Double)\n  nameWithType: Storyboard.SetSpeedRatio(FrameworkElement, Double)\n  fullName: Storyboard.SetSpeedRatio(FrameworkElement, Double)\n- uid: System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTarget(DependencyObject, DependencyObject)\n  nameWithType: Storyboard.SetTarget(DependencyObject, DependencyObject)\n  fullName: Storyboard.SetTarget(DependencyObject, DependencyObject)\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTargetName(DependencyObject, String)\n  nameWithType: Storyboard.SetTargetName(DependencyObject, String)\n  fullName: Storyboard.SetTargetName(DependencyObject, String)\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTargetProperty(DependencyObject, PropertyPath)\n  nameWithType: Storyboard.SetTargetProperty(DependencyObject, PropertyPath)\n  fullName: Storyboard.SetTargetProperty(DependencyObject, PropertyPath)\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SkipToFill()\n  nameWithType: Storyboard.SkipToFill()\n  fullName: Storyboard.SkipToFill()\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SkipToFill(FrameworkContentElement)\n  nameWithType: Storyboard.SkipToFill(FrameworkContentElement)\n  fullName: Storyboard.SkipToFill(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SkipToFill(FrameworkElement)\n  nameWithType: Storyboard.SkipToFill(FrameworkElement)\n  fullName: Storyboard.SkipToFill(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.Stop\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Stop()\n  nameWithType: Storyboard.Stop()\n  fullName: Storyboard.Stop()\n- uid: System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Stop(FrameworkContentElement)\n  nameWithType: Storyboard.Stop(FrameworkContentElement)\n  fullName: Storyboard.Stop(FrameworkContentElement)\n- uid: System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Stop(FrameworkElement)\n  nameWithType: Storyboard.Stop(FrameworkElement)\n  fullName: Storyboard.Stop(FrameworkElement)\n- uid: System.Windows.Media.Animation.Storyboard.TargetNameProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: TargetNameProperty\n  nameWithType: Storyboard.TargetNameProperty\n  fullName: Storyboard.TargetNameProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.Storyboard.TargetProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: TargetProperty\n  nameWithType: Storyboard.TargetProperty\n  fullName: Storyboard.TargetProperty\n- uid: System.Windows.Media.Animation.Storyboard.TargetPropertyProperty\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: TargetPropertyProperty\n  nameWithType: Storyboard.TargetPropertyProperty\n  fullName: Storyboard.TargetPropertyProperty\n- uid: System.Windows.Media.Animation.Storyboard.Begin*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Begin\n  nameWithType: Storyboard.Begin\n  fullName: Storyboard.Begin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentGlobalSpeed\n  nameWithType: Storyboard.GetCurrentGlobalSpeed\n  fullName: Storyboard.GetCurrentGlobalSpeed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.#ctor*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Storyboard\n  nameWithType: Storyboard.Storyboard\n  fullName: Storyboard.Storyboard\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Clone*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Clone\n  nameWithType: Storyboard.Clone\n  fullName: Storyboard.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: Storyboard.CreateInstanceCore\n  fullName: Storyboard.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentIteration*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentIteration\n  nameWithType: Storyboard.GetCurrentIteration\n  fullName: Storyboard.GetCurrentIteration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentProgress*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentProgress\n  nameWithType: Storyboard.GetCurrentProgress\n  fullName: Storyboard.GetCurrentProgress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentState*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentState\n  nameWithType: Storyboard.GetCurrentState\n  fullName: Storyboard.GetCurrentState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetCurrentTime*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetCurrentTime\n  nameWithType: Storyboard.GetCurrentTime\n  fullName: Storyboard.GetCurrentTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetIsPaused*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetIsPaused\n  nameWithType: Storyboard.GetIsPaused\n  fullName: Storyboard.GetIsPaused\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetTarget*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTarget\n  nameWithType: Storyboard.GetTarget\n  fullName: Storyboard.GetTarget\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetName*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTargetName\n  nameWithType: Storyboard.GetTargetName\n  fullName: Storyboard.GetTargetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.GetTargetProperty*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: GetTargetProperty\n  nameWithType: Storyboard.GetTargetProperty\n  fullName: Storyboard.GetTargetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Pause*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Pause\n  nameWithType: Storyboard.Pause\n  fullName: Storyboard.Pause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Remove*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Remove\n  nameWithType: Storyboard.Remove\n  fullName: Storyboard.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Resume*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Resume\n  nameWithType: Storyboard.Resume\n  fullName: Storyboard.Resume\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Seek*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Seek\n  nameWithType: Storyboard.Seek\n  fullName: Storyboard.Seek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SeekAlignedToLastTick\n  nameWithType: Storyboard.SeekAlignedToLastTick\n  fullName: Storyboard.SeekAlignedToLastTick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SetSpeedRatio*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetSpeedRatio\n  nameWithType: Storyboard.SetSpeedRatio\n  fullName: Storyboard.SetSpeedRatio\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SetTarget*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTarget\n  nameWithType: Storyboard.SetTarget\n  fullName: Storyboard.SetTarget\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetName*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTargetName\n  nameWithType: Storyboard.SetTargetName\n  fullName: Storyboard.SetTargetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SetTargetProperty*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SetTargetProperty\n  nameWithType: Storyboard.SetTargetProperty\n  fullName: Storyboard.SetTargetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.SkipToFill*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: SkipToFill\n  nameWithType: Storyboard.SkipToFill\n  fullName: Storyboard.SkipToFill\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.Media.Animation.Storyboard.Stop*\n  parent: System.Windows.Media.Animation.Storyboard\n  isExternal: false\n  name: Stop\n  nameWithType: Storyboard.Stop\n  fullName: Storyboard.Stop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Storyboard.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: ParallelTimeline.CloneCurrentValue()\n  fullName: ParallelTimeline.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Timeline.FreezeCore(Boolean)\n  fullName: Timeline.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetAsFrozenCore(Freezable)\n  fullName: Timeline.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatio\n  nameWithType: Timeline.AccelerationRatio\n  fullName: Timeline.AccelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatioProperty\n  nameWithType: Timeline.AccelerationRatioProperty\n  fullName: Timeline.AccelerationRatioProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.AllocateClock\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AllocateClock()\n  nameWithType: TimelineGroup.AllocateClock()\n  fullName: TimelineGroup.AllocateClock()\n- uid: System.Windows.Media.Animation.Timeline.AutoReverse\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverse\n  nameWithType: Timeline.AutoReverse\n  fullName: Timeline.AutoReverse\n- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverseProperty\n  nameWithType: Timeline.AutoReverseProperty\n  fullName: Timeline.AutoReverseProperty\n- uid: System.Windows.Media.Animation.Timeline.BeginTime\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTime\n  nameWithType: Timeline.BeginTime\n  fullName: Timeline.BeginTime\n- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTimeProperty\n  nameWithType: Timeline.BeginTimeProperty\n  fullName: Timeline.BeginTimeProperty\n- uid: System.Windows.Media.Animation.Timeline.Completed\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Completed\n  nameWithType: Timeline.Completed\n  fullName: Timeline.Completed\n- uid: System.Windows.Media.Animation.TimelineGroup.CreateClock\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: CreateClock()\n  nameWithType: TimelineGroup.CreateClock()\n  fullName: TimelineGroup.CreateClock()\n- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CreateClock(Boolean)\n  nameWithType: Timeline.CreateClock(Boolean)\n  fullName: Timeline.CreateClock(Boolean)\n- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentGlobalSpeedInvalidated\n  nameWithType: Timeline.CurrentGlobalSpeedInvalidated\n  fullName: Timeline.CurrentGlobalSpeedInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentStateInvalidated\n  nameWithType: Timeline.CurrentStateInvalidated\n  fullName: Timeline.CurrentStateInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentTimeInvalidated\n  nameWithType: Timeline.CurrentTimeInvalidated\n  fullName: Timeline.CurrentTimeInvalidated\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatio\n  nameWithType: Timeline.DecelerationRatio\n  fullName: Timeline.DecelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatioProperty\n  nameWithType: Timeline.DecelerationRatioProperty\n  fullName: Timeline.DecelerationRatioProperty\n- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DesiredFrameRateProperty\n  nameWithType: Timeline.DesiredFrameRateProperty\n  fullName: Timeline.DesiredFrameRateProperty\n- uid: System.Windows.Media.Animation.Timeline.Duration\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Duration\n  nameWithType: Timeline.Duration\n  fullName: Timeline.Duration\n- uid: System.Windows.Media.Animation.Timeline.DurationProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DurationProperty\n  nameWithType: Timeline.DurationProperty\n  fullName: Timeline.DurationProperty\n- uid: System.Windows.Media.Animation.Timeline.FillBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehavior\n  nameWithType: Timeline.FillBehavior\n  fullName: Timeline.FillBehavior\n- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehaviorProperty\n  nameWithType: Timeline.FillBehaviorProperty\n  fullName: Timeline.FillBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetDesiredFrameRate(Timeline)\n  nameWithType: Timeline.GetDesiredFrameRate(Timeline)\n  fullName: Timeline.GetDesiredFrameRate(Timeline)\n- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetNaturalDuration(Clock)\n  nameWithType: Timeline.GetNaturalDuration(Clock)\n  fullName: Timeline.GetNaturalDuration(Clock)\n- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: GetNaturalDurationCore(Clock)\n  nameWithType: ParallelTimeline.GetNaturalDurationCore(Clock)\n  fullName: ParallelTimeline.GetNaturalDurationCore(Clock)\n- uid: System.Windows.Media.Animation.Timeline.Name\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Name\n  nameWithType: Timeline.Name\n  fullName: Timeline.Name\n- uid: System.Windows.Media.Animation.Timeline.NameProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: NameProperty\n  nameWithType: Timeline.NameProperty\n  fullName: Timeline.NameProperty\n- uid: System.Windows.Media.Animation.Timeline.RemoveRequested\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RemoveRequested\n  nameWithType: Timeline.RemoveRequested\n  fullName: Timeline.RemoveRequested\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehavior\n  nameWithType: Timeline.RepeatBehavior\n  fullName: Timeline.RepeatBehavior\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehaviorProperty\n  nameWithType: Timeline.RepeatBehaviorProperty\n  fullName: Timeline.RepeatBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  nameWithType: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  fullName: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: Timeline.SpeedRatio\n  fullName: Timeline.SpeedRatio\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatioProperty\n  nameWithType: Timeline.SpeedRatioProperty\n  fullName: Timeline.SpeedRatioProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AddChild(Object)\n  nameWithType: TimelineGroup.AddChild(Object)\n  fullName: TimelineGroup.AddChild(Object)\n- uid: System.Windows.Media.Animation.TimelineGroup.AddText(System.String)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AddText(String)\n  nameWithType: TimelineGroup.AddText(String)\n  fullName: TimelineGroup.AddText(String)\n- uid: System.Windows.Media.Animation.TimelineGroup.Children\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: Children\n  nameWithType: TimelineGroup.Children\n  fullName: TimelineGroup.Children\n- uid: System.Windows.Media.Animation.TimelineGroup.ChildrenProperty\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: ChildrenProperty\n  nameWithType: TimelineGroup.ChildrenProperty\n  fullName: TimelineGroup.ChildrenProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: IAddChild.AddChild(Object)\n  nameWithType: TimelineGroup.IAddChild.AddChild(Object)\n  fullName: TimelineGroup.IAddChild.AddChild(Object)\n- uid: System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: IAddChild.AddText(String)\n  nameWithType: TimelineGroup.IAddChild.AddText(String)\n  fullName: TimelineGroup.IAddChild.AddText(String)\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: SlipBehavior\n  nameWithType: ParallelTimeline.SlipBehavior\n  fullName: ParallelTimeline.SlipBehavior\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: SlipBehaviorProperty\n  nameWithType: ParallelTimeline.SlipBehaviorProperty\n  fullName: ParallelTimeline.SlipBehaviorProperty\n"}