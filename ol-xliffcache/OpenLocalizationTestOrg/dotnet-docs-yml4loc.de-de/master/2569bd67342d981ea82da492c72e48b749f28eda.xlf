<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2569bd67342d981ea82da492c72e48b749f28eda</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Messaging.MessageQueueAccessControlEntry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5cd779d4d58af8bcb89ad14e99dc6e1341e360e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42f93ff6a6125d4e086f8976db3225c51dda2acd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> class to specify rights to apply to a trustee.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> so that you can add rights for more than one trustee at a time.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are some exceptions to this generalization about where the new right is added and its effects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Messaging&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor allows you specify a <ph id="ph2">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> member to indicate whether to allow or deny rights to the trustee.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use two entry types to override this behavior: <ph id="ph1">`Set`</ph> and <ph id="ph2">`Revoke`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about controlling the way in which access rights are determined, see the <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> enumeration topic.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is different from code access security, which is implemented through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueuePermission&gt;</ph> and related classes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the topic <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconcodeaccesssecurity&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03)</ept> for more information about code access security.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set message queue permissions for a trustee, create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry.Trustee%2A&gt;</ph> class and pass it into an overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the message queue access rights either by passing an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> into the constructor or by setting the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property on an existing <ph id="ph3">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then pass the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> instance directly to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName&gt;</ph> method, or alternately add the entry to an instance of <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessControlEntry"&gt;&lt;/xref&gt;</ph> class, granting the specified Message Queuing access rights to the specified trustee.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of the constructor to grant rights to the specified trustee.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights you specify in the <ph id="ph1">`rights`</ph> parameter are a bitwise combination of members of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor uses the rights you pass in to set this instance's <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass this instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> directly into an overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method to grant rights only to this trustee, or add this instance to a <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> to grant or deny rights to multiple trustees at once.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Trustee"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessRights"&gt;&lt;/xref&gt;</ph> values which defines the combination of rights to grant to the trustee.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessControlEntry"&gt;&lt;/xref&gt;</ph> class, with the specified trustee and Message Queuing access rights.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The type of access (such as <ph id="ph1">`Allow`</ph> or <ph id="ph2">`Deny`</ph>) is defined by the entry type you pass in.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of the constructor to grant or deny rights to the specified trustee.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rights you specify in the <ph id="ph1">`rights`</ph> parameter are a bitwise combination of members of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor uses the rights you pass in to set this instance's <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about granting or denying rights, see the <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For two members, <ph id="ph1">`Allow`</ph> and <ph id="ph2">`Deny`</ph>, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other members, <ph id="ph1">`Set`</ph> and <ph id="ph2">`Revoke`</ph>, overwrite any existing rights.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the member whose behavior is applicable to your application.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass this instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> directly into an overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method to grant or deny rights only to this trustee, or add this instance to a <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> to grant or deny rights to multiple trustees at once.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.Trustee"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessRights"&gt;&lt;/xref&gt;</ph> values which defines the combination of rights to grant to the trustee.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.AccessControlEntryType"&gt;&lt;/xref&gt;</ph> values, which specifies whether to allow, deny, set or revoke the specified rights.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets the set of Message Queuing-specific rights to apply to the trustee.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is set by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor, but you can change it at any time before using this instance of <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> in a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Messaging.MessageQueueAccessRights"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is defined by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rights</ph><ept id="p1">&lt;/code&gt;</ept> parameter passed into the constructor.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>