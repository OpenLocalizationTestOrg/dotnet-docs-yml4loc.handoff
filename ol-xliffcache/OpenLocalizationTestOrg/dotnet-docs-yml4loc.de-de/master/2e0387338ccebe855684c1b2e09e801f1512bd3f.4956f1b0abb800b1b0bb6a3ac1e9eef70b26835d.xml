{"nodes":[{"content":"Paints an area with a <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.","nodes":[{"pos":[0,83],"content":"Paints an area with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"Paints an area with a <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>."}],"pos":[1026,1110],"yaml":true},{"content":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.  \n  \n-   Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.  \n  \n-   Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.  \n  \n When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout can't permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).  \n  \n Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.  \n  \n **Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.VisualBrush> class provides several special features: <xref:System.Windows.Media.VisualBrush> objects can be declared as  and shared among multiple objects. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  \n  \n> [!NOTE]\n>  A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`","nodes":[{"pos":[0,137],"content":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.","nodes":[{"content":"There are two ways to specify the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> content of a <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>.","pos":[0,137],"source":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>."}]},{"pos":[147,323],"content":"Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.","nodes":[{"content":"Create a new <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> and use it to set the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>.","pos":[0,176],"source":"Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>."}]},{"pos":[333,596],"content":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.","nodes":[{"content":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.","pos":[0,263],"nodes":[{"content":"Use an existing <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>, which creates a duplicate image of the target <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual&gt;</ph>.","pos":[0,133],"source":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>."},{"content":"You can then use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> to create interesting effects, such as reflection and magnification.","pos":[134,263],"source":" You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification."}]}]},{"pos":[603,1597],"content":"When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout can't permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).","nodes":[{"content":"When you define a new <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> for a <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> and that <ph id=\"ph3\">&lt;xref:System.Windows.Media.Visual&gt;</ph> is a <ph id=\"ph4\">&lt;xref:System.Windows.UIElement&gt;</ph> (such as a panel or control), the layout system runs on the <ph id=\"ph5\">&lt;xref:System.Windows.UIElement&gt;</ph> and its child elements when the <ph id=\"ph6\">&lt;xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A&gt;</ph> property is set to <ph id=\"ph7\">`true`</ph>.","pos":[0,410],"source":"When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`."},{"content":"However, the root <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> is essentially isolated from the rest of the system; styles, storyboards, and external layout can't permeate this boundary.","pos":[411,584],"source":" However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout can't permeate this boundary."},{"content":"Therefore, you should explicitly specify the size of the root <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>, because its only parent is the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> and therefore it cannot automatically size itself to the area being painted.","pos":[585,827],"source":" Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted."},{"content":"For more information about layout in <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, see the <bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](~/docs/framework/wpf/advanced/layout.md)</ept>.","pos":[828,994],"source":" For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md)."}]},{"pos":[1604,1995],"content":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.","nodes":[{"content":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.","pos":[0,391],"nodes":[{"content":"Updates to the visual tree of a <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> will not propagate if a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> is in the brush's parent chain.","pos":[0,176],"source":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain."},{"content":"You can workaround this limitation by forcing an update of the scene on the object above the effect.","pos":[177,277]},{"content":"You can call <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.InvalidateVisual%2A&gt;</ph> or include an animation to force a scene update.","pos":[278,391],"source":" You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update."}]}]},{"pos":[2002,2483],"content":"**Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.VisualBrush> class provides several special features: <xref:System.Windows.Media.VisualBrush> objects can be declared as  and shared among multiple objects. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Freezable Features:<ept id=\"p1\">**</ept> Because it inherits from the <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> class, the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> class provides several special features: <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> objects can be declared as  and shared among multiple objects.","pos":[0,279],"source":"**Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.VisualBrush> class provides several special features: <xref:System.Windows.Media.VisualBrush> objects can be declared as  and shared among multiple objects."},{"content":"For more information about the different features provided by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects, see the <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.","pos":[280,481],"source":" For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md)."}]},{"pos":[2491,2684],"content":"[!NOTE]\n A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`","leadings":["","> "],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> cannot be made read-only (frozen) when its <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> property is set to any value other than <ph id=\"ph3\">`null.`</ph>","pos":[9,191],"source":" A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`"}]}],"pos":[1121,3821],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class."}],"pos":[10016,10111],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class that contains the specified <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph> class that contains the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualBrush.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class that contains the specified <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>."}],"pos":[11256,11440],"yaml":true},{"content":"The contents of the new <xref href=\"System.Windows.Media.VisualBrush\"></xref>.","nodes":[{"pos":[0,78],"content":"The contents of the new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph>.","source":"The contents of the new <xref href=\"System.Windows.Media.VisualBrush\"></xref>."}],"pos":[11612,11691],"yaml":true},{"content":"Gets or sets a value that specifies whether this <xref href=\"System.Windows.Media.VisualBrush\"></xref> will run layout its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.","nodes":[{"pos":[0,184],"content":"Gets or sets a value that specifies whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph> will run layout its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualBrush.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that specifies whether this <xref href=\"System.Windows.Media.VisualBrush\"></xref> will run layout its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>."}],"pos":[12709,12894],"yaml":true},{"content":"Setting this property to `true` has an effect only when this brush's <xref:System.Windows.Media.VisualBrush.Visual%2A> is a non-parented <xref:System.Windows.UIElement>.  \n  \n<a name=\"dependencyPropertyInfo_AutoLayoutContent\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,169],"content":"Setting this property to <ph id=\"ph1\">`true`</ph> has an effect only when this brush's <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> is a non-parented <ph id=\"ph3\">&lt;xref:System.Windows.UIElement&gt;</ph>.","source":"Setting this property to `true` has an effect only when this brush's <xref:System.Windows.Media.VisualBrush.Visual%2A> is a non-parented <xref:System.Windows.UIElement>."},{"pos":[237,268],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[289,305],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[306,371],"content":"<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>","nodes":[]},{"pos":[376,409],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[410,414],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[12905,13333],"yaml":true,"extradata":"MT"},{"content":"`true` if this Brush should run layout on its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,150],"content":"`true` if this Brush should run layout on its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if this Brush should run layout on its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualBrush.Visual\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,127],"source":"`true` if this Brush should run layout on its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[128,150],"source":" The default is `true`."}]}],"pos":[15707,15860],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.VisualBrush.AutoLayoutContent\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush.AutoLayoutContent\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.VisualBrush.AutoLayoutContent\"></xref> dependency property."}],"pos":[16935,17043],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref>, making deep copies of this object's values.","nodes":[{"pos":[0,133],"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref>, making deep copies of this object's values."}],"pos":[18128,18262],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  \n  \n When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]},{"pos":[350,521],"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,171]}]}],"pos":[18273,18801],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true.`</ph>","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`"}]}],"pos":[18969,19202],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"pos":[0,245],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.","pos":[0,148],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[149,245]}]}],"pos":[20224,20470],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,355],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}],"pos":[20481,20841],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true`</ph>.","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`."}]}],"pos":[21021,21260],"yaml":true},{"content":"Gets or sets the brush's content.","nodes":[{"pos":[0,33],"content":"Gets or sets the brush's content.","nodes":[{"content":"Gets or sets the brush's content.","pos":[0,33]}]}],"pos":[25964,25998],"yaml":true},{"content":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.  \n  \n-   Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.  \n  \n-   Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.  \n  \n <xref:System.Windows.Media.Visual> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <xref:System.Windows.Media.VisualBrush>; the entire list cannot be shown here. See <xref:System.Windows.Media.Visual>; refer to the \"Inheritance Hierarchy\" section, which will show the immediately derived classes. You can then click on the immediately derived classes and traverse the hierarchies to get a sense of the full range of possibilities. At a top level, the two most common categories of objects you might use for a <xref:System.Windows.Media.VisualBrush> are <xref:System.Windows.UIElement> or <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement> encompasses basically any UI element that can otherwise participate in the UI for a WPF application. <xref:System.Windows.Media.ContainerVisual> contains a <xref:System.Windows.Media.DrawingGroup> that includes one or more <xref:System.Windows.Media.Drawing>-derived objects.  \n  \n When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout dictated by the parent where the brush is applied cannot permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).  \n  \n Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.  \n  \n> [!NOTE]\n>  A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`  \n  \n<a name=\"xamlPropertyElementUsage_Visual\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Visual>  \n    singleVisualRoot  \n  </object.Visual>  \n</object>  \n```  \n  \n<a name=\"xamlAttributeUsage_Visual\"></a>   \n## XAML Attribute Usage  \n <*object* `Visual`=\"{*bindingExpression*}\"/>  \n  \n \\- or -  \n  \n <*object* `Visual`=\"{*resourceExpression*}\"/>  \n  \n<a name=\"xamlValues_Visual\"></a>   \n## XAML Values  \n `singleVisualRoot`  \n A single object element that defines a new visual element for the brush. This must be an object that derives from <xref:System.Windows.Media.Visual>. See Remarks.  \n  \n `bindingExpression`  \n A  that evaluates to an existing <xref:System.Windows.Media.Visual> instance.  \n  \n `resourceExpression`  \n A `StaticResource` or `DynamicResource` that evaluates to an existing <xref:System.Windows.Media.Visual> instance. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)  \n  \n<a name=\"dependencyPropertyInfo_Visual\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.VisualBrush.VisualProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,137],"content":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.","nodes":[{"content":"There are two ways to specify the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> content of a <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>.","pos":[0,137],"source":"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>."}]},{"pos":[147,323],"content":"Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.","nodes":[{"content":"Create a new <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> and use it to set the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>.","pos":[0,176],"source":"Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>."}]},{"pos":[333,596],"content":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.","nodes":[{"content":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.","pos":[0,263],"nodes":[{"content":"Use an existing <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>, which creates a duplicate image of the target <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual&gt;</ph>.","pos":[0,133],"source":"Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>."},{"content":"You can then use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> to create interesting effects, such as reflection and magnification.","pos":[134,263],"source":" You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification."}]}]},{"pos":[603,1633],"content":"<xref:System.Windows.Media.Visual> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <xref:System.Windows.Media.VisualBrush>; the entire list cannot be shown here. See <xref:System.Windows.Media.Visual>; refer to the \"Inheritance Hierarchy\" section, which will show the immediately derived classes. You can then click on the immediately derived classes and traverse the hierarchies to get a sense of the full range of possibilities. At a top level, the two most common categories of objects you might use for a <xref:System.Windows.Media.VisualBrush> are <xref:System.Windows.UIElement> or <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement> encompasses basically any UI element that can otherwise participate in the UI for a WPF application. <xref:System.Windows.Media.ContainerVisual> contains a <xref:System.Windows.Media.DrawingGroup> that includes one or more <xref:System.Windows.Media.Drawing>-derived objects.","nodes":[{"content":"<xref:System.Windows.Media.Visual> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <xref:System.Windows.Media.VisualBrush>; the entire list cannot be shown here. See <xref:System.Windows.Media.Visual>; refer to the \"Inheritance Hierarchy\" section, which will show the immediately derived classes. You can then click on the immediately derived classes and traverse the hierarchies to get a sense of the full range of possibilities. At a top level, the two most common categories of objects you might use for a <xref:System.Windows.Media.VisualBrush> are <xref:System.Windows.UIElement> or <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement> encompasses basically any UI element that can otherwise participate in the UI for a WPF application. <xref:System.Windows.Media.ContainerVisual> contains a <xref:System.Windows.Media.DrawingGroup> that includes one or more <xref:System.Windows.Media.Drawing>-derived objects.","pos":[0,1030],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph>; the entire list cannot be shown here.","pos":[0,251],"source":"<xref:System.Windows.Media.Visual> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <xref:System.Windows.Media.VisualBrush>; the entire list cannot be shown here."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>; refer to the \"Inheritance Hierarchy\" section, which will show the immediately derived classes.","pos":[252,386],"source":" See <xref:System.Windows.Media.Visual>; refer to the \"Inheritance Hierarchy\" section, which will show the immediately derived classes."},{"content":"You can then click on the immediately derived classes and traverse the hierarchies to get a sense of the full range of possibilities.","pos":[387,520]},{"content":"At a top level, the two most common categories of objects you might use for a <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> are <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>.","pos":[521,722],"source":" At a top level, the two most common categories of objects you might use for a <xref:System.Windows.Media.VisualBrush> are <xref:System.Windows.UIElement> or <xref:System.Windows.Media.ContainerVisual>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> encompasses basically any UI element that can otherwise participate in the UI for a WPF application.","pos":[723,855],"source":" <xref:System.Windows.UIElement> encompasses basically any UI element that can otherwise participate in the UI for a WPF application."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> contains a <ph id=\"ph2\">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> that includes one or more <ph id=\"ph3\">&lt;xref:System.Windows.Media.Drawing&gt;</ph>-derived objects.","pos":[856,1030],"source":" <xref:System.Windows.Media.ContainerVisual> contains a <xref:System.Windows.Media.DrawingGroup> that includes one or more <xref:System.Windows.Media.Drawing>-derived objects."}]}]},{"pos":[1640,2685],"content":"When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout dictated by the parent where the brush is applied cannot permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).","nodes":[{"content":"When you define a new <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> for a <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> and that <ph id=\"ph3\">&lt;xref:System.Windows.Media.Visual&gt;</ph> is a <ph id=\"ph4\">&lt;xref:System.Windows.UIElement&gt;</ph> (such as a panel or control), the layout system runs on the <ph id=\"ph5\">&lt;xref:System.Windows.UIElement&gt;</ph> and its child elements when the <ph id=\"ph6\">&lt;xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A&gt;</ph> property is set to <ph id=\"ph7\">`true`</ph>.","pos":[0,410],"source":"When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`."},{"content":"However, the root <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> is essentially isolated from the rest of the system; styles, storyboards, and external layout dictated by the parent where the brush is applied cannot permeate this boundary.","pos":[411,635],"source":" However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout dictated by the parent where the brush is applied cannot permeate this boundary."},{"content":"Therefore, you should explicitly specify the size of the root <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>, because its only parent is the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> and therefore it cannot automatically size itself to the area being painted.","pos":[636,878],"source":" Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted."},{"content":"For more information about layout in <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, see the <bpt id=\"p1\">[</bpt>Layout<ept id=\"p1\">](~/docs/framework/wpf/advanced/layout.md)</ept>.","pos":[879,1045],"source":" For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md)."}]},{"pos":[2692,3083],"content":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.","nodes":[{"content":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.","pos":[0,391],"nodes":[{"content":"Updates to the visual tree of a <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> will not propagate if a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Effects.BitmapEffect&gt;</ph> is in the brush's parent chain.","pos":[0,176],"source":"Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain."},{"content":"You can workaround this limitation by forcing an update of the scene on the object above the effect.","pos":[177,277]},{"content":"You can call <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.InvalidateVisual%2A&gt;</ph> or include an animation to force a scene update.","pos":[278,391],"source":" You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update."}]}]},{"pos":[3091,3284],"content":"[!NOTE]\n A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`","leadings":["","> "],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualBrush&gt;</ph> cannot be made read-only (frozen) when its <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualBrush.Visual%2A&gt;</ph> property is set to any value other than <ph id=\"ph3\">`null.`</ph>","pos":[9,191],"source":" A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`"}]},{"pos":[3343,3370],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[3525,3545],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[3549,3593],"content":"<ph id=\"ph1\">&lt;</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> <ph id=\"ph2\">`Visual`</ph>=\"{<bpt id=\"p2\">*</bpt>bindingExpression<ept id=\"p2\">*</ept>}\"/&gt;","source":"<*object* `Visual`=\"{*bindingExpression*}\"/>"},{"pos":[3600,3607],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[3614,3659],"content":"<ph id=\"ph1\">&lt;</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> <ph id=\"ph2\">`Visual`</ph>=\"{<bpt id=\"p2\">*</bpt>resourceExpression<ept id=\"p2\">*</ept>}\"/&gt;","source":"<*object* `Visual`=\"{*resourceExpression*}\"/>"},{"pos":[3704,3715],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[3719,3903],"content":"`singleVisualRoot`  \n A single object element that defines a new visual element for the brush. This must be an object that derives from <xref:System.Windows.Media.Visual>. See Remarks.","nodes":[{"content":" A single object element that defines a new visual element for the brush. This must be an object that derives from <xref:System.Windows.Media.Visual>. See Remarks.","pos":[21,184],"nodes":[{"content":"A single object element that defines a new visual element for the brush.","pos":[1,73]},{"content":"This must be an object that derives from <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph>.","pos":[74,150],"source":" This must be an object that derives from <xref:System.Windows.Media.Visual>."},{"content":"See Remarks.","pos":[151,163]}]}]},{"pos":[3910,4010],"content":"`bindingExpression`  \n A  that evaluates to an existing <xref:System.Windows.Media.Visual> instance.","nodes":[{"content":"A  that evaluates to an existing <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> instance.","pos":[23,100],"source":" A  that evaluates to an existing <xref:System.Windows.Media.Visual> instance."}]},{"pos":[4017,4225],"content":"`resourceExpression`  \n A `StaticResource` or `DynamicResource` that evaluates to an existing <xref:System.Windows.Media.Visual> instance. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)","nodes":[{"content":" A `StaticResource` or `DynamicResource` that evaluates to an existing <xref:System.Windows.Media.Visual> instance. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)","pos":[23,208],"nodes":[{"content":"A <ph id=\"ph1\">`StaticResource`</ph> or <ph id=\"ph2\">`DynamicResource`</ph> that evaluates to an existing <ph id=\"ph3\">&lt;xref:System.Windows.Media.Visual&gt;</ph> instance.","pos":[1,115],"source":" A `StaticResource` or `DynamicResource` that evaluates to an existing <xref:System.Windows.Media.Visual> instance."},{"content":"See <bpt id=\"p1\">[</bpt>XAML Resources<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>","pos":[116,185],"source":" See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)"}]}]},{"pos":[4282,4313],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[4334,4350],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[4351,4405],"content":"<xref:System.Windows.Media.VisualBrush.VisualProperty>","nodes":[]},{"pos":[4410,4443],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[4444,4448],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[26009,30527],"yaml":true,"extradata":"MT"},{"content":"The brush's content. The default is `null`.","nodes":[{"pos":[0,43],"content":"The brush's content. The default is `null`.","nodes":[{"content":"The brush's content.","pos":[0,20]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[21,43],"source":" The default is `null`."}]}],"pos":[30677,30721],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref> dependency property.","nodes":[{"pos":[0,96],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualBrush.Visual\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref> dependency property."}],"pos":[31719,31816],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.VisualBrush\n  commentId: T:System.Windows.Media.VisualBrush\n  id: VisualBrush\n  children:\n  - System.Windows.Media.VisualBrush.#ctor\n  - System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualBrush.AutoLayoutContent\n  - System.Windows.Media.VisualBrush.AutoLayoutContentProperty\n  - System.Windows.Media.VisualBrush.Clone\n  - System.Windows.Media.VisualBrush.CloneCurrentValue\n  - System.Windows.Media.VisualBrush.CreateInstanceCore\n  - System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)\n  - System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Media.VisualBrush.Visual\n  - System.Windows.Media.VisualBrush.VisualProperty\n  langs:\n  - csharp\n  name: VisualBrush\n  nameWithType: VisualBrush\n  fullName: System.Windows.Media.VisualBrush\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Paints an area with a <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.\n  remarks: \"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.  \\n  \\n-   Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.  \\n  \\n-   Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.  \\n  \\n When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout can't permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).  \\n  \\n Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.  \\n  \\n **Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.VisualBrush> class provides several special features: <xref:System.Windows.Media.VisualBrush> objects can be declared as  and shared among multiple objects. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  \\n  \\n> [!NOTE]\\n>  A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`\"\n  syntax:\n    content: 'public sealed class VisualBrush : System.Windows.Media.TileBrush'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Brush\n  - System.Windows.Media.TileBrush\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Brush.Opacity\n  - System.Windows.Media.Brush.OpacityProperty\n  - System.Windows.Media.Brush.RelativeTransform\n  - System.Windows.Media.Brush.RelativeTransformProperty\n  - System.Windows.Media.Brush.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Brush.ToString\n  - System.Windows.Media.Brush.ToString(System.IFormatProvider)\n  - System.Windows.Media.Brush.Transform\n  - System.Windows.Media.Brush.TransformProperty\n  - System.Windows.Media.TileBrush.AlignmentX\n  - System.Windows.Media.TileBrush.AlignmentXProperty\n  - System.Windows.Media.TileBrush.AlignmentY\n  - System.Windows.Media.TileBrush.AlignmentYProperty\n  - System.Windows.Media.TileBrush.Stretch\n  - System.Windows.Media.TileBrush.StretchProperty\n  - System.Windows.Media.TileBrush.TileMode\n  - System.Windows.Media.TileBrush.TileModeProperty\n  - System.Windows.Media.TileBrush.Viewbox\n  - System.Windows.Media.TileBrush.ViewboxProperty\n  - System.Windows.Media.TileBrush.ViewboxUnits\n  - System.Windows.Media.TileBrush.ViewboxUnitsProperty\n  - System.Windows.Media.TileBrush.Viewport\n  - System.Windows.Media.TileBrush.ViewportProperty\n  - System.Windows.Media.TileBrush.ViewportUnits\n  - System.Windows.Media.TileBrush.ViewportUnitsProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualBrush.#ctor\n  commentId: M:System.Windows.Media.VisualBrush.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: VisualBrush()\n  nameWithType: VisualBrush.VisualBrush()\n  fullName: VisualBrush.VisualBrush()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class.\n  syntax:\n    content: public VisualBrush ();\n    parameters: []\n  overload: System.Windows.Media.VisualBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)\n  id: '#ctor(System.Windows.Media.Visual)'\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: VisualBrush(Visual)\n  nameWithType: VisualBrush.VisualBrush(Visual)\n  fullName: VisualBrush.VisualBrush(Visual)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.VisualBrush\"></xref> class that contains the specified <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.\n  syntax:\n    content: public VisualBrush (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The contents of the new <xref href=\"System.Windows.Media.VisualBrush\"></xref>.\n  overload: System.Windows.Media.VisualBrush.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.AutoLayoutContent\n  commentId: P:System.Windows.Media.VisualBrush.AutoLayoutContent\n  id: AutoLayoutContent\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: AutoLayoutContent\n  nameWithType: VisualBrush.AutoLayoutContent\n  fullName: VisualBrush.AutoLayoutContent\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that specifies whether this <xref href=\"System.Windows.Media.VisualBrush\"></xref> will run layout its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>.\n  remarks: \"Setting this property to `true` has an effect only when this brush's <xref:System.Windows.Media.VisualBrush.Visual%2A> is a non-parented <xref:System.Windows.UIElement>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_AutoLayoutContent\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows the effects of the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property on a non-parented <xref:System.Windows.UIElement>.  \\n  \\n [!code-csharp[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentnonparenteduielementexample)]\\n [!code-vb[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentnonparenteduielementexample)]\\n [!code-xml[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentnonparenteduielementexample)]  \\n  \\n The following illustration shows the example's output:  \\n  \\n ![AutoLayoutContent with a non&#45;parented UIElement](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-nonparented.png \\\"AutoLayoutContent with a non-parented UIElement\\\")  \\n  \\n The next example shows the effects of the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property on a parented <xref:System.Windows.UIElement>.  \\n  \\n [!code-csharp[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentparenteduielementexample)]\\n [!code-vb[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentparenteduielementexample)]\\n [!code-xml[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentparenteduielementexample)]  \\n  \\n The following illustration shows the example's output:  \\n  \\n ![AutoLayoutContent with a parented UIElement](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-parented.png \\\"AutoLayoutContent with a parented UIElement\\\")\"\n  syntax:\n    content: public bool AutoLayoutContent { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if this Brush should run layout on its <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref>; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Media.VisualBrush.AutoLayoutContent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.AutoLayoutContentProperty\n  commentId: F:System.Windows.Media.VisualBrush.AutoLayoutContentProperty\n  id: AutoLayoutContentProperty\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: AutoLayoutContentProperty\n  nameWithType: VisualBrush.AutoLayoutContentProperty\n  fullName: VisualBrush.AutoLayoutContentProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.VisualBrush.AutoLayoutContent\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty AutoLayoutContentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.Clone\n  commentId: M:System.Windows.Media.VisualBrush.Clone\n  id: Clone\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: VisualBrush.Clone()\n  fullName: VisualBrush.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref>, making deep copies of this object's values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  \\n  \\n When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\"\n  syntax:\n    content: public System.Windows.Media.VisualBrush Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VisualBrush\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`\n  overload: System.Windows.Media.VisualBrush.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.CloneCurrentValue\n  commentId: M:System.Windows.Media.VisualBrush.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: VisualBrush.CloneCurrentValue()\n  fullName: VisualBrush.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.VisualBrush\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.VisualBrush CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VisualBrush\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.\n  overload: System.Windows.Media.VisualBrush.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.CreateInstanceCore\n  commentId: M:System.Windows.Media.VisualBrush.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: VisualBrush.CreateInstanceCore()\n  fullName: VisualBrush.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Media.VisualBrush.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)\n  commentId: M:System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)\n  id: GetContentBounds(System.Windows.Rect@)\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: GetContentBounds(Rect)\n  nameWithType: VisualBrush.GetContentBounds(Rect)\n  fullName: VisualBrush.GetContentBounds(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetContentBounds (out System.Windows.Rect contentBounds);\n    parameters:\n    - id: contentBounds\n      type: System.Windows.Rect\n      description: ''\n  overload: System.Windows.Media.VisualBrush.GetContentBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  commentId: M:System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: VisualBrush.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: VisualBrush.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: ''\n  overload: System.Windows.Media.VisualBrush.OnPropertyChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.Visual\n  commentId: P:System.Windows.Media.VisualBrush.Visual\n  id: Visual\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: Visual\n  nameWithType: VisualBrush.Visual\n  fullName: VisualBrush.Visual\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the brush's content.\n  remarks: \"There are two ways to specify the <xref:System.Windows.Media.VisualBrush.Visual%2A> content of a <xref:System.Windows.Media.VisualBrush>.  \\n  \\n-   Create a new <xref:System.Windows.Media.Visual> and use it to set the <xref:System.Windows.Media.VisualBrush.Visual%2A> property of the <xref:System.Windows.Media.VisualBrush>.  \\n  \\n-   Use an existing <xref:System.Windows.Media.Visual>, which creates a duplicate image of the target <xref:System.Windows.Media.Visual>. You can then use the <xref:System.Windows.Media.VisualBrush> to create interesting effects, such as reflection and magnification.  \\n  \\n <xref:System.Windows.Media.Visual> is quite high in the overall WPF class hierarchy, so a very large number of objects could possibly serve as the visual that you use for a <xref:System.Windows.Media.VisualBrush>; the entire list cannot be shown here. See <xref:System.Windows.Media.Visual>; refer to the \\\"Inheritance Hierarchy\\\" section, which will show the immediately derived classes. You can then click on the immediately derived classes and traverse the hierarchies to get a sense of the full range of possibilities. At a top level, the two most common categories of objects you might use for a <xref:System.Windows.Media.VisualBrush> are <xref:System.Windows.UIElement> or <xref:System.Windows.Media.ContainerVisual>. <xref:System.Windows.UIElement> encompasses basically any UI element that can otherwise participate in the UI for a WPF application. <xref:System.Windows.Media.ContainerVisual> contains a <xref:System.Windows.Media.DrawingGroup> that includes one or more <xref:System.Windows.Media.Drawing>-derived objects.  \\n  \\n When you define a new <xref:System.Windows.Media.VisualBrush.Visual%2A> for a <xref:System.Windows.Media.VisualBrush> and that <xref:System.Windows.Media.Visual> is a <xref:System.Windows.UIElement> (such as a panel or control), the layout system runs on the <xref:System.Windows.UIElement> and its child elements when the <xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A> property is set to `true`. However, the root <xref:System.Windows.UIElement> is essentially isolated from the rest of the system; styles, storyboards, and external layout dictated by the parent where the brush is applied cannot permeate this boundary. Therefore, you should explicitly specify the size of the root <xref:System.Windows.UIElement>, because its only parent is the <xref:System.Windows.Media.VisualBrush> and therefore it cannot automatically size itself to the area being painted. For more information about layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], see the [Layout](~/docs/framework/wpf/advanced/layout.md).  \\n  \\n Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can workaround this limitation by forcing an update of the scene on the object above the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.  \\n  \\n> [!NOTE]\\n>  A <xref:System.Windows.Media.VisualBrush> cannot be made read-only (frozen) when its <xref:System.Windows.Media.VisualBrush.Visual%2A> property is set to any value other than `null.`  \\n  \\n<a name=\\\"xamlPropertyElementUsage_Visual\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.Visual>  \\n    singleVisualRoot  \\n  </object.Visual>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlAttributeUsage_Visual\\\"></a>   \\n## XAML Attribute Usage  \\n <*object* `Visual`=\\\"{*bindingExpression*}\\\"/>  \\n  \\n \\\\- or -  \\n  \\n <*object* `Visual`=\\\"{*resourceExpression*}\\\"/>  \\n  \\n<a name=\\\"xamlValues_Visual\\\"></a>   \\n## XAML Values  \\n `singleVisualRoot`  \\n A single object element that defines a new visual element for the brush. This must be an object that derives from <xref:System.Windows.Media.Visual>. See Remarks.  \\n  \\n `bindingExpression`  \\n A  that evaluates to an existing <xref:System.Windows.Media.Visual> instance.  \\n  \\n `resourceExpression`  \\n A `StaticResource` or `DynamicResource` that evaluates to an existing <xref:System.Windows.Media.Visual> instance. See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)  \\n  \\n<a name=\\\"dependencyPropertyInfo_Visual\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.VisualBrush.VisualProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.Visual Visual { get; set; }\n    return:\n      type: System.Windows.Media.Visual\n      description: The brush's content. The default is `null`.\n  overload: System.Windows.Media.VisualBrush.Visual*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualBrush.VisualProperty\n  commentId: F:System.Windows.Media.VisualBrush.VisualProperty\n  id: VisualProperty\n  parent: System.Windows.Media.VisualBrush\n  langs:\n  - csharp\n  name: VisualProperty\n  nameWithType: VisualBrush.VisualProperty\n  fullName: VisualBrush.VisualProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.VisualBrush.Visual\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VisualProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.TileBrush\n  parent: System.Windows.Media\n  isExternal: false\n  name: TileBrush\n  nameWithType: TileBrush\n  fullName: System.Windows.Media.TileBrush\n- uid: System.Windows.Media.VisualBrush.#ctor\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: VisualBrush()\n  nameWithType: VisualBrush.VisualBrush()\n  fullName: VisualBrush.VisualBrush()\n- uid: System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: VisualBrush(Visual)\n  nameWithType: VisualBrush.VisualBrush(Visual)\n  fullName: VisualBrush.VisualBrush(Visual)\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Media.VisualBrush.AutoLayoutContent\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: AutoLayoutContent\n  nameWithType: VisualBrush.AutoLayoutContent\n  fullName: VisualBrush.AutoLayoutContent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VisualBrush.AutoLayoutContentProperty\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: AutoLayoutContentProperty\n  nameWithType: VisualBrush.AutoLayoutContentProperty\n  fullName: VisualBrush.AutoLayoutContentProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.VisualBrush.Clone\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: Clone()\n  nameWithType: VisualBrush.Clone()\n  fullName: VisualBrush.Clone()\n- uid: System.Windows.Media.VisualBrush\n  parent: System.Windows.Media\n  isExternal: false\n  name: VisualBrush\n  nameWithType: VisualBrush\n  fullName: System.Windows.Media.VisualBrush\n- uid: System.Windows.Media.VisualBrush.CloneCurrentValue\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: VisualBrush.CloneCurrentValue()\n  fullName: VisualBrush.CloneCurrentValue()\n- uid: System.Windows.Media.VisualBrush.CreateInstanceCore\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: VisualBrush.CreateInstanceCore()\n  fullName: VisualBrush.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: GetContentBounds(Rect)\n  nameWithType: VisualBrush.GetContentBounds(Rect)\n  fullName: VisualBrush.GetContentBounds(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: VisualBrush.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: VisualBrush.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Media.VisualBrush.Visual\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: Visual\n  nameWithType: VisualBrush.Visual\n  fullName: VisualBrush.Visual\n- uid: System.Windows.Media.VisualBrush.VisualProperty\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: VisualProperty\n  nameWithType: VisualBrush.VisualProperty\n  fullName: VisualBrush.VisualProperty\n- uid: System.Windows.Media.VisualBrush.#ctor*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: VisualBrush\n  nameWithType: VisualBrush.VisualBrush\n  fullName: VisualBrush.VisualBrush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.AutoLayoutContent*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: AutoLayoutContent\n  nameWithType: VisualBrush.AutoLayoutContent\n  fullName: VisualBrush.AutoLayoutContent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.Clone*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: Clone\n  nameWithType: VisualBrush.Clone\n  fullName: VisualBrush.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.CloneCurrentValue*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: VisualBrush.CloneCurrentValue\n  fullName: VisualBrush.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.CreateInstanceCore*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: VisualBrush.CreateInstanceCore\n  fullName: VisualBrush.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.GetContentBounds*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: GetContentBounds\n  nameWithType: VisualBrush.GetContentBounds\n  fullName: VisualBrush.GetContentBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.OnPropertyChanged*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: VisualBrush.OnPropertyChanged\n  fullName: VisualBrush.OnPropertyChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.Media.VisualBrush.Visual*\n  parent: System.Windows.Media.VisualBrush\n  isExternal: false\n  name: Visual\n  nameWithType: VisualBrush.Visual\n  fullName: VisualBrush.Visual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualBrush.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Windows.Media.Brush.ToString\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: ToString()\n  nameWithType: Brush.ToString()\n  fullName: Brush.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Brush.Opacity\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: Opacity\n  nameWithType: Brush.Opacity\n  fullName: Brush.Opacity\n- uid: System.Windows.Media.Brush.OpacityProperty\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: OpacityProperty\n  nameWithType: Brush.OpacityProperty\n  fullName: Brush.OpacityProperty\n- uid: System.Windows.Media.Brush.RelativeTransform\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: RelativeTransform\n  nameWithType: Brush.RelativeTransform\n  fullName: Brush.RelativeTransform\n- uid: System.Windows.Media.Brush.RelativeTransformProperty\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: RelativeTransformProperty\n  nameWithType: Brush.RelativeTransformProperty\n  fullName: Brush.RelativeTransformProperty\n- uid: System.Windows.Media.Brush.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Brush.ToString(IFormatProvider)\n  fullName: Brush.ToString(IFormatProvider)\n- uid: System.Windows.Media.Brush.Transform\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: Transform\n  nameWithType: Brush.Transform\n  fullName: Brush.Transform\n- uid: System.Windows.Media.Brush.TransformProperty\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: TransformProperty\n  nameWithType: Brush.TransformProperty\n  fullName: Brush.TransformProperty\n- uid: System.Windows.Media.Brush.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Brush\n  isExternal: false\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Brush.IFormattable.ToString(String, IFormatProvider)\n  fullName: Brush.IFormattable.ToString(String, IFormatProvider)\n- uid: System.Windows.Media.TileBrush.AlignmentX\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: AlignmentX\n  nameWithType: TileBrush.AlignmentX\n  fullName: TileBrush.AlignmentX\n- uid: System.Windows.Media.TileBrush.AlignmentXProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: AlignmentXProperty\n  nameWithType: TileBrush.AlignmentXProperty\n  fullName: TileBrush.AlignmentXProperty\n- uid: System.Windows.Media.TileBrush.AlignmentY\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: AlignmentY\n  nameWithType: TileBrush.AlignmentY\n  fullName: TileBrush.AlignmentY\n- uid: System.Windows.Media.TileBrush.AlignmentYProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: AlignmentYProperty\n  nameWithType: TileBrush.AlignmentYProperty\n  fullName: TileBrush.AlignmentYProperty\n- uid: System.Windows.Media.TileBrush.Stretch\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: Stretch\n  nameWithType: TileBrush.Stretch\n  fullName: TileBrush.Stretch\n- uid: System.Windows.Media.TileBrush.StretchProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: StretchProperty\n  nameWithType: TileBrush.StretchProperty\n  fullName: TileBrush.StretchProperty\n- uid: System.Windows.Media.TileBrush.TileMode\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: TileMode\n  nameWithType: TileBrush.TileMode\n  fullName: TileBrush.TileMode\n- uid: System.Windows.Media.TileBrush.TileModeProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: TileModeProperty\n  nameWithType: TileBrush.TileModeProperty\n  fullName: TileBrush.TileModeProperty\n- uid: System.Windows.Media.TileBrush.Viewbox\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: Viewbox\n  nameWithType: TileBrush.Viewbox\n  fullName: TileBrush.Viewbox\n- uid: System.Windows.Media.TileBrush.ViewboxProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewboxProperty\n  nameWithType: TileBrush.ViewboxProperty\n  fullName: TileBrush.ViewboxProperty\n- uid: System.Windows.Media.TileBrush.ViewboxUnits\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewboxUnits\n  nameWithType: TileBrush.ViewboxUnits\n  fullName: TileBrush.ViewboxUnits\n- uid: System.Windows.Media.TileBrush.ViewboxUnitsProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewboxUnitsProperty\n  nameWithType: TileBrush.ViewboxUnitsProperty\n  fullName: TileBrush.ViewboxUnitsProperty\n- uid: System.Windows.Media.TileBrush.Viewport\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: Viewport\n  nameWithType: TileBrush.Viewport\n  fullName: TileBrush.Viewport\n- uid: System.Windows.Media.TileBrush.ViewportProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewportProperty\n  nameWithType: TileBrush.ViewportProperty\n  fullName: TileBrush.ViewportProperty\n- uid: System.Windows.Media.TileBrush.ViewportUnits\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewportUnits\n  nameWithType: TileBrush.ViewportUnits\n  fullName: TileBrush.ViewportUnits\n- uid: System.Windows.Media.TileBrush.ViewportUnitsProperty\n  parent: System.Windows.Media.TileBrush\n  isExternal: false\n  name: ViewportUnitsProperty\n  nameWithType: TileBrush.ViewportUnitsProperty\n  fullName: TileBrush.ViewportUnitsProperty\n"}