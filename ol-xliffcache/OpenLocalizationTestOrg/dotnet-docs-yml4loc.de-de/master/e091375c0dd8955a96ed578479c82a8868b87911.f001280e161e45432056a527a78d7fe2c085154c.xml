{"nodes":[{"content":"Exposes methods to facilitate UI Automation client access to controls that support synchronized input.","nodes":[{"pos":[0,102],"content":"Exposes methods to facilitate UI Automation client access to controls that support synchronized input.","nodes":[{"content":"Exposes methods to facilitate UI Automation client access to controls that support synchronized input.","pos":[0,102]}]}],"pos":[718,821],"yaml":true},{"content":"Implement this interface on a UI Automation provider that must support the <xref:System.Windows.Automation.SynchronizedInputPattern> control pattern.","nodes":[{"pos":[0,149],"content":"Implement this interface on a UI Automation provider that must support the <xref:System.Windows.Automation.SynchronizedInputPattern> control pattern.","nodes":[{"content":"Implement this interface on a UI Automation provider that must support the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.SynchronizedInputPattern&gt;</ph> control pattern.","pos":[0,149],"source":"Implement this interface on a UI Automation provider that must support the <xref:System.Windows.Automation.SynchronizedInputPattern> control pattern."}]}],"pos":[832,982],"yaml":true,"extradata":"MT"},{"content":"Stops listening for input.","nodes":[{"pos":[0,26],"content":"Stops listening for input.","nodes":[{"content":"Stops listening for input.","pos":[0,26]}]}],"pos":[2582,2609],"yaml":true},{"content":"If the provider is currently listening for input, it reverts to normal operation.","nodes":[{"pos":[0,81],"content":"If the provider is currently listening for input, it reverts to normal operation.","nodes":[{"content":"If the provider is currently listening for input, it reverts to normal operation.","pos":[0,81]}]}],"pos":[2620,2702],"yaml":true,"extradata":"MT"},{"content":"Designates that the provider start listening for input of the specified type.","nodes":[{"pos":[0,77],"content":"Designates that the provider start listening for input of the specified type.","nodes":[{"content":"Designates that the provider start listening for input of the specified type.","pos":[0,77]}]}],"pos":[4172,4250],"yaml":true},{"content":"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.  \n  \n After receiving the input, the provider stops listening and continues normally.","nodes":[{"pos":[0,577],"content":"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.","nodes":[{"content":"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.","pos":[0,577],"nodes":[{"content":"When WPF finds matching input, it checks the route of the incoming event.","pos":[0,73]},{"content":"If the automation element that is listening for the input is not in the route, the input is discarded and the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent&gt;</ph> event is raised.","pos":[74,278],"source":" If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised."},{"content":"If the input is received by the automation element listening for that type, the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent&gt;</ph> event is raised; otherwise, the <ph id=\"ph2\">&lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent&gt;</ph> event is raised.","pos":[279,577],"source":" If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised."}]}]},{"pos":[584,663],"content":"After receiving the input, the provider stops listening and continues normally.","nodes":[{"content":"After receiving the input, the provider stops listening and continues normally.","pos":[0,79]}]}],"pos":[4261,4929],"yaml":true,"extradata":"MT"},{"content":"The type of input to listen for.","nodes":[{"pos":[0,32],"content":"The type of input to listen for.","nodes":[{"content":"The type of input to listen for.","pos":[0,32]}]}],"pos":[5155,5188],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  commentId: T:System.Windows.Automation.Provider.ISynchronizedInputProvider\n  id: ISynchronizedInputProvider\n  children:\n  - System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel\n  - System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)\n  langs:\n  - csharp\n  name: ISynchronizedInputProvider\n  nameWithType: ISynchronizedInputProvider\n  fullName: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  type: Interface\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Exposes methods to facilitate UI Automation client access to controls that support synchronized input.\n  remarks: Implement this interface on a UI Automation provider that must support the <xref:System.Windows.Automation.SynchronizedInputPattern> control pattern.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"29db1a06-02ce-4cf7-9b42-565d4fab20ee\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface ISynchronizedInputProvider\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISynchronizedInputProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel\n  commentId: M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel\n  id: Cancel\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: ISynchronizedInputProvider.Cancel()\n  fullName: ISynchronizedInputProvider.Cancel()\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Stops listening for input.\n  remarks: If the provider is currently listening for input, it reverts to normal operation.\n  syntax:\n    content: public void Cancel ();\n    parameters: []\n  overload: System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISynchronizedInputProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)\n  commentId: M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)\n  id: StartListening(System.Windows.Automation.SynchronizedInputType)\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  langs:\n  - csharp\n  name: StartListening(SynchronizedInputType)\n  nameWithType: ISynchronizedInputProvider.StartListening(SynchronizedInputType)\n  fullName: ISynchronizedInputProvider.StartListening(SynchronizedInputType)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Designates that the provider start listening for input of the specified type.\n  remarks: \"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.  \\n  \\n After receiving the input, the provider stops listening and continues normally.\"\n  syntax:\n    content: public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);\n    parameters:\n    - id: inputType\n      type: System.Windows.Automation.SynchronizedInputType\n      description: The type of input to listen for.\n  overload: System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISynchronizedInputProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\nreferences:\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  isExternal: false\n  name: Cancel()\n  nameWithType: ISynchronizedInputProvider.Cancel()\n  fullName: ISynchronizedInputProvider.Cancel()\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  isExternal: false\n  name: StartListening(SynchronizedInputType)\n  nameWithType: ISynchronizedInputProvider.StartListening(SynchronizedInputType)\n  fullName: ISynchronizedInputProvider.StartListening(SynchronizedInputType)\n- uid: System.Windows.Automation.SynchronizedInputType\n  parent: System.Windows.Automation\n  isExternal: false\n  name: SynchronizedInputType\n  nameWithType: SynchronizedInputType\n  fullName: System.Windows.Automation.SynchronizedInputType\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel*\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  isExternal: false\n  name: Cancel\n  nameWithType: ISynchronizedInputProvider.Cancel\n  fullName: ISynchronizedInputProvider.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISynchronizedInputProvider.xml\n- uid: System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening*\n  parent: System.Windows.Automation.Provider.ISynchronizedInputProvider\n  isExternal: false\n  name: StartListening\n  nameWithType: ISynchronizedInputProvider.StartListening\n  fullName: ISynchronizedInputProvider.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISynchronizedInputProvider.xml\n"}