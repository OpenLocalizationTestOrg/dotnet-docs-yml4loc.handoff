### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementClass
  commentId: T:System.Management.ManagementClass
  id: ManagementClass
  children:
  - System.Management.ManagementClass.#ctor
  - System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  - System.Management.ManagementClass.#ctor(System.String)
  - System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  - System.Management.ManagementClass.Clone
  - System.Management.ManagementClass.CreateInstance
  - System.Management.ManagementClass.Derivation
  - System.Management.ManagementClass.Derive(System.String)
  - System.Management.ManagementClass.GetInstances
  - System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetRelatedClasses
  - System.Management.ManagementClass.GetRelatedClasses(System.String)
  - System.Management.ManagementClass.GetRelationshipClasses
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetRelationshipClasses(System.String)
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  - System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  - System.Management.ManagementClass.GetSubclasses
  - System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  - System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  - System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  - System.Management.ManagementClass.Methods
  - System.Management.ManagementClass.Path
  langs:
  - csharp
  name: ManagementClass
  nameWithType: ManagementClass
  fullName: System.Management.ManagementClass
  type: Class
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Represents a Common Information Model (CIM) management class. A management class is a WMI class such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. The members of this class enable you to access WMI data using a specific WMI class path. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  syntax:
    content: 'public class ManagementClass : System.Management.ManagementObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Management.ManagementBaseObject
  - System.Management.ManagementObject
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)
  - System.Management.ManagementBaseObject.Equals(System.Object)
  - System.Management.ManagementBaseObject.GetHashCode
  - System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)
  - System.Management.ManagementBaseObject.GetPropertyValue(System.String)
  - System.Management.ManagementBaseObject.GetQualifierValue(System.String)
  - System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)
  - System.Management.ManagementBaseObject.Item(System.String)
  - System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject to System.IntPtr)
  - System.Management.ManagementBaseObject.Properties
  - System.Management.ManagementBaseObject.Qualifiers
  - System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)
  - System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)
  - System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)
  - System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Management.ManagementBaseObject.SystemProperties
  - System.Management.ManagementObject.ClassPath
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)
  - System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)
  - System.Management.ManagementObject.CopyTo(System.String)
  - System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)
  - System.Management.ManagementObject.Delete
  - System.Management.ManagementObject.Delete(System.Management.DeleteOptions)
  - System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)
  - System.Management.ManagementObject.Dispose
  - System.Management.ManagementObject.Get
  - System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetMethodParameters(System.String)
  - System.Management.ManagementObject.GetRelated
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelated(System.String)
  - System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelationships
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)
  - System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.GetRelationships(System.String)
  - System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  - System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  - System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])
  - System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  - System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])
  - System.Management.ManagementObject.Options
  - System.Management.ManagementObject.Put
  - System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)
  - System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)
  - System.Management.ManagementObject.Put(System.Management.PutOptions)
  - System.Management.ManagementObject.Scope
  - System.Management.ManagementObject.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor
  commentId: M:System.Management.ManagementClass.#ctor
  id: '#ctor'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass()
  nameWithType: ManagementClass.ManagementClass()
  fullName: ManagementClass.ManagementClass()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class. This is the default constructor.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with the <xref:System.Management.ManagementClass> default constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-csharp[wminet_ManagementClass()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass()/cs/ManagementClass().cs#1)]\n [!code-vb[wminet_ManagementClass()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass()/vb/ManagementClass().vb#1)]"
  syntax:
    content: public ManagementClass ();
    parameters: []
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  commentId: M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  id: '#ctor(System.Management.ManagementPath)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementPath)
  nameWithType: ManagementClass.ManagementClass(ManagementPath)
  fullName: ManagementClass.ManagementClass(ManagementPath)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "The `path` parameter must specify a WMI class path.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-csharp[wminet_ManagementClass(M)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(M)/cs/ManagementClass(M).cs#1)]\n [!code-vb[wminet_ManagementClass(M)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(M)/vb/ManagementClass(M).vb#1)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementPath path);
    parameters:
    - id: path
      type: System.Management.ManagementPath
      description: A <xref href="System.Management.ManagementPath"></xref> specifying the WMI class to which to bind. The parameter must specify a WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.String)
  commentId: M:System.Management.ManagementClass.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String)
  nameWithType: ManagementClass.ManagementClass(String)
  fullName: ManagementClass.ManagementClass(String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class initialized to the given path. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers for the created class.  \n  \n [!code-csharp[wminet_ManagementClass(S)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(S)/cs/ManagementClass(S).cs#1)]\n [!code-vb[wminet_ManagementClass(S)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(S)/vb/ManagementClass(S).vb#1)]"
  syntax:
    content: public ManagementClass (string path);
    parameters:
    - id: path
      type: System.String
      description: The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  commentId: M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  id: '#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementPath, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementPath, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(ManagementPath, ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class.  \n  \n [!code-csharp[wminet_ManagementClass(M_O)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(M_O)/cs/ManagementClass(M_O).cs#1)]\n [!code-vb[wminet_ManagementClass(M_O)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(M_O)/vb/ManagementClass(M_O).vb#1)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementPath path, System.Management.ObjectGetOptions options);
    parameters:
    - id: path
      type: System.Management.ManagementPath
      description: A <xref href="System.Management.ManagementPath"></xref> instance representing the WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
    - id: options
      type: System.Management.ObjectGetOptions
      description: An <xref href="System.Management.ObjectGetOptions"></xref> representing the options to use when retrieving this class.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(SerializationInfo, StreamingContext)
  nameWithType: ManagementClass.ManagementClass(SerializationInfo, StreamingContext)
  fullName: ManagementClass.ManagementClass(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class from the specified instances of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> and <xref href="System.Runtime.Serialization.StreamingContext"></xref> classes.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: protected ManagementClass (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: An instance of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> class containing the information required to serialize the new <xref href="System.Management.ManagementClass"></xref>.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: An instance of the <xref href="System.Runtime.Serialization.StreamingContext"></xref> class containing the source of the serialized stream associated with the new <xref href="System.Management.ManagementClass"></xref>.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  commentId: M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  id: '#ctor(System.String,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(String, ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class.  \n  \n [!code-csharp[wminet_ManagementClass(S_O)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(S_O)/cs/ManagementClass(S_O).cs#1)]\n [!code-vb[wminet_ManagementClass(S_O)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(S_O)/vb/ManagementClass(S_O).vb#1)]"
  syntax:
    content: public ManagementClass (string path, System.Management.ObjectGetOptions options);
    parameters:
    - id: path
      type: System.String
      description: The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
    - id: options
      type: System.Management.ObjectGetOptions
      description: An <xref href="System.Management.ObjectGetOptions"></xref> representing the options to use when retrieving the WMI class.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  commentId: M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  id: '#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class for the specified WMI class in the specified scope and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "The path can be specified as a full path (including server and namespace). However, if a scope is specified, it will override the first portion of the full path.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example is an example of how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class. You must change the scope (namespace) in the code for the example to run correctly on your computer.  \n  \n [!code-csharp[wminet_ManagementClass(M_M_O)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(M_M_O)/cs/ManagementClass(M_M_O).cs#1)]\n [!code-vb[wminet_ManagementClass(M_M_O)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(M_M_O)/vb/ManagementClass(M_M_O).vb#1)]"
  syntax:
    content: public ManagementClass (System.Management.ManagementScope scope, System.Management.ManagementPath path, System.Management.ObjectGetOptions options);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: A <xref href="System.Management.ManagementScope"></xref> that specifies the scope (server and namespace) where the WMI class resides.
    - id: path
      type: System.Management.ManagementPath
      description: A <xref href="System.Management.ManagementPath"></xref> that represents the path to the WMI class in the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
    - id: options
      type: System.Management.ObjectGetOptions
      description: An <xref href="System.Management.ObjectGetOptions"></xref> that specifies the options to use when retrieving the WMI class.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  commentId: M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  id: '#ctor(System.String,System.String,System.Management.ObjectGetOptions)'
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: ManagementClass(String, String, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String, String, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(String, String, ObjectGetOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementClass"></xref> class for the specified WMI class, in the specified scope, and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as **Win32_LogicalDisk**, which can represent a disk drive, and **Win32_Process**, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  remarks: "The path can be specified as a full path (including server and namespace). However, if a scope is specified, it will override the first portion of the full path.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor. The example lists the methods, properties, and qualifiers (including the amended qualifiers) for the created class. You must change the scope (namespace) in the code for the example to run correctly on your computer.  \n  \n [!code-csharp[wminet_ManagementClass(S_S_O)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass(S_S_O)/cs/ManagementClass(S_S_O).cs#1)]\n [!code-vb[wminet_ManagementClass(S_S_O)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass(S_S_O)/vb/ManagementClass(S_S_O).vb#1)]"
  syntax:
    content: public ManagementClass (string scope, string path, System.Management.ObjectGetOptions options);
    parameters:
    - id: scope
      type: System.String
      description: The scope in which the WMI class resides.
    - id: path
      type: System.String
      description: The path to the WMI class within the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
    - id: options
      type: System.Management.ObjectGetOptions
      description: An <xref href="System.Management.ObjectGetOptions"></xref> that specifies the options to use when retrieving the WMI class.
  overload: System.Management.ManagementClass.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.Clone
  commentId: M:System.Management.ManagementClass.Clone
  id: Clone
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Clone()
  nameWithType: ManagementClass.Clone()
  fullName: ManagementClass.Clone()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns a copy of the object.
  remarks: "Note that this does not create a copy of the WMI class; only an additional representation is created.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: The cloned object.
  overload: System.Management.ManagementClass.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.CreateInstance
  commentId: M:System.Management.ManagementClass.CreateInstance
  id: CreateInstance
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: ManagementClass.CreateInstance()
  fullName: ManagementClass.CreateInstance()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the WMI class.
  remarks: "Note that the new instance is not committed until the <xref:System.Management.ManagementObject.Put%2A>() method is called. Before committing it, the key properties must be specified.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then create a new instance of a WMI class.  \n  \n [!code-csharp[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/cs/ManagementClass_CreateInstance.cs#1)]\n [!code-vb[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/vb/ManagementClass_CreateInstance.vb#1)]"
  syntax:
    content: public System.Management.ManagementObject CreateInstance ();
    parameters: []
    return:
      type: System.Management.ManagementObject
      description: A <xref href="System.Management.ManagementObject"></xref> that represents a new instance of the WMI class.
  overload: System.Management.ManagementClass.CreateInstance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.Derivation
  commentId: P:System.Management.ManagementClass.Derivation
  id: Derivation
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Derivation
  nameWithType: ManagementClass.Derivation
  fullName: ManagementClass.Derivation
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets an array containing all WMI classes in the inheritance hierarchy from this class to the top of the hierarchy.
  remarks: "This property is read-only.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the classes in the inheritance hierarchy from the WMI class passed into the constructor, to the top of the hierarchy.  \n  \n [!code-csharp[wminet_ManagementClass_Derivation#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/cs/ManagementClass_Derivation.cs#1)]\n [!code-vb[wminet_ManagementClass_Derivation#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/vb/ManagementClass_Derivation.vb#1)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection Derivation { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: A string collection containing the names of all WMI classes in the inheritance hierarchy of this class.
  overload: System.Management.ManagementClass.Derivation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.Derive(System.String)
  commentId: M:System.Management.ManagementClass.Derive(System.String)
  id: Derive(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Derive(String)
  nameWithType: ManagementClass.Derive(String)
  fullName: ManagementClass.Derive(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Derives a new class from this class.
  remarks: "Note that the newly returned class has not been committed until the <xref:System.Management.ManagementObject.Put%2A>() method is explicitly called.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then create a derived instance of a WMI class.  \n  \n [!code-csharp[wminet_ManagementClass_Derive#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/cs/ManagementClass_Derive.cs#1)]\n [!code-vb[wminet_ManagementClass_Derive#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/vb/ManagementClass_Derive.vb#1)]"
  syntax:
    content: public System.Management.ManagementClass Derive (string newClassName);
    parameters:
    - id: newClassName
      type: System.String
      description: The name of the new class to be derived.
    return:
      type: System.Management.ManagementClass
      description: A new <xref href="System.Management.ManagementClass"></xref> that represents a new WMI class derived from the original class.
  overload: System.Management.ManagementClass.Derive*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetInstances
  commentId: M:System.Management.ManagementClass.GetInstances
  id: GetInstances
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances()
  nameWithType: ManagementClass.GetInstances()
  fullName: ManagementClass.GetInstances()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all instances of the class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class.  \n  \n [!code-csharp[wminet_ManagementClass_GetInstances()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances()/cs/ManagementClass_GetInstances().cs#1)]\n [!code-vb[wminet_ManagementClass_GetInstances()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances()/vb/ManagementClass_GetInstances().vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetInstances ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of the <xref href="System.Management.ManagementObject"></xref> objects representing the instances of the class.
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  id: GetInstances(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(EnumerationOptions)
  fullName: ManagementClass.GetInstances(EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all instances of the class using the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class and its subclasses.  \n  \n [!code-csharp[wminet_ManagementClass_GetInstances(E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances(E)/cs/ManagementClass_GetInstances(E).cs#1)]\n [!code-vb[wminet_ManagementClass_GetInstances(E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances(E)/vb/ManagementClass_GetInstances(E).vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetInstances (System.Management.EnumerationOptions options);
    parameters:
    - id: options
      type: System.Management.EnumerationOptions
      description: The additional operation options.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of the <xref href="System.Management.ManagementObject"></xref> objects representing the instances of the class, according to the specified options.
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  commentId: M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  id: GetInstances(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(ManagementOperationObserver)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver)
  fullName: ManagementClass.GetInstances(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all instances of the class, asynchronously.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the instances of a WMI class asynchronously.  \n  \n [!code-csharp[wminet_ManagementClass_GetInstances(M)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances(M)/cs/ManagementClass_GetInstances(M).cs#1)]\n [!code-vb[wminet_ManagementClass_GetInstances(M)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances(M)/vb/ManagementClass_GetInstances(M).vb#1)]"
  syntax:
    content: public void GetInstances (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  id: GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetInstances(ManagementOperationObserver, EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver, EnumerationOptions)
  fullName: ManagementClass.GetInstances(ManagementOperationObserver, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all instances of the class, asynchronously, using the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetInstances (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
    - id: options
      type: System.Management.EnumerationOptions
      description: The specified additional options for getting the instances.
  overload: System.Management.ManagementClass.GetInstances*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ManagementClass.GetObjectData(SerializationInfo, StreamingContext)
  fullName: ManagementClass.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> with the data necessary to deserialize the field represented by this instance.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object to be populated with serialization information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The location where serialized data will be stored and retrieved.
  overload: System.Management.ManagementClass.GetObjectData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class, asynchronously, using the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: Handler for progress and results of the asynchronous operation.
    - id: relatedClass
      type: System.String
      description: The class from which resulting classes have to be derived.
    - id: relationshipClass
      type: System.String
      description: The relationship type which resulting classes must have with the source class.
    - id: relationshipQualifier
      type: System.String
      description: This qualifier must be present on the relationship.
    - id: relatedQualifier
      type: System.String
      description: This qualifier must be present on the resulting classes.
    - id: relatedRole
      type: System.String
      description: The resulting classes must have this role in the relationship.
    - id: thisRole
      type: System.String
      description: The source class must have this role in the relationship.
    - id: options
      type: System.Management.EnumerationOptions
      description: The options for retrieving the resulting classes.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class based on the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example uses the <xref:System.Management.ManagementClass.GetRelatedClasses%2A> method to list the related classes to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-csharp[wminet_ManagementClass_GetRelatedClasses(7)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses(7)/cs/ManagementClass_GetRelatedClasses(7).cs#1)]\n [!code-vb[wminet_ManagementClass_GetRelatedClasses(7)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses(7)/vb/ManagementClass_GetRelatedClasses(7).vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: relatedClass
      type: System.String
      description: The class from which resulting classes have to be derived.
    - id: relationshipClass
      type: System.String
      description: The relationship type which resulting classes must have with the source class.
    - id: relationshipQualifier
      type: System.String
      description: This qualifier must be present on the relationship.
    - id: relatedQualifier
      type: System.String
      description: This qualifier must be present on the resulting classes.
    - id: relatedRole
      type: System.String
      description: The resulting classes must have this role in the relationship.
    - id: thisRole
      type: System.String
      description: The source class must have this role in the relationship.
    - id: options
      type: System.Management.EnumerationOptions
      description: The options for retrieving the resulting classes.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of classes related to this class.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  commentId: M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver, String)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class, asynchronously, given the related class name.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
    - id: relatedClass
      type: System.String
      description: The name of the related class.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  commentId: M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  id: GetRelatedClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class, asynchronously.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses
  commentId: M:System.Management.ManagementClass.GetRelatedClasses
  id: GetRelatedClasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses()
  nameWithType: ManagementClass.GetRelatedClasses()
  fullName: ManagementClass.GetRelatedClasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class.
  remarks: "The method queries the WMI schema for all possible associations that the WMI class may have with other classes, or in rare cases, to instances. For more information about related classes, see \" ASSOCIATORS OF Statement\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then list all the classes related to the WMI class passed into the constructor.  \n  \n [!code-csharp[wminet_ManagementClass_GetRelatedClasses()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses()/cs/ManagementClass_GetRelatedClasses().cs#1)]\n [!code-vb[wminet_ManagementClass_GetRelatedClasses()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses()/vb/ManagementClass_GetRelatedClasses().vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of the <xref href="System.Management.ManagementClass"></xref> or <xref href="System.Management.ManagementObject"></xref> objects that represents WMI classes or instances related to the WMI class.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String)
  commentId: M:System.Management.ManagementClass.GetRelatedClasses(System.String)
  id: GetRelatedClasses(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelatedClasses(String)
  nameWithType: ManagementClass.GetRelatedClasses(String)
  fullName: ManagementClass.GetRelatedClasses(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves classes related to the WMI class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass);
    parameters:
    - id: relatedClass
      type: System.String
      description: The class from which resulting classes have to be derived.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of classes related to this class.
  overload: System.Management.ManagementClass.GetRelatedClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses
  id: GetRelationshipClasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses()
  nameWithType: ManagementClass.GetRelationshipClasses()
  fullName: ManagementClass.GetRelationshipClasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate the class to others.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example uses the <xref:System.Management.ManagementClass.GetRelationshipClasses%2A> method to list the relationship classes to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-csharp[wminet_ManagementClass_GetRelationshipClasses()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses()/cs/ManagementClass_GetRelationshipClasses().cs#1)]\n [!code-vb[wminet_ManagementClass_GetRelationshipClasses()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses()/vb/ManagementClass_GetRelationshipClasses().vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of *association classes* that relate the class to any other class.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate the class to others, asynchronously.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String)
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses(System.String)
  id: GetRelationshipClasses(System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(String)
  nameWithType: ManagementClass.GetRelationshipClasses(String)
  fullName: ManagementClass.GetRelationshipClasses(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate the class to others, where the endpoint class is the specified class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass);
    parameters:
    - id: relationshipClass
      type: System.String
      description: The endpoint class for all relationship classes returned.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of *association classes* that relate the class to the specified class. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver, String)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate the class to the specified WMI class, asynchronously.
  remarks: "For more information about relationship classes, see \" ASSOCIATORS OF Statement\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
    - id: relationshipClass
      type: System.String
      description: The WMI class to which all returned relationships should point.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelationshipClasses(String, String, String, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate this class to others, according to specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: relationshipClass
      type: System.String
      description: All resulting relationship classes must derive from this class.
    - id: relationshipQualifier
      type: System.String
      description: Resulting relationship classes must have this qualifier.
    - id: thisRole
      type: System.String
      description: The source class must have this role in the resulting relationship classes.
    - id: options
      type: System.Management.EnumerationOptions
      description: Specifies options for retrieving the results.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of *association classes* that relate this class to others, according to the specified options. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  id: GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves relationship classes that relate the class according to the specified options, asynchronously.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The handler for progress and results of the asynchronous operation.
    - id: relationshipClass
      type: System.String
      description: The class from which all resulting relationship classes must derive.
    - id: relationshipQualifier
      type: System.String
      description: The qualifier which the resulting relationship classes must have.
    - id: thisRole
      type: System.String
      description: The role which the source class must have in the resulting relationship classes.
    - id: options
      type: System.Management.EnumerationOptions
      description: The options for retrieving the results.
  overload: System.Management.ManagementClass.GetRelationshipClasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  commentId: M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  id: GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetStronglyTypedClassCode(Boolean, Boolean)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(Boolean, Boolean)
  fullName: ManagementClass.GetStronglyTypedClassCode(Boolean, Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Generates a strongly-typed class for a given WMI class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example generates a strongly-typed class for the **Win32_LogicalDisk** class. The generated code is produced in C# or Visual Basic .NET.  \n  \n [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode(2)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode(2)/cs/ManagementClass_GetStronglyTypedClassCode(2).cs#1)]\n [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode(2)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode(2)/vb/ManagementClass_GetStronglyTypedClassCode(2).vb#1)]"
  syntax:
    content: public System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode (bool includeSystemClassInClassDef, bool systemPropertyClass);
    parameters:
    - id: includeSystemClassInClassDef
      type: System.Boolean
      description: '`true` to include the class for managing system properties; otherwise, `false`.'
    - id: systemPropertyClass
      type: System.Boolean
      description: '`true` to have the generated class manage system properties; otherwise, `false`.'
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: A <xref href="System.CodeDom.CodeTypeDeclaration"></xref> representing the declaration for the strongly-typed class.
  overload: System.Management.ManagementClass.GetStronglyTypedClassCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  commentId: M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  id: GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetStronglyTypedClassCode(CodeLanguage, String, String)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(CodeLanguage, String, String)
  fullName: ManagementClass.GetStronglyTypedClassCode(CodeLanguage, String, String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Generates a strongly-typed class for a given WMI class. This function generates code for Visual Basic, C#, JScript, J#, or C++ depending on the input parameters.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example generates a strongly-typed class for the **Win32_LogicalDisk** class. The generated code is in C# for the C# example and Visual Basic .NET for the Visual Basic .NET example.  \n  \n [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode(3)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode(3)/cs/ManagementClass_GetStronglyTypedClassCode(3).cs#1)]\n [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode(3)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode(3)/vb/ManagementClass_GetStronglyTypedClassCode(3).vb#1)]"
  syntax:
    content: public bool GetStronglyTypedClassCode (System.Management.CodeLanguage lang, string filePath, string classNamespace);
    parameters:
    - id: lang
      type: System.Management.CodeLanguage
      description: The language of the code to be generated. This code language comes from the <xref href="System.Management.CodeLanguage"></xref> enumeration.
    - id: filePath
      type: System.String
      description: The path of the file where the code is to be written.
    - id: classNamespace
      type: System.String
      description: The.NET namespace into which the class should be generated. If this is empty, the namespace will be generated from the WMI namespace.
    return:
      type: System.Boolean
      description: '`true`, if the method succeeded; otherwise, `false`.'
  overload: System.Management.ManagementClass.GetStronglyTypedClassCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetSubclasses
  commentId: M:System.Management.ManagementClass.GetSubclasses
  id: GetSubclasses
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses()
  nameWithType: ManagementClass.GetSubclasses()
  fullName: ManagementClass.GetSubclasses()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all subclasses for the class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example uses the <xref:System.Management.ManagementClass.GetSubclasses%2A> method to list the subclasses to the **CIM_LogicalDisk** class. For more information, see \"CIM_LogicalDisk\" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-csharp[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses()/cs/ManagementClass_GetSubclasses().cs#1)]\n [!code-vb[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses()/vb/ManagementClass_GetSubclasses().vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetSubclasses ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of the <xref href="System.Management.ManagementObject"></xref> objects that represent the subclasses of the WMI class.
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  id: GetSubclasses(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(EnumerationOptions)
  fullName: ManagementClass.GetSubclasses(EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves the subclasses of the class using the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then receive the subclasses of the WMI class passed into the constructor.  \n  \n [!code-csharp[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses(E)/cs/ManagementClass_GetSubclasses(E).cs#1)]\n [!code-vb[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses(E)/vb/ManagementClass_GetSubclasses(E).vb#1)]"
  syntax:
    content: public System.Management.ManagementObjectCollection GetSubclasses (System.Management.EnumerationOptions options);
    parameters:
    - id: options
      type: System.Management.EnumerationOptions
      description: The specified additional options for retrieving subclasses of the class.
    return:
      type: System.Management.ManagementObjectCollection
      description: A collection of the <xref href="System.Management.ManagementObject"></xref> objects representing the subclasses of the WMI class, according to the specified options.
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  commentId: M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  id: GetSubclasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver)
  fullName: ManagementClass.GetSubclasses(ManagementOperationObserver)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Returns the collection of all classes derived from this class, asynchronously.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetSubclasses (System.Management.ManagementOperationObserver watcher);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  commentId: M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  id: GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: GetSubclasses(ManagementOperationObserver, EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver, EnumerationOptions)
  fullName: ManagementClass.GetSubclasses(ManagementOperationObserver, EnumerationOptions)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Retrieves all classes derived from this class, asynchronously, using the specified options.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void GetSubclasses (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);
    parameters:
    - id: watcher
      type: System.Management.ManagementOperationObserver
      description: The object to handle the asynchronous operation's progress.
    - id: options
      type: System.Management.EnumerationOptions
      description: The specified additional options to use in the derived class retrieval.
  overload: System.Management.ManagementClass.GetSubclasses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.Methods
  commentId: P:System.Management.ManagementClass.Methods
  id: Methods
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Methods
  nameWithType: ManagementClass.Methods
  fullName: ManagementClass.Methods
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets a collection of <xref href="System.Management.MethodData"></xref> objects that represent the methods defined in the WMI class.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the methods in the WMI class passed into the constructor.  \n  \n [!code-csharp[wminet_ManagementClass_Methods#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/cs/ManagementClass_Methods.cs#1)]\n [!code-vb[wminet_ManagementClass_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/vb/ManagementClass_Methods.vb#1)]"
  syntax:
    content: public System.Management.MethodDataCollection Methods { get; }
    return:
      type: System.Management.MethodDataCollection
      description: A <xref href="System.Management.MethodDataCollection"></xref> representing the methods defined in the WMI class.
  overload: System.Management.ManagementClass.Methods*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementClass.Path
  commentId: P:System.Management.ManagementClass.Path
  id: Path
  parent: System.Management.ManagementClass
  langs:
  - csharp
  name: Path
  nameWithType: ManagementClass.Path
  fullName: ManagementClass.Path
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets the path of the WMI class to which the <xref href="System.Management.ManagementClass"></xref> object is bound.
  remarks: "When the property is set to a new value, the <xref:System.Management.ManagementClass> will be disconnected from any previously-bound WMI class. Reconnect to the new WMI class path.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how to initialize a <xref:System.Management.ManagementClass> variable with a <xref:System.Management.ManagementClass> constructor and then get all the methods in the WMI class passed into the constructor.  \n  \n [!code-csharp[wminet_ManagementClass_Path#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/cs/ManagementClass_Path.cs#1)]\n [!code-vb[wminet_ManagementClass_Path#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/vb/ManagementClass_Path.vb#1)]"
  syntax:
    content: public override System.Management.ManagementPath Path { get; set; }
    return:
      type: System.Management.ManagementPath
      description: The path of the object's class.
  overload: System.Management.ManagementClass.Path*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
references:
- uid: System.Management.ManagementObject
  parent: System.Management
  isExternal: false
  name: ManagementObject
  nameWithType: ManagementObject
  fullName: System.Management.ManagementObject
- uid: System.Management.ManagementClass.#ctor
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass()
  nameWithType: ManagementClass.ManagementClass()
  fullName: ManagementClass.ManagementClass()
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementPath)
  nameWithType: ManagementClass.ManagementClass(ManagementPath)
  fullName: ManagementClass.ManagementClass(ManagementPath)
- uid: System.Management.ManagementPath
  parent: System.Management
  isExternal: false
  name: ManagementPath
  nameWithType: ManagementPath
  fullName: System.Management.ManagementPath
- uid: System.Management.ManagementClass.#ctor(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String)
  nameWithType: ManagementClass.ManagementClass(String)
  fullName: ManagementClass.ManagementClass(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementPath, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementPath, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(ManagementPath, ObjectGetOptions)
- uid: System.Management.ObjectGetOptions
  parent: System.Management
  isExternal: false
  name: ObjectGetOptions
  nameWithType: ObjectGetOptions
  fullName: System.Management.ObjectGetOptions
- uid: System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(SerializationInfo, StreamingContext)
  nameWithType: ManagementClass.ManagementClass(SerializationInfo, StreamingContext)
  fullName: ManagementClass.ManagementClass(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(String, ObjectGetOptions)
- uid: System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(ManagementScope, ManagementPath, ObjectGetOptions)
- uid: System.Management.ManagementScope
  parent: System.Management
  isExternal: false
  name: ManagementScope
  nameWithType: ManagementScope
  fullName: System.Management.ManagementScope
- uid: System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass(String, String, ObjectGetOptions)
  nameWithType: ManagementClass.ManagementClass(String, String, ObjectGetOptions)
  fullName: ManagementClass.ManagementClass(String, String, ObjectGetOptions)
- uid: System.Management.ManagementClass.Clone
  parent: System.Management.ManagementClass
  isExternal: false
  name: Clone()
  nameWithType: ManagementClass.Clone()
  fullName: ManagementClass.Clone()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Management.ManagementClass.CreateInstance
  parent: System.Management.ManagementClass
  isExternal: false
  name: CreateInstance()
  nameWithType: ManagementClass.CreateInstance()
  fullName: ManagementClass.CreateInstance()
- uid: System.Management.ManagementClass.Derivation
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derivation
  nameWithType: ManagementClass.Derivation
  fullName: ManagementClass.Derivation
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.Management.ManagementClass.Derive(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derive(String)
  nameWithType: ManagementClass.Derive(String)
  fullName: ManagementClass.Derive(String)
- uid: System.Management.ManagementClass
  parent: System.Management
  isExternal: false
  name: ManagementClass
  nameWithType: ManagementClass
  fullName: System.Management.ManagementClass
- uid: System.Management.ManagementClass.GetInstances
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances()
  nameWithType: ManagementClass.GetInstances()
  fullName: ManagementClass.GetInstances()
- uid: System.Management.ManagementObjectCollection
  parent: System.Management
  isExternal: false
  name: ManagementObjectCollection
  nameWithType: ManagementObjectCollection
  fullName: System.Management.ManagementObjectCollection
- uid: System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(EnumerationOptions)
  fullName: ManagementClass.GetInstances(EnumerationOptions)
- uid: System.Management.EnumerationOptions
  parent: System.Management
  isExternal: false
  name: EnumerationOptions
  nameWithType: EnumerationOptions
  fullName: System.Management.EnumerationOptions
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(ManagementOperationObserver)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver)
  fullName: ManagementClass.GetInstances(ManagementOperationObserver)
- uid: System.Management.ManagementOperationObserver
  parent: System.Management
  isExternal: false
  name: ManagementOperationObserver
  nameWithType: ManagementOperationObserver
  fullName: System.Management.ManagementOperationObserver
- uid: System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances(ManagementOperationObserver, EnumerationOptions)
  nameWithType: ManagementClass.GetInstances(ManagementOperationObserver, EnumerationOptions)
  fullName: ManagementClass.GetInstances(ManagementOperationObserver, EnumerationOptions)
- uid: System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ManagementClass.GetObjectData(SerializationInfo, StreamingContext)
  fullName: ManagementClass.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String, String, String, String, String, String, EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelatedClasses(String, String, String, String, String, String, EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver, String)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver, String)
- uid: System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
  fullName: ManagementClass.GetRelatedClasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetRelatedClasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses()
  nameWithType: ManagementClass.GetRelatedClasses()
  fullName: ManagementClass.GetRelatedClasses()
- uid: System.Management.ManagementClass.GetRelatedClasses(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses(String)
  nameWithType: ManagementClass.GetRelatedClasses(String)
  fullName: ManagementClass.GetRelatedClasses(String)
- uid: System.Management.ManagementClass.GetRelationshipClasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses()
  nameWithType: ManagementClass.GetRelationshipClasses()
  fullName: ManagementClass.GetRelationshipClasses()
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(String)
  nameWithType: ManagementClass.GetRelationshipClasses(String)
  fullName: ManagementClass.GetRelationshipClasses(String)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver, String)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelationshipClasses(String, String, String, EnumerationOptions)
- uid: System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
  nameWithType: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
  fullName: ManagementClass.GetRelationshipClasses(ManagementOperationObserver, String, String, String, EnumerationOptions)
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode(Boolean, Boolean)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(Boolean, Boolean)
  fullName: ManagementClass.GetStronglyTypedClassCode(Boolean, Boolean)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode(CodeLanguage, String, String)
  nameWithType: ManagementClass.GetStronglyTypedClassCode(CodeLanguage, String, String)
  fullName: ManagementClass.GetStronglyTypedClassCode(CodeLanguage, String, String)
- uid: System.Management.CodeLanguage
  parent: System.Management
  isExternal: false
  name: CodeLanguage
  nameWithType: CodeLanguage
  fullName: System.Management.CodeLanguage
- uid: System.Management.ManagementClass.GetSubclasses
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses()
  nameWithType: ManagementClass.GetSubclasses()
  fullName: ManagementClass.GetSubclasses()
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(EnumerationOptions)
  fullName: ManagementClass.GetSubclasses(EnumerationOptions)
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(ManagementOperationObserver)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver)
  fullName: ManagementClass.GetSubclasses(ManagementOperationObserver)
- uid: System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses(ManagementOperationObserver, EnumerationOptions)
  nameWithType: ManagementClass.GetSubclasses(ManagementOperationObserver, EnumerationOptions)
  fullName: ManagementClass.GetSubclasses(ManagementOperationObserver, EnumerationOptions)
- uid: System.Management.ManagementClass.Methods
  parent: System.Management.ManagementClass
  isExternal: false
  name: Methods
  nameWithType: ManagementClass.Methods
  fullName: ManagementClass.Methods
- uid: System.Management.MethodDataCollection
  parent: System.Management
  isExternal: false
  name: MethodDataCollection
  nameWithType: MethodDataCollection
  fullName: System.Management.MethodDataCollection
- uid: System.Management.ManagementClass.Path
  parent: System.Management.ManagementClass
  isExternal: false
  name: Path
  nameWithType: ManagementClass.Path
  fullName: ManagementClass.Path
- uid: System.Management.ManagementClass.#ctor*
  parent: System.Management.ManagementClass
  isExternal: false
  name: ManagementClass
  nameWithType: ManagementClass.ManagementClass
  fullName: ManagementClass.ManagementClass
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetInstances*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetInstances
  nameWithType: ManagementClass.GetInstances
  fullName: ManagementClass.GetInstances
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetRelatedClasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelatedClasses
  nameWithType: ManagementClass.GetRelatedClasses
  fullName: ManagementClass.GetRelatedClasses
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetRelationshipClasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetRelationshipClasses
  nameWithType: ManagementClass.GetRelationshipClasses
  fullName: ManagementClass.GetRelationshipClasses
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetStronglyTypedClassCode*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetStronglyTypedClassCode
  nameWithType: ManagementClass.GetStronglyTypedClassCode
  fullName: ManagementClass.GetStronglyTypedClassCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetSubclasses*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetSubclasses
  nameWithType: ManagementClass.GetSubclasses
  fullName: ManagementClass.GetSubclasses
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.Clone*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Clone
  nameWithType: ManagementClass.Clone
  fullName: ManagementClass.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.CreateInstance*
  parent: System.Management.ManagementClass
  isExternal: false
  name: CreateInstance
  nameWithType: ManagementClass.CreateInstance
  fullName: ManagementClass.CreateInstance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.Derivation*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derivation
  nameWithType: ManagementClass.Derivation
  fullName: ManagementClass.Derivation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.Derive*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Derive
  nameWithType: ManagementClass.Derive
  fullName: ManagementClass.Derive
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.GetObjectData*
  parent: System.Management.ManagementClass
  isExternal: false
  name: GetObjectData
  nameWithType: ManagementClass.GetObjectData
  fullName: ManagementClass.GetObjectData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.Methods*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Methods
  nameWithType: ManagementClass.Methods
  fullName: ManagementClass.Methods
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementClass.Path*
  parent: System.Management.ManagementClass
  isExternal: false
  name: Path
  nameWithType: ManagementClass.Path
  fullName: ManagementClass.Path
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementClass.xml
- uid: System.Management.ManagementBaseObject.Equals(System.Object)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: Equals(Object)
  nameWithType: ManagementBaseObject.Equals(Object)
  fullName: ManagementBaseObject.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Management.ManagementBaseObject.GetHashCode
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: GetHashCode()
  nameWithType: ManagementBaseObject.GetHashCode()
  fullName: ManagementBaseObject.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Management.ManagementObject.ToString
  parent: System.Management.ManagementObject
  isExternal: false
  name: ToString()
  nameWithType: ManagementObject.ToString()
  fullName: ManagementObject.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.Management.ManagementObject.Dispose
  parent: System.Management.ManagementObject
  isExternal: false
  name: Dispose()
  nameWithType: ManagementObject.Dispose()
  fullName: ManagementObject.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
- uid: System.Management.ManagementObject.ClassPath
  parent: System.Management.ManagementObject
  isExternal: false
  name: ClassPath
  nameWithType: ManagementObject.ClassPath
  fullName: ManagementObject.ClassPath
- uid: System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: CompareTo(ManagementBaseObject, ComparisonSettings)
  nameWithType: ManagementBaseObject.CompareTo(ManagementBaseObject, ComparisonSettings)
  fullName: ManagementBaseObject.CompareTo(ManagementBaseObject, ComparisonSettings)
- uid: System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: GetPropertyQualifierValue(String, String)
  nameWithType: ManagementBaseObject.GetPropertyQualifierValue(String, String)
  fullName: ManagementBaseObject.GetPropertyQualifierValue(String, String)
- uid: System.Management.ManagementBaseObject.GetPropertyValue(System.String)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ManagementBaseObject.GetPropertyValue(String)
  fullName: ManagementBaseObject.GetPropertyValue(String)
- uid: System.Management.ManagementBaseObject.GetQualifierValue(System.String)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: GetQualifierValue(String)
  nameWithType: ManagementBaseObject.GetQualifierValue(String)
  fullName: ManagementBaseObject.GetQualifierValue(String)
- uid: System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: GetText(TextFormat)
  nameWithType: ManagementBaseObject.GetText(TextFormat)
  fullName: ManagementBaseObject.GetText(TextFormat)
- uid: System.Management.ManagementBaseObject.Item(System.String)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: Item(String)
  nameWithType: ManagementBaseObject.Item(String)
  fullName: ManagementBaseObject.Item(String)
- uid: System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject to System.IntPtr)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: op_Explicit(ManagementBaseObject to IntPtr)
  nameWithType: ManagementBaseObject.op_Explicit(ManagementBaseObject to IntPtr)
  fullName: ManagementBaseObject.op_Explicit(ManagementBaseObject to IntPtr)
- uid: System.Management.ManagementBaseObject.Properties
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: Properties
  nameWithType: ManagementBaseObject.Properties
  fullName: ManagementBaseObject.Properties
- uid: System.Management.ManagementBaseObject.Qualifiers
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: Qualifiers
  nameWithType: ManagementBaseObject.Qualifiers
  fullName: ManagementBaseObject.Qualifiers
- uid: System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: SetPropertyQualifierValue(String, String, Object)
  nameWithType: ManagementBaseObject.SetPropertyQualifierValue(String, String, Object)
  fullName: ManagementBaseObject.SetPropertyQualifierValue(String, String, Object)
- uid: System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: SetPropertyValue(String, Object)
  nameWithType: ManagementBaseObject.SetPropertyValue(String, Object)
  fullName: ManagementBaseObject.SetPropertyValue(String, Object)
- uid: System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: SetQualifierValue(String, Object)
  nameWithType: ManagementBaseObject.SetQualifierValue(String, Object)
  fullName: ManagementBaseObject.SetQualifierValue(String, Object)
- uid: System.Management.ManagementBaseObject.SystemProperties
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: SystemProperties
  nameWithType: ManagementBaseObject.SystemProperties
  fullName: ManagementBaseObject.SystemProperties
- uid: System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Management.ManagementBaseObject
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ManagementBaseObject.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: ManagementBaseObject.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementOperationObserver, String, PutOptions)
  nameWithType: ManagementObject.CopyTo(ManagementOperationObserver, String, PutOptions)
  fullName: ManagementObject.CopyTo(ManagementOperationObserver, String, PutOptions)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementOperationObserver, ManagementPath, PutOptions)
  nameWithType: ManagementObject.CopyTo(ManagementOperationObserver, ManagementPath, PutOptions)
  fullName: ManagementObject.CopyTo(ManagementOperationObserver, ManagementPath, PutOptions)
- uid: System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(String, PutOptions)
  nameWithType: ManagementObject.CopyTo(String, PutOptions)
  fullName: ManagementObject.CopyTo(String, PutOptions)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementPath, PutOptions)
  nameWithType: ManagementObject.CopyTo(ManagementPath, PutOptions)
  fullName: ManagementObject.CopyTo(ManagementPath, PutOptions)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementOperationObserver, ManagementPath)
  nameWithType: ManagementObject.CopyTo(ManagementOperationObserver, ManagementPath)
  fullName: ManagementObject.CopyTo(ManagementOperationObserver, ManagementPath)
- uid: System.Management.ManagementObject.CopyTo(System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(String)
  nameWithType: ManagementObject.CopyTo(String)
  fullName: ManagementObject.CopyTo(String)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementPath)
  nameWithType: ManagementObject.CopyTo(ManagementPath)
  fullName: ManagementObject.CopyTo(ManagementPath)
- uid: System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: CopyTo(ManagementOperationObserver, String)
  nameWithType: ManagementObject.CopyTo(ManagementOperationObserver, String)
  fullName: ManagementObject.CopyTo(ManagementOperationObserver, String)
- uid: System.Management.ManagementObject.Delete
  parent: System.Management.ManagementObject
  isExternal: false
  name: Delete()
  nameWithType: ManagementObject.Delete()
  fullName: ManagementObject.Delete()
- uid: System.Management.ManagementObject.Delete(System.Management.DeleteOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Delete(DeleteOptions)
  nameWithType: ManagementObject.Delete(DeleteOptions)
  fullName: ManagementObject.Delete(DeleteOptions)
- uid: System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Delete(ManagementOperationObserver)
  nameWithType: ManagementObject.Delete(ManagementOperationObserver)
  fullName: ManagementObject.Delete(ManagementOperationObserver)
- uid: System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Delete(ManagementOperationObserver, DeleteOptions)
  nameWithType: ManagementObject.Delete(ManagementOperationObserver, DeleteOptions)
  fullName: ManagementObject.Delete(ManagementOperationObserver, DeleteOptions)
- uid: System.Management.ManagementObject.Get
  parent: System.Management.ManagementObject
  isExternal: false
  name: Get()
  nameWithType: ManagementObject.Get()
  fullName: ManagementObject.Get()
- uid: System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Get(ManagementOperationObserver)
  nameWithType: ManagementObject.Get(ManagementOperationObserver)
  fullName: ManagementObject.Get(ManagementOperationObserver)
- uid: System.Management.ManagementObject.GetMethodParameters(System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetMethodParameters(String)
  nameWithType: ManagementObject.GetMethodParameters(String)
  fullName: ManagementObject.GetMethodParameters(String)
- uid: System.Management.ManagementObject.GetRelated
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated()
  nameWithType: ManagementObject.GetRelated()
  fullName: ManagementObject.GetRelated()
- uid: System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated(ManagementOperationObserver)
  nameWithType: ManagementObject.GetRelated(ManagementOperationObserver)
  fullName: ManagementObject.GetRelated(ManagementOperationObserver)
- uid: System.Management.ManagementObject.GetRelated(System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated(String)
  nameWithType: ManagementObject.GetRelated(String)
  fullName: ManagementObject.GetRelated(String)
- uid: System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated(ManagementOperationObserver, String)
  nameWithType: ManagementObject.GetRelated(ManagementOperationObserver, String)
  fullName: ManagementObject.GetRelated(ManagementOperationObserver, String)
- uid: System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated(String, String, String, String, String, String, Boolean, EnumerationOptions)
  nameWithType: ManagementObject.GetRelated(String, String, String, String, String, String, Boolean, EnumerationOptions)
  fullName: ManagementObject.GetRelated(String, String, String, String, String, String, Boolean, EnumerationOptions)
- uid: System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelated(ManagementOperationObserver, String, String, String, String, String, String, Boolean, EnumerationOptions)
  nameWithType: ManagementObject.GetRelated(ManagementOperationObserver, String, String, String, String, String, String, Boolean, EnumerationOptions)
  fullName: ManagementObject.GetRelated(ManagementOperationObserver, String, String, String, String, String, String, Boolean, EnumerationOptions)
- uid: System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships(String, String, String, Boolean, EnumerationOptions)
  nameWithType: ManagementObject.GetRelationships(String, String, String, Boolean, EnumerationOptions)
  fullName: ManagementObject.GetRelationships(String, String, String, Boolean, EnumerationOptions)
- uid: System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships(ManagementOperationObserver, String)
  nameWithType: ManagementObject.GetRelationships(ManagementOperationObserver, String)
  fullName: ManagementObject.GetRelationships(ManagementOperationObserver, String)
- uid: System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships(ManagementOperationObserver, String, String, String, Boolean, EnumerationOptions)
  nameWithType: ManagementObject.GetRelationships(ManagementOperationObserver, String, String, String, Boolean, EnumerationOptions)
  fullName: ManagementObject.GetRelationships(ManagementOperationObserver, String, String, String, Boolean, EnumerationOptions)
- uid: System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships(ManagementOperationObserver)
  nameWithType: ManagementObject.GetRelationships(ManagementOperationObserver)
  fullName: ManagementObject.GetRelationships(ManagementOperationObserver)
- uid: System.Management.ManagementObject.GetRelationships
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships()
  nameWithType: ManagementObject.GetRelationships()
  fullName: ManagementObject.GetRelationships()
- uid: System.Management.ManagementObject.GetRelationships(System.String)
  parent: System.Management.ManagementObject
  isExternal: false
  name: GetRelationships(String)
  nameWithType: ManagementObject.GetRelationships(String)
  fullName: ManagementObject.GetRelationships(String)
- uid: System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])
  parent: System.Management.ManagementObject
  isExternal: false
  name: InvokeMethod(String, Object[])
  nameWithType: ManagementObject.InvokeMethod(String, Object[])
  fullName: ManagementObject.InvokeMethod(String, Object[])
- uid: System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])
  parent: System.Management.ManagementObject
  isExternal: false
  name: InvokeMethod(ManagementOperationObserver, String, Object[])
  nameWithType: ManagementObject.InvokeMethod(ManagementOperationObserver, String, Object[])
  fullName: ManagementObject.InvokeMethod(ManagementOperationObserver, String, Object[])
- uid: System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: InvokeMethod(String, ManagementBaseObject, InvokeMethodOptions)
  nameWithType: ManagementObject.InvokeMethod(String, ManagementBaseObject, InvokeMethodOptions)
  fullName: ManagementObject.InvokeMethod(String, ManagementBaseObject, InvokeMethodOptions)
- uid: System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: InvokeMethod(ManagementOperationObserver, String, ManagementBaseObject, InvokeMethodOptions)
  nameWithType: ManagementObject.InvokeMethod(ManagementOperationObserver, String, ManagementBaseObject, InvokeMethodOptions)
  fullName: ManagementObject.InvokeMethod(ManagementOperationObserver, String, ManagementBaseObject, InvokeMethodOptions)
- uid: System.Management.ManagementObject.Options
  parent: System.Management.ManagementObject
  isExternal: false
  name: Options
  nameWithType: ManagementObject.Options
  fullName: ManagementObject.Options
- uid: System.Management.ManagementObject.Put
  parent: System.Management.ManagementObject
  isExternal: false
  name: Put()
  nameWithType: ManagementObject.Put()
  fullName: ManagementObject.Put()
- uid: System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Put(ManagementOperationObserver)
  nameWithType: ManagementObject.Put(ManagementOperationObserver)
  fullName: ManagementObject.Put(ManagementOperationObserver)
- uid: System.Management.ManagementObject.Put(System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Put(PutOptions)
  nameWithType: ManagementObject.Put(PutOptions)
  fullName: ManagementObject.Put(PutOptions)
- uid: System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)
  parent: System.Management.ManagementObject
  isExternal: false
  name: Put(ManagementOperationObserver, PutOptions)
  nameWithType: ManagementObject.Put(ManagementOperationObserver, PutOptions)
  fullName: ManagementObject.Put(ManagementOperationObserver, PutOptions)
- uid: System.Management.ManagementObject.Scope
  parent: System.Management.ManagementObject
  isExternal: false
  name: Scope
  nameWithType: ManagementObject.Scope
  fullName: ManagementObject.Scope
