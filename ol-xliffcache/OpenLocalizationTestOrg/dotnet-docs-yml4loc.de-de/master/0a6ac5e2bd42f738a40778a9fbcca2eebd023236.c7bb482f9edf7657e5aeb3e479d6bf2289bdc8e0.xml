{"nodes":[{"content":"Provides the default output methods and behavior for tracing.","nodes":[{"pos":[0,61],"content":"Provides the default output methods and behavior for tracing.","nodes":[{"content":"Provides the default output methods and behavior for tracing.","pos":[0,61]}]}],"pos":[890,952],"yaml":true},{"content":"An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections. Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.  \n  \n By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=fullName> method. For information about the `OutputDebugString` function, see the Platform SDK or MSDN.  \n  \n The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.  \n  \n> [!NOTE]\n>  The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \n  \n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \n  \n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \n  \n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:  \n  \n```  \n<configuration>  \n<system.diagnostics>  \n  <trace autoflush=\"false\" indentsize=\"4\">  \n    <listeners>  \n      <remove name=\"Default\" />  \n      <add name=\"myListener\"  type=\"System.Diagnostics.TextWriterTraceListener\"    initializeData=\"c:\\myListener.log\" />  \n    </listeners>  \n  </trace>  \n</system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,383],"content":"An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections. Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.","nodes":[{"content":"An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections. Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.","pos":[0,383],"nodes":[{"content":"An instance of this class is automatically added to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collections.","pos":[0,212],"source":"An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections."},{"content":"Explicitly adding a second <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.","pos":[213,383],"source":" Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts."}]}]},{"pos":[390,764],"content":"By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=fullName> method. For information about the `OutputDebugString` function, see the Platform SDK or MSDN.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods emit the message to the Win32 <ph id=\"ph3\">`OutputDebugString`</ph> function and to the <ph id=\"ph4\">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,288],"source":"By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=fullName> method."},{"content":"For information about the <ph id=\"ph1\">`OutputDebugString`</ph> function, see the Platform SDK or MSDN.","pos":[289,374],"source":" For information about the `OutputDebugString` function, see the Platform SDK or MSDN."}]},{"pos":[771,1023],"content":"The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <ph id=\"ph2\">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.","pos":[0,252],"source":"The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>."}]},{"pos":[1031,1924],"content":"[!NOTE]\n The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,891],"nodes":[{"content":"The display of the message box for <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method calls depends on the presence of the <ph id=\"ph3\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,213],"source":" The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[214,372],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&lt;</ph>clear&gt; element<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, by the <bpt id=\"p2\">[</bpt><ph id=\"ph3\">\\&lt;</ph>remove&gt; element<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph4\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph5\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph6\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[373,883],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[1931,2133],"content":"You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","nodes":[{"content":"You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[0,202],"nodes":[{"content":"You must enable tracing or debugging to use a trace listener.","pos":[0,61]},{"content":"The following syntax is compiler specific.","pos":[62,104]},{"content":"If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[105,202]}]}]},{"pos":[2143,2374],"content":"To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.","nodes":[{"content":"To enable debugging in C#, add the <ph id=\"ph1\">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define DEBUG`</ph> to the top of your file.","pos":[0,155],"source":"To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:DEBUG=True`</ph> flag to the compiler command line.","pos":[156,231],"source":" In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line."}]},{"pos":[2384,2613],"content":"To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.","nodes":[{"content":"To enable tracing in C#, add the <ph id=\"ph1\">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define TRACE`</ph> to the top of your file.","pos":[0,153],"source":"To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:TRACE=True`</ph> flag to the compiler command line.","pos":[154,229],"source":" In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line."}]},{"pos":[2620,2959],"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:","nodes":[{"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:","pos":[0,339],"nodes":[{"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application.","pos":[0,102]},{"content":"Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.","pos":[103,262]},{"content":"The configuration file should be formatted similar to the following example:","pos":[263,339]}]}]}],"pos":[963,4319],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DefaultTraceListener\"></xref> class with \"Default\" as its <xref href=\"System.Diagnostics.TraceListener.Name\"></xref> property value.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DefaultTraceListener\"&gt;&lt;/xref&gt;</ph> class with \"Default\" as its <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener.Name\"&gt;&lt;/xref&gt;</ph> property value.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DefaultTraceListener\"></xref> class with \"Default\" as its <xref href=\"System.Diagnostics.TraceListener.Name\"></xref> property value."}],"pos":[10229,10427],"yaml":true},{"content":"Gets or sets a value indicating whether the application is running in user-interface mode.","nodes":[{"pos":[0,90],"content":"Gets or sets a value indicating whether the application is running in user-interface mode.","nodes":[{"content":"Gets or sets a value indicating whether the application is running in user-interface mode.","pos":[0,90]}]}],"pos":[12609,12700],"yaml":true},{"content":"`true` if user-interface mode is enabled; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if user-interface mode is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if user-interface mode is enabled; otherwise, `false`."}],"pos":[13675,13739],"yaml":true},{"content":"Emits or displays a message and a stack trace for an assertion that always fails.","nodes":[{"pos":[0,81],"content":"Emits or displays a message and a stack trace for an assertion that always fails.","nodes":[{"content":"Emits or displays a message and a stack trace for an assertion that always fails.","pos":[0,81]}]}],"pos":[15087,15169],"yaml":true},{"content":"By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.","nodes":[{"pos":[0,207],"content":"By default, this method sends the <ph id=\"ph1\">`message`</ph> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.","source":"By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance."}],"pos":[15180,15388],"yaml":true,"extradata":"MT"},{"content":"The message to emit or display.","nodes":[{"pos":[0,31],"content":"The message to emit or display.","nodes":[{"content":"The message to emit or display.","pos":[0,31]}]}],"pos":[16172,16204],"yaml":true},{"content":"Emits or displays detailed messages and a stack trace for an assertion that always fails.","nodes":[{"pos":[0,89],"content":"Emits or displays detailed messages and a stack trace for an assertion that always fails.","nodes":[{"content":"Emits or displays detailed messages and a stack trace for an assertion that always fails.","pos":[0,89]}]}],"pos":[17631,17721],"yaml":true},{"content":"By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.","nodes":[{"pos":[0,239],"content":"By default, this method sends the <ph id=\"ph1\">`message`</ph> parameter, the <ph id=\"ph2\">`detailMessage`</ph> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id=\"ph3\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.","source":"By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance."}],"pos":[17732,17972],"yaml":true,"extradata":"MT"},{"content":"The message to emit or display.","nodes":[{"pos":[0,31],"content":"The message to emit or display.","nodes":[{"content":"The message to emit or display.","pos":[0,31]}]}],"pos":[18803,18835],"yaml":true},{"content":"The detailed message to emit or display.","nodes":[{"pos":[0,40],"content":"The detailed message to emit or display.","nodes":[{"content":"The detailed message to emit or display.","pos":[0,40]}]}],"pos":[18904,18945],"yaml":true},{"content":"Gets or sets the name of a log file to write trace or debug messages to.","nodes":[{"pos":[0,72],"content":"Gets or sets the name of a log file to write trace or debug messages to.","nodes":[{"content":"Gets or sets the name of a log file to write trace or debug messages to.","pos":[0,72]}]}],"pos":[20281,20354],"yaml":true},{"content":"The name of a log file to write trace or debug messages to.","nodes":[{"pos":[0,59],"content":"The name of a log file to write trace or debug messages to.","nodes":[{"content":"The name of a log file to write trace or debug messages to.","pos":[0,59]}]}],"pos":[21207,21267],"yaml":true},{"content":"Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method.","nodes":[{"pos":[0,167],"content":"Writes the output to the <ph id=\"ph1\">`OutputDebugString`</ph> function and to the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method."}],"pos":[22617,22785],"yaml":true},{"content":"For information about the Win32 `OutputDebugString` debugging function, see \"OutputDebugString\" in the Platform SDK or MSDN.","nodes":[{"pos":[0,124],"content":"For information about the Win32 <ph id=\"ph1\">`OutputDebugString`</ph> debugging function, see \"OutputDebugString\" in the Platform SDK or MSDN.","source":"For information about the Win32 `OutputDebugString` debugging function, see \"OutputDebugString\" in the Platform SDK or MSDN."}],"pos":[22796,22921],"yaml":true,"extradata":"MT"},{"content":"The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>.","nodes":[{"pos":[0,143],"content":"The message to write to <ph id=\"ph1\">`OutputDebugString`</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>."}],"pos":[23735,23879],"yaml":true},{"content":"Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method, followed by a carriage return and line feed (\\r\\n).","nodes":[{"pos":[0,219],"content":"Writes the output to the <ph id=\"ph1\">`OutputDebugString`</ph> function and to the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"&gt;&lt;/xref&gt;</ph> method, followed by a carriage return and line feed (\\r\\n).","source":"Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method, followed by a carriage return and line feed (\\r\\n)."}],"pos":[25271,25491],"yaml":true},{"content":"The default line terminator is a carriage return followed by a line feed (\\r\\n).  \n  \n For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.  \n  \n This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.","nodes":[{"pos":[0,80],"content":"The default line terminator is a carriage return followed by a line feed (\\r\\n).","nodes":[{"content":"The default line terminator is a carriage return followed by a line feed (\\r\\n).","pos":[0,80]}]},{"pos":[87,188],"content":"For information about the Win32 <ph id=\"ph1\">`OutputDebugString`</ph> debugging function, see the Platform SDK or MSDN.","source":"For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN."},{"pos":[195,289],"content":"This method sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","source":"This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`."}],"pos":[25502,25800],"yaml":true,"extradata":"MT"},{"content":"The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>.","nodes":[{"pos":[0,143],"content":"The message to write to <ph id=\"ph1\">`OutputDebugString`</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>."}],"pos":[26621,26765],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DefaultTraceListener\n  commentId: T:System.Diagnostics.DefaultTraceListener\n  id: DefaultTraceListener\n  children:\n  - System.Diagnostics.DefaultTraceListener.#ctor\n  - System.Diagnostics.DefaultTraceListener.AssertUiEnabled\n  - System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  - System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.DefaultTraceListener.LogFileName\n  - System.Diagnostics.DefaultTraceListener.Write(System.String)\n  - System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  langs:\n  - csharp\n  name: DefaultTraceListener\n  nameWithType: DefaultTraceListener\n  fullName: System.Diagnostics.DefaultTraceListener\n  type: Class\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Provides the default output methods and behavior for tracing.\n  remarks: \"An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections. Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.  \\n  \\n By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=fullName> method. For information about the `OutputDebugString` function, see the Platform SDK or MSDN.  \\n  \\n The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.  \\n  \\n> [!NOTE]\\n>  The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\\\\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \\n  \\n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \\n  \\n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \\n  \\n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:  \\n  \\n```  \\n<configuration>  \\n<system.diagnostics>  \\n  <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n    <listeners>  \\n      <remove name=\\\"Default\\\" />  \\n      <add name=\\\"myListener\\\"  type=\\\"System.Diagnostics.TextWriterTraceListener\\\"    initializeData=\\\"c:\\\\myListener.log\\\" />  \\n    </listeners>  \\n  </trace>  \\n</system.diagnostics>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following code example calculates binomial coefficients, which are values used in probability and statistics. This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors. It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.  \\n  \\n If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message. If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console. When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.  \\n  \\n The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>. To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]\"\n  syntax:\n    content: 'public class DefaultTraceListener : System.Diagnostics.TraceListener'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceListener\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.TraceListener.Attributes\n  - System.Diagnostics.TraceListener.Close\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.Flush\n  - System.Diagnostics.TraceListener.GetSupportedAttributes\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.#ctor\n  commentId: M:System.Diagnostics.DefaultTraceListener.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: DefaultTraceListener()\n  nameWithType: DefaultTraceListener.DefaultTraceListener()\n  fullName: DefaultTraceListener.DefaultTraceListener()\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DefaultTraceListener\"></xref> class with \"Default\" as its <xref href=\"System.Diagnostics.TraceListener.Name\"></xref> property value.\n  remarks: ''\n  example:\n  - \"The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]\"\n  syntax:\n    content: public DefaultTraceListener ();\n    parameters: []\n  overload: System.Diagnostics.DefaultTraceListener.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.AssertUiEnabled\n  commentId: P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled\n  id: AssertUiEnabled\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: AssertUiEnabled\n  nameWithType: DefaultTraceListener.AssertUiEnabled\n  fullName: DefaultTraceListener.AssertUiEnabled\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Gets or sets a value indicating whether the application is running in user-interface mode.\n  remarks: ''\n  example:\n  - \"The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception. If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"AssertUiEnabled defaults to False; should follow Environment.UserInteractive.\")]\n\n      public bool AssertUiEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if user-interface mode is enabled; otherwise, `false`.'\n  overload: System.Diagnostics.DefaultTraceListener.AssertUiEnabled*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  id: Fail(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: Fail(String)\n  nameWithType: DefaultTraceListener.Fail(String)\n  fullName: DefaultTraceListener.Fail(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Emits or displays a message and a stack trace for an assertion that always fails.\n  remarks: By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.\n  example:\n  - \"The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method. The method also writes the message to the console if a user interface is not available.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]\"\n  syntax:\n    content: public override void Fail (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to emit or display.\n  overload: System.Diagnostics.DefaultTraceListener.Fail*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  id: Fail(System.String,System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: Fail(String, String)\n  nameWithType: DefaultTraceListener.Fail(String, String)\n  fullName: DefaultTraceListener.Fail(String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Emits or displays detailed messages and a stack trace for an assertion that always fails.\n  remarks: By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.\n  example:\n  - \"The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception. The method writes the message to the console if a user interface is not available.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]\"\n  syntax:\n    content: public override void Fail (string message, string detailMessage);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to emit or display.\n    - id: detailMessage\n      type: System.String\n      description: The detailed message to emit or display.\n  overload: System.Diagnostics.DefaultTraceListener.Fail*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.LogFileName\n  commentId: P:System.Diagnostics.DefaultTraceListener.LogFileName\n  id: LogFileName\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: LogFileName\n  nameWithType: DefaultTraceListener.LogFileName\n  fullName: DefaultTraceListener.LogFileName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Gets or sets the name of a log file to write trace or debug messages to.\n  remarks: ''\n  example:\n  - \"The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public string LogFileName { get; set; }\n    return:\n      type: System.String\n      description: The name of a log file to write trace or debug messages to.\n  overload: System.Diagnostics.DefaultTraceListener.LogFileName*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.Write(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: DefaultTraceListener.Write(String)\n  fullName: DefaultTraceListener.Write(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method.\n  remarks: For information about the Win32 `OutputDebugString` debugging function, see \"OutputDebugString\" in the Platform SDK or MSDN.\n  example:\n  - \"The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]\"\n  syntax:\n    content: public override void Write (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>.\n  overload: System.Diagnostics.DefaultTraceListener.Write*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: DefaultTraceListener.WriteLine(String)\n  fullName: DefaultTraceListener.WriteLine(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the output to the `OutputDebugString` function and to the <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref> method, followed by a carriage return and line feed (\\r\\n).\n  remarks: \"The default line terminator is a carriage return followed by a line feed (\\\\r\\\\n).  \\n  \\n For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.  \\n  \\n This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.\"\n  example:\n  - \"The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]\\n [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]\"\n  syntax:\n    content: public override void WriteLine (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write to `OutputDebugString` and <xref href=\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\"></xref>.\n  overload: System.Diagnostics.DefaultTraceListener.WriteLine*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.TraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListener\n  nameWithType: TraceListener\n  fullName: System.Diagnostics.TraceListener\n- uid: System.Diagnostics.DefaultTraceListener.#ctor\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: DefaultTraceListener()\n  nameWithType: DefaultTraceListener.DefaultTraceListener()\n  fullName: DefaultTraceListener.DefaultTraceListener()\n- uid: System.Diagnostics.DefaultTraceListener.AssertUiEnabled\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: AssertUiEnabled\n  nameWithType: DefaultTraceListener.AssertUiEnabled\n  fullName: DefaultTraceListener.AssertUiEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: Fail(String)\n  nameWithType: DefaultTraceListener.Fail(String)\n  fullName: DefaultTraceListener.Fail(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: Fail(String, String)\n  nameWithType: DefaultTraceListener.Fail(String, String)\n  fullName: DefaultTraceListener.Fail(String, String)\n- uid: System.Diagnostics.DefaultTraceListener.LogFileName\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: LogFileName\n  nameWithType: DefaultTraceListener.LogFileName\n  fullName: DefaultTraceListener.LogFileName\n- uid: System.Diagnostics.DefaultTraceListener.Write(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: Write(String)\n  nameWithType: DefaultTraceListener.Write(String)\n  fullName: DefaultTraceListener.Write(String)\n- uid: System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: DefaultTraceListener.WriteLine(String)\n  fullName: DefaultTraceListener.WriteLine(String)\n- uid: System.Diagnostics.DefaultTraceListener.#ctor*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: DefaultTraceListener\n  nameWithType: DefaultTraceListener.DefaultTraceListener\n  fullName: DefaultTraceListener.DefaultTraceListener\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Diagnostics.DefaultTraceListener.AssertUiEnabled*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: AssertUiEnabled\n  nameWithType: DefaultTraceListener.AssertUiEnabled\n  fullName: DefaultTraceListener.AssertUiEnabled\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Diagnostics.DefaultTraceListener.Fail*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: Fail\n  nameWithType: DefaultTraceListener.Fail\n  fullName: DefaultTraceListener.Fail\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Diagnostics.DefaultTraceListener.LogFileName*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: LogFileName\n  nameWithType: DefaultTraceListener.LogFileName\n  fullName: DefaultTraceListener.LogFileName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Diagnostics.DefaultTraceListener.Write*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: Write\n  nameWithType: DefaultTraceListener.Write\n  fullName: DefaultTraceListener.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Diagnostics.DefaultTraceListener.WriteLine*\n  parent: System.Diagnostics.DefaultTraceListener\n  isExternal: false\n  name: WriteLine\n  nameWithType: DefaultTraceListener.WriteLine\n  fullName: DefaultTraceListener.WriteLine\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DefaultTraceListener.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.TraceListener.Attributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Attributes\n  nameWithType: TraceListener.Attributes\n  fullName: TraceListener.Attributes\n- uid: System.Diagnostics.TraceListener.Close\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Close()\n  nameWithType: TraceListener.Close()\n  fullName: TraceListener.Close()\n- uid: System.Diagnostics.TraceListener.Dispose\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose()\n  nameWithType: TraceListener.Dispose()\n  fullName: TraceListener.Dispose()\n- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TraceListener.Dispose(Boolean)\n  fullName: TraceListener.Dispose(Boolean)\n- uid: System.Diagnostics.TraceListener.Filter\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Filter\n  nameWithType: TraceListener.Filter\n  fullName: TraceListener.Filter\n- uid: System.Diagnostics.TraceListener.Flush\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Flush()\n  nameWithType: TraceListener.Flush()\n  fullName: TraceListener.Flush()\n- uid: System.Diagnostics.TraceListener.GetSupportedAttributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: TraceListener.GetSupportedAttributes()\n  fullName: TraceListener.GetSupportedAttributes()\n- uid: System.Diagnostics.TraceListener.IndentLevel\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentLevel\n  nameWithType: TraceListener.IndentLevel\n  fullName: TraceListener.IndentLevel\n- uid: System.Diagnostics.TraceListener.IndentSize\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentSize\n  nameWithType: TraceListener.IndentSize\n  fullName: TraceListener.IndentSize\n- uid: System.Diagnostics.TraceListener.IsThreadSafe\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IsThreadSafe\n  nameWithType: TraceListener.IsThreadSafe\n  fullName: TraceListener.IsThreadSafe\n- uid: System.Diagnostics.TraceListener.Name\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Name\n  nameWithType: TraceListener.Name\n  fullName: TraceListener.Name\n- uid: System.Diagnostics.TraceListener.NeedIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: NeedIndent\n  nameWithType: TraceListener.NeedIndent\n  fullName: TraceListener.NeedIndent\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n- uid: System.Diagnostics.TraceListener.TraceOutputOptions\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceOutputOptions\n  nameWithType: TraceListener.TraceOutputOptions\n  fullName: TraceListener.TraceOutputOptions\n- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  nameWithType: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  fullName: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n- uid: System.Diagnostics.TraceListener.Write(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object)\n  nameWithType: TraceListener.Write(Object)\n  fullName: TraceListener.Write(Object)\n- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object, String)\n  nameWithType: TraceListener.Write(Object, String)\n  fullName: TraceListener.Write(Object, String)\n- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(String, String)\n  nameWithType: TraceListener.Write(String, String)\n  fullName: TraceListener.Write(String, String)\n- uid: System.Diagnostics.TraceListener.WriteIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteIndent()\n  nameWithType: TraceListener.WriteIndent()\n  fullName: TraceListener.WriteIndent()\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: TraceListener.WriteLine(Object)\n  fullName: TraceListener.WriteLine(Object)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object, String)\n  nameWithType: TraceListener.WriteLine(Object, String)\n  fullName: TraceListener.WriteLine(Object, String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(String, String)\n  nameWithType: TraceListener.WriteLine(String, String)\n  fullName: TraceListener.WriteLine(String, String)\n"}