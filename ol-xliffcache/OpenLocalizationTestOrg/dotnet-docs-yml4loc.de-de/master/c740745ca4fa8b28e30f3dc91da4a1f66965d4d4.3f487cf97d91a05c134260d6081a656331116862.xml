{"nodes":[{"content":"Represents an update attempt with one or more optimistic concurrency conflicts.","nodes":[{"pos":[0,79],"content":"Represents an update attempt with one or more optimistic concurrency conflicts.","nodes":[{"content":"Represents an update attempt with one or more optimistic concurrency conflicts.","pos":[0,79]}]}],"pos":[836,916],"yaml":true},{"content":"This scenario is one in which an attempted update fails because database values have been updated since the client last read them.  \n  \n The following example shows how to retrieve information about objects in conflict.","nodes":[{"pos":[0,130],"content":"This scenario is one in which an attempted update fails because database values have been updated since the client last read them.","nodes":[{"content":"This scenario is one in which an attempted update fails because database values have been updated since the client last read them.","pos":[0,130]}]},{"pos":[137,219],"content":"The following example shows how to retrieve information about objects in conflict.","nodes":[{"content":"The following example shows how to retrieve information about objects in conflict.","pos":[0,82]}]}],"pos":[927,1151],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the object in conflict has been deleted from the database.","nodes":[{"pos":[0,94],"content":"Gets a value that indicates whether the object in conflict has been deleted from the database.","nodes":[{"content":"Gets a value that indicates whether the object in conflict has been deleted from the database.","pos":[0,94]}]}],"pos":[2875,2970],"yaml":true},{"content":"`True` if the object has been deleted.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`True`</ph> if the object has been deleted.","source":"`True` if the object has been deleted."}],"pos":[3082,3123],"yaml":true},{"content":"Gets a value that indicates whether the conflicts for this object have already been resolved.","nodes":[{"pos":[0,93],"content":"Gets a value that indicates whether the conflicts for this object have already been resolved.","nodes":[{"content":"Gets a value that indicates whether the conflicts for this object have already been resolved.","pos":[0,93]}]}],"pos":[4187,4281],"yaml":true},{"content":"This property is read-only and is automatically updated as conflicts are resolved.","nodes":[{"pos":[0,82],"content":"This property is read-only and is automatically updated as conflicts are resolved.","nodes":[{"content":"This property is read-only and is automatically updated as conflicts are resolved.","pos":[0,82]}]}],"pos":[4292,4375],"yaml":true,"extradata":"MT"},{"content":"`True` if the conflicts have been resolved.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">`True`</ph> if the conflicts have been resolved.","source":"`True` if the conflicts have been resolved."}],"pos":[4488,4534],"yaml":true},{"content":"Gets a collection of all member conflicts that caused the update to fail.","nodes":[{"pos":[0,73],"content":"Gets a collection of all member conflicts that caused the update to fail.","nodes":[{"content":"Gets a collection of all member conflicts that caused the update to fail.","pos":[0,73]}]}],"pos":[5629,5703],"yaml":true},{"content":"A collection of member conflicts.","nodes":[{"pos":[0,33],"content":"A collection of member conflicts.","nodes":[{"content":"A collection of member conflicts.","pos":[0,33]}]}],"pos":[5979,6013],"yaml":true},{"content":"Gets the object in conflict.","nodes":[{"pos":[0,28],"content":"Gets the object in conflict.","nodes":[{"content":"Gets the object in conflict.","pos":[0,28]}]}],"pos":[7059,7088],"yaml":true},{"content":"The object in conflict.","nodes":[{"pos":[0,23],"content":"The object in conflict.","nodes":[{"content":"The object in conflict.","pos":[0,23]}]}],"pos":[7198,7222],"yaml":true},{"content":"Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.","nodes":[{"pos":[0,136],"content":"Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.","nodes":[{"content":"Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.","pos":[0,136]}]}],"pos":[8269,8406],"yaml":true},{"content":"Resolves member conflicts by using the specified <xref href=\"System.Data.Linq.RefreshMode\"></xref>.","nodes":[{"pos":[0,99],"content":"Resolves member conflicts by using the specified <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.RefreshMode\"&gt;&lt;/xref&gt;</ph>.","source":"Resolves member conflicts by using the specified <xref href=\"System.Data.Linq.RefreshMode\"></xref>."}],"pos":[9643,9743],"yaml":true},{"content":"The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.","nodes":[{"pos":[0,122],"content":"The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.","nodes":[{"content":"The following examples show what results are produced by using the various values for <ph id=\"ph1\">&lt;xref:System.Data.Linq.RefreshMode&gt;</ph>.","pos":[0,122],"source":"The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>."}]}],"pos":[9754,9877],"yaml":true,"extradata":"MT"},{"content":"The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>.","nodes":[{"pos":[0,78],"content":"The appropriate option from <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.RefreshMode\"&gt;&lt;/xref&gt;</ph>.","source":"The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>."}],"pos":[11278,11357],"yaml":true},{"content":"Resolve member conflicts keeping current values and resetting the baseline original values.","nodes":[{"pos":[0,91],"content":"Resolve member conflicts keeping current values and resetting the baseline original values.","nodes":[{"content":"Resolve member conflicts keeping current values and resetting the baseline original values.","pos":[0,91]}]}],"pos":[12600,12692],"yaml":true},{"content":"The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>.","nodes":[{"pos":[0,78],"content":"The appropriate option from <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.RefreshMode\"&gt;&lt;/xref&gt;</ph>.","source":"The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>."}],"pos":[12902,12981],"yaml":true},{"content":"When `true`, automatically resolves conflicts resulting from a modified object that is no longer in the database.","nodes":[{"pos":[0,113],"content":"When <ph id=\"ph1\">`true`</ph>, automatically resolves conflicts resulting from a modified object that is no longer in the database.","source":"When `true`, automatically resolves conflicts resulting from a modified object that is no longer in the database."}],"pos":[13056,13170],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.ObjectChangeConflict\n  commentId: T:System.Data.Linq.ObjectChangeConflict\n  id: ObjectChangeConflict\n  children:\n  - System.Data.Linq.ObjectChangeConflict.IsDeleted\n  - System.Data.Linq.ObjectChangeConflict.IsResolved\n  - System.Data.Linq.ObjectChangeConflict.MemberConflicts\n  - System.Data.Linq.ObjectChangeConflict.Object\n  - System.Data.Linq.ObjectChangeConflict.Resolve\n  - System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)\n  - System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)\n  langs:\n  - csharp\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Represents an update attempt with one or more optimistic concurrency conflicts.\n  remarks: \"This scenario is one in which an attempted update fails because database values have been updated since the client last read them.  \\n  \\n The following example shows how to retrieve information about objects in conflict.\"\n  example:\n  - >-\n    [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]\n     [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]\n  syntax:\n    content: public sealed class ObjectChangeConflict\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted\n  commentId: P:System.Data.Linq.ObjectChangeConflict.IsDeleted\n  id: IsDeleted\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: IsDeleted\n  nameWithType: ObjectChangeConflict.IsDeleted\n  fullName: ObjectChangeConflict.IsDeleted\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets a value that indicates whether the object in conflict has been deleted from the database.\n  syntax:\n    content: public bool IsDeleted { get; }\n    return:\n      type: System.Boolean\n      description: '`True` if the object has been deleted.'\n  overload: System.Data.Linq.ObjectChangeConflict.IsDeleted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.IsResolved\n  commentId: P:System.Data.Linq.ObjectChangeConflict.IsResolved\n  id: IsResolved\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: IsResolved\n  nameWithType: ObjectChangeConflict.IsResolved\n  fullName: ObjectChangeConflict.IsResolved\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets a value that indicates whether the conflicts for this object have already been resolved.\n  remarks: This property is read-only and is automatically updated as conflicts are resolved.\n  syntax:\n    content: public bool IsResolved { get; }\n    return:\n      type: System.Boolean\n      description: '`True` if the conflicts have been resolved.'\n  overload: System.Data.Linq.ObjectChangeConflict.IsResolved*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts\n  commentId: P:System.Data.Linq.ObjectChangeConflict.MemberConflicts\n  id: MemberConflicts\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: MemberConflicts\n  nameWithType: ObjectChangeConflict.MemberConflicts\n  fullName: ObjectChangeConflict.MemberConflicts\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets a collection of all member conflicts that caused the update to fail.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.MemberChangeConflict> MemberConflicts { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.MemberChangeConflict}\n      description: A collection of member conflicts.\n  overload: System.Data.Linq.ObjectChangeConflict.MemberConflicts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.Object\n  commentId: P:System.Data.Linq.ObjectChangeConflict.Object\n  id: Object\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: Object\n  nameWithType: ObjectChangeConflict.Object\n  fullName: ObjectChangeConflict.Object\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the object in conflict.\n  syntax:\n    content: public object Object { get; }\n    return:\n      type: System.Object\n      description: The object in conflict.\n  overload: System.Data.Linq.ObjectChangeConflict.Object*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve\n  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve\n  id: Resolve\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: Resolve()\n  nameWithType: ObjectChangeConflict.Resolve()\n  fullName: ObjectChangeConflict.Resolve()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.\n  syntax:\n    content: public void Resolve ();\n    parameters: []\n  overload: System.Data.Linq.ObjectChangeConflict.Resolve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)\n  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)\n  id: Resolve(System.Data.Linq.RefreshMode)\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: Resolve(RefreshMode)\n  nameWithType: ObjectChangeConflict.Resolve(RefreshMode)\n  fullName: ObjectChangeConflict.Resolve(RefreshMode)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Resolves member conflicts by using the specified <xref href=\"System.Data.Linq.RefreshMode\"></xref>.\n  remarks: The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.\n  example:\n  - \"The following example overwrites current values with values from the database.  \\n  \\n [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]\\n [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  \\n  \\n The following example shows how to swap the original value with the values retrieved from the dtabase. No current value is modified.  \\n  \\n [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]\\n [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  \\n  \\n The following example keeps the current values that have been changed, but updates the other values with database values.  \\n  \\n [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]\\n [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]\"\n  syntax:\n    content: public void Resolve (System.Data.Linq.RefreshMode refreshMode);\n    parameters:\n    - id: refreshMode\n      type: System.Data.Linq.RefreshMode\n      description: The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>.\n  overload: System.Data.Linq.ObjectChangeConflict.Resolve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)\n  commentId: M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)\n  id: Resolve(System.Data.Linq.RefreshMode,System.Boolean)\n  parent: System.Data.Linq.ObjectChangeConflict\n  langs:\n  - csharp\n  name: Resolve(RefreshMode, Boolean)\n  nameWithType: ObjectChangeConflict.Resolve(RefreshMode, Boolean)\n  fullName: ObjectChangeConflict.Resolve(RefreshMode, Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Resolve member conflicts keeping current values and resetting the baseline original values.\n  syntax:\n    content: public void Resolve (System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes);\n    parameters:\n    - id: refreshMode\n      type: System.Data.Linq.RefreshMode\n      description: The appropriate option from <xref href=\"System.Data.Linq.RefreshMode\"></xref>.\n    - id: autoResolveDeletes\n      type: System.Boolean\n      description: When `true`, automatically resolves conflicts resulting from a modified object that is no longer in the database.\n  overload: System.Data.Linq.ObjectChangeConflict.Resolve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: IsDeleted\n  nameWithType: ObjectChangeConflict.IsDeleted\n  fullName: ObjectChangeConflict.IsDeleted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ObjectChangeConflict.IsResolved\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: IsResolved\n  nameWithType: ObjectChangeConflict.IsResolved\n  fullName: ObjectChangeConflict.IsResolved\n- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: MemberConflicts\n  nameWithType: ObjectChangeConflict.MemberConflicts\n  fullName: ObjectChangeConflict.MemberConflicts\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Data.Linq.MemberChangeConflict\n  name: MemberChangeConflict\n  nameWithType: MemberChangeConflict\n  fullName: System.Data.Linq.MemberChangeConflict\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.MemberChangeConflict}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MemberChangeConflict>\n  nameWithType: ReadOnlyCollection<MemberChangeConflict>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.MemberChangeConflict>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.MemberChangeConflict\n    name: MemberChangeConflict\n    nameWithType: MemberChangeConflict\n    fullName: System.Data.Linq.MemberChangeConflict\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.ObjectChangeConflict.Object\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Object\n  nameWithType: ObjectChangeConflict.Object\n  fullName: ObjectChangeConflict.Object\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Resolve()\n  nameWithType: ObjectChangeConflict.Resolve()\n  fullName: ObjectChangeConflict.Resolve()\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Resolve(RefreshMode)\n  nameWithType: ObjectChangeConflict.Resolve(RefreshMode)\n  fullName: ObjectChangeConflict.Resolve(RefreshMode)\n- uid: System.Data.Linq.RefreshMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Resolve(RefreshMode, Boolean)\n  nameWithType: ObjectChangeConflict.Resolve(RefreshMode, Boolean)\n  fullName: ObjectChangeConflict.Resolve(RefreshMode, Boolean)\n- uid: System.Data.Linq.ObjectChangeConflict.IsDeleted*\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: IsDeleted\n  nameWithType: ObjectChangeConflict.IsDeleted\n  fullName: ObjectChangeConflict.IsDeleted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n- uid: System.Data.Linq.ObjectChangeConflict.IsResolved*\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: IsResolved\n  nameWithType: ObjectChangeConflict.IsResolved\n  fullName: ObjectChangeConflict.IsResolved\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n- uid: System.Data.Linq.ObjectChangeConflict.MemberConflicts*\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: MemberConflicts\n  nameWithType: ObjectChangeConflict.MemberConflicts\n  fullName: ObjectChangeConflict.MemberConflicts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n- uid: System.Data.Linq.ObjectChangeConflict.Object*\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Object\n  nameWithType: ObjectChangeConflict.Object\n  fullName: ObjectChangeConflict.Object\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n- uid: System.Data.Linq.ObjectChangeConflict.Resolve*\n  parent: System.Data.Linq.ObjectChangeConflict\n  isExternal: false\n  name: Resolve\n  nameWithType: ObjectChangeConflict.Resolve\n  fullName: ObjectChangeConflict.Resolve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/ObjectChangeConflict.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}