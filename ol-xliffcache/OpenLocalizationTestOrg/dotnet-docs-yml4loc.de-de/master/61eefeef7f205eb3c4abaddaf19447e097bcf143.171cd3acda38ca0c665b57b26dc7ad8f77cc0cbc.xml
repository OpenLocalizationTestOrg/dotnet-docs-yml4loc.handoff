{"nodes":[{"content":"The <xref href=\"System.Transactions\"></xref> namespace contains classes that allow you to write your own transactional application and resource manager. Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.","nodes":[{"pos":[0,272],"content":"The <xref href=\"System.Transactions\"></xref> namespace contains classes that allow you to write your own transactional application and resource manager. Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Transactions\"&gt;&lt;/xref&gt;</ph> namespace contains classes that allow you to write your own transactional application and resource manager.","pos":[0,152],"source":"The <xref href=\"System.Transactions\"></xref> namespace contains classes that allow you to write your own transactional application and resource manager."},{"content":"Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.","pos":[153,272]}]}],"pos":[1985,2258],"yaml":true},{"content":"> [!IMPORTANT]\n>  You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms. Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> .  \n  \n The <xref:System.Transactions> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC). It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure. It is highly recommended that you use the easier implicit model for development. To get started, please see the [Implementing An Implicit Transaction Using Transaction Scope](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) topic. For more information on writing a transactional application, see .  \n  \n <xref:System.Transactions> also provides types for you to implement a resource manager. The transaction manager native to the <xref:System.Transactions> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently. For more information on implementing a resource manager, see [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  \n  \n The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction. There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance.  \n  \n-   Dynamic Escalation, which means that the <xref:System.Transactions> infrastructure only engages the MSDTC when it is actually required for a transaction. This area is covered in depth in the [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic.  \n  \n-   Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction. Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the management of the transaction to MSDTC. This further reduces the chance of using the MSDTC. This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb) topic.  \n  \n <xref:System.Transactions> defines three levels of trust that restrict access on the types of resources it exposes. Specifically, the <xref:System.Transactions> assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA). This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type. However, some types and members still require stronger permissions.  \n  \n The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:  \n  \n `PermissionSetAttribute(SecurityAction.LinkDemand, Name := \"FullTrust\")`  \n  \n System.Transactions.Transaction.EnlistDurable  \n  \n System.Transactions.Transaction.EnlistPromotableSinglePhase  \n  \n System.Transactions.TransactionInterop  \n  \n System.Transactions.TransactionManager.DistributedTransactionStarted  \n  \n System.Transactions.TransactionManager.HostCurrentTransactionCallback  \n  \n System.Transactions.TransactionManager.Reenlist  \n  \n System.Transactions.TransactionManager.RecoveryComplete  \n  \n System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)  \n  \n M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)  \n  \n For more information on the various trust levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51).  \n  \n Core Development Technologies\\Data Access\\Transaction Processing\\  \n  \n For more information on how to use the <xref:System.Transactions> namespace, you can consult the conceptual documentation [Transaction Processing](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9), located under the \"Core Development Technologies\\Data Access\\Transaction Processing\\\\\" section in the documentation. Specifically, you can find more information in the following topics.  \n  \n [Features Provided By System.Transactions](http://msdn.microsoft.com/en-us/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  \n  \n [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)","nodes":[{"pos":[2,258],"content":"[!IMPORTANT]\n You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms. Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> .","leadings":["","> "],"nodes":[{"content":" You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms. Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> .","pos":[13,254],"nodes":[{"content":"You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms.","pos":[1,117]},{"content":"Creating a transaction under the Windows 98 and Windows ME platforms throws a <ph id=\"ph1\">&lt;xref:System.PlatformNotSupportedException&gt;</ph> .","pos":[118,241],"source":" Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> ."}]}]},{"pos":[265,1115],"content":"The <xref:System.Transactions> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC). It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure. It is highly recommended that you use the easier implicit model for development. To get started, please see the [Implementing An Implicit Transaction Using Transaction Scope](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) topic. For more information on writing a transactional application, see .","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC).","pos":[0,252],"source":"The <xref:System.Transactions> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC)."},{"content":"It provides both an explicit programming model based on the <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> class, as well as an implicit programming model using the <ph id=\"ph2\">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, in which transactions are automatically managed by the infrastructure.","pos":[253,531],"source":" It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure."},{"content":"It is highly recommended that you use the easier implicit model for development.","pos":[532,612]},{"content":"To get started, please see the <bpt id=\"p1\">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id=\"p1\">](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199)</ept> topic.","pos":[613,783],"source":" To get started, please see the [Implementing An Implicit Transaction Using Transaction Scope](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) topic."},{"content":"For more information on writing a transactional application, see .","pos":[784,850]}]},{"pos":[1122,1557],"content":"<xref:System.Transactions> also provides types for you to implement a resource manager. The transaction manager native to the <xref:System.Transactions> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently. For more information on implementing a resource manager, see [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> also provides types for you to implement a resource manager.","pos":[0,87],"source":"<xref:System.Transactions> also provides types for you to implement a resource manager."},{"content":"The transaction manager native to the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently.","pos":[88,269],"source":" The transaction manager native to the <xref:System.Transactions> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently."},{"content":"For more information on implementing a resource manager, see <bpt id=\"p1\">[</bpt>Implementing A Resource Manager<ept id=\"p1\">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>.","pos":[270,435],"source":" For more information on implementing a resource manager, see [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)."}]},{"pos":[1564,1918],"content":"The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction. There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance.","nodes":[{"content":"The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction. There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance.","pos":[0,354],"nodes":[{"content":"The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction.","pos":[0,249]},{"content":"There are two key ways that the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure provides enhanced performance.","pos":[250,354],"source":" There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance."}]}]},{"pos":[1928,2231],"content":"Dynamic Escalation, which means that the <xref:System.Transactions> infrastructure only engages the MSDTC when it is actually required for a transaction. This area is covered in depth in the [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic.","nodes":[{"content":"Dynamic Escalation, which means that the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure only engages the MSDTC when it is actually required for a transaction.","pos":[0,153],"source":"Dynamic Escalation, which means that the <xref:System.Transactions> infrastructure only engages the MSDTC when it is actually required for a transaction."},{"content":"This area is covered in depth in the <bpt id=\"p1\">[</bpt>Transaction Management Escalation<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)</ept> topic.","pos":[154,303],"source":" This area is covered in depth in the [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic."}]},{"pos":[2241,2780],"content":"Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction. Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the management of the transaction to MSDTC. This further reduces the chance of using the MSDTC. This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb) topic.","nodes":[{"content":"Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction.","pos":[0,164]},{"content":"Later, if needed, the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> infrastructure can still escalate the management of the transaction to MSDTC.","pos":[165,291],"source":" Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the management of the transaction to MSDTC."},{"content":"This further reduces the chance of using the MSDTC.","pos":[292,343]},{"content":"This area is covered in depth in the <bpt id=\"p1\">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id=\"p1\">](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept> topic.","pos":[344,539],"source":" This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb) topic."}]},{"pos":[2787,3377],"content":"<xref:System.Transactions> defines three levels of trust that restrict access on the types of resources it exposes. Specifically, the <xref:System.Transactions> assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA). This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type. However, some types and members still require stronger permissions.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> defines three levels of trust that restrict access on the types of resources it exposes.","pos":[0,115],"source":"<xref:System.Transactions> defines three levels of trust that restrict access on the types of resources it exposes."},{"content":"Specifically, the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> assembly can be called by partially trusted code as it has been marked with the <ph id=\"ph2\">`AllowPartiallyTrustedCallers`</ph> attribute (APTCA).","pos":[116,290],"source":" Specifically, the <xref:System.Transactions> assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA)."},{"content":"This attribute essentially removes the implicit <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> for the <ph id=\"ph2\">`FullTrust`</ph> permission set that is otherwise automatically placed on each publicly accessible method in each type.","pos":[291,522],"source":" This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type."},{"content":"However, some types and members still require stronger permissions.","pos":[523,590]}]},{"pos":[3384,3554],"content":"The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:","nodes":[{"content":"The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:","pos":[0,170]}]},{"pos":[3640,3685],"content":"System.Transactions.Transaction.EnlistDurable","nodes":[{"content":"System.Transactions.Transaction.EnlistDurable","pos":[0,45]}]},{"pos":[3692,3751],"content":"System.Transactions.Transaction.EnlistPromotableSinglePhase","nodes":[{"content":"System.Transactions.Transaction.EnlistPromotableSinglePhase","pos":[0,59]}]},{"pos":[3758,3796],"content":"System.Transactions.TransactionInterop","nodes":[{"content":"System.Transactions.TransactionInterop","pos":[0,38]}]},{"pos":[3803,3871],"content":"System.Transactions.TransactionManager.DistributedTransactionStarted","nodes":[{"content":"System.Transactions.TransactionManager.DistributedTransactionStarted","pos":[0,68]}]},{"pos":[3878,3947],"content":"System.Transactions.TransactionManager.HostCurrentTransactionCallback","nodes":[{"content":"System.Transactions.TransactionManager.HostCurrentTransactionCallback","pos":[0,69]}]},{"pos":[3954,4001],"content":"System.Transactions.TransactionManager.Reenlist","nodes":[{"content":"System.Transactions.TransactionManager.Reenlist","pos":[0,47]}]},{"pos":[4008,4063],"content":"System.Transactions.TransactionManager.RecoveryComplete","nodes":[{"content":"System.Transactions.TransactionManager.RecoveryComplete","pos":[0,55]}]},{"pos":[4070,4225],"content":"System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)","nodes":[{"content":"System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)","pos":[0,155]}]},{"pos":[4232,4422],"content":"M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)","nodes":[{"content":"M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)","pos":[0,190]}]},{"pos":[4429,4600],"content":"For more information on the various trust levels, see <bpt id=\"p1\">[</bpt>Security Trust Levels in Accessing Resources<ept id=\"p1\">](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)</ept>.","source":"For more information on the various trust levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)."},{"pos":[4607,4672],"content":"Core Development Technologies\\Data Access\\Transaction Processing\\","nodes":[{"content":"Core Development Technologies\\Data Access\\Transaction Processing\\","pos":[0,65]}]},{"pos":[4679,5082],"content":"For more information on how to use the <xref:System.Transactions> namespace, you can consult the conceptual documentation [Transaction Processing](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9), located under the \"Core Development Technologies\\Data Access\\Transaction Processing\\\\\" section in the documentation. Specifically, you can find more information in the following topics.","nodes":[{"content":"For more information on how to use the <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> namespace, you can consult the conceptual documentation <bpt id=\"p1\">[</bpt>Transaction Processing<ept id=\"p1\">](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9)</ept>, located under the \"Core Development Technologies\\Data Access\\Transaction Processing<ph id=\"ph2\">\\\\</ph>\" section in the documentation.","pos":[0,334],"source":"For more information on how to use the <xref:System.Transactions> namespace, you can consult the conceptual documentation [Transaction Processing](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9), located under the \"Core Development Technologies\\Data Access\\Transaction Processing\\\\\" section in the documentation."},{"content":"Specifically, you can find more information in the following topics.","pos":[335,403]}]},{"pos":[5089,5201],"content":"<bpt id=\"p1\">[</bpt>Features Provided By System.Transactions<ept id=\"p1\">](http://msdn.microsoft.com/en-us/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)</ept>","source":"[Features Provided By System.Transactions](http://msdn.microsoft.com/en-us/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)"},{"pos":[5208,5311],"content":"<bpt id=\"p1\">[</bpt>Implementing A Resource Manager<ept id=\"p1\">](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)</ept>","source":"[Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)"}],"pos":[2269,7639],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions\n  id: System.Transactions\n  children:\n  - System.Transactions.CommittableTransaction\n  - System.Transactions.DependentCloneOption\n  - System.Transactions.DependentTransaction\n  - System.Transactions.DistributedTransactionPermission\n  - System.Transactions.DistributedTransactionPermissionAttribute\n  - System.Transactions.Enlistment\n  - System.Transactions.EnlistmentOptions\n  - System.Transactions.EnterpriseServicesInteropOption\n  - System.Transactions.HostCurrentTransactionCallback\n  - System.Transactions.IDtcTransaction\n  - System.Transactions.IEnlistmentNotification\n  - System.Transactions.IPromotableSinglePhaseNotification\n  - System.Transactions.ISimpleTransactionSuperior\n  - System.Transactions.ISinglePhaseNotification\n  - System.Transactions.IsolationLevel\n  - System.Transactions.ITransactionPromoter\n  - System.Transactions.PreparingEnlistment\n  - System.Transactions.SinglePhaseEnlistment\n  - System.Transactions.SubordinateTransaction\n  - System.Transactions.Transaction\n  - System.Transactions.TransactionAbortedException\n  - System.Transactions.TransactionCompletedEventHandler\n  - System.Transactions.TransactionEventArgs\n  - System.Transactions.TransactionException\n  - System.Transactions.TransactionInDoubtException\n  - System.Transactions.TransactionInformation\n  - System.Transactions.TransactionInterop\n  - System.Transactions.TransactionManager\n  - System.Transactions.TransactionManagerCommunicationException\n  - System.Transactions.TransactionOptions\n  - System.Transactions.TransactionPromotionException\n  - System.Transactions.TransactionScope\n  - System.Transactions.TransactionScopeAsyncFlowOption\n  - System.Transactions.TransactionScopeOption\n  - System.Transactions.TransactionStartedEventHandler\n  - System.Transactions.TransactionStatus\n  langs:\n  - csharp\n  name: System.Transactions\n  nameWithType: System.Transactions\n  fullName: System.Transactions\n  type: Namespace\n  summary: The <xref href=\"System.Transactions\"></xref> namespace contains classes that allow you to write your own transactional application and resource manager. Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.\n  remarks: \"> [!IMPORTANT]\\n>  You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms. Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> .  \\n  \\n The <xref:System.Transactions> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC). It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure. It is highly recommended that you use the easier implicit model for development. To get started, please see the [Implementing An Implicit Transaction Using Transaction Scope](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) topic. For more information on writing a transactional application, see .  \\n  \\n <xref:System.Transactions> also provides types for you to implement a resource manager. The transaction manager native to the <xref:System.Transactions> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently. For more information on implementing a resource manager, see [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  \\n  \\n The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction. There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance.  \\n  \\n-   Dynamic Escalation, which means that the <xref:System.Transactions> infrastructure only engages the MSDTC when it is actually required for a transaction. This area is covered in depth in the [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic.  \\n  \\n-   Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction. Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the management of the transaction to MSDTC. This further reduces the chance of using the MSDTC. This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb) topic.  \\n  \\n <xref:System.Transactions> defines three levels of trust that restrict access on the types of resources it exposes. Specifically, the <xref:System.Transactions> assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA). This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type. However, some types and members still require stronger permissions.  \\n  \\n The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:  \\n  \\n `PermissionSetAttribute(SecurityAction.LinkDemand, Name := \\\"FullTrust\\\")`  \\n  \\n System.Transactions.Transaction.EnlistDurable  \\n  \\n System.Transactions.Transaction.EnlistPromotableSinglePhase  \\n  \\n System.Transactions.TransactionInterop  \\n  \\n System.Transactions.TransactionManager.DistributedTransactionStarted  \\n  \\n System.Transactions.TransactionManager.HostCurrentTransactionCallback  \\n  \\n System.Transactions.TransactionManager.Reenlist  \\n  \\n System.Transactions.TransactionManager.RecoveryComplete  \\n  \\n System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)  \\n  \\n M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)  \\n  \\n For more information on the various trust levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51).  \\n  \\n Core Development Technologies\\\\Data Access\\\\Transaction Processing\\\\  \\n  \\n For more information on how to use the <xref:System.Transactions> namespace, you can consult the conceptual documentation [Transaction Processing](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9), located under the \\\"Core Development Technologies\\\\Data Access\\\\Transaction Processing\\\\\\\\\\\" section in the documentation. Specifically, you can find more information in the following topics.  \\n  \\n [Features Provided By System.Transactions](http://msdn.microsoft.com/en-us/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  \\n  \\n [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Transactions.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Transactions.CommittableTransaction\n  parent: System.Transactions\n  isExternal: false\n  name: CommittableTransaction\n  nameWithType: CommittableTransaction\n  fullName: System.Transactions.CommittableTransaction\n- uid: System.Transactions.DependentCloneOption\n  parent: System.Transactions\n  isExternal: false\n  name: DependentCloneOption\n  nameWithType: DependentCloneOption\n  fullName: System.Transactions.DependentCloneOption\n- uid: System.Transactions.DependentTransaction\n  parent: System.Transactions\n  isExternal: false\n  name: DependentTransaction\n  nameWithType: DependentTransaction\n  fullName: System.Transactions.DependentTransaction\n- uid: System.Transactions.DistributedTransactionPermission\n  parent: System.Transactions\n  isExternal: false\n  name: DistributedTransactionPermission\n  nameWithType: DistributedTransactionPermission\n  fullName: System.Transactions.DistributedTransactionPermission\n- uid: System.Transactions.DistributedTransactionPermissionAttribute\n  parent: System.Transactions\n  isExternal: false\n  name: DistributedTransactionPermissionAttribute\n  nameWithType: DistributedTransactionPermissionAttribute\n  fullName: System.Transactions.DistributedTransactionPermissionAttribute\n- uid: System.Transactions.Enlistment\n  parent: System.Transactions\n  isExternal: false\n  name: Enlistment\n  nameWithType: Enlistment\n  fullName: System.Transactions.Enlistment\n- uid: System.Transactions.EnlistmentOptions\n  parent: System.Transactions\n  isExternal: false\n  name: EnlistmentOptions\n  nameWithType: EnlistmentOptions\n  fullName: System.Transactions.EnlistmentOptions\n- uid: System.Transactions.EnterpriseServicesInteropOption\n  parent: System.Transactions\n  isExternal: false\n  name: EnterpriseServicesInteropOption\n  nameWithType: EnterpriseServicesInteropOption\n  fullName: System.Transactions.EnterpriseServicesInteropOption\n- uid: System.Transactions.HostCurrentTransactionCallback\n  parent: System.Transactions\n  isExternal: false\n  name: HostCurrentTransactionCallback\n  nameWithType: HostCurrentTransactionCallback\n  fullName: System.Transactions.HostCurrentTransactionCallback\n- uid: System.Transactions.IDtcTransaction\n  parent: System.Transactions\n  isExternal: false\n  name: IDtcTransaction\n  nameWithType: IDtcTransaction\n  fullName: System.Transactions.IDtcTransaction\n- uid: System.Transactions.IEnlistmentNotification\n  parent: System.Transactions\n  isExternal: false\n  name: IEnlistmentNotification\n  nameWithType: IEnlistmentNotification\n  fullName: System.Transactions.IEnlistmentNotification\n- uid: System.Transactions.IPromotableSinglePhaseNotification\n  parent: System.Transactions\n  isExternal: false\n  name: IPromotableSinglePhaseNotification\n  nameWithType: IPromotableSinglePhaseNotification\n  fullName: System.Transactions.IPromotableSinglePhaseNotification\n- uid: System.Transactions.ISimpleTransactionSuperior\n  parent: System.Transactions\n  isExternal: false\n  name: ISimpleTransactionSuperior\n  nameWithType: ISimpleTransactionSuperior\n  fullName: System.Transactions.ISimpleTransactionSuperior\n- uid: System.Transactions.ISinglePhaseNotification\n  parent: System.Transactions\n  isExternal: false\n  name: ISinglePhaseNotification\n  nameWithType: ISinglePhaseNotification\n  fullName: System.Transactions.ISinglePhaseNotification\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Transactions.ITransactionPromoter\n  parent: System.Transactions\n  isExternal: false\n  name: ITransactionPromoter\n  nameWithType: ITransactionPromoter\n  fullName: System.Transactions.ITransactionPromoter\n- uid: System.Transactions.PreparingEnlistment\n  parent: System.Transactions\n  isExternal: false\n  name: PreparingEnlistment\n  nameWithType: PreparingEnlistment\n  fullName: System.Transactions.PreparingEnlistment\n- uid: System.Transactions.SinglePhaseEnlistment\n  parent: System.Transactions\n  isExternal: false\n  name: SinglePhaseEnlistment\n  nameWithType: SinglePhaseEnlistment\n  fullName: System.Transactions.SinglePhaseEnlistment\n- uid: System.Transactions.SubordinateTransaction\n  parent: System.Transactions\n  isExternal: false\n  name: SubordinateTransaction\n  nameWithType: SubordinateTransaction\n  fullName: System.Transactions.SubordinateTransaction\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Transactions.TransactionAbortedException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionAbortedException\n  nameWithType: TransactionAbortedException\n  fullName: System.Transactions.TransactionAbortedException\n- uid: System.Transactions.TransactionCompletedEventHandler\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionCompletedEventHandler\n  nameWithType: TransactionCompletedEventHandler\n  fullName: System.Transactions.TransactionCompletedEventHandler\n- uid: System.Transactions.TransactionEventArgs\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionEventArgs\n  nameWithType: TransactionEventArgs\n  fullName: System.Transactions.TransactionEventArgs\n- uid: System.Transactions.TransactionException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionException\n  nameWithType: TransactionException\n  fullName: System.Transactions.TransactionException\n- uid: System.Transactions.TransactionInDoubtException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionInDoubtException\n  nameWithType: TransactionInDoubtException\n  fullName: System.Transactions.TransactionInDoubtException\n- uid: System.Transactions.TransactionInformation\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionInformation\n  nameWithType: TransactionInformation\n  fullName: System.Transactions.TransactionInformation\n- uid: System.Transactions.TransactionInterop\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionInterop\n  nameWithType: TransactionInterop\n  fullName: System.Transactions.TransactionInterop\n- uid: System.Transactions.TransactionManager\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionManager\n  nameWithType: TransactionManager\n  fullName: System.Transactions.TransactionManager\n- uid: System.Transactions.TransactionManagerCommunicationException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionManagerCommunicationException\n  nameWithType: TransactionManagerCommunicationException\n  fullName: System.Transactions.TransactionManagerCommunicationException\n- uid: System.Transactions.TransactionOptions\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionOptions\n  nameWithType: TransactionOptions\n  fullName: System.Transactions.TransactionOptions\n- uid: System.Transactions.TransactionPromotionException\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionPromotionException\n  nameWithType: TransactionPromotionException\n  fullName: System.Transactions.TransactionPromotionException\n- uid: System.Transactions.TransactionScope\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionScope\n  nameWithType: TransactionScope\n  fullName: System.Transactions.TransactionScope\n- uid: System.Transactions.TransactionScopeAsyncFlowOption\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionScopeAsyncFlowOption\n  nameWithType: TransactionScopeAsyncFlowOption\n  fullName: System.Transactions.TransactionScopeAsyncFlowOption\n- uid: System.Transactions.TransactionScopeOption\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionScopeOption\n  nameWithType: TransactionScopeOption\n  fullName: System.Transactions.TransactionScopeOption\n- uid: System.Transactions.TransactionStartedEventHandler\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionStartedEventHandler\n  nameWithType: TransactionStartedEventHandler\n  fullName: System.Transactions.TransactionStartedEventHandler\n- uid: System.Transactions.TransactionStatus\n  parent: System.Transactions\n  isExternal: false\n  name: TransactionStatus\n  nameWithType: TransactionStatus\n  fullName: System.Transactions.TransactionStatus\n"}