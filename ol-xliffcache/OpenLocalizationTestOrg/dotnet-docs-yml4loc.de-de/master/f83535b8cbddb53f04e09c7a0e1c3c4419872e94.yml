### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection
  commentId: T:Microsoft.Build.BuildEngine.UsingTaskCollection
  id: UsingTaskCollection
  children:
  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  - Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  - Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  - Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  - Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  langs:
  - csharp
  name: UsingTaskCollection
  nameWithType: UsingTaskCollection
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection
  type: Class
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Represents a collection of all [UsingTask](http://msdn.microsoft.com/library/20247902-9446-4a1f-8253-5c7a17e4fe43) elements in a project.
  syntax:
    content: 'public class UsingTaskCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  commentId: M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  id: CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: CopyTo(UsingTask[], Int32)
  nameWithType: UsingTaskCollection.CopyTo(UsingTask[], Int32)
  fullName: UsingTaskCollection.CopyTo(UsingTask[], Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Copies the entire <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref> to a compatible one-dimensional <xref href="System.Array"></xref> of <xref href="Microsoft.Build.BuildEngine.UsingTask"></xref> objects, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo (Microsoft.Build.BuildEngine.UsingTask[] array, int index);
    parameters:
    - id: array
      type: Microsoft.Build.BuildEngine.UsingTask[]
      description: The one-dimensional <xref href="System.Array"></xref> of <xref href="Microsoft.Build.BuildEngine.UsingTask"></xref> objects that is the destination of the elements copied from <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>. The <xref href="System.Array"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>array</code> at which copying begins.
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  commentId: M:Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: CopyTo(Array, Int32)
  nameWithType: UsingTaskCollection.CopyTo(Array, Int32)
  fullName: UsingTaskCollection.CopyTo(Array, Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Copies the entire <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref> to a compatible one-dimensional <xref href="System.Array"></xref>, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional <xref href="System.Array"></xref> that is the destination of the elements copied from <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>. The <xref href="System.Array"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>array</code> at which copying begins.
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  commentId: P:Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  id: Count
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: Count
  nameWithType: UsingTaskCollection.Count
  fullName: UsingTaskCollection.Count
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets a value indicating the number of <xref href="Microsoft.Build.BuildEngine.UsingTask"></xref> objects in the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>.
  remarks: Each <xref:Microsoft.Build.BuildEngine.UsingTask> object in the collection represents a  element in the project.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: An integer value representing the number of <xref href="Microsoft.Build.BuildEngine.UsingTask"></xref> objects in the collection.
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.Count*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  commentId: M:Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: UsingTaskCollection.GetEnumerator()
  fullName: UsingTaskCollection.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets an enumerator that iterates through the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>.
  remarks: This method allows the caller to use the `foreach` statement of the C# language (`for each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]) to iterate through the individual <xref:Microsoft.Build.BuildEngine.UsingTask> objects in the <xref:Microsoft.Build.BuildEngine.UsingTaskCollection>.
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> for the entire <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>.
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  commentId: P:Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  id: IsSynchronized
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
  fullName: UsingTaskCollection.IsSynchronized
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets a value indicating whether access to the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref> is synchronized (thread safe).
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref> is synchronized (thread safe); otherwise, `false`. The default is `false`.'
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  commentId: P:Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  id: SyncRoot
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
  fullName: UsingTaskCollection.SyncRoot
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets an object that can be used to synchronize access to the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>.
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="Microsoft.Build.BuildEngine.UsingTaskCollection"></xref>.
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
  ms.author: susanno
  manager: douge
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo(UsingTask[], Int32)
  nameWithType: UsingTaskCollection.CopyTo(UsingTask[], Int32)
  fullName: UsingTaskCollection.CopyTo(UsingTask[], Int32)
- uid: Microsoft.Build.BuildEngine.UsingTask
  name: UsingTask
  nameWithType: UsingTask
  fullName: Microsoft.Build.BuildEngine.UsingTask
- uid: Microsoft.Build.BuildEngine.UsingTask[]
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: UsingTask[]
  nameWithType: UsingTask[]
  fullName: Microsoft.Build.BuildEngine.UsingTask[]
  spec.csharp:
  - uid: Microsoft.Build.BuildEngine.UsingTask
    name: UsingTask
    nameWithType: UsingTask
    fullName: Microsoft.Build.BuildEngine.UsingTask
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo(Array, Int32)
  nameWithType: UsingTaskCollection.CopyTo(Array, Int32)
  fullName: UsingTaskCollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: Count
  nameWithType: UsingTaskCollection.Count
  fullName: UsingTaskCollection.Count
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: UsingTaskCollection.GetEnumerator()
  fullName: UsingTaskCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
  fullName: UsingTaskCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
  fullName: UsingTaskCollection.SyncRoot
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo
  nameWithType: UsingTaskCollection.CopyTo
  fullName: UsingTaskCollection.CopyTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: Count
  nameWithType: UsingTaskCollection.Count
  fullName: UsingTaskCollection.Count
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: UsingTaskCollection.GetEnumerator
  fullName: UsingTaskCollection.GetEnumerator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
  fullName: UsingTaskCollection.IsSynchronized
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
  fullName: UsingTaskCollection.SyncRoot
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.BuildEngine/UsingTaskCollection.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
