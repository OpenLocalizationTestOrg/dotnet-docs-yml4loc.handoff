{"nodes":[{"content":"Provides a base class for all strongly typed collections that manage <xref href=\"System.Web.UI.IStateManager\"></xref> objects.","nodes":[{"pos":[0,126],"content":"Provides a base class for all strongly typed collections that manage <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> objects.","source":"Provides a base class for all strongly typed collections that manage <xref href=\"System.Web.UI.IStateManager\"></xref> objects."}],"pos":[2952,3079],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.  \n  \n The most important methods to consider when deriving from the <xref:System.Web.UI.StateManagedCollection> class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>. The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element. Storing an index rather than a fully qualified type name improves performance. The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules. Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type. The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded. The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.  \n  \n> [!IMPORTANT]\n>  <xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","nodes":[{"pos":[0,765],"content":"The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.","nodes":[{"content":"The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.","pos":[0,765],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> class is the base class for all strongly typed collections that store <ph id=\"ph2\">&lt;xref:System.Web.UI.IStateManager&gt;</ph> elements, including <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.DataControlFieldCollection&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Web.UI.WebControls.StyleCollection&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Web.UI.WebControls.TreeNodeBindingCollection&gt;</ph>, and others.","pos":[0,409],"source":"The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection manages its own state as well as the state of the elements it contains.","pos":[410,540],"source":" The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains."},{"content":"Therefore, a call to <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;</ph> saves the state of the collection and the state of all the elements currently contained by the collection.","pos":[541,765],"source":" Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection."}]}]},{"pos":[772,2320],"content":"The most important methods to consider when deriving from the <xref:System.Web.UI.StateManagedCollection> class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>. The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element. Storing an index rather than a fully qualified type name improves performance. The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules. Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type. The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded. The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.","nodes":[{"content":"The most important methods to consider when deriving from the <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> class are <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirty%2A&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A&gt;</ph>.","pos":[0,424],"source":"The most important methods to consider when deriving from the <xref:System.Web.UI.StateManagedCollection> class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;</ph> methods are used to store an index in view state for the type of a contained element.","pos":[425,642],"source":" The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element."},{"content":"Storing an index rather than a fully qualified type name improves performance.","pos":[643,721]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules.","pos":[722,909],"source":" The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules."},{"content":"Currently, the implementation of the <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method prohibits <ph id=\"ph2\">`null`</ph> objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type.","pos":[910,1169],"source":" Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirty%2A&gt;</ph> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded.","pos":[1170,1383],"source":" The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A&gt;</ph> method is an abstract method you can implement to perform this same behavior at the element level.","pos":[1384,1548],"source":" The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level."}]},{"pos":[2328,2672],"content":"[!IMPORTANT]\n <xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","leadings":["","> "],"nodes":[{"content":" <xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","pos":[13,342],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> stores assembly-qualified type names of the collection items in view state.","pos":[1,120],"source":" <xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state."},{"content":"A site visitor could decode the view state and retrieve the type name.","pos":[121,191]},{"content":"If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.","pos":[192,329]}]}]}],"pos":[3090,5770],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> class."}],"pos":[9023,9122],"yaml":true},{"content":"Derived classes can override the constructor to provide customized implementation.","nodes":[{"pos":[0,82],"content":"Derived classes can override the constructor to provide customized implementation.","nodes":[{"content":"Derived classes can override the constructor to provide customized implementation.","pos":[0,82]}]}],"pos":[9133,9216],"yaml":true,"extradata":"MT"},{"content":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,96],"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[10260,10357],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.","nodes":[{"pos":[0,356],"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnClear%2A&gt;</ph> method is called before the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> method is called, and the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A&gt;</ph> method is called after <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> has finished removing elements from the collection.","pos":[0,356],"source":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection."}]}],"pos":[10368,10725],"yaml":true,"extradata":"MT"},{"content":"Copies the elements of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to an array, starting at a particular array index.","nodes":[{"pos":[0,146],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection to an array, starting at a particular array index.","source":"Copies the elements of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to an array, starting at a particular array index."}],"pos":[11877,12024],"yaml":true},{"content":"The specified array must be of a compatible type.  \n  \n The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.","nodes":[{"pos":[0,49],"content":"The specified array must be of a compatible type.","nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]}]},{"pos":[56,225],"content":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.","nodes":[{"content":"The elements are copied to the <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection.","pos":[0,169],"source":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection."}]}],"pos":[12035,12265],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,237],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,168],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[169,237],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[12409,12647],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[12707,12775],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[12948,12978],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[13092,13130],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n \\- or -  \n  \n <code>index</code> is greater than or equal to the length of <code>array</code>.  \n  \n \\- or -  \n  \n The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,53],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[60,140],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is greater than or equal to the length of <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>index</code> is greater than or equal to the length of <code>array</code>."},{"pos":[147,154],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[161,369],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>."}],"pos":[13224,13608],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,114],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[14496,14611],"yaml":true},{"content":"The number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,98],"content":"The number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[14716,14815],"yaml":true},{"content":"When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>. The type of object created is based on the specified member of the collection returned by the <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref> method.","nodes":[{"pos":[0,306],"content":"When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>. The type of object created is based on the specified member of the collection returned by the <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref> method.","nodes":[{"content":"When overridden in a derived class, creates an instance of a class that implements <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph>.","pos":[0,132],"source":"When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>."},{"content":"The type of object created is based on the specified member of the collection returned by the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"&gt;&lt;/xref&gt;</ph> method.","pos":[133,306],"source":" The type of object created is based on the specified member of the collection returned by the <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref> method."}]}],"pos":[15897,16204],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.","nodes":[{"pos":[0,646],"content":"The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt;</ph> method is called internally by the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection in its implementation of the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,315],"source":"The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method."},{"content":"Derived collections override the <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A&gt;</ph> method to return a default instance of the <ph id=\"ph2\">&lt;xref:System.Web.UI.IStateManager&gt;</ph> type identified by the provided <ph id=\"ph3\">`index`</ph>, which maps to one of the types returned by the <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;</ph> method.","pos":[316,646],"source":" Derived collections override the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method."}]}],"pos":[16215,16862],"yaml":true,"extradata":"MT"},{"content":"The index, from the ordered list of types returned by <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref>, of the type of <xref href=\"System.Web.UI.IStateManager\"></xref> to create.","nodes":[{"pos":[0,201],"content":"The index, from the ordered list of types returned by <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"&gt;&lt;/xref&gt;</ph>, of the type of <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> to create.","source":"The index, from the ordered list of types returned by <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref>, of the type of <xref href=\"System.Web.UI.IStateManager\"></xref> to create."}],"pos":[17887,18089],"yaml":true},{"content":"An instance of a class derived from <xref href=\"System.Web.UI.IStateManager\"></xref>, according to the <code>index</code> provided.","nodes":[{"pos":[0,131],"content":"An instance of a class derived from <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph>, according to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> provided.","source":"An instance of a class derived from <xref href=\"System.Web.UI.IStateManager\"></xref>, according to the <code>index</code> provided."}],"pos":[18146,18278],"yaml":true},{"content":"In all cases when not overridden in a derived class.","nodes":[{"pos":[0,52],"content":"In all cases when not overridden in a derived class.","nodes":[{"content":"In all cases when not overridden in a derived class.","pos":[0,52]}]}],"pos":[18468,18521],"yaml":true},{"content":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,115],"content":"Returns an iterator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[19461,19577],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[19749,19903],"yaml":true},{"content":"When overridden in a derived class, gets an array of <xref href=\"System.Web.UI.IStateManager\"></xref> types that the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection can contain.","nodes":[{"pos":[0,198],"content":"When overridden in a derived class, gets an array of <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> types that the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection can contain.","source":"When overridden in a derived class, gets an array of <xref href=\"System.Web.UI.IStateManager\"></xref> types that the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection can contain."}],"pos":[20924,21123],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain.","nodes":[{"pos":[0,491],"content":"The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain.","nodes":[{"content":"The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain.","pos":[0,491],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;</ph> method is called internally by the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection in its implementation of the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;</ph> method.","pos":[0,288],"source":"The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method."},{"content":"Derived collections override the <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A&gt;</ph> method to return an array of <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> objects that represent the types the collection can contain.","pos":[289,491],"source":" Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain."}]}]}],"pos":[21134,21626],"yaml":true,"extradata":"MT"},{"content":"An ordered array of <xref href=\"System.Type\"></xref> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain. The default implementation returns `null`.","nodes":[{"pos":[0,215],"content":"An ordered array of <xref href=\"System.Type\"></xref> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain. The default implementation returns `null`.","nodes":[{"content":"An ordered array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects that identify the types of <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> objects the collection can contain.","pos":[0,172],"source":"An ordered array of <xref href=\"System.Type\"></xref> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain."},{"content":"The default implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[173,215],"source":" The default implementation returns `null`."}]}],"pos":[22625,22841],"yaml":true},{"content":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method removes all items from the collection.","nodes":[{"pos":[0,181],"content":"When overridden in a derived class, performs additional work before the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.Clear\"&gt;&lt;/xref&gt;</ph> method removes all items from the collection.","source":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method removes all items from the collection."}],"pos":[23826,24008],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","nodes":[{"pos":[0,298],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnClear%2A&gt;</ph> method to perform any additional work before all items are removed from the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> method.","pos":[0,298],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method."}]}],"pos":[24019,24318],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method finishes removing all items from the collection.","nodes":[{"pos":[0,190],"content":"When overridden in a derived class, performs additional work after the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.Clear\"&gt;&lt;/xref&gt;</ph> method finishes removing all items from the collection.","source":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method finishes removing all items from the collection."}],"pos":[25422,25613],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","nodes":[{"pos":[0,305],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A&gt;</ph> method to perform any additional work after all items are removed from the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> method.","pos":[0,305],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method."}]}],"pos":[25624,25930],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection.","nodes":[{"pos":[0,333],"content":"When overridden in a derived class, performs additional work before the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"&gt;&lt;/xref&gt;</ph> method adds an item to the collection.","source":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection."}],"pos":[27131,27465],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","nodes":[{"pos":[0,409],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnInsert%2A&gt;</ph> method to perform any additional work before an item is added to the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;</ph> method.","pos":[0,409],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method."}]}],"pos":[27476,27886],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method.","nodes":[{"pos":[0,200],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted by the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The zero-based index at which <code>value</code> should be inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method."}],"pos":[28044,28245],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,88],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[28306,28395],"yaml":true},{"content":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection.","nodes":[{"pos":[0,332],"content":"When overridden in a derived class, performs additional work after the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"&gt;&lt;/xref&gt;</ph> method adds an item to the collection.","source":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection."}],"pos":[29552,29885],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","nodes":[{"pos":[0,416],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A&gt;</ph> method to perform any additional work after an item is added to the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;</ph> method.","pos":[0,416],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method."}]}],"pos":[29896,30313],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> is inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method.","nodes":[{"pos":[0,193],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is inserted by the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The zero-based index at which <code>value</code> is inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method."}],"pos":[30479,30673],"yaml":true},{"content":"The object inserted into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,87],"content":"The object inserted into the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object inserted into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[30734,30822],"yaml":true},{"content":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection.","nodes":[{"pos":[0,340],"content":"When overridden in a derived class, performs additional work before the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"&gt;&lt;/xref&gt;</ph> method removes the specified item from the collection.","source":"When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection."}],"pos":[31939,32280],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","nodes":[{"pos":[0,418],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemove%2A&gt;</ph> method to perform any additional work before an item is removed from the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;</ph> method.","pos":[0,418],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method."}]}],"pos":[32291,32710],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called.","nodes":[{"pos":[0,179],"content":"The zero-based index of the item to remove, which is used when <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"&gt;&lt;/xref&gt;</ph> is called.","source":"The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called."}],"pos":[32868,33048],"yaml":true},{"content":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called.","nodes":[{"pos":[0,223],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>, which is used when <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"&gt;&lt;/xref&gt;</ph> is called.","source":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called."}],"pos":[33109,33333],"yaml":true},{"content":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection.","nodes":[{"pos":[0,339],"content":"When overridden in a derived class, performs additional work after the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"&gt;&lt;/xref&gt;</ph> method removes the specified item from the collection.","source":"When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection."}],"pos":[34490,34830],"yaml":true},{"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","nodes":[{"pos":[0,425],"content":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.","nodes":[{"content":"Collections derived from <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> can override the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A&gt;</ph> method to perform any additional work after an item is removed from the collection using the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt;</ph> method.","pos":[0,425],"source":"Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method."}]}],"pos":[34841,35267],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called.","nodes":[{"pos":[0,179],"content":"The zero-based index of the item to remove, which is used when <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"&gt;&lt;/xref&gt;</ph> is called.","source":"The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called."}],"pos":[35433,35613],"yaml":true},{"content":"The object removed from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called.","nodes":[{"pos":[0,221],"content":"The object removed from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>, which is used when <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"&gt;&lt;/xref&gt;</ph> is called.","source":"The object removed from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called."}],"pos":[35674,35896],"yaml":true},{"content":"When overridden in a derived class, validates an element of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,133],"content":"When overridden in a derived class, validates an element of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"When overridden in a derived class, validates an element of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[36965,37099],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods. The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method to perform any additional validation, such as type-checking.","nodes":[{"pos":[0,560],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods. The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method to perform any additional validation, such as type-checking.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called to validate the object manipulated through the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> implementation of the <ph id=\"ph3\">&lt;xref:System.Collections.IList&gt;</ph> interface methods.","pos":[0,242],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods."},{"content":"The default implementation is to verify that the object manipulated by the collection is not <ph id=\"ph1\">`null`</ph>; however, collections derived from <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> override the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method to perform any additional validation, such as type-checking.","pos":[243,560],"source":" The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method to perform any additional validation, such as type-checking."}]}],"pos":[37110,37671],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.IStateManager\"></xref> to validate.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> to validate.","source":"The <xref href=\"System.Web.UI.IStateManager\"></xref> to validate."}],"pos":[37821,37887],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[38064,38094],"yaml":true},{"content":"Forces the entire <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to be serialized into view state.","nodes":[{"pos":[0,120],"content":"Forces the entire <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection to be serialized into view state.","source":"Forces the entire <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to be serialized into view state."}],"pos":[39004,39125],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","nodes":[{"pos":[0,468],"content":"The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","nodes":[{"content":"The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","pos":[0,468],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirty%2A&gt;</ph> method forces the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection to be serialized completely (whereas the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;</ph> method saves only the change information).","pos":[0,313],"source":"The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information)."},{"content":"This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.","pos":[314,468]}]}]}],"pos":[39136,39605],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, instructs an `object` contained by the collection to record its entire state to view state, rather than recording only change information.","nodes":[{"pos":[0,174],"content":"When overridden in a derived class, instructs an <ph id=\"ph1\">`object`</ph> contained by the collection to record its entire state to view state, rather than recording only change information.","source":"When overridden in a derived class, instructs an `object` contained by the collection to record its entire state to view state, rather than recording only change information."}],"pos":[40757,40932],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.","nodes":[{"pos":[0,379],"content":"The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A&gt;</ph> method is called internally by the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt;</ph> methods.","pos":[0,379],"source":"The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods."}]}],"pos":[40943,41323],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.IStateManager\"></xref> that should serialize itself completely.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> that should serialize itself completely.","source":"The <xref href=\"System.Web.UI.IStateManager\"></xref> that should serialize itself completely."}],"pos":[42377,42471],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,114],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[43584,43699],"yaml":true},{"content":"The number of elements in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,88],"content":"The number of elements in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[43828,43917],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe). This method returns `false` in all cases.","nodes":[{"pos":[0,177],"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe). This method returns `false` in all cases.","nodes":[{"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection is synchronized (thread safe).","pos":[0,135],"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe)."},{"content":"This method returns <ph id=\"ph1\">`false`</ph> in all cases.","pos":[136,177],"source":" This method returns `false` in all cases."}]}],"pos":[45106,45284],"yaml":true},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[45425,45449],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection. This method returns `null` in all cases.","nodes":[{"pos":[0,171],"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection. This method returns `null` in all cases.","nodes":[{"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","pos":[0,130],"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."},{"content":"This method returns <ph id=\"ph1\">`null`</ph> in all cases.","pos":[131,171],"source":" This method returns `null` in all cases."}]}],"pos":[46611,46783],"yaml":true},{"content":"`null` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`null`</ph> in all cases.","source":"`null` in all cases."}],"pos":[46919,46942],"yaml":true},{"content":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,115],"content":"Returns an iterator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[48132,48248],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[48425,48579],"yaml":true},{"content":"Adds an item to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,89],"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Adds an item to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[49741,49831],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.","nodes":[{"pos":[0,304],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnInsert%2A&gt;</ph> methods are called before the element is added to the collection, and the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A&gt;</ph> method is called after the element is added.","pos":[0,304],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added."}]}],"pos":[49842,50147],"yaml":true,"extradata":"MT"},{"content":"The `object` to add to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">`object`</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The `object` to add to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[50277,50363],"yaml":true},{"content":"The position at which the new element was inserted.","nodes":[{"pos":[0,51],"content":"The position at which the new element was inserted.","nodes":[{"content":"The position at which the new element was inserted.","pos":[0,51]}]}],"pos":[50419,50471],"yaml":true},{"content":"The specified <code>value</code> is `null`.","nodes":[{"pos":[0,43],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The specified <code>value</code> is `null`."}],"pos":[50666,50710],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,96],"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[51709,51806],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.","nodes":[{"pos":[0,356],"content":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnClear%2A&gt;</ph> method is called before the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> method is called, and the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A&gt;</ph> method is called after <ph id=\"ph4\">&lt;xref:System.Web.UI.StateManagedCollection.Clear%2A&gt;</ph> has finished removing elements from the collection.","pos":[0,356],"source":"The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection."}]}],"pos":[51817,52174],"yaml":true,"extradata":"MT"},{"content":"Determines whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection contains a specific value.","nodes":[{"pos":[0,118],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection contains a specific value.","source":"Determines whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection contains a specific value."}],"pos":[53415,53534],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called to validate <ph id=\"ph2\">`value`</ph> before the collection is checked.","source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked."}],"pos":[53545,53678],"yaml":true,"extradata":"MT"},{"content":"The `object` to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">`object`</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The `object` to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[53814,53903],"yaml":true},{"content":"`true` if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, `false`. If `null` is passed for the value parameter, `false` is returned.","nodes":[{"pos":[0,181],"content":"`true` if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, `false`. If `null` is passed for the value parameter, `false` is returned.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the object is found in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,115],"source":"`true` if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, `false`."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed for the value parameter, <ph id=\"ph2\">`false`</ph> is returned.","pos":[116,181],"source":" If `null` is passed for the value parameter, `false` is returned."}]}],"pos":[53961,54145],"yaml":true},{"content":"Determines the index of a specified item in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,117],"content":"Determines the index of a specified item in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Determines the index of a specified item in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[55320,55438],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called to validate <ph id=\"ph2\">`value`</ph> before the index is returned.","source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned."}],"pos":[55449,55578],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,86],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[55712,55799],"yaml":true},{"content":"The index of <code>value</code>, if it is found in the list; otherwise, -1.","nodes":[{"pos":[0,75],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if it is found in the list; otherwise, -1.","source":"The index of <code>value</code>, if it is found in the list; otherwise, -1."}],"pos":[55855,55931],"yaml":true},{"content":"Inserts an item into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection at the specified index.","nodes":[{"pos":[0,117],"content":"Inserts an item into the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection at the specified index.","source":"Inserts an item into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection at the specified index."}],"pos":[57159,57277],"yaml":true},{"content":"If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection. If `index` equals the number of items in the collection, `value` is appended to the end of the collection.","nodes":[{"pos":[0,224],"content":"If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection. If `index` equals the number of items in the collection, `value` is appended to the end of the collection.","nodes":[{"content":"If <ph id=\"ph1\">`index`</ph> is -1, <ph id=\"ph2\">`value`</ph> is appended to the beginning of the <ph id=\"ph3\">&lt;xref:System.Web.UI.StateManagedCollection&gt;</ph> collection.","pos":[0,117],"source":"If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection."},{"content":"If <ph id=\"ph1\">`index`</ph> equals the number of items in the collection, <ph id=\"ph2\">`value`</ph> is appended to the end of the collection.","pos":[118,224],"source":" If `index` equals the number of items in the collection, `value` is appended to the end of the collection."}]}],"pos":[57288,57513],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[57657,57726],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,88],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[57787,57876],"yaml":true},{"content":"The specified <code>index</code> is out of range of the collection.","nodes":[{"pos":[0,67],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range of the collection.","source":"The specified <code>index</code> is out of range of the collection."}],"pos":[58086,58154],"yaml":true},{"content":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."}],"pos":[58256,58332],"yaml":true},{"content":"The specified <code>value</code> is `null`.","nodes":[{"pos":[0,43],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The specified <code>value</code> is `null`."}],"pos":[58434,58478],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size. This method returns `false` in all cases.","nodes":[{"pos":[0,164],"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size. This method returns `false` in all cases.","nodes":[{"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection has a fixed size.","pos":[0,122],"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size."},{"content":"This method returns <ph id=\"ph1\">`false`</ph> in all cases.","pos":[123,164],"source":" This method returns `false` in all cases."}]}],"pos":[59509,59674],"yaml":true},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[59806,59830],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is read-only.","nodes":[{"pos":[0,118],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is read-only."}],"pos":[60959,61078],"yaml":true},{"content":"`true` if the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only; otherwise, `false`."}],"pos":[61209,61317],"yaml":true},{"content":"Gets the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.","nodes":[{"pos":[0,89],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> element at the specified index.","source":"Gets the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index."}],"pos":[62472,62562],"yaml":true},{"content":"The zero-based index of the element to get.","nodes":[{"pos":[0,43],"content":"The zero-based index of the element to get.","nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]}],"pos":[62723,62767],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[62824,62860],"yaml":true},{"content":"The specified <code>index</code> is out of range of the collection.","nodes":[{"pos":[0,67],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is out of range of the collection.","source":"The specified <code>index</code> is out of range of the collection."}],"pos":[63068,63136],"yaml":true},{"content":"Removes the first occurrence of the specified object from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.","nodes":[{"pos":[0,131],"content":"Removes the first occurrence of the specified object from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes the first occurrence of the specified object from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection."}],"pos":[64204,64336],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","nodes":[{"pos":[0,372],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called to validate <ph id=\"ph2\">`value`</ph> before the value is removed from the collection.","pos":[0,147],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemove%2A&gt;</ph> method is called before the object is removed, and the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A&gt;</ph> method is called after the object is removed.","pos":[148,372],"source":" The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed."}]}],"pos":[64347,64720],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.","nodes":[{"pos":[0,88],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>."}],"pos":[64854,64943],"yaml":true},{"content":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."}],"pos":[65141,65217],"yaml":true},{"content":"Removes the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.","nodes":[{"pos":[0,92],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> element at the specified index.","source":"Removes the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index."}],"pos":[66291,66384],"yaml":true},{"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","nodes":[{"pos":[0,372],"content":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnValidate%2A&gt;</ph> method is called to validate <ph id=\"ph2\">`value`</ph> before the value is removed from the collection.","pos":[0,147],"source":"The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemove%2A&gt;</ph> method is called before the object is removed, and the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A&gt;</ph> method is called after the object is removed.","pos":[148,372],"source":" The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed."}]}],"pos":[66395,66768],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[66900,66944],"yaml":true},{"content":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only."}],"pos":[67144,67220],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is saving changes to its view state.","nodes":[{"pos":[0,141],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection is saving changes to its view state.","source":"Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is saving changes to its view state."}],"pos":[68332,68474],"yaml":true},{"content":"`true` if the collection is marked to save its own state and the state of all the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains; otherwise, `false`.","nodes":[{"pos":[0,169],"content":"<ph id=\"ph1\">`true`</ph> if the collection is marked to save its own state and the state of all the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> items it contains; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the collection is marked to save its own state and the state of all the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains; otherwise, `false`."}],"pos":[68617,68789],"yaml":true},{"content":"Restores the previously saved view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains.","nodes":[{"pos":[0,192],"content":"Restores the previously saved view state of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection and the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> items it contains.","source":"Restores the previously saved view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains."}],"pos":[70047,70240],"yaml":true},{"content":"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.  \n  \n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \n  \n This method is used primarily by control developers. You can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).","nodes":[{"pos":[0,170],"content":"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.","nodes":[{"content":"This method restores view-state information that was saved by the <ph id=\"ph1\">&lt;xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A&gt;</ph> method.","pos":[0,170],"source":"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method."}]},{"pos":[177,686],"content":"View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).","nodes":[{"content":"View state is the accumulation of the values of a server control's properties.","pos":[0,78]},{"content":"These values are automatically placed in the server control's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property, which is an instance of the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateBag&gt;</ph> class.","pos":[79,257],"source":" These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"This property's value is then persisted to a string object after the save state stage of the server control life cycle.","pos":[258,377]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept>.","pos":[378,509],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)."}]},{"pos":[693,973],"content":"This method is used primarily by control developers. You can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).","nodes":[{"content":"This method is used primarily by control developers.","pos":[0,52]},{"content":"You can override this method to specify how a custom server control restores its view state.","pos":[53,145]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.","pos":[146,280],"source":" For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)."}]}],"pos":[70251,71231],"yaml":true,"extradata":"MT"},{"content":"An object that represents the collection and collection elements' state to restore.","nodes":[{"pos":[0,83],"content":"An object that represents the collection and collection elements' state to restore.","nodes":[{"content":"An object that represents the collection and collection elements' state to restore.","pos":[0,83]}]}],"pos":[71390,71474],"yaml":true},{"content":"Saves the changes to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each <xref href=\"System.Web.UI.IStateManager\"></xref> object it contains since the time the page was posted back to the server.","nodes":[{"pos":[0,225],"content":"Saves the changes to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection and each <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> object it contains since the time the page was posted back to the server.","source":"Saves the changes to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each <xref href=\"System.Web.UI.IStateManager\"></xref> object it contains since the time the page was posted back to the server."}],"pos":[72663,72889],"yaml":true},{"content":"This method is used primarily by control developers.  \n  \n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \n  \n When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\"hidden\">`). When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).","nodes":[{"pos":[0,52],"content":"This method is used primarily by control developers.","nodes":[{"content":"This method is used primarily by control developers.","pos":[0,52]}]},{"pos":[59,568],"content":"View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).","nodes":[{"content":"View state is the accumulation of the values of a server control's properties.","pos":[0,78]},{"content":"These values are automatically placed in the server control's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property, which is an instance of the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateBag&gt;</ph> class.","pos":[79,257],"source":" These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"This property's value is then persisted to a string object after the save state stage of the server control life cycle.","pos":[258,377]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept>.","pos":[378,509],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)."}]},{"pos":[575,1151],"content":"When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\"hidden\">`). When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).","nodes":[{"content":"When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (<ph id=\"ph1\">`&lt;input type=\"hidden\"&gt;`</ph>).","pos":[0,152],"source":"When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\"hidden\">`)."},{"content":"When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property.","pos":[153,333],"source":" When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept> and<bpt id=\"p2\">[</bpt>ASP.NET State Management Overview<ept id=\"p2\">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.","pos":[334,576],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)."}]}],"pos":[72900,74060],"yaml":true,"extradata":"MT"},{"content":"The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains. If no view state is associated with the collection and its elements, this method returns `null`.","nodes":[{"pos":[0,243],"content":"The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains. If no view state is associated with the collection and its elements, this method returns `null`.","nodes":[{"content":"The object that contains the changes to the view state of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> and the items it contains.","pos":[0,146],"source":"The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains."},{"content":"If no view state is associated with the collection and its elements, this method returns <ph id=\"ph1\">`null`</ph>.","pos":[147,243],"source":" If no view state is associated with the collection and its elements, this method returns `null`."}]}],"pos":[74198,74442],"yaml":true},{"content":"Causes the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each of the <xref href=\"System.Web.UI.IStateManager\"></xref> objects it contains to track changes to their view state so they can be persisted across requests for the same page.","nodes":[{"pos":[0,261],"content":"Causes the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.StateManagedCollection\"&gt;&lt;/xref&gt;</ph> collection and each of the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IStateManager\"&gt;&lt;/xref&gt;</ph> objects it contains to track changes to their view state so they can be persisted across requests for the same page.","source":"Causes the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each of the <xref href=\"System.Web.UI.IStateManager\"></xref> objects it contains to track changes to their view state so they can be persisted across requests for the same page."}],"pos":[75637,75899],"yaml":true},{"content":"View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).","nodes":[{"pos":[0,509],"content":"View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).","nodes":[{"content":"View state is the accumulation of the values of a server control's properties.","pos":[0,78]},{"content":"These values are automatically placed in the server control's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property, which is an instance of the <ph id=\"ph2\">&lt;xref:System.Web.UI.StateBag&gt;</ph> class.","pos":[79,257],"source":" These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class."},{"content":"This property's value is then persisted to a string object after the save state stage of the server control life cycle.","pos":[258,377]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: ASP.NET Web Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)</ept>.","pos":[378,509],"source":" For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)."}]}],"pos":[75910,76422],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.StateManagedCollection\n  commentId: T:System.Web.UI.StateManagedCollection\n  id: StateManagedCollection\n  children:\n  - System.Web.UI.StateManagedCollection.#ctor\n  - System.Web.UI.StateManagedCollection.Clear\n  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  - System.Web.UI.StateManagedCollection.Count\n  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  - System.Web.UI.StateManagedCollection.GetEnumerator\n  - System.Web.UI.StateManagedCollection.GetKnownTypes\n  - System.Web.UI.StateManagedCollection.OnClear\n  - System.Web.UI.StateManagedCollection.OnClearComplete\n  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  - System.Web.UI.StateManagedCollection.SetDirty\n  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  langs:\n  - csharp\n  name: StateManagedCollection\n  nameWithType: StateManagedCollection\n  fullName: System.Web.UI.StateManagedCollection\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Provides a base class for all strongly typed collections that manage <xref href=\"System.Web.UI.IStateManager\"></xref> objects.\n  remarks: \"The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others. The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains. Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.  \\n  \\n The most important methods to consider when deriving from the <xref:System.Web.UI.StateManagedCollection> class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>. The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element. Storing an index rather than a fully qualified type name improves performance. The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules. Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type. The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded. The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state. A site visitor could decode the view state and retrieve the type name. If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.\"\n  example:\n  - \"The following code example demonstrates how to derive a strongly typed collection class from <xref:System.Web.UI.StateManagedCollection> to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \\n  \\n [!code-csharp[Samples.AspNet.CycleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#1)]\\n [!code-vb[Samples.AspNet.CycleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#1)]\"\n  syntax:\n    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Web.UI.WebControls.DataControlFieldCollection\n  - System.Web.UI.WebControls.DataPagerFieldCollection\n  - System.Web.UI.WebControls.HotSpotCollection\n  - System.Web.UI.WebControls.MenuItemBindingCollection\n  - System.Web.UI.WebControls.MenuItemStyleCollection\n  - System.Web.UI.WebControls.ParameterCollection\n  - System.Web.UI.WebControls.StyleCollection\n  - System.Web.UI.WebControls.SubMenuStyleCollection\n  - System.Web.UI.WebControls.TreeNodeBindingCollection\n  - System.Web.UI.WebControls.TreeNodeStyleCollection\n  - System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection\n  implements:\n  - System.Collections.IList\n  - System.Web.UI.IStateManager\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.#ctor\n  commentId: M:System.Web.UI.StateManagedCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: StateManagedCollection()\n  nameWithType: StateManagedCollection.StateManagedCollection()\n  fullName: StateManagedCollection.StateManagedCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> class.\n  remarks: Derived classes can override the constructor to provide customized implementation.\n  syntax:\n    content: protected StateManagedCollection ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.Clear\n  commentId: M:System.Web.UI.StateManagedCollection.Clear\n  id: Clear\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: StateManagedCollection.Clear()\n  fullName: StateManagedCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: StateManagedCollection.CopyTo(Array, Int32)\n  fullName: StateManagedCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Copies the elements of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to an array, starting at a particular array index.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.\"\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Web.UI.StateManagedCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is greater than or equal to the length of <code>array</code>.  \\n  \\n \\\\- or -  \\n  \\n The number of elements in the source <xref href=\\\"System.Web.UI.StateManagedCollection\\\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.Count\n  commentId: P:System.Web.UI.StateManagedCollection.Count\n  id: Count\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: StateManagedCollection.Count\n  fullName: StateManagedCollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  commentId: M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  id: CreateKnownType(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: CreateKnownType(Int32)\n  nameWithType: StateManagedCollection.CreateKnownType(Int32)\n  fullName: StateManagedCollection.CreateKnownType(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, creates an instance of a class that implements <xref href=\"System.Web.UI.IStateManager\"></xref>. The type of object created is based on the specified member of the collection returned by the <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref> method.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method. The `CycleCollection` implementation of <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]\"\n  syntax:\n    content: protected virtual object CreateKnownType (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index, from the ordered list of types returned by <xref href=\"System.Web.UI.StateManagedCollection.GetKnownTypes\"></xref>, of the type of <xref href=\"System.Web.UI.IStateManager\"></xref> to create.\n    return:\n      type: System.Object\n      description: An instance of a class derived from <xref href=\"System.Web.UI.IStateManager\"></xref>, according to the <code>index</code> provided.\n  overload: System.Web.UI.StateManagedCollection.CreateKnownType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In all cases when not overridden in a derived class.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator\n  commentId: M:System.Web.UI.StateManagedCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: StateManagedCollection.GetEnumerator()\n  fullName: StateManagedCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes\n  commentId: M:System.Web.UI.StateManagedCollection.GetKnownTypes\n  id: GetKnownTypes\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: GetKnownTypes()\n  nameWithType: StateManagedCollection.GetKnownTypes()\n  fullName: StateManagedCollection.GetKnownTypes()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, gets an array of <xref href=\"System.Web.UI.IStateManager\"></xref> types that the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection can contain.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method. Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method. The `CycleCollection` implementation of <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]\"\n  syntax:\n    content: protected virtual Type[] GetKnownTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An ordered array of <xref href=\"System.Type\"></xref> objects that identify the types of <xref href=\"System.Web.UI.IStateManager\"></xref> objects the collection can contain. The default implementation returns `null`.\n  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnClear\n  commentId: M:System.Web.UI.StateManagedCollection.OnClear\n  id: OnClear\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: StateManagedCollection.OnClear()\n  fullName: StateManagedCollection.OnClear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method removes all items from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.\n  syntax:\n    content: protected virtual void OnClear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.OnClear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete\n  commentId: M:System.Web.UI.StateManagedCollection.OnClearComplete\n  id: OnClearComplete\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: StateManagedCollection.OnClearComplete()\n  fullName: StateManagedCollection.OnClearComplete()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.Clear\"></xref> method finishes removing all items from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.\n  syntax:\n    content: protected virtual void OnClearComplete ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.OnClearComplete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnInsert(Int32, Object)\n  nameWithType: StateManagedCollection.OnInsert(Int32, Object)\n  fullName: StateManagedCollection.OnInsert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.\n  syntax:\n    content: protected virtual void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.OnInsert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  id: OnInsertComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnInsertComplete(Int32, Object)\n  nameWithType: StateManagedCollection.OnInsertComplete(Int32, Object)\n  fullName: StateManagedCollection.OnInsertComplete(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\"></xref> method adds an item to the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.\n  syntax:\n    content: protected virtual void OnInsertComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> is inserted by the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\"></xref> method.\n    - id: value\n      type: System.Object\n      description: The object inserted into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnRemove(Int32, Object)\n  nameWithType: StateManagedCollection.OnRemove(Int32, Object)\n  fullName: StateManagedCollection.OnRemove(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work before the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.\n  syntax:\n    content: protected virtual void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called.\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called.\n  overload: System.Web.UI.StateManagedCollection.OnRemove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  id: OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnRemoveComplete(Int32, Object)\n  nameWithType: StateManagedCollection.OnRemoveComplete(Int32, Object)\n  fullName: StateManagedCollection.OnRemoveComplete(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, performs additional work after the <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> or <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> method removes the specified item from the collection.\n  remarks: Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.\n  syntax:\n    content: protected virtual void OnRemoveComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\"></xref> is called.\n    - id: value\n      type: System.Object\n      description: The object removed from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>, which is used when <xref href=\"System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\"></xref> is called.\n  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  id: OnValidate(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: OnValidate(Object)\n  nameWithType: StateManagedCollection.OnValidate(Object)\n  fullName: StateManagedCollection.OnValidate(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, validates an element of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods. The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method to perform any additional validation, such as type-checking.\n  syntax:\n    content: protected virtual void OnValidate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Web.UI.IStateManager\"></xref> to validate.\n  overload: System.Web.UI.StateManagedCollection.OnValidate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.SetDirty\n  commentId: M:System.Web.UI.StateManagedCollection.SetDirty\n  id: SetDirty\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: SetDirty()\n  nameWithType: StateManagedCollection.SetDirty()\n  fullName: StateManagedCollection.SetDirty()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Forces the entire <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection to be serialized into view state.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information). This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.\n  syntax:\n    content: public void SetDirty ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.SetDirty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  id: SetDirtyObject(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: SetDirtyObject(Object)\n  nameWithType: StateManagedCollection.SetDirtyObject(Object)\n  fullName: StateManagedCollection.SetDirtyObject(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: When overridden in a derived class, instructs an `object` contained by the collection to record its entire state to view state, rather than recording only change information.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.\n  example:\n  - \"The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \\n  \\n [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]\\n [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]\"\n  syntax:\n    content: protected abstract void SetDirtyObject (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Web.UI.IStateManager\"></xref> that should serialize itself completely.\n  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: ICollection.Count\n  nameWithType: StateManagedCollection.ICollection.Count\n  fullName: StateManagedCollection.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the number of elements contained in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.ICollection.IsSynchronized\n  fullName: StateManagedCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is synchronized (thread safe). This method returns `false` in all cases.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: StateManagedCollection.ICollection.SyncRoot\n  fullName: StateManagedCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection. This method returns `null` in all cases.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: '`null` in all cases.'\n  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: StateManagedCollection.IEnumerable.GetEnumerator()\n  fullName: StateManagedCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Returns an iterator that iterates through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: StateManagedCollection.IList.Add(Object)\n  fullName: StateManagedCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Adds an item to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The `object` to add to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The position at which the new element was inserted.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <code>value</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: StateManagedCollection.IList.Clear()\n  fullName: StateManagedCollection.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes all items from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: StateManagedCollection.IList.Contains(Object)\n  fullName: StateManagedCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection contains a specific value.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The `object` to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the object is found in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>; otherwise, `false`. If `null` is passed for the value parameter, `false` is returned.'\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: StateManagedCollection.IList.IndexOf(Object)\n  fullName: StateManagedCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines the index of a specified item in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code>, if it is found in the list; otherwise, -1.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: StateManagedCollection.IList.Insert(Int32, Object)\n  fullName: StateManagedCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Inserts an item into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection at the specified index.\n  remarks: If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection. If `index` equals the number of items in the collection, `value` is appended to the end of the collection.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified <code>index</code> is out of range of the collection.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <code>value</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: StateManagedCollection.IList.IsFixedSize\n  fullName: StateManagedCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection has a fixed size. This method returns `false` in all cases.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: StateManagedCollection.IList.IsReadOnly\n  fullName: StateManagedCollection.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is read-only.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: StateManagedCollection.IList.Item(Int32)\n  fullName: StateManagedCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified <code>index</code> is out of range of the collection.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: StateManagedCollection.IList.Remove(Object)\n  fullName: StateManagedCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes the first occurrence of the specified object from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Web.UI.StateManagedCollection\"></xref>.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IList.RemoveAt(Int32)\n  nameWithType: StateManagedCollection.IList.RemoveAt(Int32)\n  fullName: StateManagedCollection.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Removes the <xref href=\"System.Web.UI.IStateManager\"></xref> element at the specified index.\n  remarks: The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection. The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  commentId: P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  id: System#Web#UI#IStateManager#IsTrackingViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.IStateManager.IsTrackingViewState\n  fullName: StateManagedCollection.IStateManager.IsTrackingViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection is saving changes to its view state.\n  syntax:\n    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is marked to save its own state and the state of all the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains; otherwise, `false`.'\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  commentId: M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  id: System#Web#UI#IStateManager#LoadViewState(System.Object)\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IStateManager.LoadViewState(Object)\n  nameWithType: StateManagedCollection.IStateManager.LoadViewState(Object)\n  fullName: StateManagedCollection.IStateManager.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Restores the previously saved view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and the <xref href=\"System.Web.UI.IStateManager\"></xref> items it contains.\n  remarks: \"This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.  \\n  \\n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \\n  \\n This method is used primarily by control developers. You can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).\"\n  syntax:\n    content: void IStateManager.LoadViewState (object savedState);\n    parameters:\n    - id: savedState\n      type: System.Object\n      description: An object that represents the collection and collection elements' state to restore.\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  commentId: M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  id: System#Web#UI#IStateManager#SaveViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IStateManager.SaveViewState()\n  nameWithType: StateManagedCollection.IStateManager.SaveViewState()\n  fullName: StateManagedCollection.IStateManager.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Saves the changes to the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each <xref href=\"System.Web.UI.IStateManager\"></xref> object it contains since the time the page was posted back to the server.\n  remarks: \"This method is used primarily by control developers.  \\n  \\n View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).  \\n  \\n When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type=\\\"hidden\\\">`). When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).\"\n  syntax:\n    content: object IStateManager.SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object that contains the changes to the view state of the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> and the items it contains. If no view state is associated with the collection and its elements, this method returns `null`.\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  commentId: M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  id: System#Web#UI#IStateManager#TrackViewState\n  isEii: true\n  parent: System.Web.UI.StateManagedCollection\n  langs:\n  - csharp\n  name: IStateManager.TrackViewState()\n  nameWithType: StateManagedCollection.IStateManager.TrackViewState()\n  fullName: StateManagedCollection.IStateManager.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Causes the <xref href=\"System.Web.UI.StateManagedCollection\"></xref> collection and each of the <xref href=\"System.Web.UI.IStateManager\"></xref> objects it contains to track changes to their view state so they can be persisted across requests for the same page.\n  remarks: \"View state is the accumulation of the values of a server control's properties. These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property's value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).\"\n  syntax:\n    content: void IStateManager.TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Web.UI.StateManagedCollection.#ctor\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: StateManagedCollection()\n  nameWithType: StateManagedCollection.StateManagedCollection()\n  fullName: StateManagedCollection.StateManagedCollection()\n- uid: System.Web.UI.StateManagedCollection.Clear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: StateManagedCollection.Clear()\n  fullName: StateManagedCollection.Clear()\n- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: StateManagedCollection.CopyTo(Array, Int32)\n  fullName: StateManagedCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.StateManagedCollection.Count\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Count\n  nameWithType: StateManagedCollection.Count\n  fullName: StateManagedCollection.Count\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CreateKnownType(Int32)\n  nameWithType: StateManagedCollection.CreateKnownType(Int32)\n  fullName: StateManagedCollection.CreateKnownType(Int32)\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: StateManagedCollection.GetEnumerator()\n  fullName: StateManagedCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetKnownTypes()\n  nameWithType: StateManagedCollection.GetKnownTypes()\n  fullName: StateManagedCollection.GetKnownTypes()\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.StateManagedCollection.OnClear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClear()\n  nameWithType: StateManagedCollection.OnClear()\n  fullName: StateManagedCollection.OnClear()\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: StateManagedCollection.OnClearComplete()\n  fullName: StateManagedCollection.OnClearComplete()\n- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsert(Int32, Object)\n  nameWithType: StateManagedCollection.OnInsert(Int32, Object)\n  fullName: StateManagedCollection.OnInsert(Int32, Object)\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsertComplete(Int32, Object)\n  nameWithType: StateManagedCollection.OnInsertComplete(Int32, Object)\n  fullName: StateManagedCollection.OnInsertComplete(Int32, Object)\n- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemove(Int32, Object)\n  nameWithType: StateManagedCollection.OnRemove(Int32, Object)\n  fullName: StateManagedCollection.OnRemove(Int32, Object)\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemoveComplete(Int32, Object)\n  nameWithType: StateManagedCollection.OnRemoveComplete(Int32, Object)\n  fullName: StateManagedCollection.OnRemoveComplete(Int32, Object)\n- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnValidate(Object)\n  nameWithType: StateManagedCollection.OnValidate(Object)\n  fullName: StateManagedCollection.OnValidate(Object)\n- uid: System.Web.UI.StateManagedCollection.SetDirty\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirty()\n  nameWithType: StateManagedCollection.SetDirty()\n  fullName: StateManagedCollection.SetDirty()\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirtyObject(Object)\n  nameWithType: StateManagedCollection.SetDirtyObject(Object)\n  fullName: StateManagedCollection.SetDirtyObject(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: ICollection.Count\n  nameWithType: StateManagedCollection.ICollection.Count\n  fullName: StateManagedCollection.ICollection.Count\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.ICollection.IsSynchronized\n  fullName: StateManagedCollection.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: StateManagedCollection.ICollection.SyncRoot\n  fullName: StateManagedCollection.ICollection.SyncRoot\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: StateManagedCollection.IEnumerable.GetEnumerator()\n  fullName: StateManagedCollection.IEnumerable.GetEnumerator()\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: StateManagedCollection.IList.Add(Object)\n  fullName: StateManagedCollection.IList.Add(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: StateManagedCollection.IList.Clear()\n  fullName: StateManagedCollection.IList.Clear()\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: StateManagedCollection.IList.Contains(Object)\n  fullName: StateManagedCollection.IList.Contains(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: StateManagedCollection.IList.IndexOf(Object)\n  fullName: StateManagedCollection.IList.IndexOf(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: StateManagedCollection.IList.Insert(Int32, Object)\n  fullName: StateManagedCollection.IList.Insert(Int32, Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: StateManagedCollection.IList.IsFixedSize\n  fullName: StateManagedCollection.IList.IsFixedSize\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: StateManagedCollection.IList.IsReadOnly\n  fullName: StateManagedCollection.IList.IsReadOnly\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: StateManagedCollection.IList.Item(Int32)\n  fullName: StateManagedCollection.IList.Item(Int32)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: StateManagedCollection.IList.Remove(Object)\n  fullName: StateManagedCollection.IList.Remove(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: StateManagedCollection.IList.RemoveAt(Int32)\n  fullName: StateManagedCollection.IList.RemoveAt(Int32)\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.IStateManager.IsTrackingViewState\n  fullName: StateManagedCollection.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IStateManager.LoadViewState(Object)\n  nameWithType: StateManagedCollection.IStateManager.LoadViewState(Object)\n  fullName: StateManagedCollection.IStateManager.LoadViewState(Object)\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IStateManager.SaveViewState()\n  nameWithType: StateManagedCollection.IStateManager.SaveViewState()\n  fullName: StateManagedCollection.IStateManager.SaveViewState()\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: IStateManager.TrackViewState()\n  nameWithType: StateManagedCollection.IStateManager.TrackViewState()\n  fullName: StateManagedCollection.IStateManager.TrackViewState()\n- uid: System.Web.UI.StateManagedCollection.#ctor*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: StateManagedCollection\n  nameWithType: StateManagedCollection.StateManagedCollection\n  fullName: StateManagedCollection.StateManagedCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.Clear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Clear\n  nameWithType: StateManagedCollection.Clear\n  fullName: StateManagedCollection.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.CopyTo*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: StateManagedCollection.CopyTo\n  fullName: StateManagedCollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.Count*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: Count\n  nameWithType: StateManagedCollection.Count\n  fullName: StateManagedCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.CreateKnownType*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: CreateKnownType\n  nameWithType: StateManagedCollection.CreateKnownType\n  fullName: StateManagedCollection.CreateKnownType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.GetEnumerator*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: StateManagedCollection.GetEnumerator\n  fullName: StateManagedCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: GetKnownTypes\n  nameWithType: StateManagedCollection.GetKnownTypes\n  fullName: StateManagedCollection.GetKnownTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnClear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClear\n  nameWithType: StateManagedCollection.OnClear\n  fullName: StateManagedCollection.OnClear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnClearComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnClearComplete\n  nameWithType: StateManagedCollection.OnClearComplete\n  fullName: StateManagedCollection.OnClearComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnInsert*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsert\n  nameWithType: StateManagedCollection.OnInsert\n  fullName: StateManagedCollection.OnInsert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnInsertComplete\n  nameWithType: StateManagedCollection.OnInsertComplete\n  fullName: StateManagedCollection.OnInsertComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnRemove*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemove\n  nameWithType: StateManagedCollection.OnRemove\n  fullName: StateManagedCollection.OnRemove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnRemoveComplete\n  nameWithType: StateManagedCollection.OnRemoveComplete\n  fullName: StateManagedCollection.OnRemoveComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.OnValidate*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: OnValidate\n  nameWithType: StateManagedCollection.OnValidate\n  fullName: StateManagedCollection.OnValidate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.SetDirty*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirty\n  nameWithType: StateManagedCollection.SetDirty\n  fullName: StateManagedCollection.SetDirty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: SetDirtyObject\n  nameWithType: StateManagedCollection.SetDirtyObject\n  fullName: StateManagedCollection.SetDirtyObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: StateManagedCollection.System.Collections.ICollection.Count\n  fullName: StateManagedCollection.System.Collections.ICollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized\n  fullName: StateManagedCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot\n  fullName: StateManagedCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: StateManagedCollection.System.Collections.IList.Add\n  fullName: StateManagedCollection.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: StateManagedCollection.System.Collections.IList.Clear\n  fullName: StateManagedCollection.System.Collections.IList.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: StateManagedCollection.System.Collections.IList.Contains\n  fullName: StateManagedCollection.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf\n  fullName: StateManagedCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: StateManagedCollection.System.Collections.IList.Insert\n  fullName: StateManagedCollection.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize\n  fullName: StateManagedCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly\n  fullName: StateManagedCollection.System.Collections.IList.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: StateManagedCollection.System.Collections.IList.Item\n  fullName: StateManagedCollection.System.Collections.IList.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: StateManagedCollection.System.Collections.IList.Remove\n  fullName: StateManagedCollection.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt\n  fullName: StateManagedCollection.System.Collections.IList.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState\n  fullName: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState\n  fullName: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*\n  parent: System.Web.UI.StateManagedCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState\n  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState\n  fullName: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/StateManagedCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Web.UI.IStateManager\n  parent: System.Web.UI\n  isExternal: false\n  name: IStateManager\n  nameWithType: IStateManager\n  fullName: System.Web.UI.IStateManager\n"}