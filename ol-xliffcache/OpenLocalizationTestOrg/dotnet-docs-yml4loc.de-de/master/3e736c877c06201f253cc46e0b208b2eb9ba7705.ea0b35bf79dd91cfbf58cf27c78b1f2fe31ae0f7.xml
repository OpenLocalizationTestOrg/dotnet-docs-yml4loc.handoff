{"nodes":[{"content":"Marks a client channel sink provider as a client formatter sink provider.","nodes":[{"pos":[0,73],"content":"Marks a client channel sink provider as a client formatter sink provider.","nodes":[{"content":"Marks a client channel sink provider as a client formatter sink provider.","pos":[0,73]}]}],"pos":[510,584],"yaml":true},{"content":"A <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> creates client formatter sinks for the client channel through which remoting messages flow. The first sink on the client side must implement both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces, or the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface.  \n  \n To use a `<formatter>` tag instead of a `<provider>` tag within a configuration file, the client channel sink provider must implement the <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> interface instead of merely <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>. For additional information about remoting configuration, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe) and [Remoting Settings Schema](http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  \n  \n Some formatter sink implementations use run-time formatters (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> and <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>). Other implementations can use their own means to transform the channel message into the stream. On the return journey the formatter sink will transform the message stream back into the channel message elements (return message).","nodes":[{"pos":[0,428],"content":"A <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> creates client formatter sinks for the client channel through which remoting messages flow. The first sink on the client side must implement both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces, or the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface.","nodes":[{"content":"A <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> creates client formatter sinks for the client channel through which remoting messages flow. The first sink on the client side must implement both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces, or the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface.","pos":[0,428],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider&gt;</ph> creates client formatter sinks for the client channel through which remoting messages flow.","pos":[0,162],"source":"A <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> creates client formatter sinks for the client channel through which remoting messages flow."},{"content":"The first sink on the client side must implement both the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink&gt;</ph> interfaces, or the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.IClientFormatterSink&gt;</ph> interface.","pos":[163,428],"source":" The first sink on the client side must implement both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces, or the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface."}]}]},{"pos":[435,1038],"content":"To use a `<formatter>` tag instead of a `<provider>` tag within a configuration file, the client channel sink provider must implement the <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> interface instead of merely <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>. For additional information about remoting configuration, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe) and [Remoting Settings Schema](http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).","nodes":[{"content":"To use a <ph id=\"ph1\">`&lt;formatter&gt;`</ph> tag instead of a <ph id=\"ph2\">`&lt;provider&gt;`</ph> tag within a configuration file, the client channel sink provider must implement the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider&gt;</ph> interface instead of merely <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider&gt;</ph>.","pos":[0,302],"source":"To use a `<formatter>` tag instead of a `<provider>` tag within a configuration file, the client channel sink provider must implement the <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> interface instead of merely <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>."},{"content":"For additional information about remoting configuration, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconchannelformatterconfigurationproperties&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept> and <bpt id=\"p2\">[</bpt>Remoting Settings Schema<ept id=\"p2\">](http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e)</ept>.","pos":[303,603],"source":" For additional information about remoting configuration, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe) and [Remoting Settings Schema](http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e)."}]},{"pos":[1045,1475],"content":"Some formatter sink implementations use run-time formatters (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> and <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>). Other implementations can use their own means to transform the channel message into the stream. On the return journey the formatter sink will transform the message stream back into the channel message elements (return message).","nodes":[{"content":"Some formatter sink implementations use run-time formatters (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> and <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>). Other implementations can use their own means to transform the channel message into the stream. On the return journey the formatter sink will transform the message stream back into the channel message elements (return message).","pos":[0,430],"nodes":[{"content":"Some formatter sink implementations use run-time formatters (<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph>).","pos":[0,202],"source":"Some formatter sink implementations use run-time formatters (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> and <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>)."},{"content":"Other implementations can use their own means to transform the channel message into the stream.","pos":[203,298]},{"content":"On the return journey the formatter sink will transform the message stream back into the channel message elements (return message).","pos":[299,430]}]}]}],"pos":[595,2078],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IClientFormatterSinkProvider\n  commentId: T:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider\n  id: IClientFormatterSinkProvider\n  children: []\n  langs:\n  - csharp\n  name: IClientFormatterSinkProvider\n  nameWithType: IClientFormatterSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientFormatterSinkProvider\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Marks a client channel sink provider as a client formatter sink provider.\n  remarks: \"A <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> creates client formatter sinks for the client channel through which remoting messages flow. The first sink on the client side must implement both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces, or the <xref:System.Runtime.Remoting.Channels.IClientFormatterSink> interface.  \\n  \\n To use a `<formatter>` tag instead of a `<provider>` tag within a configuration file, the client channel sink provider must implement the <xref:System.Runtime.Remoting.Channels.IClientFormatterSinkProvider> interface instead of merely <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>. For additional information about remoting configuration, see [&#91;\\\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe) and [Remoting Settings Schema](http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e).  \\n  \\n Some formatter sink implementations use run-time formatters (<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> and <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>). Other implementations can use their own means to transform the channel message into the stream. On the return journey the formatter sink will transform the message stream back into the channel message elements (return message).\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IClientFormatterSinkProvider : System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  derivedClasses:\n  - System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  - System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider\n  implements:\n  - System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IClientFormatterSinkProvider.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSinkProvider\n  nameWithType: IClientChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n"}