{"nodes":[{"content":"The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.","nodes":[{"pos":[0,159],"content":"The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.","nodes":[{"content":"The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.","pos":[0,159],"nodes":[{"content":"The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size.","pos":[0,127]},{"content":"This class cannot be inherited.","pos":[128,159]}]}]}],"pos":[590,750],"yaml":true},{"content":"Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed). <xref:System.DataMisalignedException> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes.  \n  \n The <xref:System.DataMisalignedException> exposes the underlying hardware exception, which allows you to respond in an appropriate manner. For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units. However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <xref:System.DataMisalignedException>. Your routine responds to the exception by copying the data one byte at a time.","nodes":[{"pos":[0,401],"content":"Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed). <xref:System.DataMisalignedException> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes.","nodes":[{"content":"Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed). <xref:System.DataMisalignedException> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes.","pos":[0,401],"nodes":[{"content":"Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed).","pos":[0,216]},{"content":"<ph id=\"ph1\">&lt;xref:System.DataMisalignedException&gt;</ph> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes.","pos":[217,401],"source":" <xref:System.DataMisalignedException> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes."}]}]},{"pos":[408,903],"content":"The <xref:System.DataMisalignedException> exposes the underlying hardware exception, which allows you to respond in an appropriate manner. For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units. However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <xref:System.DataMisalignedException>. Your routine responds to the exception by copying the data one byte at a time.","nodes":[{"content":"The <xref:System.DataMisalignedException> exposes the underlying hardware exception, which allows you to respond in an appropriate manner. For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units. However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <xref:System.DataMisalignedException>. Your routine responds to the exception by copying the data one byte at a time.","pos":[0,495],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DataMisalignedException&gt;</ph> exposes the underlying hardware exception, which allows you to respond in an appropriate manner.","pos":[0,138],"source":"The <xref:System.DataMisalignedException> exposes the underlying hardware exception, which allows you to respond in an appropriate manner."},{"content":"For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units.","pos":[139,264]},{"content":"However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <ph id=\"ph1\">&lt;xref:System.DataMisalignedException&gt;</ph>.","pos":[265,416],"source":" However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <xref:System.DataMisalignedException>."},{"content":"Your routine responds to the exception by copying the data one byte at a time.","pos":[417,495]}]}]}],"pos":[761,1669],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DataMisalignedException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class."}],"pos":[4210,4303],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DataMisalignedException\"&gt;&lt;/xref&gt;</ph> class using the specified error message.","source":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message."}],"pos":[6003,6130],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,266],"content":"A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object that describes the error.","pos":[0,69],"source":"A <xref href=\"System.String\"></xref> object that describes the error."},{"content":"The content of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is intended to be understood by humans.","pos":[70,145],"source":" The content of <code>message</code> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[146,266]}]}],"pos":[6281,6548],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message and underlying exception.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DataMisalignedException\"&gt;&lt;/xref&gt;</ph> class using the specified error message and underlying exception.","source":"Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message and underlying exception."}],"pos":[8255,8407],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,266],"content":"A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object that describes the error.","pos":[0,69],"source":"A <xref href=\"System.String\"></xref> object that describes the error."},{"content":"The content of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is intended to be understood by humans.","pos":[70,145],"source":" The content of <code>message</code> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[146,266]}]}],"pos":[8584,8851],"yaml":true},{"content":"The exception that is the cause of the current <xref href=\"System.DataMisalignedException\"></xref>. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,244],"content":"The exception that is the cause of the current <xref href=\"System.DataMisalignedException\"></xref>. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current <ph id=\"ph1\">&lt;xref href=\"System.DataMisalignedException\"&gt;&lt;/xref&gt;</ph>.","pos":[0,99],"source":"The exception that is the cause of the current <xref href=\"System.DataMisalignedException\"></xref>."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[100,244],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[8924,9169],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DataMisalignedException\n  commentId: T:System.DataMisalignedException\n  id: DataMisalignedException\n  children:\n  - System.DataMisalignedException.#ctor\n  - System.DataMisalignedException.#ctor(System.String)\n  - System.DataMisalignedException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DataMisalignedException\n  nameWithType: DataMisalignedException\n  fullName: System.DataMisalignedException\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.\n  remarks: \"Some microprocessors, such as 64-bit processors, can issue hardware exceptions when data is read or written to a misaligned address (that is, when an address is not a multiple of the size of the data being accessed). <xref:System.DataMisalignedException> is typically thrown when 16-bit, 32-bit, or 64-bit data is read from or written to an address that is not a multiple of two, four, or eight bytes.  \\n  \\n The <xref:System.DataMisalignedException> exposes the underlying hardware exception, which allows you to respond in an appropriate manner. For example, a routine in your application attempts to copy a sequence of bytes from one location to another in 64-bit units. However, the write operation starts at a misaligned address, which causes the common language runtime to throw a <xref:System.DataMisalignedException>. Your routine responds to the exception by copying the data one byte at a time.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DataMisalignedException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DataMisalignedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DataMisalignedException.#ctor\n  commentId: M:System.DataMisalignedException.#ctor\n  id: '#ctor'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  name: DataMisalignedException()\n  nameWithType: DataMisalignedException.DataMisalignedException()\n  fullName: DataMisalignedException.DataMisalignedException()\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class.\n  syntax:\n    content: public DataMisalignedException ();\n    parameters: []\n  overload: System.DataMisalignedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DataMisalignedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DataMisalignedException.#ctor(System.String)\n  commentId: M:System.DataMisalignedException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  name: DataMisalignedException(String)\n  nameWithType: DataMisalignedException.DataMisalignedException(String)\n  fullName: DataMisalignedException.DataMisalignedException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message.\n  syntax:\n    content: public DataMisalignedException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n  overload: System.DataMisalignedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DataMisalignedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DataMisalignedException.#ctor(System.String,System.Exception)\n  commentId: M:System.DataMisalignedException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  name: DataMisalignedException(String, Exception)\n  nameWithType: DataMisalignedException.DataMisalignedException(String, Exception)\n  fullName: DataMisalignedException.DataMisalignedException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DataMisalignedException\"></xref> class using the specified error message and underlying exception.\n  syntax:\n    content: public DataMisalignedException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current <xref href=\"System.DataMisalignedException\"></xref>. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.DataMisalignedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DataMisalignedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.DataMisalignedException.#ctor\n  parent: System.DataMisalignedException\n  isExternal: false\n  name: DataMisalignedException()\n  nameWithType: DataMisalignedException.DataMisalignedException()\n  fullName: DataMisalignedException.DataMisalignedException()\n- uid: System.DataMisalignedException.#ctor(System.String)\n  parent: System.DataMisalignedException\n  isExternal: false\n  name: DataMisalignedException(String)\n  nameWithType: DataMisalignedException.DataMisalignedException(String)\n  fullName: DataMisalignedException.DataMisalignedException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DataMisalignedException.#ctor(System.String,System.Exception)\n  parent: System.DataMisalignedException\n  isExternal: false\n  name: DataMisalignedException(String, Exception)\n  nameWithType: DataMisalignedException.DataMisalignedException(String, Exception)\n  fullName: DataMisalignedException.DataMisalignedException(String, Exception)\n- uid: System.DataMisalignedException.#ctor*\n  parent: System.DataMisalignedException\n  isExternal: false\n  name: DataMisalignedException\n  nameWithType: DataMisalignedException.DataMisalignedException\n  fullName: DataMisalignedException.DataMisalignedException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DataMisalignedException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}