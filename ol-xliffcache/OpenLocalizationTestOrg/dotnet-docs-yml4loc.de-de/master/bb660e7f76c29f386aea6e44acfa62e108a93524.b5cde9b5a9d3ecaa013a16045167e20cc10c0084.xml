{"nodes":[{"content":"Represents a security token whose key is wrapped inside another token.","nodes":[{"pos":[0,70],"content":"Represents a security token whose key is wrapped inside another token.","nodes":[{"content":"Represents a security token whose key is wrapped inside another token.","pos":[0,70]}]}],"pos":[1654,1725],"yaml":true},{"content":"This class represents an encrypted key that comes over the wire. The encrypted key is a symmetric key that is encrypted for the receiving party using the receiving party’s public key. When such a key is received, the receiver’s security token is resolved, the symmetric key is decrypted, and an instance of this class is created that contains these two pieces of information.","nodes":[{"pos":[0,375],"content":"This class represents an encrypted key that comes over the wire. The encrypted key is a symmetric key that is encrypted for the receiving party using the receiving party’s public key. When such a key is received, the receiver’s security token is resolved, the symmetric key is decrypted, and an instance of this class is created that contains these two pieces of information.","nodes":[{"content":"This class represents an encrypted key that comes over the wire. The encrypted key is a symmetric key that is encrypted for the receiving party using the receiving party’s public key. When such a key is received, the receiver’s security token is resolved, the symmetric key is decrypted, and an instance of this class is created that contains these two pieces of information.","pos":[0,375],"nodes":[{"content":"This class represents an encrypted key that comes over the wire.","pos":[0,64]},{"content":"The encrypted key is a symmetric key that is encrypted for the receiving party using the receiving party’s public key.","pos":[65,183]},{"content":"When such a key is received, the receiver’s security token is resolved, the symmetric key is decrypted, and an instance of this class is created that contains these two pieces of information.","pos":[184,375]}]}]}],"pos":[1736,2112],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\"></xref> class."}],"pos":[4455,4577],"yaml":true},{"content":"The ID of the key token.","nodes":[{"pos":[0,24],"content":"The ID of the key token.","nodes":[{"content":"The ID of the key token.","pos":[0,24]}]}],"pos":[4893,4918],"yaml":true},{"content":"The key to be wrapped.","nodes":[{"pos":[0,22],"content":"The key to be wrapped.","nodes":[{"content":"The key to be wrapped.","pos":[0,22]}]}],"pos":[4983,5006],"yaml":true},{"content":"The algorithm used to do the wrapping.","nodes":[{"pos":[0,38],"content":"The algorithm used to do the wrapping.","nodes":[{"content":"The algorithm used to do the wrapping.","pos":[0,38]}]}],"pos":[5079,5118],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> that represents the wrapping token.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token."}],"pos":[5215,5316],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> that represents a reference to the wrapping token.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token."}],"pos":[5430,5554],"yaml":true},{"content":"Gets a value that indicates whether the token can create a key identifier clause.","nodes":[{"pos":[0,81],"content":"Gets a value that indicates whether the token can create a key identifier clause.","nodes":[{"content":"Gets a value that indicates whether the token can create a key identifier clause.","pos":[0,81]}]}],"pos":[6877,6959],"yaml":true},{"content":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>."}],"pos":[7177,7271],"yaml":true},{"content":"`true` if the token can create a key identifier clause; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,99],"content":"`true` if the token can create a key identifier clause; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the token can create a key identifier clause; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if the token can create a key identifier clause; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[76,99],"source":" The default is `false`."}]}],"pos":[7329,7431],"yaml":true},{"content":"Create a key identifier clause.","nodes":[{"pos":[0,31],"content":"Create a key identifier clause.","nodes":[{"content":"Create a key identifier clause.","pos":[0,31]}]}],"pos":[8762,8794],"yaml":true},{"content":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>."}],"pos":[9006,9100],"yaml":true},{"content":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>."}],"pos":[9145,9239],"yaml":true},{"content":"Gets the wrapped key.","nodes":[{"pos":[0,21],"content":"Gets the wrapped key.","nodes":[{"content":"Gets the wrapped key.","pos":[0,21]}]}],"pos":[10477,10499],"yaml":true},{"content":"The wrapped key.","nodes":[{"pos":[0,16],"content":"The wrapped key.","nodes":[{"content":"The wrapped key.","pos":[0,16]}]}],"pos":[10630,10647],"yaml":true},{"content":"Gets the token ID.","nodes":[{"pos":[0,18],"content":"Gets the token ID.","nodes":[{"content":"Gets the token ID.","pos":[0,18]}]}],"pos":[11800,11819],"yaml":true},{"content":"The token ID.","nodes":[{"pos":[0,13],"content":"The token ID.","nodes":[{"content":"The token ID.","pos":[0,13]}]}],"pos":[11934,11948],"yaml":true},{"content":"Compares the current security key identifier clause to a specified one for equality.","nodes":[{"pos":[0,84],"content":"Compares the current security key identifier clause to a specified one for equality.","nodes":[{"content":"Compares the current security key identifier clause to a specified one for equality.","pos":[0,84]}]}],"pos":[13490,13575],"yaml":true},{"content":"The specified security key identifier clause.","nodes":[{"pos":[0,45],"content":"The specified security key identifier clause.","nodes":[{"content":"The specified security key identifier clause.","pos":[0,45]}]}],"pos":[13858,13904],"yaml":true},{"content":"`true` if the current security key identifier clause equals the specified one; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,122],"content":"`true` if the current security key identifier clause equals the specified one; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the current security key identifier clause equals the specified one; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,98],"source":"`true` if the current security key identifier clause equals the specified one; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[99,122],"source":" The default is `false`."}]}],"pos":[13962,14087],"yaml":true},{"content":"Gets a collection of security keys.","nodes":[{"pos":[0,35],"content":"Gets a collection of security keys.","nodes":[{"content":"Gets a collection of security keys.","pos":[0,35]}]}],"pos":[15313,15349],"yaml":true},{"content":"A collection of <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,77],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"A collection of <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[15635,15713],"yaml":true},{"content":"Gets the token effective start date.","nodes":[{"pos":[0,36],"content":"Gets the token effective start date.","nodes":[{"content":"Gets the token effective start date.","pos":[0,36]}]}],"pos":[16907,16944],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the token effective start date.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the token effective start date.","source":"A <xref href=\"System.DateTime\"></xref> that represents the token effective start date."}],"pos":[17070,17157],"yaml":true},{"content":"Gets the token expiration date.","nodes":[{"pos":[0,31],"content":"Gets the token expiration date.","nodes":[{"content":"Gets the token expiration date.","pos":[0,31]}]}],"pos":[18336,18368],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the token expiration date.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the token expiration date.","source":"A <xref href=\"System.DateTime\"></xref> that represents the token expiration date."}],"pos":[18492,18574],"yaml":true},{"content":"Gets the wrapping algorithm.","nodes":[{"pos":[0,28],"content":"Gets the wrapping algorithm.","nodes":[{"content":"Gets the wrapping algorithm.","pos":[0,28]}]}],"pos":[19811,19840],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that specifies the wrapping algorithm or the algorithm used to encrypt the symmetric key.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that specifies the wrapping algorithm or the algorithm used to encrypt the symmetric key.","source":"A <xref href=\"System.String\"></xref> that specifies the wrapping algorithm or the algorithm used to encrypt the symmetric key."}],"pos":[19961,20088],"yaml":true},{"content":"Gets the wrapping token.","nodes":[{"pos":[0,24],"content":"Gets the wrapping token.","nodes":[{"content":"Gets the wrapping token.","pos":[0,24]}]}],"pos":[21311,21336],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> that represents the wrapping token.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token."}],"pos":[21516,21617],"yaml":true},{"content":"Gets the wrapping token reference.","nodes":[{"pos":[0,34],"content":"Gets the wrapping token reference.","nodes":[{"content":"Gets the wrapping token reference.","pos":[0,34]}]}],"pos":[22890,22925],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> that represents a reference to the wrapping token.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token."}],"pos":[23130,23254],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  commentId: T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  id: WrappedKeySecurityToken\n  children:\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference\n  langs:\n  - csharp\n  name: WrappedKeySecurityToken\n  nameWithType: WrappedKeySecurityToken\n  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Represents a security token whose key is wrapped inside another token.\n  remarks: This class represents an encrypted key that comes over the wire. The encrypted key is a symmetric key that is encrypted for the receiving party using the receiving party’s public key. When such a key is received, the receiver’s security token is resolved, the symmetric key is decrypted, and an instance of this class is created that contains these two pieces of information.\n  syntax:\n    content: 'public class WrappedKeySecurityToken : System.IdentityModel.Tokens.SecurityToken'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityToken\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  commentId: M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: '#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)'\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n  fullName: WrappedKeySecurityToken.WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\"></xref> class.\n  syntax:\n    content: public WrappedKeySecurityToken (string id, byte[] keyToWrap, string wrappingAlgorithm, System.IdentityModel.Tokens.SecurityToken wrappingToken, System.IdentityModel.Tokens.SecurityKeyIdentifier wrappingTokenReference);\n    parameters:\n    - id: id\n      type: System.String\n      description: The ID of the key token.\n    - id: keyToWrap\n      type: System.Byte[]\n      description: The key to be wrapped.\n    - id: wrappingAlgorithm\n      type: System.String\n      description: The algorithm used to do the wrapping.\n    - id: wrappingToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token.\n    - id: wrappingTokenReference\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1\n  commentId: M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1\n  id: CanCreateKeyIdentifierClause``1\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: CanCreateKeyIdentifierClause<T>()\n  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>()\n  fullName: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether the token can create a key identifier clause.\n  syntax:\n    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the token can create a key identifier clause; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1\n  commentId: M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1\n  id: CreateKeyIdentifierClause``1\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: CreateKeyIdentifierClause<T>()\n  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>()\n  fullName: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Create a key identifier clause.\n  syntax:\n    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.\n    return:\n      type: T\n      description: The type of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey\n  commentId: M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey\n  id: GetWrappedKey\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: GetWrappedKey()\n  nameWithType: WrappedKeySecurityToken.GetWrappedKey()\n  fullName: WrappedKeySecurityToken.GetWrappedKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the wrapped key.\n  syntax:\n    content: public byte[] GetWrappedKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The wrapped key.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id\n  id: Id\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: Id\n  nameWithType: WrappedKeySecurityToken.Id\n  fullName: WrappedKeySecurityToken.Id\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the token ID.\n  syntax:\n    content: public override string Id { get; }\n    return:\n      type: System.String\n      description: The token ID.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Compares the current security key identifier clause to a specified one for equality.\n  syntax:\n    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The specified security key identifier clause.\n    return:\n      type: System.Boolean\n      description: '`true` if the current security key identifier clause equals the specified one; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys\n  id: SecurityKeys\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: SecurityKeys\n  nameWithType: WrappedKeySecurityToken.SecurityKeys\n  fullName: WrappedKeySecurityToken.SecurityKeys\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a collection of security keys.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n      description: A collection of <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom\n  id: ValidFrom\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: WrappedKeySecurityToken.ValidFrom\n  fullName: WrappedKeySecurityToken.ValidFrom\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the token effective start date.\n  syntax:\n    content: public override DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the token effective start date.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo\n  id: ValidTo\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: ValidTo\n  nameWithType: WrappedKeySecurityToken.ValidTo\n  fullName: WrappedKeySecurityToken.ValidTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the token expiration date.\n  syntax:\n    content: public override DateTime ValidTo { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the token expiration date.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm\n  id: WrappingAlgorithm\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: WrappingAlgorithm\n  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm\n  fullName: WrappedKeySecurityToken.WrappingAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the wrapping algorithm.\n  syntax:\n    content: public string WrappingAlgorithm { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that specifies the wrapping algorithm or the algorithm used to encrypt the symmetric key.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken\n  id: WrappingToken\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: WrappingToken\n  nameWithType: WrappedKeySecurityToken.WrappingToken\n  fullName: WrappedKeySecurityToken.WrappingToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the wrapping token.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken WrappingToken { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the wrapping token.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference\n  commentId: P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference\n  id: WrappingTokenReference\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  langs:\n  - csharp\n  name: WrappingTokenReference\n  nameWithType: WrappedKeySecurityToken.WrappingTokenReference\n  fullName: WrappedKeySecurityToken.WrappingTokenReference\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the wrapping token reference.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier WrappingTokenReference { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents a reference to the wrapping token.\n  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n  fullName: WrappedKeySecurityToken.WrappedKeySecurityToken(String, Byte[], String, SecurityToken, SecurityKeyIdentifier)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>()\n  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>()\n  fullName: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>()\n  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>()\n  fullName: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: GetWrappedKey()\n  nameWithType: WrappedKeySecurityToken.GetWrappedKey()\n  fullName: WrappedKeySecurityToken.GetWrappedKey()\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: WrappedKeySecurityToken.Id\n  fullName: WrappedKeySecurityToken.Id\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: WrappedKeySecurityToken.SecurityKeys\n  fullName: WrappedKeySecurityToken.SecurityKeys\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Tokens.SecurityKey\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<SecurityKey>\n  nameWithType: ReadOnlyCollection<SecurityKey>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKey\n    name: SecurityKey\n    nameWithType: SecurityKey\n    fullName: System.IdentityModel.Tokens.SecurityKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: WrappedKeySecurityToken.ValidFrom\n  fullName: WrappedKeySecurityToken.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: WrappedKeySecurityToken.ValidTo\n  fullName: WrappedKeySecurityToken.ValidTo\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingAlgorithm\n  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm\n  fullName: WrappedKeySecurityToken.WrappingAlgorithm\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingToken\n  nameWithType: WrappedKeySecurityToken.WrappingToken\n  fullName: WrappedKeySecurityToken.WrappingToken\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingTokenReference\n  nameWithType: WrappedKeySecurityToken.WrappingTokenReference\n  fullName: WrappedKeySecurityToken.WrappingTokenReference\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappedKeySecurityToken\n  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken\n  fullName: WrappedKeySecurityToken.WrappedKeySecurityToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>\n  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>\n  fullName: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>\n  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>\n  fullName: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: GetWrappedKey\n  nameWithType: WrappedKeySecurityToken.GetWrappedKey\n  fullName: WrappedKeySecurityToken.GetWrappedKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: WrappedKeySecurityToken.Id\n  fullName: WrappedKeySecurityToken.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause\n  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause\n  fullName: WrappedKeySecurityToken.MatchesKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: WrappedKeySecurityToken.SecurityKeys\n  fullName: WrappedKeySecurityToken.SecurityKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: WrappedKeySecurityToken.ValidFrom\n  fullName: WrappedKeySecurityToken.ValidFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: WrappedKeySecurityToken.ValidTo\n  fullName: WrappedKeySecurityToken.ValidTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingAlgorithm\n  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm\n  fullName: WrappedKeySecurityToken.WrappingAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingToken\n  nameWithType: WrappedKeySecurityToken.WrappingToken\n  fullName: WrappedKeySecurityToken.WrappingToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference*\n  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  isExternal: false\n  name: WrappingTokenReference\n  nameWithType: WrappedKeySecurityToken.WrappingTokenReference\n  fullName: WrappedKeySecurityToken.WrappingTokenReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/WrappedKeySecurityToken.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n"}