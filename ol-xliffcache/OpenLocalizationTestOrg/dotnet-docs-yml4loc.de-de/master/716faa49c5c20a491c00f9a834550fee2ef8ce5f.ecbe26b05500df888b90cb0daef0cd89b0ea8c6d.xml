{"nodes":[{"content":"Contains information about the current installation.","nodes":[{"pos":[0,52],"content":"Contains information about the current installation.","nodes":[{"content":"Contains information about the current installation.","pos":[0,52]}]}],"pos":[856,909],"yaml":true},{"content":"Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies. The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.  \n  \n Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>. Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.  \n  \n The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable. The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation. Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.  \n  \n Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.","nodes":[{"pos":[0,324],"content":"Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies. The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.","nodes":[{"content":"Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies. The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.","pos":[0,324],"nodes":[{"content":"Typically, an <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.","pos":[0,157],"source":"Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies."},{"content":"The installation program invokes the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> constructor, passing it the default log-file path and command-line parameters.","pos":[158,324],"source":" The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters."}]}]},{"pos":[331,1116],"content":"Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>. Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.","nodes":[{"content":"Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>. Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.","pos":[0,785],"nodes":[{"content":"Prior to calling its <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> methods, the installation program sets the <ph id=\"ph5\">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> property of an <ph id=\"ph6\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> to the instance of <ph id=\"ph7\">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph>.","pos":[0,488],"source":"Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>."},{"content":"Before calling these methods, an <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> that contains an installer collection in the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> property sets the <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> property of each contained installer.","pos":[489,785],"source":" Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer."}]}]},{"pos":[1123,1619],"content":"The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable. The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation. Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property contains a parsed version of the command line that is entered to run the installation executable.","pos":[0,175],"source":"The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable."},{"content":"The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.","pos":[176,354]},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> method to find out whether a command-line parameter is <ph id=\"ph2\">`true`</ph>.","pos":[355,496],"source":" Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`."}]},{"pos":[1626,1776],"content":"Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method to write status messages to the installation log file and the console.","pos":[0,150],"source":"Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console."}]}],"pos":[920,2705],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class."}],"pos":[5668,5774],"yaml":true},{"content":"This overload does not create a log file for the installation.","nodes":[{"pos":[0,62],"content":"This overload does not create a log file for the installation.","nodes":[{"content":"This overload does not create a log file for the installation.","pos":[0,62]}]}],"pos":[5785,5848],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class, and creates a log file for the installation.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Install.InstallContext\"&gt;&lt;/xref&gt;</ph> class, and creates a log file for the installation.","source":"Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class, and creates a log file for the installation."}],"pos":[8023,8174],"yaml":true},{"content":"If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. If a log-file path is specified in the command-line parameters, it is used to create the file. If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used. To suppress the creation of a log file, pass the \"/logfile= \" command-line parameter.","nodes":[{"pos":[0,602],"content":"If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. If a log-file path is specified in the command-line parameters, it is used to create the file. If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used. To suppress the creation of a log file, pass the \"/logfile= \" command-line parameter.","nodes":[{"content":"If the installation uses <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept>, this constructor creates a log file at the specified path and parses the array of command-line parameters into the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property.","pos":[0,308],"source":"If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property."},{"content":"If a log-file path is specified in the command-line parameters, it is used to create the file.","pos":[309,403]},{"content":"If the log file argument is not specified in the command line, the value of the <ph id=\"ph1\">`logFilePath`</ph> parameter is used.","pos":[404,516],"source":" If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used."},{"content":"To suppress the creation of a log file, pass the \"/logfile= \" command-line parameter.","pos":[517,602]}]}],"pos":[8185,8788],"yaml":true,"extradata":"MT"},{"content":"The path to the log file for this installation, or `null` if no log file should be created.","nodes":[{"pos":[0,91],"content":"The path to the log file for this installation, or <ph id=\"ph1\">`null`</ph> if no log file should be created.","source":"The path to the log file for this installation, or `null` if no log file should be created."}],"pos":[9819,9911],"yaml":true},{"content":"The command-line parameters entered when running the installation program, or `null` if none were entered.","nodes":[{"pos":[0,106],"content":"The command-line parameters entered when running the installation program, or <ph id=\"ph1\">`null`</ph> if none were entered.","source":"The command-line parameters entered when running the installation program, or `null` if none were entered."}],"pos":[9980,10087],"yaml":true},{"content":"Determines whether the specified command-line parameter is `true`.","nodes":[{"pos":[0,66],"content":"Determines whether the specified command-line parameter is <ph id=\"ph1\">`true`</ph>.","source":"Determines whether the specified command-line parameter is `true`."}],"pos":[11282,11349],"yaml":true},{"content":"This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.","nodes":[{"pos":[0,219],"content":"This method accesses the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is <ph id=\"ph2\">`true`</ph>.","source":"This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`."}],"pos":[11360,11580],"yaml":true,"extradata":"MT"},{"content":"The name of the command-line parameter to check.","nodes":[{"pos":[0,48],"content":"The name of the command-line parameter to check.","nodes":[{"content":"The name of the command-line parameter to check.","pos":[0,48]}]}],"pos":[12692,12741],"yaml":true},{"content":"`true` if the specified parameter is set to \"yes\", \"true\", \"1\", or an empty string (\"\"); otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the specified parameter is set to \"yes\", \"true\", \"1\", or an empty string (\"\"); otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified parameter is set to \"yes\", \"true\", \"1\", or an empty string (\"\"); otherwise, `false`."}],"pos":[12799,12910],"yaml":true},{"content":"Writes a message to the console and to the log file for the installation.","nodes":[{"pos":[0,73],"content":"Writes a message to the console and to the log file for the installation.","nodes":[{"content":"Writes a message to the console and to the log file for the installation.","pos":[0,73]}]}],"pos":[14085,14159],"yaml":true},{"content":"An installer can call this method to write progress or other status information to the log file. If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method. Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and \"/LogToConsole= true\" is specified in the command line.","nodes":[{"pos":[0,507],"content":"An installer can call this method to write progress or other status information to the log file. If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method. Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and \"/LogToConsole= true\" is specified in the command line.","nodes":[{"content":"An installer can call this method to write progress or other status information to the log file. If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method. Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and \"/LogToConsole= true\" is specified in the command line.","pos":[0,507],"nodes":[{"content":"An installer can call this method to write progress or other status information to the log file.","pos":[0,96]},{"content":"If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method.","pos":[97,334],"source":" If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method."},{"content":"Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and \"/LogToConsole= true\" is specified in the command line.","pos":[335,507]}]}]}],"pos":[14170,14678],"yaml":true,"extradata":"MT"},{"content":"The message to write.","nodes":[{"pos":[0,21],"content":"The message to write.","nodes":[{"content":"The message to write.","pos":[0,21]}]}],"pos":[15778,15800],"yaml":true},{"content":"Gets the command-line parameters that were entered when InstallUtil.exe was run.","nodes":[{"pos":[0,80],"content":"Gets the command-line parameters that were entered when InstallUtil.exe was run.","nodes":[{"content":"Gets the command-line parameters that were entered when InstallUtil.exe was run.","pos":[0,80]}]}],"pos":[16903,16984],"yaml":true},{"content":"When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. Both the keys and the values of the parameters are strings.","nodes":[{"pos":[0,256],"content":"When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. Both the keys and the values of the parameters are strings.","nodes":[{"content":"When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. Both the keys and the values of the parameters are strings.","pos":[0,256],"nodes":[{"content":"When a new <ph id=\"ph1\">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created, the command-line parameters are parsed into the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property.","pos":[0,196],"source":"When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property."},{"content":"Both the keys and the values of the parameters are strings.","pos":[197,256]}]}]}],"pos":[16995,17252],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> that represents the command-line parameters that were entered when the installation executable was run.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;&lt;/xref&gt;</ph> that represents the command-line parameters that were entered when the installation executable was run.","source":"A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> that represents the command-line parameters that were entered when the installation executable was run."}],"pos":[18568,18743],"yaml":true},{"content":"Parses the command-line parameters into a string dictionary.","nodes":[{"pos":[0,60],"content":"Parses the command-line parameters into a string dictionary.","nodes":[{"content":"Parses the command-line parameters into a string dictionary.","pos":[0,60]}]}],"pos":[19961,20022],"yaml":true},{"content":"An array containing the command-line parameters.","nodes":[{"pos":[0,48],"content":"An array containing the command-line parameters.","nodes":[{"content":"An array containing the command-line parameters.","pos":[0,48]}]}],"pos":[20222,20271],"yaml":true},{"content":"A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> containing the parsed command-line parameters.","nodes":[{"pos":[0,117],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringDictionary\"&gt;&lt;/xref&gt;</ph> containing the parsed command-line parameters.","source":"A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> containing the parsed command-line parameters."}],"pos":[20362,20480],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Install.InstallContext\n  commentId: T:System.Configuration.Install.InstallContext\n  id: InstallContext\n  children:\n  - System.Configuration.Install.InstallContext.#ctor\n  - System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])\n  - System.Configuration.Install.InstallContext.IsParameterTrue(System.String)\n  - System.Configuration.Install.InstallContext.LogMessage(System.String)\n  - System.Configuration.Install.InstallContext.Parameters\n  - System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])\n  langs:\n  - csharp\n  name: InstallContext\n  nameWithType: InstallContext\n  fullName: System.Configuration.Install.InstallContext\n  type: Class\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Contains information about the current installation.\n  remarks: \"Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies. The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.  \\n  \\n Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>. Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.  \\n  \\n The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable. The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation. Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.  \\n  \\n Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.\"\n  example:\n  - \"The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.  \\n  \\n When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  \\n  \\n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created. When \\\"/LogFile\\\" and \\\"/LogtoConsole\\\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \\n  \\n [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]\\n [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]\\n [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]\"\n  syntax:\n    content: public class InstallContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.#ctor\n  commentId: M:System.Configuration.Install.InstallContext.#ctor\n  id: '#ctor'\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: InstallContext()\n  nameWithType: InstallContext.InstallContext()\n  fullName: InstallContext.InstallContext()\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class.\n  remarks: This overload does not create a log file for the installation.\n  example:\n  - \"> [!NOTE]\\n>  This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor. For other examples that might be available, see the individual overload topics.  \\n  \\n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.  \\n  \\n [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]\\n [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]\\n [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]\"\n  syntax:\n    content: public InstallContext ();\n    parameters: []\n  overload: System.Configuration.Install.InstallContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])\n  commentId: M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])\n  id: '#ctor(System.String,System.String[])'\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: InstallContext(String, String[])\n  nameWithType: InstallContext.InstallContext(String, String[])\n  fullName: InstallContext.InstallContext(String, String[])\n  type: Constructor\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.Install.InstallContext\"></xref> class, and creates a log file for the installation.\n  remarks: If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. If a log-file path is specified in the command-line parameters, it is used to create the file. If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used. To suppress the creation of a log file, pass the \"/logfile= \" command-line parameter.\n  example:\n  - \"This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \\n  \\n When \\\"/LogFile\\\" and \\\"/LogtoConsole\\\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \\n  \\n [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]\\n [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]\\n [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]\"\n  syntax:\n    content: public InstallContext (string logFilePath, string[] commandLine);\n    parameters:\n    - id: logFilePath\n      type: System.String\n      description: The path to the log file for this installation, or `null` if no log file should be created.\n    - id: commandLine\n      type: System.String[]\n      description: The command-line parameters entered when running the installation program, or `null` if none were entered.\n  overload: System.Configuration.Install.InstallContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)\n  commentId: M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)\n  id: IsParameterTrue(System.String)\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: IsParameterTrue(String)\n  nameWithType: InstallContext.IsParameterTrue(String)\n  fullName: InstallContext.IsParameterTrue(String)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Determines whether the specified command-line parameter is `true`.\n  remarks: This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.\n  example:\n  - \"This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.  \\n  \\n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \\n  \\n [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]\\n [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]\\n [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]\"\n  syntax:\n    content: public bool IsParameterTrue (string paramName);\n    parameters:\n    - id: paramName\n      type: System.String\n      description: The name of the command-line parameter to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified parameter is set to \"yes\", \"true\", \"1\", or an empty string (\"\"); otherwise, `false`.'\n  overload: System.Configuration.Install.InstallContext.IsParameterTrue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)\n  commentId: M:System.Configuration.Install.InstallContext.LogMessage(System.String)\n  id: LogMessage(System.String)\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: LogMessage(String)\n  nameWithType: InstallContext.LogMessage(String)\n  fullName: InstallContext.LogMessage(String)\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Writes a message to the console and to the log file for the installation.\n  remarks: An installer can call this method to write progress or other status information to the log file. If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method. Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and \"/LogToConsole= true\" is specified in the command line.\n  example:\n  - \"This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \\n  \\n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \\n  \\n [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]\\n [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]\\n [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]\"\n  syntax:\n    content: public void LogMessage (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write.\n  overload: System.Configuration.Install.InstallContext.LogMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.Parameters\n  commentId: P:System.Configuration.Install.InstallContext.Parameters\n  id: Parameters\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: InstallContext.Parameters\n  fullName: InstallContext.Parameters\n  type: Property\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Gets the command-line parameters that were entered when InstallUtil.exe was run.\n  remarks: When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property. Both the keys and the values of the parameters are strings.\n  example:\n  - \"This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \\n  \\n The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user. It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \\n  \\n [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]\\n [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]\\n [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]\"\n  syntax:\n    content: public System.Collections.Specialized.StringDictionary Parameters { get; }\n    return:\n      type: System.Collections.Specialized.StringDictionary\n      description: A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> that represents the command-line parameters that were entered when the installation executable was run.\n  overload: System.Configuration.Install.InstallContext.Parameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])\n  commentId: M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])\n  id: ParseCommandLine(System.String[])\n  parent: System.Configuration.Install.InstallContext\n  langs:\n  - csharp\n  name: ParseCommandLine(String[])\n  nameWithType: InstallContext.ParseCommandLine(String[])\n  fullName: InstallContext.ParseCommandLine(String[])\n  type: Method\n  assemblies:\n  - System.Configuration.Install\n  namespace: System.Configuration.Install\n  summary: Parses the command-line parameters into a string dictionary.\n  syntax:\n    content: protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);\n    parameters:\n    - id: args\n      type: System.String[]\n      description: An array containing the command-line parameters.\n    return:\n      type: System.Collections.Specialized.StringDictionary\n      description: A <xref href=\"System.Collections.Specialized.StringDictionary\"></xref> containing the parsed command-line parameters.\n  overload: System.Configuration.Install.InstallContext.ParseCommandLine*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.Install.InstallContext.#ctor\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: InstallContext()\n  nameWithType: InstallContext.InstallContext()\n  fullName: InstallContext.InstallContext()\n- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: InstallContext(String, String[])\n  nameWithType: InstallContext.InstallContext(String, String[])\n  fullName: InstallContext.InstallContext(String, String[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: IsParameterTrue(String)\n  nameWithType: InstallContext.IsParameterTrue(String)\n  fullName: InstallContext.IsParameterTrue(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: LogMessage(String)\n  nameWithType: InstallContext.LogMessage(String)\n  fullName: InstallContext.LogMessage(String)\n- uid: System.Configuration.Install.InstallContext.Parameters\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: Parameters\n  nameWithType: InstallContext.Parameters\n  fullName: InstallContext.Parameters\n- uid: System.Collections.Specialized.StringDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: StringDictionary\n  nameWithType: StringDictionary\n  fullName: System.Collections.Specialized.StringDictionary\n- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: ParseCommandLine(String[])\n  nameWithType: InstallContext.ParseCommandLine(String[])\n  fullName: InstallContext.ParseCommandLine(String[])\n- uid: System.Configuration.Install.InstallContext.#ctor*\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: InstallContext\n  nameWithType: InstallContext.InstallContext\n  fullName: InstallContext.InstallContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n- uid: System.Configuration.Install.InstallContext.IsParameterTrue*\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: IsParameterTrue\n  nameWithType: InstallContext.IsParameterTrue\n  fullName: InstallContext.IsParameterTrue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n- uid: System.Configuration.Install.InstallContext.LogMessage*\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: LogMessage\n  nameWithType: InstallContext.LogMessage\n  fullName: InstallContext.LogMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n- uid: System.Configuration.Install.InstallContext.Parameters*\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: Parameters\n  nameWithType: InstallContext.Parameters\n  fullName: InstallContext.Parameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n- uid: System.Configuration.Install.InstallContext.ParseCommandLine*\n  parent: System.Configuration.Install.InstallContext\n  isExternal: false\n  name: ParseCommandLine\n  nameWithType: InstallContext.ParseCommandLine\n  fullName: InstallContext.ParseCommandLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Install/InstallContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}