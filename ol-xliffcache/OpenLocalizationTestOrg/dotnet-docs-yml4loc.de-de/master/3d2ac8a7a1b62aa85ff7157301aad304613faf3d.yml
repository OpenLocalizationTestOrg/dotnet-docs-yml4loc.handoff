### YamlMime:ManagedReference
items:
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  commentId: T:System.Configuration.Assemblies.AssemblyHashAlgorithm
  id: AssemblyHashAlgorithm
  children:
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.None
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384
  - System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512
  langs:
  - csharp
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
  type: Enum
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: Specifies all the hash algorithms used for hashing files and for generating the strong name.
  remarks: "A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)). Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.  \n  \n The basic requirements for a cryptographic hash function are:  \n  \n-   The input can be of any length.  \n  \n-   The output has a fixed length.  \n  \n-   `H` (`x)` is relatively easy to compute for any given x.  \n  \n-   `H` (`x`) is one-way.  \n  \n-   `H` (`x`) is collision-free.  \n  \n The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest. You can think of a message digest as a digital fingerprint of the larger document. Examples of well-known hash functions are MD2 and and SHA."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum AssemblyHashAlgorithm
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5
  id: MD5
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: MD5
  nameWithType: AssemblyHashAlgorithm.MD5
  fullName: AssemblyHashAlgorithm.MD5
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.
  syntax:
    content: MD5
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None
  id: None
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: None
  nameWithType: AssemblyHashAlgorithm.None
  fullName: AssemblyHashAlgorithm.None
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: A mask indicating that there is no hash algorithm. If you specify `None` for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.
  syntax:
    content: None
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1
  id: SHA1
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: SHA1
  nameWithType: AssemblyHashAlgorithm.SHA1
  fullName: AssemblyHashAlgorithm.SHA1
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.
  syntax:
    content: SHA1
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256
  id: SHA256
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: SHA256
  nameWithType: AssemblyHashAlgorithm.SHA256
  fullName: AssemblyHashAlgorithm.SHA256
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.
  syntax:
    content: SHA256
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384
  id: SHA384
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: SHA384
  nameWithType: AssemblyHashAlgorithm.SHA384
  fullName: AssemblyHashAlgorithm.SHA384
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.
  syntax:
    content: SHA384
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512
  commentId: F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512
  id: SHA512
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  langs:
  - csharp
  name: SHA512
  nameWithType: AssemblyHashAlgorithm.SHA512
  fullName: AssemblyHashAlgorithm.SHA512
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Configuration.Assemblies
  summary: A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.
  syntax:
    content: SHA512
    return:
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration.Assemblies/AssemblyHashAlgorithm.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: MD5
  nameWithType: AssemblyHashAlgorithm.MD5
  fullName: AssemblyHashAlgorithm.MD5
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  parent: System.Configuration.Assemblies
  isExternal: false
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.None
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: None
  nameWithType: AssemblyHashAlgorithm.None
  fullName: AssemblyHashAlgorithm.None
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: SHA1
  nameWithType: AssemblyHashAlgorithm.SHA1
  fullName: AssemblyHashAlgorithm.SHA1
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: SHA256
  nameWithType: AssemblyHashAlgorithm.SHA256
  fullName: AssemblyHashAlgorithm.SHA256
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: SHA384
  nameWithType: AssemblyHashAlgorithm.SHA384
  fullName: AssemblyHashAlgorithm.SHA384
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512
  parent: System.Configuration.Assemblies.AssemblyHashAlgorithm
  isExternal: false
  name: SHA512
  nameWithType: AssemblyHashAlgorithm.SHA512
  fullName: AssemblyHashAlgorithm.SHA512
