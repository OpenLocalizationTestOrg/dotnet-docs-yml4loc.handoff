{"nodes":[{"content":"Defines a segment of time that may contain child <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> objects. These child timelines become active according to their respective <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> properties. Also, child timelines are able to overlap (run in parallel) with each other.","nodes":[{"pos":[0,344],"content":"Defines a segment of time that may contain child <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> objects. These child timelines become active according to their respective <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> properties. Also, child timelines are able to overlap (run in parallel) with each other.","nodes":[{"content":"Defines a segment of time that may contain child <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,118],"source":"Defines a segment of time that may contain child <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> objects."},{"content":"These child timelines become active according to their respective <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> properties.","pos":[119,267],"source":" These child timelines become active according to their respective <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> properties."},{"content":"Also, child timelines are able to overlap (run in parallel) with each other.","pos":[268,344]}]}],"pos":[1309,1654],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.ParallelTimeline> objects can be children (nested inside) of a <xref:System.Windows.Media.Animation.Storyboard>. This can provide better encapsulation of timing sequences in complex animations.  \n  \n <xref:System.Windows.Media.Animation.ParallelTimeline> has its own <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property therefore all child timeline <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> values are relative to the parent <xref:System.Windows.Media.Animation.ParallelTimeline> value for <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.","nodes":[{"pos":[0,230],"content":"<xref:System.Windows.Media.Animation.ParallelTimeline> objects can be children (nested inside) of a <xref:System.Windows.Media.Animation.Storyboard>. This can provide better encapsulation of timing sequences in complex animations.","nodes":[{"content":"<xref:System.Windows.Media.Animation.ParallelTimeline> objects can be children (nested inside) of a <xref:System.Windows.Media.Animation.Storyboard>. This can provide better encapsulation of timing sequences in complex animations.","pos":[0,230],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline&gt;</ph> objects can be children (nested inside) of a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.","pos":[0,149],"source":"<xref:System.Windows.Media.Animation.ParallelTimeline> objects can be children (nested inside) of a <xref:System.Windows.Media.Animation.Storyboard>."},{"content":"This can provide better encapsulation of timing sequences in complex animations.","pos":[150,230]}]}]},{"pos":[237,621],"content":"<xref:System.Windows.Media.Animation.ParallelTimeline> has its own <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property therefore all child timeline <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> values are relative to the parent <xref:System.Windows.Media.Animation.ParallelTimeline> value for <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline&gt;</ph> has its own <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> property therefore all child timeline <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> values are relative to the parent <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline&gt;</ph> value for <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>.","pos":[0,384],"source":"<xref:System.Windows.Media.Animation.ParallelTimeline> has its own <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property therefore all child timeline <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> values are relative to the parent <xref:System.Windows.Media.Animation.ParallelTimeline> value for <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>."}]}],"pos":[1665,2291],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class."}],"pos":[10078,10188],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>.","nodes":[{"pos":[0,199],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>."}],"pos":[11499,11699],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[11878,12029],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> and <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>.","nodes":[{"pos":[0,273],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> and <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>."}],"pos":[13372,13646],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[13859,14010],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[14084,14234],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>, <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>, and <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref>.","nodes":[{"pos":[0,351],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>, <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>, and <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref>."}],"pos":[15763,16115],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[16390,16541],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.Duration\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[16615,16765],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.TimelineGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>."}],"pos":[16867,17023],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,320],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","pos":[0,148],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[149,320]}]}],"pos":[18046,18367],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[18378,18726],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true.`</ph>","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`"}]}],"pos":[18924,19163],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"pos":[0,260],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.","pos":[0,163],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[164,260]}]}],"pos":[20280,20541],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,355],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}],"pos":[20552,20912],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true`</ph>.","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`."}]}],"pos":[21122,21361],"yaml":true},{"content":"Creates a new instance of this <xref href=\"System.Windows.Freezable\"></xref>.","nodes":[{"pos":[0,77],"content":"Creates a new instance of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new instance of this <xref href=\"System.Windows.Freezable\"></xref>."}],"pos":[22496,22574],"yaml":true},{"content":"This method overrides the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method.","nodes":[{"pos":[0,87],"content":"This method overrides the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CreateInstanceCore%2A&gt;</ph> method.","pos":[0,87],"source":"This method overrides the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method."}]}],"pos":[22585,22673],"yaml":true,"extradata":"MT"},{"content":"The new <xref href=\"System.Windows.Freezable\"></xref>.","nodes":[{"pos":[0,54],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph>.","source":"The new <xref href=\"System.Windows.Freezable\"></xref>."}],"pos":[22850,22905],"yaml":true},{"content":"Return the natural duration (duration of a single iteration) from a specified <xref href=\"System.Windows.Media.Animation.Clock\"></xref>.","nodes":[{"pos":[0,136],"content":"Return the natural duration (duration of a single iteration) from a specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph>.","source":"Return the natural duration (duration of a single iteration) from a specified <xref href=\"System.Windows.Media.Animation.Clock\"></xref>."}],"pos":[24194,24331],"yaml":true},{"content":"A natural duration is the period of a single iteration. If this method returns <xref:System.Windows.Duration.Automatic%2A> it means that the natural duration is unknown. In this case, the <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> of the <xref:System.Windows.Media.Animation.Clock> is determined by the author. For example, the duration of streaming media would be determined by the provider of the streaming media.","nodes":[{"pos":[0,435],"content":"A natural duration is the period of a single iteration. If this method returns <xref:System.Windows.Duration.Automatic%2A> it means that the natural duration is unknown. In this case, the <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> of the <xref:System.Windows.Media.Animation.Clock> is determined by the author. For example, the duration of streaming media would be determined by the provider of the streaming media.","nodes":[{"content":"A natural duration is the period of a single iteration. If this method returns <xref:System.Windows.Duration.Automatic%2A> it means that the natural duration is unknown. In this case, the <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> of the <xref:System.Windows.Media.Animation.Clock> is determined by the author. For example, the duration of streaming media would be determined by the provider of the streaming media.","pos":[0,435],"nodes":[{"content":"A natural duration is the period of a single iteration.","pos":[0,55]},{"content":"If this method returns <ph id=\"ph1\">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph> it means that the natural duration is unknown.","pos":[56,169],"source":" If this method returns <xref:System.Windows.Duration.Automatic%2A> it means that the natural duration is unknown."},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> is determined by the author.","pos":[170,330],"source":" In this case, the <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> of the <xref:System.Windows.Media.Animation.Clock> is determined by the author."},{"content":"For example, the duration of streaming media would be determined by the provider of the streaming media.","pos":[331,435]}]}]}],"pos":[24342,24778],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to return the natural duration from.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;&lt;/xref&gt;</ph> to return the natural duration from.","source":"The <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to return the natural duration from."}],"pos":[25013,25112],"yaml":true},{"content":"The <xref href=\"System.Windows.Duration\"></xref> quantity representing the natural duration.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Duration\"&gt;&lt;/xref&gt;</ph> quantity representing the natural duration.","source":"The <xref href=\"System.Windows.Duration\"></xref> quantity representing the natural duration."}],"pos":[25179,25272],"yaml":true},{"content":"Gets or sets a value that specifies how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips.","nodes":[{"pos":[0,166],"content":"Gets or sets a value that specifies how this timeline will behave when one or more of its <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> children slips.","source":"Gets or sets a value that specifies how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips."}],"pos":[26350,26517],"yaml":true},{"content":"It is often desirable to synchronize animations and media. However, this is complicated by the fact that media playback can be delayed by loading or buffering making it difficult to reliably play an animation along with media. The <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> property is used to determine what happens when media and animations are played together. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> on the other hand, specifies that an animation will wait (slip) until media is ready to play. The diagrams below illustrate this behavior.  \n  \n This <xref:System.Windows.Media.Animation.Storyboard> plays a video and an animation. When <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> is set to <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property of the <xref:System.Windows.Media.Animation.Storyboard> is set to <xref:System.Windows.Duration.Automatic%2A>, the <xref:System.Windows.Media.Animation.Storyboard> grows to play all media and animations.  \n  \n ![Diagram: Key for SlipBehavior diagram](~/add/media/slipbehaviorkey.png \"Diagram: Key for SlipBehavior diagram\")  \n  \n ![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow1.png \"Diagram: SlipBehavior property value of Grow\")  \n  \n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds which gives media and animations 5 seconds to play regardless of how much they slip.  \n  \n ![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow2.png \"Diagram: SlipBehavior property value of Grow\")  \n  \n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Note that the <xref:System.Windows.Media.Animation.DoubleAnimation> (and any other non-media children of the <xref:System.Windows.Media.Animation.Storyboard>) does not progress unless the media timeline is also progressing.  If the media takes a while to load, or if it is buffering, the animation will wait (slips) with it.  This allows animations to synchronize with a single media file.  \n  \n ![SlipBehavior diagram for media and animation](~/add/media/slipbehaviorslip1.png \"SlipBehavior diagram for media and animation\")  \n  \n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds.  In this scenario, the media file and animation are guaranteed to play for 5 seconds.  \n  \n ![Diagram: SlipBehavior property of a Storyboard](~/add/media/slipbehaviorslip2.png \"Diagram: SlipBehavior property of a Storyboard\")  \n  \n<a name=\"dependencyPropertyInfo_SlipBehavior\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,819],"content":"It is often desirable to synchronize animations and media. However, this is complicated by the fact that media playback can be delayed by loading or buffering making it difficult to reliably play an animation along with media. The <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> property is used to determine what happens when media and animations are played together. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> on the other hand, specifies that an animation will wait (slip) until media is ready to play. The diagrams below illustrate this behavior.","nodes":[{"content":"It is often desirable to synchronize animations and media. However, this is complicated by the fact that media playback can be delayed by loading or buffering making it difficult to reliably play an animation along with media. The <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> property is used to determine what happens when media and animations are played together. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> on the other hand, specifies that an animation will wait (slip) until media is ready to play. The diagrams below illustrate this behavior.","pos":[0,819],"nodes":[{"content":"It is often desirable to synchronize animations and media.","pos":[0,58]},{"content":"However, this is complicated by the fact that media playback can be delayed by loading or buffering making it difficult to reliably play an animation along with media.","pos":[59,226]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> property is used to determine what happens when media and animations are played together.","pos":[227,391],"source":" The <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> property is used to determine what happens when media and animations are played together."},{"content":"A value of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Grow&gt;</ph> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline.","pos":[392,613],"source":" A value of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline."},{"content":"A value of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Slip&gt;</ph> on the other hand, specifies that an animation will wait (slip) until media is ready to play.","pos":[614,774],"source":" A value of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> on the other hand, specifies that an animation will wait (slip) until media is ready to play."},{"content":"The diagrams below illustrate this behavior.","pos":[775,819]}]}]},{"pos":[826,1333],"content":"This <xref:System.Windows.Media.Animation.Storyboard> plays a video and an animation. When <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> is set to <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property of the <xref:System.Windows.Media.Animation.Storyboard> is set to <xref:System.Windows.Duration.Automatic%2A>, the <xref:System.Windows.Media.Animation.Storyboard> grows to play all media and animations.","nodes":[{"content":"This <xref:System.Windows.Media.Animation.Storyboard> plays a video and an animation. When <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> is set to <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property of the <xref:System.Windows.Media.Animation.Storyboard> is set to <xref:System.Windows.Duration.Automatic%2A>, the <xref:System.Windows.Media.Animation.Storyboard> grows to play all media and animations.","pos":[0,507],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> plays a video and an animation.","pos":[0,85],"source":"This <xref:System.Windows.Media.Animation.Storyboard> plays a video and an animation."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Grow&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is set to <ph id=\"ph5\">&lt;xref:System.Windows.Duration.Automatic%2A&gt;</ph>, the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> grows to play all media and animations.","pos":[86,507],"source":" When <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> is set to <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property of the <xref:System.Windows.Media.Animation.Storyboard> is set to <xref:System.Windows.Duration.Automatic%2A>, the <xref:System.Windows.Media.Animation.Storyboard> grows to play all media and animations."}]}]},{"pos":[1340,1453],"content":"<bpt id=\"p1\">![</bpt>Diagram: Key for SlipBehavior diagram<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/slipbehaviorkey.png \"</bpt>Diagram: Key for SlipBehavior diagram<ept id=\"p2\">\")</ept>","source":"![Diagram: Key for SlipBehavior diagram](~/add/media/slipbehaviorkey.png \"Diagram: Key for SlipBehavior diagram\")"},{"pos":[1460,1589],"content":"<bpt id=\"p1\">![</bpt>Diagram: SlipBehavior property value of Grow<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/slipbehaviorgrow1.png \"</bpt>Diagram: SlipBehavior property value of Grow<ept id=\"p2\">\")</ept>","source":"![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow1.png \"Diagram: SlipBehavior property value of Grow\")"},{"pos":[1596,1948],"content":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds which gives media and animations 5 seconds to play regardless of how much they slip.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Grow&gt;</ph> and a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of 5 seconds which gives media and animations 5 seconds to play regardless of how much they slip.","pos":[0,352],"source":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds which gives media and animations 5 seconds to play regardless of how much they slip."}]},{"pos":[1955,2084],"content":"<bpt id=\"p1\">![</bpt>Diagram: SlipBehavior property value of Grow<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/slipbehaviorgrow2.png \"</bpt>Diagram: SlipBehavior property value of Grow<ept id=\"p2\">\")</ept>","source":"![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow2.png \"Diagram: SlipBehavior property value of Grow\")"},{"pos":[2091,2671],"content":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Note that the <xref:System.Windows.Media.Animation.DoubleAnimation> (and any other non-media children of the <xref:System.Windows.Media.Animation.Storyboard>) does not progress unless the media timeline is also progressing.  If the media takes a while to load, or if it is buffering, the animation will wait (slips) with it.  This allows animations to synchronize with a single media file.","nodes":[{"content":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Note that the <xref:System.Windows.Media.Animation.DoubleAnimation> (and any other non-media children of the <xref:System.Windows.Media.Animation.Storyboard>) does not progress unless the media timeline is also progressing.  If the media takes a while to load, or if it is buffering, the animation will wait (slips) with it.  This allows animations to synchronize with a single media file.","pos":[0,580],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Slip&gt;</ph>.","pos":[0,190],"source":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip>."},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.DoubleAnimation&gt;</ph> (and any other non-media children of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>) does not progress unless the media timeline is also progressing.","pos":[191,414],"source":" Note that the <xref:System.Windows.Media.Animation.DoubleAnimation> (and any other non-media children of the <xref:System.Windows.Media.Animation.Storyboard>) does not progress unless the media timeline is also progressing."},{"content":"If the media takes a while to load, or if it is buffering, the animation will wait (slips) with it.","pos":[416,515]},{"content":"This allows animations to synchronize with a single media file.","pos":[517,580]}]}]},{"pos":[2678,2807],"content":"<bpt id=\"p1\">![</bpt>SlipBehavior diagram for media and animation<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/slipbehaviorslip1.png \"</bpt>SlipBehavior diagram for media and animation<ept id=\"p2\">\")</ept>","source":"![SlipBehavior diagram for media and animation](~/add/media/slipbehaviorslip1.png \"SlipBehavior diagram for media and animation\")"},{"pos":[2814,3168],"content":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds.  In this scenario, the media file and animation are guaranteed to play for 5 seconds.","nodes":[{"content":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds.  In this scenario, the media file and animation are guaranteed to play for 5 seconds.","pos":[0,354],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.SlipBehavior.Slip&gt;</ph> and a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of 5 seconds.","pos":[0,268],"source":"This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds."},{"content":"In this scenario, the media file and animation are guaranteed to play for 5 seconds.","pos":[270,354]}]}]},{"pos":[3175,3308],"content":"<bpt id=\"p1\">![</bpt>Diagram: SlipBehavior property of a Storyboard<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/slipbehaviorslip2.png \"</bpt>Diagram: SlipBehavior property of a Storyboard<ept id=\"p2\">\")</ept>","source":"![Diagram: SlipBehavior property of a Storyboard](~/add/media/slipbehaviorslip2.png \"Diagram: SlipBehavior property of a Storyboard\")"},{"pos":[3371,3402],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[3423,3439],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[3440,3515],"content":"<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>","nodes":[]},{"pos":[3520,3553],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[3554,3558],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[26528,30128],"yaml":true,"extradata":"MT"},{"content":"A value that indicates how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips. The default value is <xref href=\"System.Windows.Media.Animation.SlipBehavior.Grow\"></xref>.","nodes":[{"pos":[0,245],"content":"A value that indicates how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips. The default value is <xref href=\"System.Windows.Media.Animation.SlipBehavior.Grow\"></xref>.","nodes":[{"content":"A value that indicates how this timeline will behave when one or more of its <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;&lt;/xref&gt;</ph> children slips.","pos":[0,153],"source":"A value that indicates how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.SlipBehavior.Grow\"&gt;&lt;/xref&gt;</ph>.","pos":[154,245],"source":" The default value is <xref href=\"System.Windows.Media.Animation.SlipBehavior.Grow\"></xref>."}]}],"pos":[30316,30562],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\"></xref> dependency property.","nodes":[{"pos":[0,117],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\"></xref> dependency property."}],"pos":[31692,31810],"yaml":true},{"content":"The identifier for the <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dependency property.","nodes":[{"pos":[0,114],"content":"The identifier for the <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dependency property.","nodes":[{"content":"The identifier for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> dependency property.","pos":[0,114],"source":"The identifier for the <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dependency property."}]}],"pos":[31821,31936],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.ParallelTimeline\n  commentId: T:System.Windows.Media.Animation.ParallelTimeline\n  id: ParallelTimeline\n  children:\n  - System.Windows.Media.Animation.ParallelTimeline.#ctor\n  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})\n  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)\n  - System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)\n  - System.Windows.Media.Animation.ParallelTimeline.Clone\n  - System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  - System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore\n  - System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  - System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  langs:\n  - csharp\n  name: ParallelTimeline\n  nameWithType: ParallelTimeline\n  fullName: System.Windows.Media.Animation.ParallelTimeline\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Defines a segment of time that may contain child <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> objects. These child timelines become active according to their respective <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> properties. Also, child timelines are able to overlap (run in parallel) with each other.\n  remarks: \"<xref:System.Windows.Media.Animation.ParallelTimeline> objects can be children (nested inside) of a <xref:System.Windows.Media.Animation.Storyboard>. This can provide better encapsulation of timing sequences in complex animations.  \\n  \\n <xref:System.Windows.Media.Animation.ParallelTimeline> has its own <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property therefore all child timeline <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> values are relative to the parent <xref:System.Windows.Media.Animation.ParallelTimeline> value for <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.\"\n  syntax:\n    content: 'public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.TimelineGroup\n  derivedClasses:\n  - System.Windows.Media.Animation.Storyboard\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.Timeline.AccelerationRatio\n  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.AutoReverse\n  - System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  - System.Windows.Media.Animation.Timeline.BeginTime\n  - System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  - System.Windows.Media.Animation.Timeline.Completed\n  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Timeline.DecelerationRatio\n  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  - System.Windows.Media.Animation.Timeline.Duration\n  - System.Windows.Media.Animation.Timeline.DurationProperty\n  - System.Windows.Media.Animation.Timeline.FillBehavior\n  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.Timeline.Name\n  - System.Windows.Media.Animation.Timeline.NameProperty\n  - System.Windows.Media.Animation.Timeline.RemoveRequested\n  - System.Windows.Media.Animation.Timeline.RepeatBehavior\n  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  - System.Windows.Media.Animation.Timeline.SpeedRatio\n  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  - System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)\n  - System.Windows.Media.Animation.TimelineGroup.AddText(System.String)\n  - System.Windows.Media.Animation.TimelineGroup.AllocateClock\n  - System.Windows.Media.Animation.TimelineGroup.Children\n  - System.Windows.Media.Animation.TimelineGroup.ChildrenProperty\n  - System.Windows.Media.Animation.TimelineGroup.CreateClock\n  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: ParallelTimeline()\n  nameWithType: ParallelTimeline.ParallelTimeline()\n  fullName: ParallelTimeline.ParallelTimeline()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class.\n  syntax:\n    content: public ParallelTimeline ();\n    parameters: []\n  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})\n  id: '#ctor(System.Nullable{System.TimeSpan})'\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: ParallelTimeline(Nullable<TimeSpan>)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>.\n  syntax:\n    content: public ParallelTimeline (Nullable<TimeSpan> beginTime);\n    parameters:\n    - id: beginTime\n      type: System.Nullable{System.TimeSpan}\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)\n  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)'\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: ParallelTimeline(Nullable<TimeSpan>, Duration)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> and <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>.\n  syntax:\n    content: public ParallelTimeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration);\n    parameters:\n    - id: beginTime\n      type: System.Nullable{System.TimeSpan}\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n    - id: duration\n      type: System.Windows.Duration\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)\n  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)'\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> class with the specified <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref>, <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref>, and <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref>.\n  syntax:\n    content: public ParallelTimeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);\n    parameters:\n    - id: beginTime\n      type: System.Nullable{System.TimeSpan}\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n    - id: duration\n      type: System.Windows.Duration\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.Duration\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n    - id: repeatBehavior\n      type: System.Windows.Media.Animation.RepeatBehavior\n      description: The <xref href=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\"></xref> for this <xref href=\"System.Windows.Media.Animation.TimelineGroup\"></xref>.\n  overload: System.Windows.Media.Animation.ParallelTimeline.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.ParallelTimeline.Clone\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ParallelTimeline.Clone()\n  fullName: ParallelTimeline.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.ParallelTimeline Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.ParallelTimeline\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`\n  overload: System.Windows.Media.Animation.ParallelTimeline.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: ParallelTimeline.CloneCurrentValue()\n  fullName: ParallelTimeline.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.ParallelTimeline\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.ParallelTimeline\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.\n  overload: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: ParallelTimeline.CreateInstanceCore()\n  fullName: ParallelTimeline.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of this <xref href=\"System.Windows.Freezable\"></xref>.\n  remarks: This method overrides the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new <xref href=\"System.Windows.Freezable\"></xref>.\n  overload: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  commentId: M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  id: GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: GetNaturalDurationCore(Clock)\n  nameWithType: ParallelTimeline.GetNaturalDurationCore(Clock)\n  fullName: ParallelTimeline.GetNaturalDurationCore(Clock)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Return the natural duration (duration of a single iteration) from a specified <xref href=\"System.Windows.Media.Animation.Clock\"></xref>.\n  remarks: A natural duration is the period of a single iteration. If this method returns <xref:System.Windows.Duration.Automatic%2A> it means that the natural duration is unknown. In this case, the <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> of the <xref:System.Windows.Media.Animation.Clock> is determined by the author. For example, the duration of streaming media would be determined by the provider of the streaming media.\n  syntax:\n    content: protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);\n    parameters:\n    - id: clock\n      type: System.Windows.Media.Animation.Clock\n      description: The <xref href=\"System.Windows.Media.Animation.Clock\"></xref> to return the natural duration from.\n    return:\n      type: System.Windows.Duration\n      description: The <xref href=\"System.Windows.Duration\"></xref> quantity representing the natural duration.\n  overload: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  commentId: P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  id: SlipBehavior\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: SlipBehavior\n  nameWithType: ParallelTimeline.SlipBehavior\n  fullName: ParallelTimeline.SlipBehavior\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that specifies how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips.\n  remarks: \"It is often desirable to synchronize animations and media. However, this is complicated by the fact that media playback can be delayed by loading or buffering making it difficult to reliably play an animation along with media. The <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> property is used to determine what happens when media and animations are played together. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (default) specifies that animation timelines do not need to be synced and will play when specified regardless of the state of other media in the timeline. A value of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> on the other hand, specifies that an animation will wait (slip) until media is ready to play. The diagrams below illustrate this behavior.  \\n  \\n This <xref:System.Windows.Media.Animation.Storyboard> plays a video and an animation. When <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> is set to <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property of the <xref:System.Windows.Media.Animation.Storyboard> is set to <xref:System.Windows.Duration.Automatic%2A>, the <xref:System.Windows.Media.Animation.Storyboard> grows to play all media and animations.  \\n  \\n ![Diagram: Key for SlipBehavior diagram](~/add/media/slipbehaviorkey.png \\\"Diagram: Key for SlipBehavior diagram\\\")  \\n  \\n ![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow1.png \\\"Diagram: SlipBehavior property value of Grow\\\")  \\n  \\n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Grow> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds which gives media and animations 5 seconds to play regardless of how much they slip.  \\n  \\n ![Diagram: SlipBehavior property value of Grow](~/add/media/slipbehaviorgrow2.png \\\"Diagram: SlipBehavior property value of Grow\\\")  \\n  \\n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Note that the <xref:System.Windows.Media.Animation.DoubleAnimation> (and any other non-media children of the <xref:System.Windows.Media.Animation.Storyboard>) does not progress unless the media timeline is also progressing.  If the media takes a while to load, or if it is buffering, the animation will wait (slips) with it.  This allows animations to synchronize with a single media file.  \\n  \\n ![SlipBehavior diagram for media and animation](~/add/media/slipbehaviorslip1.png \\\"SlipBehavior diagram for media and animation\\\")  \\n  \\n This <xref:System.Windows.Media.Animation.Storyboard> has a <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> of <xref:System.Windows.Media.Animation.SlipBehavior.Slip> and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds.  In this scenario, the media file and animation are guaranteed to play for 5 seconds.  \\n  \\n ![Diagram: SlipBehavior property of a Storyboard](~/add/media/slipbehaviorslip2.png \\\"Diagram: SlipBehavior property of a Storyboard\\\")  \\n  \\n<a name=\\\"dependencyPropertyInfo_SlipBehavior\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }\n    return:\n      type: System.Windows.Media.Animation.SlipBehavior\n      description: A value that indicates how this timeline will behave when one or more of its <xref href=\"System.Windows.Media.Animation.Timeline\"></xref> children slips. The default value is <xref href=\"System.Windows.Media.Animation.SlipBehavior.Grow\"></xref>.\n  overload: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  commentId: F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  id: SlipBehaviorProperty\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  langs:\n  - csharp\n  name: SlipBehaviorProperty\n  nameWithType: ParallelTimeline.SlipBehaviorProperty\n  fullName: ParallelTimeline.SlipBehaviorProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\"></xref> dependency property.\n  remarks: The identifier for the <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dependency property.\n  example:\n  - '[Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md)'\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.TimelineGroup\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: TimelineGroup\n  nameWithType: TimelineGroup\n  fullName: System.Windows.Media.Animation.TimelineGroup\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: ParallelTimeline()\n  nameWithType: ParallelTimeline.ParallelTimeline()\n  fullName: ParallelTimeline.ParallelTimeline()\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: ParallelTimeline(Nullable<TimeSpan>)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>)\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.TimeSpan\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: false\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: ParallelTimeline(Nullable<TimeSpan>, Duration)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration)\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n  nameWithType: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n  fullName: ParallelTimeline.ParallelTimeline(Nullable<TimeSpan>, Duration, RepeatBehavior)\n- uid: System.Windows.Media.Animation.RepeatBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: RepeatBehavior\n  nameWithType: RepeatBehavior\n  fullName: System.Windows.Media.Animation.RepeatBehavior\n- uid: System.Windows.Media.Animation.ParallelTimeline.Clone\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: Clone()\n  nameWithType: ParallelTimeline.Clone()\n  fullName: ParallelTimeline.Clone()\n- uid: System.Windows.Media.Animation.ParallelTimeline\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ParallelTimeline\n  nameWithType: ParallelTimeline\n  fullName: System.Windows.Media.Animation.ParallelTimeline\n- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: ParallelTimeline.CloneCurrentValue()\n  fullName: ParallelTimeline.CloneCurrentValue()\n- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: ParallelTimeline.CreateInstanceCore()\n  fullName: ParallelTimeline.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: GetNaturalDurationCore(Clock)\n  nameWithType: ParallelTimeline.GetNaturalDurationCore(Clock)\n  fullName: ParallelTimeline.GetNaturalDurationCore(Clock)\n- uid: System.Windows.Media.Animation.Clock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Clock\n  nameWithType: Clock\n  fullName: System.Windows.Media.Animation.Clock\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: SlipBehavior\n  nameWithType: ParallelTimeline.SlipBehavior\n  fullName: ParallelTimeline.SlipBehavior\n- uid: System.Windows.Media.Animation.SlipBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: SlipBehavior\n  nameWithType: SlipBehavior\n  fullName: System.Windows.Media.Animation.SlipBehavior\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: SlipBehaviorProperty\n  nameWithType: ParallelTimeline.SlipBehaviorProperty\n  fullName: ParallelTimeline.SlipBehaviorProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.ParallelTimeline.#ctor*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: ParallelTimeline\n  nameWithType: ParallelTimeline.ParallelTimeline\n  fullName: ParallelTimeline.ParallelTimeline\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.Media.Animation.ParallelTimeline.Clone*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: Clone\n  nameWithType: ParallelTimeline.Clone\n  fullName: ParallelTimeline.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: ParallelTimeline.CloneCurrentValue\n  fullName: ParallelTimeline.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: ParallelTimeline.CreateInstanceCore\n  fullName: ParallelTimeline.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: GetNaturalDurationCore\n  nameWithType: ParallelTimeline.GetNaturalDurationCore\n  fullName: ParallelTimeline.GetNaturalDurationCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.Media.Animation.ParallelTimeline.SlipBehavior*\n  parent: System.Windows.Media.Animation.ParallelTimeline\n  isExternal: false\n  name: SlipBehavior\n  nameWithType: ParallelTimeline.SlipBehavior\n  fullName: ParallelTimeline.SlipBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/ParallelTimeline.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Timeline.FreezeCore(Boolean)\n  fullName: Timeline.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetAsFrozenCore(Freezable)\n  fullName: Timeline.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatio\n  nameWithType: Timeline.AccelerationRatio\n  fullName: Timeline.AccelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatioProperty\n  nameWithType: Timeline.AccelerationRatioProperty\n  fullName: Timeline.AccelerationRatioProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.AllocateClock\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AllocateClock()\n  nameWithType: TimelineGroup.AllocateClock()\n  fullName: TimelineGroup.AllocateClock()\n- uid: System.Windows.Media.Animation.Timeline.AutoReverse\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverse\n  nameWithType: Timeline.AutoReverse\n  fullName: Timeline.AutoReverse\n- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverseProperty\n  nameWithType: Timeline.AutoReverseProperty\n  fullName: Timeline.AutoReverseProperty\n- uid: System.Windows.Media.Animation.Timeline.BeginTime\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTime\n  nameWithType: Timeline.BeginTime\n  fullName: Timeline.BeginTime\n- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTimeProperty\n  nameWithType: Timeline.BeginTimeProperty\n  fullName: Timeline.BeginTimeProperty\n- uid: System.Windows.Media.Animation.Timeline.Completed\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Completed\n  nameWithType: Timeline.Completed\n  fullName: Timeline.Completed\n- uid: System.Windows.Media.Animation.TimelineGroup.CreateClock\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: CreateClock()\n  nameWithType: TimelineGroup.CreateClock()\n  fullName: TimelineGroup.CreateClock()\n- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CreateClock(Boolean)\n  nameWithType: Timeline.CreateClock(Boolean)\n  fullName: Timeline.CreateClock(Boolean)\n- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentGlobalSpeedInvalidated\n  nameWithType: Timeline.CurrentGlobalSpeedInvalidated\n  fullName: Timeline.CurrentGlobalSpeedInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentStateInvalidated\n  nameWithType: Timeline.CurrentStateInvalidated\n  fullName: Timeline.CurrentStateInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentTimeInvalidated\n  nameWithType: Timeline.CurrentTimeInvalidated\n  fullName: Timeline.CurrentTimeInvalidated\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatio\n  nameWithType: Timeline.DecelerationRatio\n  fullName: Timeline.DecelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatioProperty\n  nameWithType: Timeline.DecelerationRatioProperty\n  fullName: Timeline.DecelerationRatioProperty\n- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DesiredFrameRateProperty\n  nameWithType: Timeline.DesiredFrameRateProperty\n  fullName: Timeline.DesiredFrameRateProperty\n- uid: System.Windows.Media.Animation.Timeline.Duration\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Duration\n  nameWithType: Timeline.Duration\n  fullName: Timeline.Duration\n- uid: System.Windows.Media.Animation.Timeline.DurationProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DurationProperty\n  nameWithType: Timeline.DurationProperty\n  fullName: Timeline.DurationProperty\n- uid: System.Windows.Media.Animation.Timeline.FillBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehavior\n  nameWithType: Timeline.FillBehavior\n  fullName: Timeline.FillBehavior\n- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehaviorProperty\n  nameWithType: Timeline.FillBehaviorProperty\n  fullName: Timeline.FillBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetDesiredFrameRate(Timeline)\n  nameWithType: Timeline.GetDesiredFrameRate(Timeline)\n  fullName: Timeline.GetDesiredFrameRate(Timeline)\n- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetNaturalDuration(Clock)\n  nameWithType: Timeline.GetNaturalDuration(Clock)\n  fullName: Timeline.GetNaturalDuration(Clock)\n- uid: System.Windows.Media.Animation.Timeline.Name\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Name\n  nameWithType: Timeline.Name\n  fullName: Timeline.Name\n- uid: System.Windows.Media.Animation.Timeline.NameProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: NameProperty\n  nameWithType: Timeline.NameProperty\n  fullName: Timeline.NameProperty\n- uid: System.Windows.Media.Animation.Timeline.RemoveRequested\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RemoveRequested\n  nameWithType: Timeline.RemoveRequested\n  fullName: Timeline.RemoveRequested\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehavior\n  nameWithType: Timeline.RepeatBehavior\n  fullName: Timeline.RepeatBehavior\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehaviorProperty\n  nameWithType: Timeline.RepeatBehaviorProperty\n  fullName: Timeline.RepeatBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  nameWithType: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  fullName: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: Timeline.SpeedRatio\n  fullName: Timeline.SpeedRatio\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatioProperty\n  nameWithType: Timeline.SpeedRatioProperty\n  fullName: Timeline.SpeedRatioProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AddChild(Object)\n  nameWithType: TimelineGroup.AddChild(Object)\n  fullName: TimelineGroup.AddChild(Object)\n- uid: System.Windows.Media.Animation.TimelineGroup.AddText(System.String)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: AddText(String)\n  nameWithType: TimelineGroup.AddText(String)\n  fullName: TimelineGroup.AddText(String)\n- uid: System.Windows.Media.Animation.TimelineGroup.Children\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: Children\n  nameWithType: TimelineGroup.Children\n  fullName: TimelineGroup.Children\n- uid: System.Windows.Media.Animation.TimelineGroup.ChildrenProperty\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: ChildrenProperty\n  nameWithType: TimelineGroup.ChildrenProperty\n  fullName: TimelineGroup.ChildrenProperty\n- uid: System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: IAddChild.AddChild(Object)\n  nameWithType: TimelineGroup.IAddChild.AddChild(Object)\n  fullName: TimelineGroup.IAddChild.AddChild(Object)\n- uid: System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Media.Animation.TimelineGroup\n  isExternal: false\n  name: IAddChild.AddText(String)\n  nameWithType: TimelineGroup.IAddChild.AddText(String)\n  fullName: TimelineGroup.IAddChild.AddText(String)\n"}