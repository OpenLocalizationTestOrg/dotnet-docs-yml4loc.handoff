<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46c9ad8e45aedae16da083de87fa7d2325520cef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.ICallContextInitializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9859b34c7edcacb59a6ca214118b6627031d42df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">378d6665ffa696c59138d46e68eca709c50fd643</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer&gt;</ph> interface and add it to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName&gt;</ph> property to initialize and clean up thread-local storage for the thread that invokes user code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Implement to participate in cleaning up the thread that invoked the operation.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to perform any necessary cleaning up of the operation thread.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The correlation object returned from the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Implement to participate in the initialization of the operation thread.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A&gt;</ph> method to initialize and clean up thread-local storage for the thread that invokes user code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The service instance for the operation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The client channel.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The incoming message.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A correlation object passed back as the parameter of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>