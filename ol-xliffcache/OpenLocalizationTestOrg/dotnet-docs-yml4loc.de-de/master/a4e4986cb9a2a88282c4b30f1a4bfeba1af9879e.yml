### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.GZipStream
  commentId: T:System.IO.Compression.GZipStream
  id: GZipStream
  children:
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  - System.IO.Compression.GZipStream.BaseStream
  - System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Compression.GZipStream.CanRead
  - System.IO.Compression.GZipStream.CanSeek
  - System.IO.Compression.GZipStream.CanWrite
  - System.IO.Compression.GZipStream.Dispose(System.Boolean)
  - System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)
  - System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)
  - System.IO.Compression.GZipStream.Flush
  - System.IO.Compression.GZipStream.Length
  - System.IO.Compression.GZipStream.Position
  - System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Compression.GZipStream.SetLength(System.Int64)
  - System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  name: GZipStream
  nameWithType: GZipStream
  fullName: System.IO.Compression.GZipStream
  type: Class
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Provides methods and properties used to compress and decompress streams.
  remarks: "This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression. The format includes a cyclic redundancy check value for detecting data corruption. The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats. The format can be readily implemented in a manner not covered by patents.  \n  \n Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \n  \n Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.  \n  \n The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream."
  example:
  - "The following example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a directory of files.  \n  \n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]"
  syntax:
    content: 'public class GZipStream : System.IO.Stream'
  inheritance:
  - System.Object
  - System.IO.Stream
  implements: []
  inheritedMembers:
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadByte
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteByte(System.Byte)
  - System.IO.Stream.WriteTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: GZipStream(Stream, CompressionLevel)
  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel)
  fullName: GZipStream.GZipStream(Stream, CompressionLevel)
  type: Constructor
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream"></xref> class by using the specified stream and compression level.
  remarks: "You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."
  example:
  - "The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object.  \n  \n [!code-csharp[System.IO.Compression.GZipStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program1.cs#1)]\n [!code-vb[System.IO.Compression.GZipStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program1.vb#1)]"
  syntax:
    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write the compressed data to.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
  overload: System.IO.Compression.GZipStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="System.IO.Stream.CanWrite"></xref> property on the stream object is `false`.)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: GZipStream(Stream, CompressionMode)
  nameWithType: GZipStream.GZipStream(Stream, CompressionMode)
  fullName: GZipStream.GZipStream(Stream, CompressionMode)
  type: Constructor
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream"></xref> class by using the specified stream and compression mode.
  remarks: "By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."
  example:
  - "The following example initializes a new instance of the <xref:System.IO.Compression.GZipStream> class with `mode` set to <xref:System.IO.Compression.CompressionMode.Compress>. This example is part of a larger example provided for the <xref:System.IO.Compression.GZipStream> class.  \n  \n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]"
  syntax:
    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream the compressed or decompressed data is written to.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
  overload: System.IO.Compression.GZipStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> enumeration value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: GZipStream(Stream, CompressionLevel, Boolean)
  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)
  fullName: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.
  remarks: "You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."
  example:
  - "The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object and how to leave the stream open.  \n  \n [!code-csharp[System.IO.Compression.GZipStream#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program2.cs#2)]\n [!code-vb[System.IO.Compression.GZipStream#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program2.vb#2)]"
  syntax:
    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write the compressed data to.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream object open after disposing the <xref href="System.IO.Compression.GZipStream"></xref> object; otherwise, `false`.'
  overload: System.IO.Compression.GZipStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="System.IO.Stream.CanWrite"></xref> property on the stream object is `false`.)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: GZipStream(Stream, CompressionMode, Boolean)
  nameWithType: GZipStream.GZipStream(Stream, CompressionMode, Boolean)
  fullName: GZipStream.GZipStream(Stream, CompressionMode, Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.
  remarks: "By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."
  syntax:
    content: public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream the compressed or decompressed data is written to.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream open after disposing the <xref href="System.IO.Compression.GZipStream"></xref> object; otherwise, `false`.'
  overload: System.IO.Compression.GZipStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.BaseStream
  commentId: P:System.IO.Compression.GZipStream.BaseStream
  id: BaseStream
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: BaseStream
  nameWithType: GZipStream.BaseStream
  fullName: GZipStream.BaseStream
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Gets a reference to the underlying stream.
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: A stream object that represents the underlying stream.
  overload: System.IO.Compression.GZipStream.BaseStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The underlying stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Begins an asynchronous read operation. (Consider using the <xref href="System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)"></xref> method instead.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.  \n  \n The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.  \n  \n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>."
  example:
  - "The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.  \n  \n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback cback, object state);
    parameters:
    - id: array
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> at which to begin reading data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: asyncCallback
      type: System.AsyncCallback
      description: ''
    - id: asyncState
      type: System.Object
      description: ''
    return:
      type: System.IAsyncResult
      description: An object that represents the asynchronous read operation, which could still be pending.
  overload: System.IO.Compression.GZipStream.BeginRead*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The method tried to  read asynchronously past the end of the stream, or a disk error occurred.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: One or more of the arguments is invalid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current <xref href="System.IO.Compression.GZipStream"></xref> implementation does not support the read operation.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A read operation cannot be performed because the stream is closed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Begins an asynchronous write operation. (Consider using the <xref href="System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)"></xref> method instead.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object.  \n  \n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method."
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback cback, object state);
    parameters:
    - id: array
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: asyncCallback
      type: System.AsyncCallback
      description: ''
    - id: asyncState
      type: System.Object
      description: ''
    return:
      type: System.IAsyncResult
      description: An  object that represents the asynchronous write operation, which could still be pending.
  overload: System.IO.Compression.GZipStream.BeginWrite*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The underlying stream is `null`.  \n  \n -or-  \n  \n The underlying stream is closed."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.CanRead
  commentId: P:System.IO.Compression.GZipStream.CanRead
  id: CanRead
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: CanRead
  nameWithType: GZipStream.CanRead
  fullName: GZipStream.CanRead
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports reading while decompressing a file.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Compression.CompressionMode"></xref> value is `Decompress,` and the underlying stream supports reading and is not closed; otherwise, `false`.'
  overload: System.IO.Compression.GZipStream.CanRead*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.CanSeek
  commentId: P:System.IO.Compression.GZipStream.CanSeek
  id: CanSeek
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: GZipStream.CanSeek
  fullName: GZipStream.CanSeek
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports seeking.
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.IO.Compression.GZipStream.CanSeek*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.CanWrite
  commentId: P:System.IO.Compression.GZipStream.CanWrite
  id: CanWrite
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: GZipStream.CanWrite
  fullName: GZipStream.CanWrite
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Compression.CompressionMode"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.'
  overload: System.IO.Compression.GZipStream.CanWrite*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: GZipStream.Dispose(Boolean)
  fullName: GZipStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Compression.GZipStream"></xref> and optionally releases the managed resources.
  remarks: "This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.Compression.GZipStream.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: GZipStream.EndRead(IAsyncResult)
  fullName: GZipStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Waits for the pending asynchronous read to complete. (Consider using the the <xref href="System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)"></xref> method instead.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.  \n  \n This method blocks until the I/O operation has completed."
  example:
  - "The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.  \n  \n [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]\n [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]"
  syntax:
    content: public override int EndRead (IAsyncResult async_result);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: ''
    return:
      type: System.Int32
      description: The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href="System.IO.Compression.GZipStream"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.
  overload: System.IO.Compression.GZipStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>async_result</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>async_result</code> did not originate from a <xref href="System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></xref> method on the current stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The end operation cannot be performed because the stream is closed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: GZipStream.EndWrite(IAsyncResult)
  fullName: GZipStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Handles the end of an asynchronous write operation. (Consider using the <xref href="System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)"></xref> method instead.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=fullName> method. The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method."
  syntax:
    content: public override void EndWrite (IAsyncResult async_result);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: ''
  overload: System.IO.Compression.GZipStream.EndWrite*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The underlying stream is `null`.  \n  \n -or-  \n  \n The underlying stream is closed."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Flush
  commentId: M:System.IO.Compression.GZipStream.Flush
  id: Flush
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Flush()
  nameWithType: GZipStream.Flush()
  fullName: GZipStream.Flush()
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: The current implementation of this method has no functionality.
  remarks: The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Compression.GZipStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Length
  commentId: P:System.IO.Compression.GZipStream.Length
  id: Length
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Length
  nameWithType: GZipStream.Length
  fullName: GZipStream.Length
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.GZipStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Position
  commentId: P:System.IO.Compression.GZipStream.Position
  id: Position
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Position
  nameWithType: GZipStream.Position
  fullName: GZipStream.Position
  type: Property
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.GZipStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Read(Byte[], Int32, Int32)
  nameWithType: GZipStream.Read(Byte[], Int32, Int32)
  fullName: GZipStream.Read(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Reads a number of decompressed bytes into the specified byte array.
  remarks: If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations. A cyclic redundancy check (CRC) is performed as one of the last operations of this method.
  example:
  - "The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.  \n  \n [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]\n [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]"
  syntax:
    content: public override int Read (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: The array used to store decompressed bytes.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> at which the read bytes will be placed.
    - id: count
      type: System.Int32
      description: The maximum number of decompressed bytes to read.
    return:
      type: System.Int32
      description: The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.
  overload: System.IO.Compression.GZipStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>array</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created.  \n  \n \\- or -  \n  \n The underlying stream does not support reading."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>array</code> length minus the index starting point is less than <code>count</code>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: The data is in an invalid format.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: array
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
  overload: System.IO.Compression.GZipStream.ReadAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Seek(Int64, SeekOrigin)
  nameWithType: GZipStream.Seek(Int64, SeekOrigin)
  fullName: GZipStream.Seek(Int64, SeekOrigin)
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: The location in the stream.
    - id: origin
      type: System.IO.SeekOrigin
      description: One of the <xref href="System.IO.SeekOrigin"></xref> values.
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.GZipStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)
  commentId: M:System.IO.Compression.GZipStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: GZipStream.SetLength(Int64)
  fullName: GZipStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The length of the stream.
  overload: System.IO.Compression.GZipStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: Write(Byte[], Int32, Int32)
  nameWithType: GZipStream.Write(Byte[], Int32, Int32)
  fullName: GZipStream.Write(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO.Compression
  - System
  - netstandard
  namespace: System.IO.Compression
  summary: Writes compressed bytes to the underlying stream from the specified byte array.
  remarks: The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called.
  example:
  - "The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.  \n  \n [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]\n [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]"
  syntax:
    content: public override void Write (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: The buffer that contains the data to compress.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> from which the bytes will be read.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
  overload: System.IO.Compression.GZipStream.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The write operation cannot be performed because the stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public override System.Threading.Tasks.Task WriteAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: array
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: System.IO.Compression.GZipStream.WriteAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
references:
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  parent: System.IO
  isExternal: false
  name: InvalidDataException
  nameWithType: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: GZipStream(Stream, CompressionLevel)
  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel)
  fullName: GZipStream.GZipStream(Stream, CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: GZipStream(Stream, CompressionMode)
  nameWithType: GZipStream.GZipStream(Stream, CompressionMode)
  fullName: GZipStream.GZipStream(Stream, CompressionMode)
- uid: System.IO.Compression.CompressionMode
  parent: System.IO.Compression
  isExternal: false
  name: CompressionMode
  nameWithType: CompressionMode
  fullName: System.IO.Compression.CompressionMode
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: GZipStream(Stream, CompressionLevel, Boolean)
  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)
  fullName: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: GZipStream(Stream, CompressionMode, Boolean)
  nameWithType: GZipStream.GZipStream(Stream, CompressionMode, Boolean)
  fullName: GZipStream.GZipStream(Stream, CompressionMode, Boolean)
- uid: System.IO.Compression.GZipStream.BaseStream
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BaseStream
  nameWithType: GZipStream.BaseStream
  fullName: GZipStream.BaseStream
- uid: System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: GZipStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: GZipStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Compression.GZipStream.CanRead
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanRead
  nameWithType: GZipStream.CanRead
  fullName: GZipStream.CanRead
- uid: System.IO.Compression.GZipStream.CanSeek
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanSeek
  nameWithType: GZipStream.CanSeek
  fullName: GZipStream.CanSeek
- uid: System.IO.Compression.GZipStream.CanWrite
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanWrite
  nameWithType: GZipStream.CanWrite
  fullName: GZipStream.CanWrite
- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: GZipStream.Dispose(Boolean)
  fullName: GZipStream.Dispose(Boolean)
- uid: System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: GZipStream.EndRead(IAsyncResult)
  fullName: GZipStream.EndRead(IAsyncResult)
- uid: System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: GZipStream.EndWrite(IAsyncResult)
  fullName: GZipStream.EndWrite(IAsyncResult)
- uid: System.IO.Compression.GZipStream.Flush
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Flush()
  nameWithType: GZipStream.Flush()
  fullName: GZipStream.Flush()
- uid: System.IO.Compression.GZipStream.Length
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Length
  nameWithType: GZipStream.Length
  fullName: GZipStream.Length
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.GZipStream.Position
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Position
  nameWithType: GZipStream.Position
  fullName: GZipStream.Position
- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: GZipStream.Read(Byte[], Int32, Int32)
  fullName: GZipStream.Read(Byte[], Int32, Int32)
- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: GZipStream.Seek(Int64, SeekOrigin)
  fullName: GZipStream.Seek(Int64, SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: GZipStream.SetLength(Int64)
  fullName: GZipStream.SetLength(Int64)
- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: GZipStream.Write(Byte[], Int32, Int32)
  fullName: GZipStream.Write(Byte[], Int32, Int32)
- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Compression.GZipStream.#ctor*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: GZipStream
  nameWithType: GZipStream.GZipStream
  fullName: GZipStream.GZipStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.BaseStream*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BaseStream
  nameWithType: GZipStream.BaseStream
  fullName: GZipStream.BaseStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.BeginRead*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BeginRead
  nameWithType: GZipStream.BeginRead
  fullName: GZipStream.BeginRead
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.BeginWrite*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: BeginWrite
  nameWithType: GZipStream.BeginWrite
  fullName: GZipStream.BeginWrite
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.CanRead*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanRead
  nameWithType: GZipStream.CanRead
  fullName: GZipStream.CanRead
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.CanSeek*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanSeek
  nameWithType: GZipStream.CanSeek
  fullName: GZipStream.CanSeek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.CanWrite*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: CanWrite
  nameWithType: GZipStream.CanWrite
  fullName: GZipStream.CanWrite
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Dispose*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Dispose
  nameWithType: GZipStream.Dispose
  fullName: GZipStream.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.EndRead*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: EndRead
  nameWithType: GZipStream.EndRead
  fullName: GZipStream.EndRead
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.EndWrite*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: EndWrite
  nameWithType: GZipStream.EndWrite
  fullName: GZipStream.EndWrite
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Flush*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Flush
  nameWithType: GZipStream.Flush
  fullName: GZipStream.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Length*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Length
  nameWithType: GZipStream.Length
  fullName: GZipStream.Length
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Position*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Position
  nameWithType: GZipStream.Position
  fullName: GZipStream.Position
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Read*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Read
  nameWithType: GZipStream.Read
  fullName: GZipStream.Read
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.ReadAsync*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: ReadAsync
  nameWithType: GZipStream.ReadAsync
  fullName: GZipStream.ReadAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Seek*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Seek
  nameWithType: GZipStream.Seek
  fullName: GZipStream.Seek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.SetLength*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: SetLength
  nameWithType: GZipStream.SetLength
  fullName: GZipStream.SetLength
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.Write*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: Write
  nameWithType: GZipStream.Write
  fullName: GZipStream.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.IO.Compression.GZipStream.WriteAsync*
  parent: System.IO.Compression.GZipStream
  isExternal: false
  name: WriteAsync
  nameWithType: GZipStream.WriteAsync
  fullName: GZipStream.WriteAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/GZipStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: Stream.CanTimeout
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: Stream.FlushAsync(CancellationToken)
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: false
  name: ReadByte()
  nameWithType: Stream.ReadByte()
  fullName: Stream.ReadByte()
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: Stream.ReadTimeout
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: Stream.WriteByte(Byte)
  fullName: Stream.WriteByte(Byte)
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: Stream.WriteTimeout
