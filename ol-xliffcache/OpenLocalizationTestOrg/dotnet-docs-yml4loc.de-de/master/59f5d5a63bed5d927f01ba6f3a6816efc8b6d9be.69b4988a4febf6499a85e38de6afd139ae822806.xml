{"nodes":[{"content":"Represents the method that will handle the <xref href=\"System.Reflection.Assembly.ModuleResolve\"></xref> event of an <xref href=\"System.Reflection.Assembly\"></xref>.","nodes":[{"pos":[0,165],"content":"Represents the method that will handle the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Assembly.ModuleResolve\"&gt;&lt;/xref&gt;</ph> event of an <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Assembly\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the method that will handle the <xref href=\"System.Reflection.Assembly.ModuleResolve\"></xref> event of an <xref href=\"System.Reflection.Assembly\"></xref>."}],"pos":[451,617],"yaml":true},{"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.","nodes":[{"pos":[0,247],"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.","nodes":[{"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.","pos":[0,247],"nodes":[{"content":"If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised.","pos":[0,151]},{"content":"The event handler for this delegate must locate and return a module that satisfies the request.","pos":[152,247]}]}]}],"pos":[628,876],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ModuleResolveEventHandler\n  commentId: T:System.Reflection.ModuleResolveEventHandler\n  id: ModuleResolveEventHandler\n  langs:\n  - csharp\n  name: ModuleResolveEventHandler\n  nameWithType: ModuleResolveEventHandler\n  fullName: System.Reflection.ModuleResolveEventHandler\n  type: Delegate\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents the method that will handle the <xref href=\"System.Reflection.Assembly.ModuleResolve\"></xref> event of an <xref href=\"System.Reflection.Assembly\"></xref>.\n  remarks: If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised. The event handler for this delegate must locate and return a module that satisfies the request.\n  example:\n  - \"The following example demonstrates the sequence of execution in which an event handler is called. In this example, Server1 is an external module of the MySample class.  \\n  \\n### To compile and run the example  \\n  \\n1.  Open a Command Prompt window and navigate to the directory that contains MySample.cs.  \\n  \\n2.  Compile Server1 using the following command:  \\n  \\n    ```  \\n    csc /out:subfolder\\\\Server1.netmodule /t:module Server1.cs  \\n    ```  \\n  \\n3.  Compile MySample using the following command:  \\n  \\n    ```  \\n    csc /out:MySample.exe /t:exe /addmodule:subfolder\\\\Server1.netmodule MySample.cs  \\n    ```  \\n  \\n4.  Run MySample.exe.  \\n  \\n> [!NOTE]\\n>  The module file Server1.netmodule must be in a subdirectory named \\\"subfolder\\\" for this example to work properly.  \\n  \\n [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  \\n[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ModuleResolveEventHandler.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}