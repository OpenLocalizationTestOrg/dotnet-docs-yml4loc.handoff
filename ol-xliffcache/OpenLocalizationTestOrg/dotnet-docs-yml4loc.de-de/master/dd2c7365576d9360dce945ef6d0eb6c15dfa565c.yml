### YamlMime:ManagedReference
items:
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  id: TextWriter
  children:
  - System.IO.TextWriter.#ctor
  - System.IO.TextWriter.#ctor(System.IFormatProvider)
  - System.IO.TextWriter.Close
  - System.IO.TextWriter.CoreNewLine
  - System.IO.TextWriter.Dispose
  - System.IO.TextWriter.Dispose(System.Boolean)
  - System.IO.TextWriter.Encoding
  - System.IO.TextWriter.Flush
  - System.IO.TextWriter.FlushAsync
  - System.IO.TextWriter.FormatProvider
  - System.IO.TextWriter.NewLine
  - System.IO.TextWriter.Null
  - System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.Write(System.String,System.Object[])
  - System.IO.TextWriter.Write(System.String,System.Object)
  - System.IO.TextWriter.Write(System.UInt64)
  - System.IO.TextWriter.Write(System.UInt32)
  - System.IO.TextWriter.Write(System.String)
  - System.IO.TextWriter.Write(System.Single)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.Int64)
  - System.IO.TextWriter.Write(System.Int32)
  - System.IO.TextWriter.Write(System.Double)
  - System.IO.TextWriter.Write(System.Decimal)
  - System.IO.TextWriter.Write(System.Char[])
  - System.IO.TextWriter.Write(System.Char)
  - System.IO.TextWriter.Write(System.Object)
  - System.IO.TextWriter.Write(System.Boolean)
  - System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteAsync(System.String)
  - System.IO.TextWriter.WriteAsync(System.Char)
  - System.IO.TextWriter.WriteAsync(System.Char[])
  - System.IO.TextWriter.WriteLine(System.String)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLine(System.String,System.Object[])
  - System.IO.TextWriter.WriteLine(System.String,System.Object)
  - System.IO.TextWriter.WriteLine(System.UInt64)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.UInt32)
  - System.IO.TextWriter.WriteLine(System.Single)
  - System.IO.TextWriter.WriteLine(System.Double)
  - System.IO.TextWriter.WriteLine(System.Int64)
  - System.IO.TextWriter.WriteLine(System.Int32)
  - System.IO.TextWriter.WriteLine(System.Decimal)
  - System.IO.TextWriter.WriteLine(System.Char[])
  - System.IO.TextWriter.WriteLine(System.Char)
  - System.IO.TextWriter.WriteLine(System.Boolean)
  - System.IO.TextWriter.WriteLine
  - System.IO.TextWriter.WriteLine(System.Object)
  - System.IO.TextWriter.WriteLineAsync(System.String)
  - System.IO.TextWriter.WriteLineAsync
  - System.IO.TextWriter.WriteLineAsync(System.Char)
  - System.IO.TextWriter.WriteLineAsync(System.Char[])
  - System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  langs:
  - csharp
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
  type: Class
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Represents a writer that can write a sequential series of characters. This class is abstract.
  remarks: "<xref:System.IO.TextWriter> is the abstract base class of <xref:System.IO.StreamWriter> and <xref:System.IO.StringWriter>, which write characters to streams and strings, respectively. Create an instance of <xref:System.IO.TextWriter> to write an object to a string, write strings to a file, or to serialize XML. You can also use an instance of <xref:System.IO.TextWriter> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.  \n  \n All the `Write` methods of <xref:System.IO.TextWriter> having primitive data types as parameters write out the values as strings.  \n  \n By default, a <xref:System.IO.TextWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IO.TextWriter.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see Dispose and the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. The <xref:System.IO.StreamWriter> class derives from <xref:System.IO.TextWriter> and provides implementations of the members for writing to a stream. The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.  \n  \n Override Dispose in a derived class to provide  \n  \n [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]\n [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TextWriter : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - System.CodeDom.Compiler.IndentedTextWriter
  - System.IO.StreamWriter
  - System.IO.StringWriter
  - System.Web.HttpWriter
  - System.Web.UI.HtmlTextWriter
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.#ctor
  commentId: M:System.IO.TextWriter.#ctor
  id: '#ctor'
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: TextWriter()
  nameWithType: TextWriter.TextWriter()
  fullName: TextWriter.TextWriter()
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.TextWriter"></xref> class.
  remarks: "Use this constructor overload when you do not want to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property. When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.  \n  \n Use this constructor for derived classes.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: protected TextWriter ();
    parameters: []
  overload: System.IO.TextWriter.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.#ctor(System.IFormatProvider)
  commentId: M:System.IO.TextWriter.#ctor(System.IFormatProvider)
  id: '#ctor(System.IFormatProvider)'
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: TextWriter(IFormatProvider)
  nameWithType: TextWriter.TextWriter(IFormatProvider)
  fullName: TextWriter.TextWriter(IFormatProvider)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.TextWriter"></xref> class with the specified format provider.
  remarks: "Use this constructor overload to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property. The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods. If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`. When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: protected TextWriter (IFormatProvider formatProvider);
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: An <xref href="System.IFormatProvider"></xref> object that controls formatting.
  overload: System.IO.TextWriter.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Close
  commentId: M:System.IO.TextWriter.Close
  id: Close
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriter.Close()
  fullName: TextWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Closes the current writer and releases any system resources associated with the writer.
  remarks: "This implementation of `Close` calls the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=fullName> method and passes it a `true` value.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.TextWriter.Flush%2A> or `Close`. Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.  \n  \n> [!NOTE]\n>  In derived classes, do not override the <xref:System.IO.TextWriter.Close%2A> method. Instead, override the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=fullName> method to add code for releasing resources."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.IO.TextWriter.Close*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.CoreNewLine
  commentId: F:System.IO.TextWriter.CoreNewLine
  id: CoreNewLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: CoreNewLine
  nameWithType: TextWriter.CoreNewLine
  fullName: TextWriter.CoreNewLine
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Stores the newline characters used for this `TextWriter`.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: protected char[] CoreNewLine;
    return:
      type: System.Char[]
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Dispose
  commentId: M:System.IO.TextWriter.Dispose
  id: Dispose
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: TextWriter.Dispose()
  fullName: TextWriter.Dispose()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases all resources used by the <xref href="System.IO.TextWriter"></xref> object.
  remarks: "Call <xref:System.IO.TextWriter.Dispose%2A> when you are finished using the <xref:System.IO.TextWriter>. The <xref:System.IO.TextWriter.Dispose%2A> method leaves the <xref:System.IO.TextWriter> in an unusable state. After calling <xref:System.IO.TextWriter.Dispose%2A>, you must release all references to the <xref:System.IO.TextWriter> so the garbage collector can reclaim the memory that the <xref:System.IO.TextWriter> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n **Note** Always call <xref:System.IO.TextWriter.Dispose%2A> before you release your last reference to the <xref:System.IO.TextWriter>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextWriter> object's <xref:System.Object.Finalize%2A> method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.TextWriter.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Dispose(System.Boolean)
  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriter.Dispose(Boolean)
  fullName: TextWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases the unmanaged resources used by the <xref href="System.IO.TextWriter"></xref> and optionally releases the managed resources.
  remarks: "This method is called by `Dispose` and <xref:System.Object.Finalize%2A>. By default, this method specifies the `disposing` parameter as `true`. <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextWriter> references. This method invokes the `Dispose` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.TextWriter.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Encoding
  commentId: P:System.IO.TextWriter.Encoding
  id: Encoding
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: TextWriter.Encoding
  fullName: TextWriter.Encoding
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: When overridden in a derived class, returns the character encoding in which the output is written.
  remarks: "This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `TextWriter`. This enables the XML code to consume an arbitrary `TextWriter` and generate the correct XML header.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public abstract System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: The character encoding in which the output is written.
  overload: System.IO.TextWriter.Encoding*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Flush
  commentId: M:System.IO.TextWriter.Flush
  id: Flush
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriter.Flush()
  fullName: TextWriter.Flush()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
  remarks: "This default method does nothing, but derived classes can override the method to provide the appropriate functionality.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.TextWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.IO.TextWriter.Flush*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.FlushAsync
  commentId: M:System.IO.TextWriter.FlushAsync
  id: FlushAsync
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: TextWriter.FlushAsync()
  fullName: TextWriter.FlushAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous flush operation.
  overload: System.IO.TextWriter.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.FormatProvider
  commentId: P:System.IO.TextWriter.FormatProvider
  id: FormatProvider
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: FormatProvider
  nameWithType: TextWriter.FormatProvider
  fullName: TextWriter.FormatProvider
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets an object that controls formatting.
  remarks: "The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods. If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`. When the <xref:System.IO.TextWriter.FormatProvider%2A> property contains `null`, the culture of the current thread is used for formatting.  \n  \n For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md). For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual IFormatProvider FormatProvider { get; }
    return:
      type: System.IFormatProvider
      description: An <xref href="System.IFormatProvider"></xref> object for a specific culture, or the formatting of the current culture if no other culture is specified.
  overload: System.IO.TextWriter.FormatProvider*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.NewLine
  commentId: P:System.IO.TextWriter.NewLine
  id: NewLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: NewLine
  nameWithType: TextWriter.NewLine
  fullName: TextWriter.NewLine
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets or sets the line terminator string used by the current `TextWriter`.
  remarks: "The default line terminator string is a carriage return followed by a line feed (\"\\r\\n\").  \n  \n The line terminator string is written to the text stream whenever one of the `WriteLine` methods is called. In order for text written by the `TextWriter` to be readable by a <xref:System.IO.TextReader>, only \"\\n\" or \"\\r\\n\" should be used as terminator strings. If `NewLine` is set to `null`, the default newline character is used instead.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual string NewLine { get; set; }
    return:
      type: System.String
      description: The line terminator string for the current `TextWriter`.
  overload: System.IO.TextWriter.NewLine*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Null
  commentId: F:System.IO.TextWriter.Null
  id: "Null"
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: "Null"
  nameWithType: TextWriter.Null
  fullName: TextWriter.Null
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a `TextWriter` with no backing store that can be written to, but not read from.
  remarks: "Use `Null` to redirect output to a stream that will not consume any operating system resources.  \n  \n When the <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName> methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public static readonly System.IO.TextWriter Null;
    return:
      type: System.IO.TextWriter
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  commentId: M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  id: Synchronized(System.IO.TextWriter)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Synchronized(TextWriter)
  nameWithType: TextWriter.Synchronized(TextWriter)
  fullName: TextWriter.Synchronized(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Creates a thread-safe wrapper around the specified `TextWriter`.
  remarks: "All write operations to the returned wrapper will be thread safe. You call this method to ensure that only one thread at a time can execute the methods on the <xref:System.IO.TextWriter> instance that is returned. For more information about synchronization and threading, see [Synchronizing Data for Multithreading](~/docs/standard/threading/synchronizing-data-for-multithreading.md).  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public static System.IO.TextWriter Synchronized (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The `TextWriter` to synchronize.
    return:
      type: System.IO.TextWriter
      description: A thread-safe wrapper.
  overload: System.IO.TextWriter.Synchronized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>writer</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(String, Object, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object, Object)
  fullName: TextWriter.Write(String, Object, Object, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object,System.Object,System.Object)"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format and write.
    - id: arg1
      type: System.Object
      description: The second object to format and write.
    - id: arg2
      type: System.Object
      description: The third object to format and write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Char[], Int32, Int32)
  nameWithType: TextWriter.Write(Char[], Int32, Int32)
  fullName: TextWriter.Write(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters to the text string or stream.
  remarks: "This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.  \n  \n This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload for each character in `buffer` between `index` and (`index` + `count`).  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write data from.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to start retrieving data.
    - id: count
      type: System.Int32
      description: The number of characters to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> parameter is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(String, Object[])
  nameWithType: TextWriter.Write(String, Object[])
  fullName: TextWriter.Write(String, Object[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object[])"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg
      type: System.Object[]
      description: An object array that contains zero or more objects to format and write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> or <code>arg</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the length of the <code>arg</code> array."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(String, Object)
  nameWithType: TextWriter.Write(String, Object)
  fullName: TextWriter.Write(String, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object)"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has only a single object in its parameter list, the value of *index* must always be 0. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n . This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The object to format and write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.UInt64)
  commentId: M:System.IO.TextWriter.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: TextWriter.Write(UInt64)
  fullName: TextWriter.Write(UInt64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an 8-byte unsigned integer to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: The 8-byte unsigned integer to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.UInt32)
  commentId: M:System.IO.TextWriter.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: TextWriter.Write(UInt32)
  fullName: TextWriter.Write(UInt32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte unsigned integer to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: The 4-byte unsigned integer to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.String)
  commentId: M:System.IO.TextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriter.Write(String)
  fullName: TextWriter.Write(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string to the text string or stream.
  remarks: "This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>.  \n  \n If `value` is `null`, nothing is written to the text stream.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Single)
  commentId: M:System.IO.TextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: TextWriter.Write(Single)
  fullName: TextWriter.Write(Single)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte floating-point value to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Single.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: The 4-byte floating-point value to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(String, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object)
  fullName: TextWriter.Write(String, Object, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object,System.Object)"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format and write.
    - id: arg1
      type: System.Object
      description: The second object to format and write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Int64)
  commentId: M:System.IO.TextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: TextWriter.Write(Int64)
  fullName: TextWriter.Write(Int64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an 8-byte signed integer to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"
  syntax:
    content: public virtual void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The 8-byte signed integer to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Int32)
  commentId: M:System.IO.TextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: TextWriter.Write(Int32)
  fullName: TextWriter.Write(Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte signed integer to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: The 4-byte signed integer to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Double)
  commentId: M:System.IO.TextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: TextWriter.Write(Double)
  fullName: TextWriter.Write(Double)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an 8-byte floating-point value to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Double.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: The 8-byte floating-point value to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Decimal)
  commentId: M:System.IO.TextWriter.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: TextWriter.Write(Decimal)
  fullName: TextWriter.Write(Decimal)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a decimal value to the text string or stream.
  remarks: The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.
  syntax:
    content: public virtual void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: The decimal value to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Char[])
  commentId: M:System.IO.TextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: TextWriter.Write(Char[])
  fullName: TextWriter.Write(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character array to the text string or stream.
  remarks: "This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n This default method calls the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method and passes the entire character array. If the character array is `null`, nothing is written.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write to the text stream.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Char)
  commentId: M:System.IO.TextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: TextWriter.Write(Char)
  fullName: TextWriter.Write(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character to the text string or stream.
  remarks: "This default method does nothing, but derived classes can override the method to provide the appropriate functionality.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the text stream.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Object)
  commentId: M:System.IO.TextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Object)
  nameWithType: TextWriter.Write(Object)
  fullName: TextWriter.Write(Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an object to the text string or stream by calling the `ToString` method on that object.
  remarks: "This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%29> overload.  \n  \n If the specified object is `null`, no action is taken and no exception is thrown. Otherwise, the object's `ToString` method is called to produce the string representation, and the resulting string is then written to the output stream. The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.Write(System.Boolean)
  commentId: M:System.IO.TextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: TextWriter.Write(Boolean)
  fullName: TextWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a `Boolean` value to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=fullName> method.  \n  \n This method outputs either <xref:System.Boolean.TrueString?displayProperty=fullName> or <xref:System.Boolean.FalseString?displayProperty=fullName>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: The `Boolean` value to write.
  overload: System.IO.TextWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  id: WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteAsync(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)
  fullName: TextWriter.WriteAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters to the text string or stream asynchronously.
  remarks: The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write data from.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to start retrieving data.
    - id: count
      type: System.Int32
      description: The number of characters to write.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteAsync(System.String)
  commentId: M:System.IO.TextWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteAsync(String)
  nameWithType: TextWriter.WriteAsync(String)
  fullName: TextWriter.WriteAsync(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string to the text string or stream asynchronously.
  remarks: The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteAsync (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write. If <code>value</code> is `null`, nothing is written to the text stream.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteAsync(System.Char)
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)
  id: WriteAsync(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteAsync(Char)
  nameWithType: TextWriter.WriteAsync(Char)
  fullName: TextWriter.WriteAsync(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character to the text string or stream asynchronously.
  remarks: The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteAsync (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the text stream.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])
  id: WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteAsync(Char[])
  nameWithType: TextWriter.WriteAsync(Char[])
  fullName: TextWriter.WriteAsync(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character array to the text string or stream asynchronously.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public System.Threading.Tasks.Task WriteAsync (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write to the text stream. If <code>buffer</code> is `null`, nothing is written.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.String)
  commentId: M:System.IO.TextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriter.WriteLine(String)
  fullName: TextWriter.WriteLine(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string followed by a line terminator to the text string or stream.
  remarks: "This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write. If <code>value</code> is `null`, only the line terminator is written.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(String, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string and a new line to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object,System.Object)"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format and write.
    - id: arg1
      type: System.Object
      description: The second object to format and write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  fullName: TextWriter.WriteLine(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters followed by a line terminator to the text string or stream.
  remarks: "This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.  \n  \n This overload is equivalent to calling the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> method followed by <xref:System.IO.TextWriter.WriteLine%2A> for each character in `buffer` between `index` and (`index` + `count`).  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array from which data is read.
    - id: index
      type: System.Int32
      description: The character position in <code>buffer</code> at which to start reading data.
    - id: count
      type: System.Int32
      description: The maximum number of characters to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> parameter is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(String, Object[])
  nameWithType: TextWriter.WriteLine(String, Object[])
  fullName: TextWriter.WriteLine(String, Object[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes out a formatted string and a new line, using the same semantics as <xref href="System.String.Format(System.String,System.Object)"></xref>.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg
      type: System.Object[]
      description: An object array that contains zero or more objects to format and write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: A string or object is passed in as `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the length of the <code>arg</code> array."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(String, Object)
  nameWithType: TextWriter.WriteLine(String, Object)
  fullName: TextWriter.WriteLine(String, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a formatted string and a new line to the text string or stream, using the same semantics as the <xref href="System.String.Format(System.String,System.Object)"></xref> method.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has only a single object in its parameter list, the value of *index* must always be 0. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The object to format and write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(UInt64)
  nameWithType: TextWriter.WriteLine(UInt64)
  fullName: TextWriter.WriteLine(UInt64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void WriteLine (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: The 8-byte unsigned integer to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(String, Object, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object, Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes out a formatted string and a new line, using the same semantics as <xref href="System.String.Format(System.String,System.Object)"></xref>.
  remarks: "This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string. .NET provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the string representation of the value of the corresponding object.  \n  \n The syntax of a format item is as follows:  \n  \n {*index*[,*length*][:*formatString*]}  \n  \n Elements in square brackets are optional. The following table describes each element. For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|index|The zero-based position in the parameter list of the object to be formatted. If the object specified by *index* is `null`, the format item is replaced by <xref:System.String?displayProperty=fullName>. Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2. If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.|  \n|,*length*|The minimum number of characters in the string representation of the parameter. If positive, the parameter is right-aligned; if negative, it is left-aligned.|  \n|:*formatString*|A standard or custom format string that is supported by the object to be formatted. Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method. If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> format string.|  \n  \n The leading and trailing brace characters, \"{\" and \"}\", are required. To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, \"{{\" or \"}}\".  \n  \n This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.  \n  \n If a specified object is not referenced in the format string, it is ignored.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: arg0
      type: System.Object
      description: The first object to format and write.
    - id: arg1
      type: System.Object
      description: The second object to format and write.
    - id: arg2
      type: System.Object
      description: The third object to format and write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>format</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code> is not a valid composite format string.  \n  \n -or-  \n  \n The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: TextWriter.WriteLine(UInt32)
  fullName: TextWriter.WriteLine(UInt32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: The 4-byte unsigned integer to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Single)
  commentId: M:System.IO.TextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: TextWriter.WriteLine(Single)
  fullName: TextWriter.WriteLine(Single)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.
  remarks: "The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting. For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field."
  syntax:
    content: public virtual void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: The 4-byte floating-point value to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Double)
  commentId: M:System.IO.TextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: TextWriter.WriteLine(Double)
  fullName: TextWriter.WriteLine(Double)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.
  remarks: "The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting. For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field."
  syntax:
    content: public virtual void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: The 8-byte floating-point value to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: TextWriter.WriteLine(Int64)
  fullName: TextWriter.WriteLine(Int64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The 8-byte signed integer to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: TextWriter.WriteLine(Int32)
  fullName: TextWriter.WriteLine(Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=fullName> method. The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=fullName> property, if not `null`, specifies the culture-specific formatting.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: The 4-byte signed integer to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Decimal)
  nameWithType: TextWriter.WriteLine(Decimal)
  fullName: TextWriter.WriteLine(Decimal)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a decimal value followed by a line terminator to the text string or stream.
  remarks: "The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting. For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field."
  syntax:
    content: public virtual void WriteLine (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: The decimal value to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: TextWriter.WriteLine(Char[])
  fullName: TextWriter.WriteLine(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an array of characters followed by a line terminator to the text string or stream.
  remarks: "All the characters in `buffer` are written to the underlying stream. If the character array is `null`, only the line terminator is written.  \n  \n This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> followed by <xref:System.IO.TextWriter.WriteLine> .  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array from which data is read.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Char)
  commentId: M:System.IO.TextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: TextWriter.WriteLine(Char)
  fullName: TextWriter.WriteLine(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character followed by a line terminator to the text string or stream.
  remarks: "This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%29> followed by <xref:System.IO.TextWriter.WriteLine> .  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the text stream.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: TextWriter.WriteLine(Boolean)
  fullName: TextWriter.WriteLine(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of a `Boolean` value followed by a line terminator to the text string or stream.
  remarks: "The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=fullName> method.  \n  \n This method outputs either <xref:System.Boolean.TrueString?displayProperty=fullName> or <xref:System.Boolean.FalseString?displayProperty=fullName>.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: The `Boolean` value to write.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine
  commentId: M:System.IO.TextWriter.WriteLine
  id: WriteLine
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine()
  nameWithType: TextWriter.WriteLine()
  fullName: TextWriter.WriteLine()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a line terminator to the text string or stream.
  remarks: "The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine ();
    parameters: []
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLine(System.Object)
  commentId: M:System.IO.TextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: TextWriter.WriteLine(Object)
  fullName: TextWriter.WriteLine(Object)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes the text representation of an object by calling the `ToString` method on that object, followed by a line terminator to the text string or stream.
  remarks: "This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> overload. The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.  \n  \n The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to write. If <code>value</code> is `null`, only the line terminator is written.
  overload: System.IO.TextWriter.WriteLine*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextWriter"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLineAsync(System.String)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)
  id: WriteLineAsync(System.String)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLineAsync(String)
  nameWithType: TextWriter.WriteLineAsync(String)
  fullName: TextWriter.WriteLineAsync(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string followed by a line terminator asynchronously to the text string or stream.
  remarks: "The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=fullName> method."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteLineAsync (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write. If the value is `null`, only a line terminator is written.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLineAsync
  commentId: M:System.IO.TextWriter.WriteLineAsync
  id: WriteLineAsync
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLineAsync()
  nameWithType: TextWriter.WriteLineAsync()
  fullName: TextWriter.WriteLineAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a line terminator asynchronously to the text string or stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteLineAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLineAsync(System.Char)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)
  id: WriteLineAsync(System.Char)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLineAsync(Char)
  nameWithType: TextWriter.WriteLineAsync(Char)
  fullName: TextWriter.WriteLineAsync(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character followed by a line terminator asynchronously to the text string or stream.
  remarks: "The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=fullName> method."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteLineAsync (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the text stream.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])
  id: WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLineAsync(Char[])
  nameWithType: TextWriter.WriteLineAsync(Char[])
  fullName: TextWriter.WriteLineAsync(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an array of characters followed by a line terminator asynchronously to the text string or stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public System.Threading.Tasks.Task WriteLineAsync (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write to the text stream. If the character array is `null`, only the line terminator is written.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  langs:
  - csharp
  name: WriteLineAsync(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  fullName: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.
  remarks: "The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.  \n  \n The <xref:System.IO.TextWriter> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=fullName> method."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write data from.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to start retrieving data.
    - id: count
      type: System.Int32
      description: The number of characters to write.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.TextWriter.WriteLineAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The text writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.TextWriter.#ctor
  parent: System.IO.TextWriter
  isExternal: false
  name: TextWriter()
  nameWithType: TextWriter.TextWriter()
  fullName: TextWriter.TextWriter()
- uid: System.IO.TextWriter.#ctor(System.IFormatProvider)
  parent: System.IO.TextWriter
  isExternal: false
  name: TextWriter(IFormatProvider)
  nameWithType: TextWriter.TextWriter(IFormatProvider)
  fullName: TextWriter.TextWriter(IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IO.TextWriter.Close
  parent: System.IO.TextWriter
  isExternal: false
  name: Close()
  nameWithType: TextWriter.Close()
  fullName: TextWriter.Close()
- uid: System.IO.TextWriter.CoreNewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: CoreNewLine
  nameWithType: TextWriter.CoreNewLine
  fullName: TextWriter.CoreNewLine
- uid: System.Char
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.TextWriter.Dispose
  parent: System.IO.TextWriter
  isExternal: false
  name: Dispose()
  nameWithType: TextWriter.Dispose()
  fullName: TextWriter.Dispose()
- uid: System.IO.TextWriter.Dispose(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriter.Dispose(Boolean)
  fullName: TextWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.TextWriter.Encoding
  parent: System.IO.TextWriter
  isExternal: false
  name: Encoding
  nameWithType: TextWriter.Encoding
  fullName: TextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.TextWriter.Flush
  parent: System.IO.TextWriter
  isExternal: false
  name: Flush()
  nameWithType: TextWriter.Flush()
  fullName: TextWriter.Flush()
- uid: System.IO.TextWriter.FlushAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: FlushAsync()
  nameWithType: TextWriter.FlushAsync()
  fullName: TextWriter.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.TextWriter.FormatProvider
  parent: System.IO.TextWriter
  isExternal: false
  name: FormatProvider
  nameWithType: TextWriter.FormatProvider
  fullName: TextWriter.FormatProvider
- uid: System.IO.TextWriter.NewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: NewLine
  nameWithType: TextWriter.NewLine
  fullName: TextWriter.NewLine
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.TextWriter.Null
  parent: System.IO.TextWriter
  isExternal: false
  name: "Null"
  nameWithType: TextWriter.Null
  fullName: TextWriter.Null
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  parent: System.IO.TextWriter
  isExternal: false
  name: Synchronized(TextWriter)
  nameWithType: TextWriter.Synchronized(TextWriter)
  fullName: TextWriter.Synchronized(TextWriter)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object, Object)
  fullName: TextWriter.Write(String, Object, Object, Object)
- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Char[], Int32, Int32)
  nameWithType: TextWriter.Write(Char[], Int32, Int32)
  fullName: TextWriter.Write(Char[], Int32, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object[])
  nameWithType: TextWriter.Write(String, Object[])
  fullName: TextWriter.Write(String, Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object)
  nameWithType: TextWriter.Write(String, Object)
  fullName: TextWriter.Write(String, Object)
- uid: System.IO.TextWriter.Write(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(UInt64)
  nameWithType: TextWriter.Write(UInt64)
  fullName: TextWriter.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IO.TextWriter.Write(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(UInt32)
  nameWithType: TextWriter.Write(UInt32)
  fullName: TextWriter.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IO.TextWriter.Write(System.String)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String)
  nameWithType: TextWriter.Write(String)
  fullName: TextWriter.Write(String)
- uid: System.IO.TextWriter.Write(System.Single)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: TextWriter.Write(Single)
  fullName: TextWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object)
  fullName: TextWriter.Write(String, Object, Object)
- uid: System.IO.TextWriter.Write(System.Int64)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: TextWriter.Write(Int64)
  fullName: TextWriter.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.TextWriter.Write(System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: TextWriter.Write(Int32)
  fullName: TextWriter.Write(Int32)
- uid: System.IO.TextWriter.Write(System.Double)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: TextWriter.Write(Double)
  fullName: TextWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.IO.TextWriter.Write(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Decimal)
  nameWithType: TextWriter.Write(Decimal)
  fullName: TextWriter.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.IO.TextWriter.Write(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: TextWriter.Write(Char[])
  fullName: TextWriter.Write(Char[])
- uid: System.IO.TextWriter.Write(System.Char)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Char)
  nameWithType: TextWriter.Write(Char)
  fullName: TextWriter.Write(Char)
- uid: System.IO.TextWriter.Write(System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: TextWriter.Write(Object)
  fullName: TextWriter.Write(Object)
- uid: System.IO.TextWriter.Write(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: TextWriter.Write(Boolean)
  fullName: TextWriter.Write(Boolean)
- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)
  fullName: TextWriter.WriteAsync(Char[], Int32, Int32)
- uid: System.IO.TextWriter.WriteAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync(String)
  nameWithType: TextWriter.WriteAsync(String)
  fullName: TextWriter.WriteAsync(String)
- uid: System.IO.TextWriter.WriteAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync(Char)
  nameWithType: TextWriter.WriteAsync(Char)
  fullName: TextWriter.WriteAsync(Char)
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync(Char[])
  nameWithType: TextWriter.WriteAsync(Char[])
  fullName: TextWriter.WriteAsync(Char[])
- uid: System.IO.TextWriter.WriteLine(System.String)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriter.WriteLine(String)
  fullName: TextWriter.WriteLine(String)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  fullName: TextWriter.WriteLine(Char[], Int32, Int32)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object[])
  nameWithType: TextWriter.WriteLine(String, Object[])
  fullName: TextWriter.WriteLine(String, Object[])
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object)
  nameWithType: TextWriter.WriteLine(String, Object)
  fullName: TextWriter.WriteLine(String, Object)
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: TextWriter.WriteLine(UInt64)
  fullName: TextWriter.WriteLine(UInt64)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: TextWriter.WriteLine(UInt32)
  fullName: TextWriter.WriteLine(UInt32)
- uid: System.IO.TextWriter.WriteLine(System.Single)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: TextWriter.WriteLine(Single)
  fullName: TextWriter.WriteLine(Single)
- uid: System.IO.TextWriter.WriteLine(System.Double)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: TextWriter.WriteLine(Double)
  fullName: TextWriter.WriteLine(Double)
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: TextWriter.WriteLine(Int64)
  fullName: TextWriter.WriteLine(Int64)
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: TextWriter.WriteLine(Int32)
  fullName: TextWriter.WriteLine(Int32)
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: TextWriter.WriteLine(Decimal)
  fullName: TextWriter.WriteLine(Decimal)
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: TextWriter.WriteLine(Char[])
  fullName: TextWriter.WriteLine(Char[])
- uid: System.IO.TextWriter.WriteLine(System.Char)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: TextWriter.WriteLine(Char)
  fullName: TextWriter.WriteLine(Char)
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: TextWriter.WriteLine(Boolean)
  fullName: TextWriter.WriteLine(Boolean)
- uid: System.IO.TextWriter.WriteLine
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: TextWriter.WriteLine()
  fullName: TextWriter.WriteLine()
- uid: System.IO.TextWriter.WriteLine(System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TextWriter.WriteLine(Object)
  fullName: TextWriter.WriteLine(Object)
- uid: System.IO.TextWriter.WriteLineAsync(System.String)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync(String)
  nameWithType: TextWriter.WriteLineAsync(String)
  fullName: TextWriter.WriteLineAsync(String)
- uid: System.IO.TextWriter.WriteLineAsync
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync()
  nameWithType: TextWriter.WriteLineAsync()
  fullName: TextWriter.WriteLineAsync()
- uid: System.IO.TextWriter.WriteLineAsync(System.Char)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync(Char)
  nameWithType: TextWriter.WriteLineAsync(Char)
  fullName: TextWriter.WriteLineAsync(Char)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync(Char[])
  nameWithType: TextWriter.WriteLineAsync(Char[])
  fullName: TextWriter.WriteLineAsync(Char[])
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)
  fullName: TextWriter.WriteLineAsync(Char[], Int32, Int32)
- uid: System.IO.TextWriter.#ctor*
  parent: System.IO.TextWriter
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter.TextWriter
  fullName: TextWriter.TextWriter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Close*
  parent: System.IO.TextWriter
  isExternal: false
  name: Close
  nameWithType: TextWriter.Close
  fullName: TextWriter.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Dispose*
  parent: System.IO.TextWriter
  isExternal: false
  name: Dispose
  nameWithType: TextWriter.Dispose
  fullName: TextWriter.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Encoding*
  parent: System.IO.TextWriter
  isExternal: false
  name: Encoding
  nameWithType: TextWriter.Encoding
  fullName: TextWriter.Encoding
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Flush*
  parent: System.IO.TextWriter
  isExternal: false
  name: Flush
  nameWithType: TextWriter.Flush
  fullName: TextWriter.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.FlushAsync*
  parent: System.IO.TextWriter
  isExternal: false
  name: FlushAsync
  nameWithType: TextWriter.FlushAsync
  fullName: TextWriter.FlushAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.FormatProvider*
  parent: System.IO.TextWriter
  isExternal: false
  name: FormatProvider
  nameWithType: TextWriter.FormatProvider
  fullName: TextWriter.FormatProvider
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.NewLine*
  parent: System.IO.TextWriter
  isExternal: false
  name: NewLine
  nameWithType: TextWriter.NewLine
  fullName: TextWriter.NewLine
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Synchronized*
  parent: System.IO.TextWriter
  isExternal: false
  name: Synchronized
  nameWithType: TextWriter.Synchronized
  fullName: TextWriter.Synchronized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.Write*
  parent: System.IO.TextWriter
  isExternal: false
  name: Write
  nameWithType: TextWriter.Write
  fullName: TextWriter.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.WriteAsync*
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync
  nameWithType: TextWriter.WriteAsync
  fullName: TextWriter.WriteAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.WriteLine*
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine
  nameWithType: TextWriter.WriteLine
  fullName: TextWriter.WriteLine
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.IO.TextWriter.WriteLineAsync*
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync
  nameWithType: TextWriter.WriteLineAsync
  fullName: TextWriter.WriteLineAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextWriter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
