{"nodes":[{"content":"Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.","nodes":[{"pos":[0,124],"content":"Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.","nodes":[{"content":"Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.","pos":[0,124]}]}],"pos":[725,850],"yaml":true},{"content":"Developers who write compilers use the <xref:System.ArgIterator> structure to enumerate the mandatory and optional arguments in an argument list. The <xref:System.ArgIterator> structure is not generally useful for applications other than compilers.  \n  \n The functionality in the <xref:System.ArgIterator> structure is typically hidden in the syntax of a specific programming language. For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis (\"...\") at the end of the argument list. The <xref:System.ArgIterator> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.","nodes":[{"pos":[0,248],"content":"Developers who write compilers use the <xref:System.ArgIterator> structure to enumerate the mandatory and optional arguments in an argument list. The <xref:System.ArgIterator> structure is not generally useful for applications other than compilers.","nodes":[{"content":"Developers who write compilers use the <xref:System.ArgIterator> structure to enumerate the mandatory and optional arguments in an argument list. The <xref:System.ArgIterator> structure is not generally useful for applications other than compilers.","pos":[0,248],"nodes":[{"content":"Developers who write compilers use the <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> structure to enumerate the mandatory and optional arguments in an argument list.","pos":[0,145],"source":"Developers who write compilers use the <xref:System.ArgIterator> structure to enumerate the mandatory and optional arguments in an argument list."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> structure is not generally useful for applications other than compilers.","pos":[146,248],"source":" The <xref:System.ArgIterator> structure is not generally useful for applications other than compilers."}]}]},{"pos":[255,703],"content":"The functionality in the <xref:System.ArgIterator> structure is typically hidden in the syntax of a specific programming language. For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis (\"...\") at the end of the argument list. The <xref:System.ArgIterator> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.","nodes":[{"content":"The functionality in the <xref:System.ArgIterator> structure is typically hidden in the syntax of a specific programming language. For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis (\"...\") at the end of the argument list. The <xref:System.ArgIterator> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.","pos":[0,448],"nodes":[{"content":"The functionality in the <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> structure is typically hidden in the syntax of a specific programming language.","pos":[0,130],"source":"The functionality in the <xref:System.ArgIterator> structure is typically hidden in the syntax of a specific programming language."},{"content":"For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis (\"...\") at the end of the argument list.","pos":[131,286]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.","pos":[287,448],"source":" The <xref:System.ArgIterator> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters."}]}]}],"pos":[861,1571],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ArgIterator\"&gt;&lt;/xref&gt;</ph> structure using the specified argument list.","source":"Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list."}],"pos":[2818,2937],"yaml":true},{"content":"The new <xref:System.ArgIterator> object enumerates the argument list starting from the first optional argument.","nodes":[{"pos":[0,112],"content":"The new <xref:System.ArgIterator> object enumerates the argument list starting from the first optional argument.","nodes":[{"content":"The new <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> object enumerates the argument list starting from the first optional argument.","pos":[0,112],"source":"The new <xref:System.ArgIterator> object enumerates the argument list starting from the first optional argument."}]}],"pos":[2948,3061],"yaml":true,"extradata":"MT"},{"content":"An argument list consisting of mandatory and optional arguments.","nodes":[{"pos":[0,64],"content":"An argument list consisting of mandatory and optional arguments.","nodes":[{"content":"An argument list consisting of mandatory and optional arguments.","pos":[0,64]}]}],"pos":[3230,3295],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list and a pointer to an item in the list.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ArgIterator\"&gt;&lt;/xref&gt;</ph> structure using the specified argument list and a pointer to an item in the list.","source":"Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list and a pointer to an item in the list."}],"pos":[4537,4693],"yaml":true},{"content":"The new <xref:System.ArgIterator> object enumerates the argument list starting from the argument specified by `ptr`, or the first mandatory argument if `ptr` is `null`.","nodes":[{"pos":[0,168],"content":"The new <ph id=\"ph1\">&lt;xref:System.ArgIterator&gt;</ph> object enumerates the argument list starting from the argument specified by <ph id=\"ph2\">`ptr`</ph>, or the first mandatory argument if <ph id=\"ph3\">`ptr`</ph> is <ph id=\"ph4\">`null`</ph>.","source":"The new <xref:System.ArgIterator> object enumerates the argument list starting from the argument specified by `ptr`, or the first mandatory argument if `ptr` is `null`."}],"pos":[4704,4873],"yaml":true,"extradata":"MT"},{"content":"An argument list consisting of mandatory and optional arguments.","nodes":[{"pos":[0,64],"content":"An argument list consisting of mandatory and optional arguments.","nodes":[{"content":"An argument list consisting of mandatory and optional arguments.","pos":[0,64]}]}],"pos":[5098,5163],"yaml":true},{"content":"A pointer to the argument in <code>arglist</code> to access first, or the first mandatory argument in <code>arglist</code> if <code>ptr</code> is `null`.","nodes":[{"pos":[0,153],"content":"A pointer to the argument in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arglist</ph><ept id=\"p1\">&lt;/code&gt;</ept> to access first, or the first mandatory argument in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">arglist</ph><ept id=\"p2\">&lt;/code&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">ptr</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`null`</ph>.","source":"A pointer to the argument in <code>arglist</code> to access first, or the first mandatory argument in <code>arglist</code> if <code>ptr</code> is `null`."}],"pos":[5221,5375],"yaml":true},{"content":"Concludes processing of the variable-length argument list represented by this instance.","nodes":[{"pos":[0,87],"content":"Concludes processing of the variable-length argument list represented by this instance.","nodes":[{"content":"Concludes processing of the variable-length argument list represented by this instance.","pos":[0,87]}]}],"pos":[6420,6508],"yaml":true},{"content":"Conceptually, <xref:System.ArgIterator.End%2A> concludes the processing of a variable-length argument list. However, this method has no actual implementation; the <xref:System.ArgIterator.End%2A> method body is empty. You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.  \n  \n The <xref:System.ArgIterator.End%2A> method corresponds to the `va_end` method in the C standard library.","nodes":[{"pos":[0,341],"content":"Conceptually, <xref:System.ArgIterator.End%2A> concludes the processing of a variable-length argument list. However, this method has no actual implementation; the <xref:System.ArgIterator.End%2A> method body is empty. You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.","nodes":[{"content":"Conceptually, <xref:System.ArgIterator.End%2A> concludes the processing of a variable-length argument list. However, this method has no actual implementation; the <xref:System.ArgIterator.End%2A> method body is empty. You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.","pos":[0,341],"nodes":[{"content":"Conceptually, <ph id=\"ph1\">&lt;xref:System.ArgIterator.End%2A&gt;</ph> concludes the processing of a variable-length argument list.","pos":[0,107],"source":"Conceptually, <xref:System.ArgIterator.End%2A> concludes the processing of a variable-length argument list."},{"content":"However, this method has no actual implementation; the <ph id=\"ph1\">&lt;xref:System.ArgIterator.End%2A&gt;</ph> method body is empty.","pos":[108,217],"source":" However, this method has no actual implementation; the <xref:System.ArgIterator.End%2A> method body is empty."},{"content":"You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.","pos":[218,341]}]}]},{"pos":[348,453],"content":"The <ph id=\"ph1\">&lt;xref:System.ArgIterator.End%2A&gt;</ph> method corresponds to the <ph id=\"ph2\">`va_end`</ph> method in the C standard library.","source":"The <xref:System.ArgIterator.End%2A> method corresponds to the `va_end` method in the C standard library."}],"pos":[6519,6977],"yaml":true,"extradata":"MT"},{"content":"This method is not supported, and always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,98],"content":"This method is not supported, and always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This method is not supported, and always throws <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[8110,8209],"yaml":true},{"content":"An object to be compared to this instance.","nodes":[{"pos":[0,42],"content":"An object to be compared to this instance.","nodes":[{"content":"An object to be compared to this instance.","pos":[0,42]}]}],"pos":[8345,8388],"yaml":true},{"content":"This comparison is not supported. No value is returned.","nodes":[{"pos":[0,55],"content":"This comparison is not supported. No value is returned.","nodes":[{"content":"This comparison is not supported. No value is returned.","pos":[0,55],"nodes":[{"content":"This comparison is not supported.","pos":[0,33]},{"content":"No value is returned.","pos":[34,55]}]}]}],"pos":[8446,8502],"yaml":true},{"content":"This method is not supported.","nodes":[{"pos":[0,29],"content":"This method is not supported.","nodes":[{"content":"This method is not supported.","pos":[0,29]}]}],"pos":[8657,8687],"yaml":true},{"content":"Returns the hash code of this object.","nodes":[{"pos":[0,37],"content":"Returns the hash code of this object.","nodes":[{"content":"Returns the hash code of this object.","pos":[0,37]}]}],"pos":[9672,9710],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[9844,9879],"yaml":true},{"content":"Returns the next argument in a variable-length argument list.","nodes":[{"pos":[0,61],"content":"Returns the next argument in a variable-length argument list.","nodes":[{"content":"Returns the next argument in a variable-length argument list.","pos":[0,61]}]}],"pos":[10919,10981],"yaml":true},{"content":"The iterator is automatically advanced to the next argument.","nodes":[{"pos":[0,60],"content":"The iterator is automatically advanced to the next argument.","nodes":[{"content":"The iterator is automatically advanced to the next argument.","pos":[0,60]}]}],"pos":[10992,11053],"yaml":true,"extradata":"MT"},{"content":"The next argument as a <xref href=\"System.TypedReference\"></xref> object.","nodes":[{"pos":[0,73],"content":"The next argument as a <ph id=\"ph1\">&lt;xref href=\"System.TypedReference\"&gt;&lt;/xref&gt;</ph> object.","source":"The next argument as a <xref href=\"System.TypedReference\"></xref> object."}],"pos":[11242,11316],"yaml":true},{"content":"An attempt was made to read beyond the end of the list.","nodes":[{"pos":[0,55],"content":"An attempt was made to read beyond the end of the list.","nodes":[{"content":"An attempt was made to read beyond the end of the list.","pos":[0,55]}]}],"pos":[11483,11539],"yaml":true},{"content":"Returns the next argument in a variable-length argument list that has a specified type.","nodes":[{"pos":[0,87],"content":"Returns the next argument in a variable-length argument list that has a specified type.","nodes":[{"content":"Returns the next argument in a variable-length argument list that has a specified type.","pos":[0,87]}]}],"pos":[12700,12788],"yaml":true},{"content":"The iterator is automatically advanced to the next argument.","nodes":[{"pos":[0,60],"content":"The iterator is automatically advanced to the next argument.","nodes":[{"content":"The iterator is automatically advanced to the next argument.","pos":[0,60]}]}],"pos":[12799,12860],"yaml":true,"extradata":"MT"},{"content":"A runtime type handle that identifies the type of the argument to retrieve.","nodes":[{"pos":[0,75],"content":"A runtime type handle that identifies the type of the argument to retrieve.","nodes":[{"content":"A runtime type handle that identifies the type of the argument to retrieve.","pos":[0,75]}]}],"pos":[13072,13148],"yaml":true},{"content":"The next argument as a <xref href=\"System.TypedReference\"></xref> object.","nodes":[{"pos":[0,73],"content":"The next argument as a <ph id=\"ph1\">&lt;xref href=\"System.TypedReference\"&gt;&lt;/xref&gt;</ph> object.","source":"The next argument as a <xref href=\"System.TypedReference\"></xref> object."}],"pos":[13213,13287],"yaml":true},{"content":"An attempt was made to read beyond the end of the list.","nodes":[{"pos":[0,55],"content":"An attempt was made to read beyond the end of the list.","nodes":[{"content":"An attempt was made to read beyond the end of the list.","pos":[0,55]}]}],"pos":[13454,13510],"yaml":true},{"content":"The pointer to the remaining arguments is zero.","nodes":[{"pos":[0,47],"content":"The pointer to the remaining arguments is zero.","nodes":[{"content":"The pointer to the remaining arguments is zero.","pos":[0,47]}]}],"pos":[13612,13660],"yaml":true},{"content":"Returns the type of the next argument.","nodes":[{"pos":[0,38],"content":"Returns the type of the next argument.","nodes":[{"content":"Returns the type of the next argument.","pos":[0,38]}]}],"pos":[14716,14755],"yaml":true},{"content":"This method does not advance the iterator to the next argument.  \n  \n <xref:System.ArgIterator.GetNextArgType%2A> returns the type of the argument as specified in the calling function. For example, if an argument is type <xref:System.String>, but the calling function specifies the argument as type <xref:System.Object>, <xref:System.ArgIterator.GetNextArgType%2A> reports the argument as type <xref:System.Object>.","nodes":[{"pos":[0,63],"content":"This method does not advance the iterator to the next argument.","nodes":[{"content":"This method does not advance the iterator to the next argument.","pos":[0,63]}]},{"pos":[70,415],"content":"<xref:System.ArgIterator.GetNextArgType%2A> returns the type of the argument as specified in the calling function. For example, if an argument is type <xref:System.String>, but the calling function specifies the argument as type <xref:System.Object>, <xref:System.ArgIterator.GetNextArgType%2A> reports the argument as type <xref:System.Object>.","nodes":[{"content":"<xref:System.ArgIterator.GetNextArgType%2A> returns the type of the argument as specified in the calling function. For example, if an argument is type <xref:System.String>, but the calling function specifies the argument as type <xref:System.Object>, <xref:System.ArgIterator.GetNextArgType%2A> reports the argument as type <xref:System.Object>.","pos":[0,345],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> returns the type of the argument as specified in the calling function.","pos":[0,114],"source":"<xref:System.ArgIterator.GetNextArgType%2A> returns the type of the argument as specified in the calling function."},{"content":"For example, if an argument is type <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>, but the calling function specifies the argument as type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ArgIterator.GetNextArgType%2A&gt;</ph> reports the argument as type <ph id=\"ph4\">&lt;xref:System.Object&gt;</ph>.","pos":[115,345],"source":" For example, if an argument is type <xref:System.String>, but the calling function specifies the argument as type <xref:System.Object>, <xref:System.ArgIterator.GetNextArgType%2A> reports the argument as type <xref:System.Object>."}]}]}],"pos":[14766,15186],"yaml":true,"extradata":"MT"},{"content":"The type of the next argument.","nodes":[{"pos":[0,30],"content":"The type of the next argument.","nodes":[{"content":"The type of the next argument.","pos":[0,30]}]}],"pos":[15340,15371],"yaml":true},{"content":"Returns the number of arguments remaining in the argument list.","nodes":[{"pos":[0,63],"content":"Returns the number of arguments remaining in the argument list.","nodes":[{"content":"Returns the number of arguments remaining in the argument list.","pos":[0,63]}]}],"pos":[16456,16520],"yaml":true},{"content":"The number of remaining arguments.","nodes":[{"pos":[0,34],"content":"The number of remaining arguments.","nodes":[{"content":"The number of remaining arguments.","pos":[0,34]}]}],"pos":[16651,16686],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ArgIterator\n  commentId: T:System.ArgIterator\n  id: ArgIterator\n  children:\n  - System.ArgIterator.#ctor(System.RuntimeArgumentHandle)\n  - System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)\n  - System.ArgIterator.End\n  - System.ArgIterator.Equals(System.Object)\n  - System.ArgIterator.GetHashCode\n  - System.ArgIterator.GetNextArg\n  - System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)\n  - System.ArgIterator.GetNextArgType\n  - System.ArgIterator.GetRemainingCount\n  langs:\n  - csharp\n  name: ArgIterator\n  nameWithType: ArgIterator\n  fullName: System.ArgIterator\n  type: Struct\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a variable-length argument list; that is, the parameters of a function that takes a variable number of arguments.\n  remarks: \"Developers who write compilers use the <xref:System.ArgIterator> structure to enumerate the mandatory and optional arguments in an argument list. The <xref:System.ArgIterator> structure is not generally useful for applications other than compilers.  \\n  \\n The functionality in the <xref:System.ArgIterator> structure is typically hidden in the syntax of a specific programming language. For example, in the C++ programming language you declare a variable-length argument list by specifying an ellipsis (\\\"...\\\") at the end of the argument list. The <xref:System.ArgIterator> structure is useful primarily when a development language does not provide direct support for accessing variable-length parameters.\"\n  syntax:\n    content: public struct ArgIterator\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.#ctor(System.RuntimeArgumentHandle)\n  commentId: M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle)\n  id: '#ctor(System.RuntimeArgumentHandle)'\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: ArgIterator(RuntimeArgumentHandle)\n  nameWithType: ArgIterator.ArgIterator(RuntimeArgumentHandle)\n  fullName: ArgIterator.ArgIterator(RuntimeArgumentHandle)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list.\n  remarks: The new <xref:System.ArgIterator> object enumerates the argument list starting from the first optional argument.\n  syntax:\n    content: public ArgIterator (RuntimeArgumentHandle arglist);\n    parameters:\n    - id: arglist\n      type: System.RuntimeArgumentHandle\n      description: An argument list consisting of mandatory and optional arguments.\n  overload: System.ArgIterator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)\n  commentId: M:System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)\n  id: '#ctor(System.RuntimeArgumentHandle,System.Void*)'\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: ArgIterator(RuntimeArgumentHandle, Void*)\n  nameWithType: ArgIterator.ArgIterator(RuntimeArgumentHandle, Void*)\n  fullName: ArgIterator.ArgIterator(RuntimeArgumentHandle, Void*)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ArgIterator\"></xref> structure using the specified argument list and a pointer to an item in the list.\n  remarks: The new <xref:System.ArgIterator> object enumerates the argument list starting from the argument specified by `ptr`, or the first mandatory argument if `ptr` is `null`.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public ArgIterator (RuntimeArgumentHandle arglist, void* ptr);\n    parameters:\n    - id: arglist\n      type: System.RuntimeArgumentHandle\n      description: An argument list consisting of mandatory and optional arguments.\n    - id: ptr\n      type: System.Void*\n      description: A pointer to the argument in <code>arglist</code> to access first, or the first mandatory argument in <code>arglist</code> if <code>ptr</code> is `null`.\n  overload: System.ArgIterator.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.End\n  commentId: M:System.ArgIterator.End\n  id: End\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: End()\n  nameWithType: ArgIterator.End()\n  fullName: ArgIterator.End()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Concludes processing of the variable-length argument list represented by this instance.\n  remarks: \"Conceptually, <xref:System.ArgIterator.End%2A> concludes the processing of a variable-length argument list. However, this method has no actual implementation; the <xref:System.ArgIterator.End%2A> method body is empty. You can use this method in your code as a marker to indicate where variable-length argument list processing logically ends.  \\n  \\n The <xref:System.ArgIterator.End%2A> method corresponds to the `va_end` method in the C standard library.\"\n  syntax:\n    content: public void End ();\n    parameters: []\n  overload: System.ArgIterator.End*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.Equals(System.Object)\n  commentId: M:System.ArgIterator.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ArgIterator.Equals(Object)\n  fullName: ArgIterator.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This method is not supported, and always throws <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: An object to be compared to this instance.\n    return:\n      type: System.Boolean\n      description: This comparison is not supported. No value is returned.\n  overload: System.ArgIterator.Equals*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.GetHashCode\n  commentId: M:System.ArgIterator.GetHashCode\n  id: GetHashCode\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ArgIterator.GetHashCode()\n  fullName: ArgIterator.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code of this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ArgIterator.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.GetNextArg\n  commentId: M:System.ArgIterator.GetNextArg\n  id: GetNextArg\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: GetNextArg()\n  nameWithType: ArgIterator.GetNextArg()\n  fullName: ArgIterator.GetNextArg()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the next argument in a variable-length argument list.\n  remarks: The iterator is automatically advanced to the next argument.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public TypedReference GetNextArg ();\n    parameters: []\n    return:\n      type: System.TypedReference\n      description: The next argument as a <xref href=\"System.TypedReference\"></xref> object.\n  overload: System.ArgIterator.GetNextArg*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read beyond the end of the list.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)\n  commentId: M:System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)\n  id: GetNextArg(System.RuntimeTypeHandle)\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: GetNextArg(RuntimeTypeHandle)\n  nameWithType: ArgIterator.GetNextArg(RuntimeTypeHandle)\n  fullName: ArgIterator.GetNextArg(RuntimeTypeHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the next argument in a variable-length argument list that has a specified type.\n  remarks: The iterator is automatically advanced to the next argument.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public TypedReference GetNextArg (RuntimeTypeHandle rth);\n    parameters:\n    - id: rth\n      type: System.RuntimeTypeHandle\n      description: A runtime type handle that identifies the type of the argument to retrieve.\n    return:\n      type: System.TypedReference\n      description: The next argument as a <xref href=\"System.TypedReference\"></xref> object.\n  overload: System.ArgIterator.GetNextArg*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to read beyond the end of the list.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The pointer to the remaining arguments is zero.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.GetNextArgType\n  commentId: M:System.ArgIterator.GetNextArgType\n  id: GetNextArgType\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: GetNextArgType()\n  nameWithType: ArgIterator.GetNextArgType()\n  fullName: ArgIterator.GetNextArgType()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the type of the next argument.\n  remarks: \"This method does not advance the iterator to the next argument.  \\n  \\n <xref:System.ArgIterator.GetNextArgType%2A> returns the type of the argument as specified in the calling function. For example, if an argument is type <xref:System.String>, but the calling function specifies the argument as type <xref:System.Object>, <xref:System.ArgIterator.GetNextArgType%2A> reports the argument as type <xref:System.Object>.\"\n  syntax:\n    content: public RuntimeTypeHandle GetNextArgType ();\n    parameters: []\n    return:\n      type: System.RuntimeTypeHandle\n      description: The type of the next argument.\n  overload: System.ArgIterator.GetNextArgType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ArgIterator.GetRemainingCount\n  commentId: M:System.ArgIterator.GetRemainingCount\n  id: GetRemainingCount\n  parent: System.ArgIterator\n  langs:\n  - csharp\n  name: GetRemainingCount()\n  nameWithType: ArgIterator.GetRemainingCount()\n  fullName: ArgIterator.GetRemainingCount()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the number of arguments remaining in the argument list.\n  syntax:\n    content: public int GetRemainingCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of remaining arguments.\n  overload: System.ArgIterator.GetRemainingCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgIterator.#ctor(System.RuntimeArgumentHandle)\n  parent: System.ArgIterator\n  isExternal: false\n  name: ArgIterator(RuntimeArgumentHandle)\n  nameWithType: ArgIterator.ArgIterator(RuntimeArgumentHandle)\n  fullName: ArgIterator.ArgIterator(RuntimeArgumentHandle)\n- uid: System.RuntimeArgumentHandle\n  parent: System\n  isExternal: false\n  name: RuntimeArgumentHandle\n  nameWithType: RuntimeArgumentHandle\n  fullName: System.RuntimeArgumentHandle\n- uid: System.ArgIterator.#ctor(System.RuntimeArgumentHandle,System.Void*)\n  parent: System.ArgIterator\n  isExternal: false\n  name: ArgIterator(RuntimeArgumentHandle, Void*)\n  nameWithType: ArgIterator.ArgIterator(RuntimeArgumentHandle, Void*)\n  fullName: ArgIterator.ArgIterator(RuntimeArgumentHandle, Void*)\n- uid: System.Void\n  name: Void\n  nameWithType: Void\n  fullName: System.Void\n- uid: System.Void*\n  parent: System\n  isExternal: false\n  name: Void*\n  nameWithType: Void*\n  fullName: System.Void*\n  spec.csharp:\n  - uid: System.Void\n    name: Void\n    nameWithType: Void\n    fullName: System.Void\n  - name: '*'\n    nameWithType: '*'\n    fullName: '*'\n- uid: System.ArgIterator.End\n  parent: System.ArgIterator\n  isExternal: false\n  name: End()\n  nameWithType: ArgIterator.End()\n  fullName: ArgIterator.End()\n- uid: System.ArgIterator.Equals(System.Object)\n  parent: System.ArgIterator\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ArgIterator.Equals(Object)\n  fullName: ArgIterator.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgIterator.GetHashCode\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ArgIterator.GetHashCode()\n  fullName: ArgIterator.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ArgIterator.GetNextArg\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetNextArg()\n  nameWithType: ArgIterator.GetNextArg()\n  fullName: ArgIterator.GetNextArg()\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.ArgIterator.GetNextArg(System.RuntimeTypeHandle)\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetNextArg(RuntimeTypeHandle)\n  nameWithType: ArgIterator.GetNextArg(RuntimeTypeHandle)\n  fullName: ArgIterator.GetNextArg(RuntimeTypeHandle)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.ArgIterator.GetNextArgType\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetNextArgType()\n  nameWithType: ArgIterator.GetNextArgType()\n  fullName: ArgIterator.GetNextArgType()\n- uid: System.ArgIterator.GetRemainingCount\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetRemainingCount()\n  nameWithType: ArgIterator.GetRemainingCount()\n  fullName: ArgIterator.GetRemainingCount()\n- uid: System.ArgIterator.#ctor*\n  parent: System.ArgIterator\n  isExternal: false\n  name: ArgIterator\n  nameWithType: ArgIterator.ArgIterator\n  fullName: ArgIterator.ArgIterator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.End*\n  parent: System.ArgIterator\n  isExternal: false\n  name: End\n  nameWithType: ArgIterator.End\n  fullName: ArgIterator.End\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.Equals*\n  parent: System.ArgIterator\n  isExternal: false\n  name: Equals\n  nameWithType: ArgIterator.Equals\n  fullName: ArgIterator.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.GetHashCode*\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ArgIterator.GetHashCode\n  fullName: ArgIterator.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.GetNextArg*\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetNextArg\n  nameWithType: ArgIterator.GetNextArg\n  fullName: ArgIterator.GetNextArg\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.GetNextArgType*\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetNextArgType\n  nameWithType: ArgIterator.GetNextArgType\n  fullName: ArgIterator.GetNextArgType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n- uid: System.ArgIterator.GetRemainingCount*\n  parent: System.ArgIterator\n  isExternal: false\n  name: GetRemainingCount\n  nameWithType: ArgIterator.GetRemainingCount\n  fullName: ArgIterator.GetRemainingCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ArgIterator.xml\n"}