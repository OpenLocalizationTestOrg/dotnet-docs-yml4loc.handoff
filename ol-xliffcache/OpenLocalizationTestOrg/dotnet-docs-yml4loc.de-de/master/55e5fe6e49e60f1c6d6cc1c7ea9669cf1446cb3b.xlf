<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55e5fe6e49e60f1c6d6cc1c7ea9669cf1446cb3b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Navigation.NavigationService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">193bcb349f6d05188cde0d2fc2f5abab7816e8ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9532120d5624480ba271cce2844e25cf5ac0cf4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains methods, properties, and events to support navigation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> encapsulates the ability to download content within the context of a browser-style navigation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content can be any type of <ph id="ph1">[!INCLUDE[TLA2#tla_winfx](~/includes/tla2sharptla-winfx-md.md)]</ph> object and <ph id="ph2">[!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)]</ph> files.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, however, pages are the preferred as the way to package content for navigation (see <ph id="ph1">&lt;xref:System.Windows.Controls.Page&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content can be navigated to by providing an instance of an object and calling an overload of the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> method that accepts an object:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, content can be navigated to by passing a relative or absolute <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> to one of the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> method overloads that accepts a <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When content is navigated to by <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> will return an object that contains the content.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lifetime of a navigation can be tracked through the following events:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all events are raised each time that a navigation occurs; the set of events that are raised is determined by the type of navigation that occurs (content or content fragment) and how the navigation completes (canceled, stopped, or failed).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following figure illustrates the sequence in which these events are raised:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Page navigation flow chart<ept id="p1">]</ept><bpt id="p2">(~/add/media/navigationoverviewfigure11.png "</bpt>Page navigation flow chart<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>During or after a navigation, <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> provides information about the content that is being navigated to, including the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the content being navigated to (<ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.Source%2A&gt;</ph>), the <ph id="ph4">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the current content (<ph id="ph5">&lt;xref:System.Windows.Navigation.NavigationService.CurrentSource%2A&gt;</ph>), and an object that contains the content that was navigated to (<ph id="ph6">&lt;xref:System.Windows.Navigation.NavigationService.Content%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When content is navigated to, <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> records the navigation as an entry in navigation history.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An entry is added to back navigation history when either a new navigation occurs, by calling the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> method, or by navigating to an entry in forward navigation history, by calling <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An entry is added to forward navigation history by navigating to an entry in back navigation history, by calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.CanGoBack%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.CanGoForward%2A&gt;</ph> report whether there are entries in back and forward navigation history, respectively.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the most recent entry in back navigation history can be removed by calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> does not store an instance of a content object in navigation history.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> creates a new instance of the content object each time it is navigated to by using navigation history.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is designed to avoid excessive memory consumption when large numbers and large pieces of content are being navigated to.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the state of the content is not remembered from one navigation to the next.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> provides several techniques by which you can store a piece of state for a piece of content in navigation history.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A&gt;</ph>, you can also remember multiple sets of state for a single page instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> is <ph id="ph2">`sealed`</ph> class and, therefore, cannot be instantiated; instead, <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> is used by navigators to enable navigation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph>, there are two navigators: <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visually, <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> use <ph id="ph2">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> as a navigator, to provide an integrated user experience.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Physically, however, <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> actually use <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> as the navigator; the <ph id="ph3">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> property of an <ph id="ph4">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> running in <ph id="ph5">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> will return a reference to the <ph id="ph6">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, and the navigation history that is managed by the <ph id="ph7">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> is integrated with the navigation history that is managed by <ph id="ph8">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> in the following ways:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When content is navigated to by calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph> from within an <ph id="ph4">[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]</ph> the relevant navigation history entries are also added to <ph id="ph5">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> navigation history.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When entries in the <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> navigation <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> are selected, <ph id="ph3">[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]</ph> causes <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> to navigate back or forwards to the content that is associated with those entries.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph> can provide its own navigation history, or use the navigation history of the navigator that hosts it.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph> provides its own navigation history, it can display its own navigation <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> to navigate through the entries in navigation history; those entries are not added to the navigation history of the host navigator (<ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Frame&gt;</ph>, <ph id="ph5">[!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]</ph>) and, consequently, cannot be navigated to from the navigation <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> of each (see <ph id="ph7">&lt;xref:System.Windows.Controls.Frame.JournalOwnership%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds an entry to back navigation history that contains a <ph id="ph1">&lt;xref href="System.Windows.Navigation.CustomContentState"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.CustomContentState&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Navigation.IProvideCustomContentState&gt;</ph> are used to help remember multiple sets of state for the current content.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Navigation.CustomContentState"&gt;&lt;/xref&gt;</ph> object that represents application-defined state that is associated with a specific piece of content.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;state&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, and a <ph id="ph3">&lt;xref href="System.Windows.Navigation.CustomContentState"&gt;&lt;/xref&gt;</ph> object isn't returned from <ph id="ph4">&lt;xref href="System.Windows.Navigation.IProvideCustomContentState.GetContentState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there is at least one entry in back navigation history.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.CanGoBack%2A&gt;</ph> to determine whether there is at least one entry in back navigation history.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be inspected before calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph>; if <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph> is called and there are no entries in back navigation history, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>that if navigation history is shared by multiple navigators (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>), the most recent entry in back navigation history may not have been added by the <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> for the current navigator.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there is at least one entry in back navigation history; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there is at least one entry in forward navigation history.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.CanGoForward%2A&gt;</ph> to determine whether there is at least one entry in forward navigation history.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be inspected before calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph>; if <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph> is called and there are no entries in forward navigation history, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there is at least one entry in forward navigation history; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to the object that contains the current content.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content can be set in one of two ways:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Directly, by setting it to a reference to an object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indirectly, by calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> initiates a new navigation; since navigation is asynchronous, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Content%2A&gt;</ph> won't return a value if it is inspected immediately after being set.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object that is a reference to the object that contains the current content.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the content that was last navigated to.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.CurrentSource%2A&gt;</ph> property is not changed until navigation to a different <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> has completed successfully.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.CurrentSource%2A&gt;</ph> can be set with a fragment-only <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> for the content that was last navigated to, if navigated to by using a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>; otherwise, <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> content has been loaded, if the desired fragment is in different content.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a content fragment is content that is contained by a named <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, which is a <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> whose <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> attribute is set, eg:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You navigate to a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> fragment by providing a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> with a suffix in the following format:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">\#</ph><bpt id="p1">*</bpt>FragmentName<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following shows an example of a <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> that refers to a content fragment:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the source page loads (after <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> event is raised), fragment navigation begins and the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> attempts to locate the <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> fragment.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]</ph> fragment is found, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> instructs the content navigator  (<ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Frame&gt;</ph>) to show the fragment.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to change this behavior, you can handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> to provide your own fragment navigation behavior.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> is passed a <ph id="ph2">&lt;xref:System.Windows.Navigation.FragmentNavigationEventArgs&gt;</ph> parameter which exposes properties that are useful for this purpose, including:</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigator that owns this navigation service (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fragment name.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> to override the default <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> fragment implementation with your own custom implementation.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do so, you need to set <ph id="ph1">&lt;xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A&gt;</ph> to <ph id="ph2">`true`</ph>; otherwise, the default <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> fragment processing behavior is applied.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should avoid directly initiating navigation from within a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> is raised during an existing navigation, initiating a new navigation from a <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph> event handler creates a nested navigation that can cause the <ph id="ph3">&lt;xref:System.ExecutionEngineException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can indirectly initiate navigation by creating an asynchronous work item using the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.FragmentNavigation?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fragment navigation is not supported for loose <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> pages (markup-only <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> files with <ph id="ph3">`Page`</ph> as the root element) in the following cases:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>• When navigating to a fragment in a loose <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> page.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>• When navigating from a loose <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> page to a fragment in another loose <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> page.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a loose <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> page can navigate to its own fragments.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets a reference to the <ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService"&gt;&lt;/xref&gt;</ph> for the navigator whose content contains the specified <ph id="ph2">&lt;xref href="System.Windows.DependencyObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>A navigator has a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> that handles content navigation.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> has two navigators: <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>To process navigation requests and manage navigation lifetime, a navigator uses the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> navigation service, which is implemented as the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content that is hosted by a navigator can get a reference to the navigator's <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A&gt;</ph> returns <ph id="ph2">`null`</ph> when the <ph id="ph3">`dependencyObject`</ph>:</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is a <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is a <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph> that:</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is hosted by another navigator.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Has its <ph id="ph1">&lt;xref:System.Windows.Controls.Frame.JournalOwnership%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is not part of content that is hosted by a navigator.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> offers two shortcuts for acquiring a reference to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> that processed the navigation to a <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph> can be accessed from the <ph id="ph3">&lt;xref:System.Windows.Controls.Page&gt;</ph> itself by getting the value of its <ph id="ph4">&lt;xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> that is used by a <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph> to process navigation can be accessed by getting the value of the <ph id="ph3">&lt;xref:System.Windows.Controls.Frame.NavigationService%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.DependencyObject"&gt;&lt;/xref&gt;</ph> in content that is hosted by a navigator.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A reference to the <ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService"&gt;&lt;/xref&gt;</ph> for the navigator whose content contains the specified <ph id="ph2">&lt;xref href="System.Windows.DependencyObject"&gt;&lt;/xref&gt;</ph>; can be <ph id="ph3">`null`</ph> in some cases.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dependencyObject</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Navigates to the most recent entry in back navigation history, if there is one.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.CanGoBack%2A&gt;</ph> property can be inspected to determine whether there are entries in back navigation history.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService.GoBack"&gt;&lt;/xref&gt;</ph> is called when there are no entries in back navigation history.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Navigate to the most recent entry in forward navigation history, if there is one.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.CanGoForward%2A&gt;</ph> property can be inspected to determine whether there are entries in forward navigation history.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService.GoForward"&gt;&lt;/xref&gt;</ph> is called when there are no entries in forward navigation history.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> if you need to discover pertinent information regarding the navigation request upon load completion.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is available from the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationEventArgs&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> event handler, and includes:</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content and its <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigator (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional data, if the navigation was initiated by calling either <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Response details (using a <ph id="ph1">&lt;xref:System.Net.WebResponse&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> is not raised when the source page could not be found or loaded, in which case <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.LoadCompleted?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Navigate asynchronously to source content located at a <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>, pass an object containing navigation state for processing during navigation, and sandbox the content.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is only for standalone applications and <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> content.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method exhibits the same behavior as <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName&gt;</ph>, and extends it by ensuring that the content that is being downloaded is placed into a partial trust security sandbox (with the default Internet zone set of permissions - see <bpt id="p1">[</bpt>WPF Partial Trust Security<ept id="p1">](~/docs/framework/wpf/wpf-partial-trust-security.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object initialized with the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> for the desired content.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An object that contains data to be used for processing during navigation.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a navigation is not canceled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Navigate asynchronously to source content located at a <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>, and pass an object that contains data to be used for processing during navigation.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since navigations are asynchronous, it is possible for multiple navigations to be in progress at the same time.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if there are two child frames on a single page, both frames could be navigating.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the various navigation events that are raised by <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> may be raised multiple times, one for each piece of content that is being navigated to, and not necessarily in order that the navigations were requested.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, if a particular navigation request needs to process data that is specific to the individual request, it cannot use data that is available to all navigation requests.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can use <ph id="ph1">`navigationState`</ph> to pass data for navigation processing that is specific to one navigation request.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following event arguments provide access to navigation state:</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A&gt;</ph> (passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> event).</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A&gt;</ph> (passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigated&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> event handlers).</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object initialized with the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> for the desired content.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An object that contains data to be used for processing during navigation.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a navigation is not canceled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Navigate asynchronously to content that is specified by a <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">`source`</ph> can be a Web <ph id="ph2">[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]</ph> or a valid pack <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> (see <bpt id="p1">[</bpt>Pack URIs in WPF<ept id="p1">](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> will navigate to the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> specified by <ph id="ph3">`source`</ph> if the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> event is not cancelled.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>A web request (see <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph>) can be created.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`source`</ph> is <ph id="ph2">`null`</ph>, the existing content (<ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.Content%2A&gt;</ph>) is cleared.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>When downloading Web content, you may receive a Web exception (for example, 404: File Not Found).</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle such exceptions from <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> to navigate to a content fragment.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the content identified by the <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> is the current content, it is not downloaded again.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object initialized with the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> for the desired content.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a navigation is not canceled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Navigate asynchronously to content that is contained by an object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> will navigate to the <ph id="ph2">&lt;xref:System.Object&gt;</ph> specified by <ph id="ph3">`root`</ph> if the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> event is not cancelled.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>A web request (see <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph>) can be created.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, the existing content (<ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.Content%2A&gt;</ph>) is cleared.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>When downloading Web content, you may receive a Web exception (for example, 404: File Not Found).</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle such exceptions from <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An object that contains the content to navigate to.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a navigation is not canceled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has the same behavior as <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName&gt;</ph>, although an object is passed instead of a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An object that contains the content to navigate to.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An object that contains data to be used for processing during navigation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a navigation is not canceled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Occurs when the content that is being navigated to has been found, and is available from the <ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService.Content"&gt;&lt;/xref&gt;</ph> property, although it may not have completed loading.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigated&gt;</ph> if you need to discover pertinent information regarding the navigation request when downloading commences.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is available from the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationEventArgs&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigated&gt;</ph> event handler, and includes:</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source page.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigated&gt;</ph> is raised, at least part of the source page's <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> tree has been parsed, and attached to target content control.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requested <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigator (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional data, if the navigation was initiated by calling either <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Response details (using a <ph id="ph1">&lt;xref:System.Net.WebResponse&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigated&gt;</ph> is not raised when the source page could not be found or loaded, in which case <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.NavigationFailed?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Occurs when a new navigation is requested.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> is raised when a new navigation is requested, but before the source content is requested, including when:</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.GoBack%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.GoForward%2A&gt;</ph> is called (or an entry is selected from a navigation <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>A content fragment is navigated to.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> if you need to discover pertinent information regarding the navigation request before navigation starts.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is available from the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> object for the navigation is created and available from the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs&gt;</ph> parameter; because the actual request hasn't been made at this point, you can reconfigure the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> object, if necessary.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>You also handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs&gt;</ph> to cancel navigation, if required, by setting <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> to true.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you cancel navigation, no other navigation events are raised.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is hosted in the browser, you cannot prevent the user from navigating away from your application by canceling the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the first piece of content is navigated to by a navigator (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>), each piece of content that is navigated away from is added to navigation history.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to save state information about the content you are navigating away from, you can add the state to the journal entry for that content by setting <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Navigation.CustomContentState&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigating&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.Navigating?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Occurs when an error occurs while navigating to the requested content.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>When either a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> or an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> is thrown during a navigation, the <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed&gt;</ph> is passed a <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationFailedEventArgs&gt;</ph> that encapsulates information about both the exception and the details of the navigation that caused the exception.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an exception results from a failed navigation, and is unhandled, the following events are raised in the order listed:</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.NavigationFailed?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a navigator (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>) is hosted by one or more navigators, <ph id="ph3">`NavigationFailed`</ph> is not raised on any of them.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Occurs periodically during a download to provide navigation progress information.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph> is passed a <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationProgressEventArgs&gt;</ph> which exposes the following progress information:</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Number of bytes downloaded so far (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Number of total bytes to download (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph> is raised once for every 1024 bytes of content downloaded, and once more if the number of remaining bytes is ever less than 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, handling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph> provides a useful way to track and display the progress of a current download.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph> won't be raised in some cases, such as when the same piece of content is navigated to, or when a content fragment is navigated to on content that is currently loaded (that is, the value of the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Content%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When navigating to a compiled XAML resource, the final <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph> event may not be raised.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that at the end of the download, the last reported <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A&gt;</ph> value may not equal the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted&gt;</ph> event to be notified when the navigation has finished.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.NavigationProgress?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Navigation.NavigationService.StopLoading"&gt;&lt;/xref&gt;</ph> method is called, or when a new navigation is requested while a current navigation is in progress.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped&gt;</ph> if you need to discover pertinent information regarding the navigation request when downloading is stopped.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is available from the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationEventArgs&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped&gt;</ph> event handler, and includes:</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requested <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigator (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional data, if the navigation was initiated by calling either <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> raises <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped&gt;</ph>, it also raises <ph id="ph3">&lt;xref:System.Windows.Application.NavigationStopped?displayProperty=fullName&gt;</ph> event on the <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Reloads the current content.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current content (specified by the value of the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Source%2A&gt;</ph> property) is navigated to again, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> does not download the content again.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>To force <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService&gt;</ph> to re-navigate to the content, call <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Refresh%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if the current content is navigated to again, whether by calling <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Refresh%2A&gt;</ph>, a new entry is not added to navigation history.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Removes the most recent journal entry from back history.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two or more navigators (<ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph>) share the same navigation history, one navigator can use <ph id="ph3">&lt;xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A&gt;</ph> to retrieve the back navigation history entry for a navigation that took place in another navigator.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The most recent <ph id="ph1">&lt;xref href="System.Windows.Navigation.JournalEntry"&gt;&lt;/xref&gt;</ph> in back navigation history, if there is one.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the current content, or the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of new content that is currently being navigated to.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property to a different <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> than the one currently being displayed, the navigator (<ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Frame&gt;</ph>) navigates to the specified <ph id="ph4">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Source%2A&gt;</ph> is set to the content that is loaded from the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> that is navigated to, unless the navigation is canceled.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.Source%2A&gt;</ph> can be set with a fragment-only <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>, and can be set to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> for the current content, or the content that is currently being navigated to.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Stops further downloading of content for the current navigation request.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.StopLoading%2A&gt;</ph> can be called as soon as <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.Navigate%2A&gt;</ph> returns, and stops navigation that is in progress in child frames.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.StopLoading%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationService.StopLoading%2A&gt;</ph> must be called on the same thread that initiated the navigation.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>