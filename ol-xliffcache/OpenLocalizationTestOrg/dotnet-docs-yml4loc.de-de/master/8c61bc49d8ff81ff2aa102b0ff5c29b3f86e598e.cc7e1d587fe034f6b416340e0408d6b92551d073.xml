{"nodes":[{"content":"Represents a project with design time semantics. This class can load project files, edit items and properties and build projects.","nodes":[{"pos":[0,129],"content":"Represents a project with design time semantics. This class can load project files, edit items and properties and build projects.","nodes":[{"content":"Represents a project with design time semantics. This class can load project files, edit items and properties and build projects.","pos":[0,129],"nodes":[{"content":"Represents a project with design time semantics.","pos":[0,48]},{"content":"This class can load project files, edit items and properties and build projects.","pos":[49,129]}]}]}],"pos":[9084,9214],"yaml":true},{"content":"Constructs an empty project using the global project collection global properties and default tools version.","nodes":[{"pos":[0,108],"content":"Constructs an empty project using the global project collection global properties and default tools version.","nodes":[{"content":"Constructs an empty project using the global project collection global properties and default tools version.","pos":[0,108]}]}],"pos":[10465,10574],"yaml":true},{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"pos":[0,146],"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","pos":[0,146]}]}],"pos":[10585,10732],"yaml":true,"extradata":"MT"},{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"pos":[0,211],"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.","pos":[0,211],"nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader.","pos":[0,77]},{"content":"The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.","pos":[78,211]}]}]}],"pos":[12619,12831],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[12842,13177],"yaml":true,"extradata":"MT"},{"content":"Xml reader to read project source code from.","nodes":[{"pos":[0,44],"content":"Xml reader to read project source code from.","nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]}],"pos":[13581,13626],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[13752,13882],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[13950,13995],"yaml":true},{"content":"Sub Toolset version to evaluate with. May be null.","nodes":[{"pos":[0,50],"content":"Sub Toolset version to evaluate with. May be null.","nodes":[{"content":"Sub Toolset version to evaluate with. May be null.","pos":[0,50],"nodes":[{"content":"Sub Toolset version to evaluate with.","pos":[0,37]},{"content":"May be null.","pos":[38,50]}]}]}],"pos":[14068,14119],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[14223,14288],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[14389,14430],"yaml":true},{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"pos":[0,181],"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","pos":[0,181]}]}],"pos":[16226,16408],"yaml":true},{"content":"The project is added to the given project collection.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"pos":[0,53],"content":"The project is added to the given project collection.","nodes":[{"content":"The project is added to the given project collection.","pos":[0,53]}]},{"pos":[60,261],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","pos":[0,201],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]},{"content":"May throw IO-related exceptions.","pos":[169,201]}]}]}],"pos":[16419,16685],"yaml":true,"extradata":"MT"},{"content":"The path to the source project file to be evaluated.","nodes":[{"pos":[0,52],"content":"The path to the source project file to be evaluated.","nodes":[{"content":"The path to the source project file to be evaluated.","pos":[0,52]}]}],"pos":[17072,17125],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[17251,17381],"yaml":true},{"content":"The tools version. May be null.","nodes":[{"pos":[0,31],"content":"The tools version. May be null.","nodes":[{"content":"The tools version. May be null.","pos":[0,31],"nodes":[{"content":"The tools version.","pos":[0,18]},{"content":"May be null.","pos":[19,31]}]}]}],"pos":[17449,17481],"yaml":true},{"content":"The sub toolset version. May be null.","nodes":[{"pos":[0,37],"content":"The sub toolset version. May be null.","nodes":[{"content":"The sub toolset version. May be null.","pos":[0,37],"nodes":[{"content":"The sub toolset version.","pos":[0,24]},{"content":"May be null.","pos":[25,37]}]}]}],"pos":[17554,17592],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[17696,17761],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[17862,17903],"yaml":true},{"content":"Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"pos":[0,175],"content":"Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","nodes":[{"content":"Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.","pos":[0,175]}]}],"pos":[19837,20013],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[20024,20359],"yaml":true,"extradata":"MT"},{"content":"The project root to use for evaluation.","nodes":[{"pos":[0,39],"content":"The project root to use for evaluation.","nodes":[{"content":"The project root to use for evaluation.","pos":[0,39]}]}],"pos":[20805,20845],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[20971,21101],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[21169,21214],"yaml":true},{"content":"Sub toolset version to evaluate with. May be null.","nodes":[{"pos":[0,50],"content":"Sub toolset version to evaluate with. May be null.","nodes":[{"content":"Sub toolset version to evaluate with. May be null.","pos":[0,50],"nodes":[{"content":"Sub toolset version to evaluate with.","pos":[0,37]},{"content":"May be null.","pos":[38,50]}]}]}],"pos":[21287,21338],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[21442,21507],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[21608,21649],"yaml":true},{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"pos":[0,164],"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","pos":[0,164],"nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader.","pos":[0,77]},{"content":"The source code is evaluated with the given global properties and given tools version.","pos":[78,164]}]}]}],"pos":[23409,23574],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[23585,23920],"yaml":true,"extradata":"MT"},{"content":"Xml reader from which to read project source code.","nodes":[{"pos":[0,50],"content":"Xml reader from which to read project source code.","nodes":[{"content":"Xml reader from which to read project source code.","pos":[0,50]}]}],"pos":[24298,24349],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[24475,24605],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[24673,24718],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[24822,24887],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[24988,25029],"yaml":true},{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.","nodes":[{"pos":[0,156],"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.","nodes":[{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.","pos":[0,156]}]}],"pos":[26759,26916],"yaml":true},{"content":"The project is added to the given project collection.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"pos":[0,53],"content":"The project is added to the given project collection.","nodes":[{"content":"The project is added to the given project collection.","pos":[0,53]}]},{"pos":[60,261],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","pos":[0,201],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]},{"content":"May throw IO-related exceptions.","pos":[169,201]}]}]}],"pos":[26927,27193],"yaml":true,"extradata":"MT"},{"content":"The path to the source project file to be evaluated.","nodes":[{"pos":[0,52],"content":"The path to the source project file to be evaluated.","nodes":[{"content":"The path to the source project file to be evaluated.","pos":[0,52]}]}],"pos":[27554,27607],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[27733,27863],"yaml":true},{"content":"The tools version. May be null.","nodes":[{"pos":[0,31],"content":"The tools version. May be null.","nodes":[{"content":"The tools version. May be null.","pos":[0,31],"nodes":[{"content":"The tools version.","pos":[0,18]},{"content":"May be null.","pos":[19,31]}]}]}],"pos":[27931,27963],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[28067,28132],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[28233,28274],"yaml":true},{"content":"Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.","nodes":[{"pos":[0,150],"content":"Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.","nodes":[{"content":"Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.","pos":[0,150]}]}],"pos":[30142,30293],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[30304,30639],"yaml":true,"extradata":"MT"},{"content":"The project root to use for evaluation.","nodes":[{"pos":[0,39],"content":"The project root to use for evaluation.","nodes":[{"content":"The project root to use for evaluation.","pos":[0,39]}]}],"pos":[31059,31099],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[31225,31355],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[31423,31468],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[31572,31637],"yaml":true},{"content":"The load settings to use for evaluation.","nodes":[{"pos":[0,40],"content":"The load settings to use for evaluation.","nodes":[{"content":"The load settings to use for evaluation.","pos":[0,40]}]}],"pos":[31738,31779],"yaml":true},{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"pos":[0,164],"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","pos":[0,164],"nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader.","pos":[0,77]},{"content":"The source code is evaluated with the given global properties and given tools version.","pos":[78,164]}]}]}],"pos":[33335,33500],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[33511,33846],"yaml":true,"extradata":"MT"},{"content":"Xml reader to read project source code from.","nodes":[{"pos":[0,44],"content":"Xml reader to read project source code from.","nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]}],"pos":[34163,34208],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[34334,34464],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[34532,34577],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[34681,34746],"yaml":true},{"content":"Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.","nodes":[{"pos":[0,128],"content":"Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.","pos":[0,128]}]}],"pos":[36410,36539],"yaml":true},{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,155],"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,155]}]},{"pos":[162,330],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[36550,36885],"yaml":true,"extradata":"MT"},{"content":"The project root to use for evaluation.","nodes":[{"pos":[0,39],"content":"The project root to use for evaluation.","nodes":[{"content":"The project root to use for evaluation.","pos":[0,39]}]}],"pos":[37244,37284],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[37410,37540],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[37608,37653],"yaml":true},{"content":"The project collection the project is added to.","nodes":[{"pos":[0,47],"content":"The project collection the project is added to.","nodes":[{"content":"The project collection the project is added to.","pos":[0,47]}]}],"pos":[37757,37805],"yaml":true},{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","nodes":[{"pos":[0,134],"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","pos":[0,134]}]}],"pos":[39331,39466],"yaml":true},{"content":"The project is added to the given project collection.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"pos":[0,53],"content":"The project is added to the given project collection.","nodes":[{"content":"The project is added to the given project collection.","pos":[0,53]}]},{"pos":[60,261],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","pos":[0,201],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]},{"content":"May throw IO-related exceptions.","pos":[169,201]}]}]}],"pos":[39477,39743],"yaml":true,"extradata":"MT"},{"content":"The path to the source project file to be evaluated.","nodes":[{"pos":[0,52],"content":"The path to the source project file to be evaluated.","nodes":[{"content":"The path to the source project file to be evaluated.","pos":[0,52]}]}],"pos":[40043,40096],"yaml":true},{"content":"The global properties. May be null.","nodes":[{"pos":[0,35],"content":"The global properties. May be null.","nodes":[{"content":"The global properties. May be null.","pos":[0,35],"nodes":[{"content":"The global properties.","pos":[0,22]},{"content":"May be null.","pos":[23,35]}]}]}],"pos":[40222,40258],"yaml":true},{"content":"The tools version. May be null.","nodes":[{"pos":[0,31],"content":"The tools version. May be null.","nodes":[{"content":"The tools version. May be null.","pos":[0,31],"nodes":[{"content":"The tools version.","pos":[0,18]},{"content":"May be null.","pos":[19,31]}]}]}],"pos":[40326,40358],"yaml":true},{"content":"The project collection the project is added to. May not be null.","nodes":[{"pos":[0,64],"content":"The project collection the project is added to. May not be null.","nodes":[{"content":"The project collection the project is added to. May not be null.","pos":[0,64],"nodes":[{"content":"The project collection the project is added to.","pos":[0,47]},{"content":"May not be null.","pos":[48,64]}]}]}],"pos":[40462,40527],"yaml":true},{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","nodes":[{"pos":[0,134],"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.","pos":[0,134]}]}],"pos":[41861,41996],"yaml":true},{"content":"The project is added to the global project collection.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"pos":[0,54],"content":"The project is added to the global project collection.","nodes":[{"content":"The project is added to the global project collection.","pos":[0,54]}]},{"pos":[61,262],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.","pos":[0,201],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]},{"content":"May throw IO-related exceptions.","pos":[169,201]}]}]}],"pos":[42007,42274],"yaml":true,"extradata":"MT"},{"content":"The path to the source project file to be evaluated.","nodes":[{"pos":[0,52],"content":"The path to the source project file to be evaluated.","nodes":[{"content":"The path to the source project file to be evaluated.","pos":[0,52]}]}],"pos":[42510,42563],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[42689,42819],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[42887,42932],"yaml":true},{"content":"Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.","nodes":[{"pos":[0,140],"content":"Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.","nodes":[{"content":"Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.","pos":[0,140]}]}],"pos":[44392,44533],"yaml":true},{"content":"The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"pos":[0,148],"content":"The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"content":"The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.","pos":[0,148]}]}],"pos":[44544,44693],"yaml":true,"extradata":"MT"},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[45032,45162],"yaml":true},{"content":"The tools version used to evaluate the project. May be null.","nodes":[{"pos":[0,60],"content":"The tools version used to evaluate the project. May be null.","nodes":[{"content":"The tools version used to evaluate the project. May be null.","pos":[0,60],"nodes":[{"content":"The tools version used to evaluate the project.","pos":[0,47]},{"content":"May be null.","pos":[48,60]}]}]}],"pos":[45230,45291],"yaml":true},{"content":"The project collection the new project will be added to.","nodes":[{"pos":[0,56],"content":"The project collection the new project will be added to.","nodes":[{"content":"The project collection the new project will be added to.","pos":[0,56]}]}],"pos":[45395,45452],"yaml":true},{"content":"Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.","nodes":[{"pos":[0,135],"content":"Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.","nodes":[{"content":"Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.","pos":[0,135]}]}],"pos":[46924,47060],"yaml":true},{"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,156],"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,156]}]},{"pos":[163,331],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[47071,47407],"yaml":true,"extradata":"MT"},{"content":"The project root to use for evaluation.","nodes":[{"pos":[0,39],"content":"The project root to use for evaluation.","nodes":[{"content":"The project root to use for evaluation.","pos":[0,39]}]}],"pos":[47702,47742],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[47868,47998],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[48066,48111],"yaml":true},{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the global project collection global properties and default tools version.","nodes":[{"pos":[0,186],"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the global project collection global properties and default tools version.","nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the global project collection global properties and default tools version.","pos":[0,186],"nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader.","pos":[0,77]},{"content":"The source code is evaluated with the global project collection global properties and default tools version.","pos":[78,186]}]}]}],"pos":[49121,49308],"yaml":true},{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,146],"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","pos":[0,146]}]},{"pos":[153,321],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[49319,49645],"yaml":true,"extradata":"MT"},{"content":"Xml reader to read project source code from.","nodes":[{"pos":[0,44],"content":"Xml reader to read project source code from.","nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]}],"pos":[49805,49850],"yaml":true},{"content":"Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.","nodes":[{"pos":[0,156],"content":"Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.","nodes":[{"content":"Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.","pos":[0,156]}]}],"pos":[50830,50987],"yaml":true},{"content":"The project is added to the global project collection.  \n  \n Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file. May throw IO-related exceptions.","nodes":[{"pos":[0,54],"content":"The project is added to the global project collection.","nodes":[{"content":"The project is added to the global project collection.","pos":[0,54]}]},{"pos":[61,223],"content":"Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file. May throw IO-related exceptions.","nodes":[{"content":"Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file. May throw IO-related exceptions.","pos":[0,162],"nodes":[{"content":"Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.","pos":[0,129]},{"content":"May throw IO-related exceptions.","pos":[130,162]}]}]}],"pos":[50998,51226],"yaml":true,"extradata":"MT"},{"content":"The source project file to be evaluated.","nodes":[{"pos":[0,40],"content":"The source project file to be evaluated.","nodes":[{"content":"The source project file to be evaluated.","pos":[0,40]}]}],"pos":[51369,51410],"yaml":true},{"content":"If the evaluation fails.","nodes":[{"pos":[0,24],"content":"If the evaluation fails.","nodes":[{"content":"If the evaluation fails.","pos":[0,24]}]}],"pos":[51632,51657],"yaml":true},{"content":"Constructs an empty project using the given project collection global properties and default tools version.","nodes":[{"pos":[0,107],"content":"Constructs an empty project using the given project collection global properties and default tools version.","nodes":[{"content":"Constructs an empty project using the given project collection global properties and default tools version.","pos":[0,107]}]}],"pos":[52692,52800],"yaml":true},{"content":"This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"pos":[0,145],"content":"This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"content":"This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.","pos":[0,145]}]}],"pos":[52811,52957],"yaml":true,"extradata":"MT"},{"content":"The project collection that the new project is added to.","nodes":[{"pos":[0,56],"content":"The project collection that the new project is added to.","nodes":[{"content":"The project collection that the new project is added to.","pos":[0,56]}]}],"pos":[53181,53238],"yaml":true},{"content":"Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.","nodes":[{"pos":[0,152],"content":"Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.","nodes":[{"content":"Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.","pos":[0,152]}]}],"pos":[54356,54509],"yaml":true},{"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,156],"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.","nodes":[{"content":"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.","pos":[0,156]}]},{"pos":[163,331],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[54520,54856],"yaml":true,"extradata":"MT"},{"content":"ProjectRootElement to use for evaluation.","nodes":[{"pos":[0,41],"content":"ProjectRootElement to use for evaluation.","nodes":[{"content":"ProjectRootElement to use for evaluation.","pos":[0,41]}]}],"pos":[55058,55100],"yaml":true},{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"pos":[0,164],"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.","pos":[0,164],"nodes":[{"content":"Constructs a project and evaluates the source code from the given XML reader.","pos":[0,77]},{"content":"The source code is evaluated with the given global properties and given tools version.","pos":[78,164]}]}]}],"pos":[56464,56629],"yaml":true},{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.  \n  \n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"pos":[0,146],"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","nodes":[{"content":"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.","pos":[0,146]}]},{"pos":[153,321],"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[0,168],"nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]},{"content":"Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.","pos":[60,168]}]}]}],"pos":[56640,56966],"yaml":true,"extradata":"MT"},{"content":"Xml reader to read project source code from.","nodes":[{"pos":[0,44],"content":"Xml reader to read project source code from.","nodes":[{"content":"Xml reader to read project source code from.","pos":[0,44]}]}],"pos":[57219,57264],"yaml":true},{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"pos":[0,129],"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","nodes":[{"content":"Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.","pos":[0,129],"nodes":[{"content":"Global properties to evaluate with.","pos":[0,35]},{"content":"May be null in which case the containing project collection's global properties will be used.","pos":[36,129]}]}]}],"pos":[57390,57520],"yaml":true},{"content":"Tools version to evaluate with. May be null.","nodes":[{"pos":[0,44],"content":"Tools version to evaluate with. May be null.","nodes":[{"content":"Tools version to evaluate with. May be null.","pos":[0,44],"nodes":[{"content":"Tools version to evaluate with.","pos":[0,31]},{"content":"May be null.","pos":[32,44]}]}]}],"pos":[57588,57633],"yaml":true},{"content":"Adds an item with the given metadata to the project.","nodes":[{"pos":[0,52],"content":"Adds an item with the given metadata to the project.","nodes":[{"content":"Adds an item with the given metadata to the project.","pos":[0,52]}]}],"pos":[59131,59184],"yaml":true},{"content":"The metadata may be null, which indicates no metadata.  \n  \n Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","nodes":[{"pos":[0,54],"content":"The metadata may be null, which indicates no metadata.","nodes":[{"content":"The metadata may be null, which indicates no metadata.","pos":[0,54]}]},{"pos":[61,286],"content":"Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","nodes":[{"content":"Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","pos":[0,225],"nodes":[{"content":"Evaluation takes place on a best-effort basis.","pos":[0,46]},{"content":"Items that are defined in the project source following the new item may be used for evaluation.","pos":[47,142]},{"content":"Only this item is evaluated.","pos":[143,171]},{"content":"Other items that might depend on it are not affected.","pos":[172,225]}]}]}],"pos":[59195,59486],"yaml":true,"extradata":"MT"},{"content":"The item type of the added item.","nodes":[{"pos":[0,32],"content":"The item type of the added item.","nodes":[{"content":"The item type of the added item.","pos":[0,32]}]}],"pos":[59828,59861],"yaml":true},{"content":"Include attribute of the item to be added.","nodes":[{"pos":[0,42],"content":"Include attribute of the item to be added.","nodes":[{"content":"Include attribute of the item to be added.","pos":[0,42]}]}],"pos":[59935,59978],"yaml":true},{"content":"The metadata of the added item.","nodes":[{"pos":[0,31],"content":"The metadata of the added item.","nodes":[{"content":"The metadata of the added item.","pos":[0,31]}]}],"pos":[60137,60169],"yaml":true},{"content":"Returns the added item.","nodes":[{"pos":[0,23],"content":"Returns the added item.","nodes":[{"content":"Returns the added item.","pos":[0,23]}]}],"pos":[60285,60309],"yaml":true},{"content":"Adds an item with no metadata to the project.","nodes":[{"pos":[0,45],"content":"Adds an item with no metadata to the project.","nodes":[{"content":"Adds an item with no metadata to the project.","pos":[0,45]}]}],"pos":[61356,61402],"yaml":true},{"content":"Any metadata can be added later. Does not modify the project source if a wildcard expression already includes the new item.  \n  \n Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","nodes":[{"pos":[0,123],"content":"Any metadata can be added later. Does not modify the project source if a wildcard expression already includes the new item.","nodes":[{"content":"Any metadata can be added later. Does not modify the project source if a wildcard expression already includes the new item.","pos":[0,123],"nodes":[{"content":"Any metadata can be added later.","pos":[0,32]},{"content":"Does not modify the project source if a wildcard expression already includes the new item.","pos":[33,123]}]}]},{"pos":[130,355],"content":"Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","nodes":[{"content":"Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.","pos":[0,225],"nodes":[{"content":"Evaluation takes place on a best-effort basis.","pos":[0,46]},{"content":"Items that are defined in the project source following the new item may be used for evaluation.","pos":[47,142]},{"content":"Only this item is evaluated.","pos":[143,171]},{"content":"Other items that might depend on it are not affected.","pos":[172,225]}]}]}],"pos":[61413,61773],"yaml":true,"extradata":"MT"},{"content":"The item type of the added item.","nodes":[{"pos":[0,32],"content":"The item type of the added item.","nodes":[{"content":"The item type of the added item.","pos":[0,32]}]}],"pos":[62010,62043],"yaml":true},{"content":"Include attribute of the item to be added.","nodes":[{"pos":[0,42],"content":"Include attribute of the item to be added.","nodes":[{"content":"Include attribute of the item to be added.","pos":[0,42]}]}],"pos":[62117,62160],"yaml":true},{"content":"Returns the added item.","nodes":[{"pos":[0,23],"content":"Returns the added item.","nodes":[{"content":"Returns the added item.","pos":[0,23]}]}],"pos":[62276,62300],"yaml":true},{"content":"Adds an item with metadata to the project. Metadata may be null, indicating no metadata. Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group. Makes no effort to locate the new item near similar items.","nodes":[{"pos":[0,274],"content":"Adds an item with metadata to the project. Metadata may be null, indicating no metadata. Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group. Makes no effort to locate the new item near similar items.","nodes":[{"content":"Adds an item with metadata to the project. Metadata may be null, indicating no metadata. Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group. Makes no effort to locate the new item near similar items.","pos":[0,274],"nodes":[{"content":"Adds an item with metadata to the project.","pos":[0,42]},{"content":"Metadata may be null, indicating no metadata.","pos":[43,88]},{"content":"Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.","pos":[89,215]},{"content":"Makes no effort to locate the new item near similar items.","pos":[216,274]}]}]}],"pos":[63824,64099],"yaml":true},{"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.  \n  \n Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.  \n  \n Only this item is evaluated. Other items that might depend on it is not affected.  \n  \n This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","nodes":[{"pos":[0,148],"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.","nodes":[{"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.","pos":[0,148]}]},{"pos":[155,331],"content":"Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","nodes":[{"content":"Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","pos":[0,176],"nodes":[{"content":"Evaluates on a best-effort basis: -expands with all items.","pos":[0,58]},{"content":"Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","pos":[59,176]}]}]},{"pos":[338,419],"content":"Only this item is evaluated. Other items that might depend on it is not affected.","nodes":[{"content":"Only this item is evaluated. Other items that might depend on it is not affected.","pos":[0,81],"nodes":[{"content":"Only this item is evaluated.","pos":[0,28]},{"content":"Other items that might depend on it is not affected.","pos":[29,81]}]}]},{"pos":[426,565],"content":"This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","nodes":[{"content":"This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","pos":[0,139]}]}],"pos":[64110,64684],"yaml":true,"extradata":"MT"},{"content":"The item type to be added.","nodes":[{"pos":[0,26],"content":"The item type to be added.","nodes":[{"content":"The item type to be added.","pos":[0,26]}]}],"pos":[65030,65057],"yaml":true},{"content":"The unevaluated Include attribute to be added to the item.","nodes":[{"pos":[0,58],"content":"The unevaluated Include attribute to be added to the item.","nodes":[{"content":"The unevaluated Include attribute to be added to the item.","pos":[0,58]}]}],"pos":[65131,65190],"yaml":true},{"content":"The metadata to be added.","nodes":[{"pos":[0,25],"content":"The metadata to be added.","nodes":[{"content":"The metadata to be added.","pos":[0,25]}]}],"pos":[65349,65375],"yaml":true},{"content":"Returns a list of the project items added.","nodes":[{"pos":[0,42],"content":"Returns a list of the project items added.","nodes":[{"content":"Returns a list of the project items added.","pos":[0,42]}]}],"pos":[65491,65534],"yaml":true},{"content":"Adds an item with no metadata to the project.  Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.  Makes no effort to locate the new item near similar items.","nodes":[{"pos":[0,233],"content":"Adds an item with no metadata to the project.  Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.  Makes no effort to locate the new item near similar items.","nodes":[{"content":"Adds an item with no metadata to the project.  Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.  Makes no effort to locate the new item near similar items.","pos":[0,233],"nodes":[{"content":"Adds an item with no metadata to the project.","pos":[0,45]},{"content":"Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.","pos":[47,173]},{"content":"Makes no effort to locate the new item near similar items.","pos":[175,233]}]}]}],"pos":[66609,66843],"yaml":true},{"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.  \n  \n Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.  \n  \n Only this item is evaluated. Other items that might depend on it are not affected.  \n  \n This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","nodes":[{"pos":[0,148],"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.","nodes":[{"content":"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.","pos":[0,148]}]},{"pos":[155,331],"content":"Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","nodes":[{"content":"Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","pos":[0,176],"nodes":[{"content":"Evaluates on a best-effort basis: -expands with all items.","pos":[0,58]},{"content":"Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.","pos":[59,176]}]}]},{"pos":[338,420],"content":"Only this item is evaluated. Other items that might depend on it are not affected.","nodes":[{"content":"Only this item is evaluated. Other items that might depend on it are not affected.","pos":[0,82],"nodes":[{"content":"Only this item is evaluated.","pos":[0,28]},{"content":"Other items that might depend on it are not affected.","pos":[29,82]}]}]},{"pos":[427,566],"content":"This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","nodes":[{"content":"This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.","pos":[0,139]}]}],"pos":[66854,67429],"yaml":true,"extradata":"MT"},{"content":"The item type to be added.","nodes":[{"pos":[0,26],"content":"The item type to be added.","nodes":[{"content":"The item type to be added.","pos":[0,26]}]}],"pos":[67670,67697],"yaml":true},{"content":"The unevaluated Include attribute to be added to the item.","nodes":[{"pos":[0,58],"content":"The unevaluated Include attribute to be added to the item.","nodes":[{"content":"The unevaluated Include attribute to be added to the item.","pos":[0,58]}]}],"pos":[67771,67830],"yaml":true},{"content":"Returns a list of the project items added.","nodes":[{"pos":[0,42],"content":"Returns a list of the project items added.","nodes":[{"content":"Returns a list of the project items added.","pos":[0,42]}]}],"pos":[67946,67989],"yaml":true},{"content":"Gets all item definition metadata encountered during evaluation.","nodes":[{"pos":[0,64],"content":"Gets all item definition metadata encountered during evaluation.","nodes":[{"content":"Gets all item definition metadata encountered during evaluation.","pos":[0,64]}]}],"pos":[69069,69134],"yaml":true},{"content":"Item metadata is read during the second evaluation pass. Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.","nodes":[{"pos":[0,224],"content":"Item metadata is read during the second evaluation pass. Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.","nodes":[{"content":"Item metadata is read during the second evaluation pass. Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.","pos":[0,224],"nodes":[{"content":"Item metadata is read during the second evaluation pass.","pos":[0,56]},{"content":"Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.","pos":[57,224]}]}]}],"pos":[69145,69370],"yaml":true,"extradata":"MT"},{"content":"Returns all item definition metadata encountered during evaluation. This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.","nodes":[{"pos":[0,211],"content":"Returns all item definition metadata encountered during evaluation. This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.","nodes":[{"content":"Returns all item definition metadata encountered during evaluation. This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.","pos":[0,211],"nodes":[{"content":"Returns all item definition metadata encountered during evaluation.","pos":[0,67]},{"content":"This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.","pos":[68,211]}]}]}],"pos":[69653,69865],"yaml":true},{"content":"Gets an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","nodes":[{"pos":[0,113],"content":"Gets an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","nodes":[{"content":"Gets an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","pos":[0,113],"nodes":[{"content":"Gets an enumerator over all items encountered during evaluation.","pos":[0,64]},{"content":"These are read during the third evaluation pass.","pos":[65,113]}]}]}],"pos":[70866,70980],"yaml":true},{"content":"Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.  \n  \n In some applications, this complete mutual ordering is significant, and such hosts can use this property.  \n  \n The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.","nodes":[{"pos":[0,193],"content":"Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.","nodes":[{"content":"Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.","pos":[0,193]}]},{"pos":[200,305],"content":"In some applications, this complete mutual ordering is significant, and such hosts can use this property.","nodes":[{"content":"In some applications, this complete mutual ordering is significant, and such hosts can use this property.","pos":[0,105]}]},{"pos":[312,463],"content":"The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.","nodes":[{"content":"The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.","pos":[0,151]}]}],"pos":[70991,71461],"yaml":true,"extradata":"MT"},{"content":"Returns an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","nodes":[{"pos":[0,116],"content":"Returns an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","nodes":[{"content":"Returns an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.","pos":[0,116],"nodes":[{"content":"Returns an enumerator over all items encountered during evaluation.","pos":[0,67]},{"content":"These are read during the third evaluation pass.","pos":[68,116]}]}]}],"pos":[71719,71836],"yaml":true},{"content":"Gets all properties encountered during evaluation.","nodes":[{"pos":[0,50],"content":"Gets all properties encountered during evaluation.","nodes":[{"content":"Gets all properties encountered during evaluation.","pos":[0,50]}]}],"pos":[72850,72901],"yaml":true},{"content":"These properties are read during the first evaluation pass. Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.","nodes":[{"pos":[0,205],"content":"These properties are read during the first evaluation pass. Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.","nodes":[{"content":"These properties are read during the first evaluation pass. Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.","pos":[0,205],"nodes":[{"content":"These properties are read during the first evaluation pass.","pos":[0,59]},{"content":"Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.","pos":[60,205]}]}]}],"pos":[72912,73118],"yaml":true,"extradata":"MT"},{"content":"Returns all properties encountered during evaluation. This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.","nodes":[{"pos":[0,185],"content":"Returns all properties encountered during evaluation. This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.","nodes":[{"content":"Returns all properties encountered during evaluation. This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.","pos":[0,185],"nodes":[{"content":"Returns all properties encountered during evaluation.","pos":[0,53]},{"content":"This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.","pos":[54,185]}]}]}],"pos":[73389,73575],"yaml":true},{"content":"Builds this project, building the given targets and using the given loggers and remote loggers.","nodes":[{"pos":[0,95],"content":"Builds this project, building the given targets and using the given loggers and remote loggers.","nodes":[{"content":"Builds this project, building the given targets and using the given loggers and remote loggers.","pos":[0,95]}]}],"pos":[75231,75327],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[75338,75486],"yaml":true,"extradata":"MT"},{"content":"The targets to be built.","nodes":[{"pos":[0,24],"content":"The targets to be built.","nodes":[{"content":"The targets to be built.","pos":[0,24]}]}],"pos":[75813,75838],"yaml":true},{"content":"The loggers to be used during the build.","nodes":[{"pos":[0,40],"content":"The loggers to be used during the build.","nodes":[{"content":"The loggers to be used during the build.","pos":[0,40]}]}],"pos":[75961,76002],"yaml":true},{"content":"The remote loggers to be used during the build.","nodes":[{"pos":[0,47],"content":"The remote loggers to be used during the build.","nodes":[{"content":"The remote loggers to be used during the build.","pos":[0,47]}]}],"pos":[76144,76192],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[76250,76292],"yaml":true},{"content":"Builds this project, building the given target and using the given loggers and remote loggers.","nodes":[{"pos":[0,94],"content":"Builds this project, building the given target and using the given loggers and remote loggers.","nodes":[{"content":"Builds this project, building the given target and using the given loggers and remote loggers.","pos":[0,94]}]}],"pos":[77919,78014],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[78025,78173],"yaml":true,"extradata":"MT"},{"content":"The target to be built.","nodes":[{"pos":[0,23],"content":"The target to be built.","nodes":[{"content":"The target to be built.","pos":[0,23]}]}],"pos":[78494,78518],"yaml":true},{"content":"The loggers to be used during the build.","nodes":[{"pos":[0,40],"content":"The loggers to be used during the build.","nodes":[{"content":"The loggers to be used during the build.","pos":[0,40]}]}],"pos":[78641,78682],"yaml":true},{"content":"The remote loggers to be used during the build.","nodes":[{"pos":[0,47],"content":"The remote loggers to be used during the build.","nodes":[{"content":"The remote loggers to be used during the build.","pos":[0,47]}]}],"pos":[78824,78872],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[78930,78972],"yaml":true},{"content":"Builds this project, building the given targets and using the given loggers.","nodes":[{"pos":[0,76],"content":"Builds this project, building the given targets and using the given loggers.","nodes":[{"content":"Builds this project, building the given targets and using the given loggers.","pos":[0,76]}]}],"pos":[80239,80316],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[80327,80475],"yaml":true,"extradata":"MT"},{"content":"The targets to be built.","nodes":[{"pos":[0,24],"content":"The targets to be built.","nodes":[{"content":"The targets to be built.","pos":[0,24]}]}],"pos":[80700,80725],"yaml":true},{"content":"The loggers to be used during the build.","nodes":[{"pos":[0,40],"content":"The loggers to be used during the build.","nodes":[{"content":"The loggers to be used during the build.","pos":[0,40]}]}],"pos":[80848,80889],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[80947,80989],"yaml":true},{"content":"Builds this project, using the default targets and the given loggers and remote loggers.","nodes":[{"pos":[0,88],"content":"Builds this project, using the default targets and the given loggers and remote loggers.","nodes":[{"content":"Builds this project, using the default targets and the given loggers and remote loggers.","pos":[0,88]}]}],"pos":[82550,82639],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[82650,82798],"yaml":true,"extradata":"MT"},{"content":"The loggers to be used during the build.","nodes":[{"pos":[0,40],"content":"The loggers to be used during the build.","nodes":[{"content":"The loggers to be used during the build.","pos":[0,40]}]}],"pos":[83165,83206],"yaml":true},{"content":"The remote loggers to be used during the build.","nodes":[{"pos":[0,47],"content":"The remote loggers to be used during the build.","nodes":[{"content":"The remote loggers to be used during the build.","pos":[0,47]}]}],"pos":[83348,83396],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[83454,83496],"yaml":true},{"content":"Builds this project, building the given target and using the given loggers.","nodes":[{"pos":[0,75],"content":"Builds this project, building the given target and using the given loggers.","nodes":[{"content":"Builds this project, building the given target and using the given loggers.","pos":[0,75]}]}],"pos":[84751,84827],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[84838,84986],"yaml":true,"extradata":"MT"},{"content":"The target to be built.","nodes":[{"pos":[0,23],"content":"The target to be built.","nodes":[{"content":"The target to be built.","pos":[0,23]}]}],"pos":[85205,85229],"yaml":true},{"content":"The loggers to be used during the build.","nodes":[{"pos":[0,40],"content":"The loggers to be used during the build.","nodes":[{"content":"The loggers to be used during the build.","pos":[0,40]}]}],"pos":[85352,85393],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[85451,85493],"yaml":true},{"content":"Builds this project, building the given target.","nodes":[{"pos":[0,47],"content":"Builds this project, building the given target.","nodes":[{"content":"Builds this project, building the given target.","pos":[0,47]}]}],"pos":[86460,86508],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[86519,86667],"yaml":true,"extradata":"MT"},{"content":"The target to be built.","nodes":[{"pos":[0,23],"content":"The target to be built.","nodes":[{"content":"The target to be built.","pos":[0,23]}]}],"pos":[86803,86827],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[86885,86927],"yaml":true},{"content":"Builds this project, using the default targets and the given loggers.","nodes":[{"pos":[0,69],"content":"Builds this project, using the default targets and the given loggers.","nodes":[{"content":"Builds this project, using the default targets and the given loggers.","pos":[0,69]}]}],"pos":[88116,88186],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[88197,88345],"yaml":true,"extradata":"MT"},{"content":"An enumerator over all loggers to be used during the build.","nodes":[{"pos":[0,59],"content":"An enumerator over all loggers to be used during the build.","nodes":[{"content":"An enumerator over all loggers to be used during the build.","pos":[0,59]}]}],"pos":[88610,88670],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[88728,88770],"yaml":true},{"content":"Builds this project, using the default targets and the given logger.","nodes":[{"pos":[0,68],"content":"Builds this project, using the default targets and the given logger.","nodes":[{"content":"Builds this project, using the default targets and the given logger.","pos":[0,68]}]}],"pos":[89800,89869],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[89880,90028],"yaml":true,"extradata":"MT"},{"content":"The logger to be used during the build.","nodes":[{"pos":[0,39],"content":"The logger to be used during the build.","nodes":[{"content":"The logger to be used during the build.","pos":[0,39]}]}],"pos":[90211,90251],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[90309,90351],"yaml":true},{"content":"Builds this project, using the default targets.","nodes":[{"pos":[0,47],"content":"Builds this project, using the default targets.","nodes":[{"content":"Builds this project, using the default targets.","pos":[0,47]}]}],"pos":[91255,91303],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[91314,91462],"yaml":true,"extradata":"MT"},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[91584,91626],"yaml":true},{"content":"Builds this project, building the given targets.","nodes":[{"pos":[0,48],"content":"Builds this project, building the given targets.","nodes":[{"content":"Builds this project, building the given targets.","pos":[0,48]}]}],"pos":[92605,92654],"yaml":true},{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"pos":[0,147],"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.","pos":[0,147],"nodes":[{"content":"To set or get virtual items for build purposes, clone a project instance explicitly and build that.","pos":[0,99]},{"content":"This method does not modify the project object.","pos":[100,147]}]}]}],"pos":[92665,92813],"yaml":true,"extradata":"MT"},{"content":"An array of targets to be built.","nodes":[{"pos":[0,32],"content":"An array of targets to be built.","nodes":[{"content":"An array of targets to be built.","pos":[0,32]}]}],"pos":[92955,92988],"yaml":true},{"content":"Returns true on success; false otherwise.","nodes":[{"pos":[0,41],"content":"Returns true on success; false otherwise.","nodes":[{"content":"Returns true on success; false otherwise.","pos":[0,41]}]}],"pos":[93046,93088],"yaml":true},{"content":"Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.","nodes":[{"pos":[0,146],"content":"Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.","nodes":[{"content":"Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.","pos":[0,146]}]}],"pos":[94084,94231],"yaml":true},{"content":"For example, if the following conditions existed on properties in a project: Condition=\"'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'\" Condition=\"'$(Configuration)' == 'Release'\" the table would be populated with { \"Configuration\", { \"Debug\", \"Release\" }} { \"Platform\", { \"x86\" }} This collection is used by Visual Studio to determine the configurations defined in the project","nodes":[{"pos":[0,386],"content":"For example, if the following conditions existed on properties in a project: Condition=\"'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'\" Condition=\"'$(Configuration)' == 'Release'\" the table would be populated with { \"Configuration\", { \"Debug\", \"Release\" }} { \"Platform\", { \"x86\" }} This collection is used by Visual Studio to determine the configurations defined in the project","nodes":[{"content":"For example, if the following conditions existed on properties in a project: Condition=\"'$(Configuration)&amp;#124;$(Platform)' == 'Debug&amp;#124;x86'\" Condition=\"'$(Configuration)' == 'Release'\" the table would be populated with { \"Configuration\", { \"Debug\", \"Release\" }} { \"Platform\", { \"x86\" }} This collection is used by Visual Studio to determine the configurations defined in the project","pos":[0,386],"source":"For example, if the following conditions existed on properties in a project: Condition=\"'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'\" Condition=\"'$(Configuration)' == 'Release'\" the table would be populated with { \"Configuration\", { \"Debug\", \"Release\" }} { \"Platform\", { \"x86\" }} This collection is used by Visual Studio to determine the configurations defined in the project"}]}],"pos":[94242,94645],"yaml":true,"extradata":"MT"},{"content":"Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens. The collection is in canonical form. The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.","nodes":[{"pos":[0,306],"content":"Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens. The collection is in canonical form. The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.","nodes":[{"content":"Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens. The collection is in canonical form. The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.","pos":[0,306],"nodes":[{"content":"Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.","pos":[0,149]},{"content":"The collection is in canonical form.","pos":[150,186]},{"content":"The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.","pos":[187,306]}]}]}],"pos":[94999,95306],"yaml":true},{"content":"Creates a project instance based on this project, but completely disconnected from it.","nodes":[{"pos":[0,86],"content":"Creates a project instance based on this project, but completely disconnected from it.","nodes":[{"content":"Creates a project instance based on this project, but completely disconnected from it.","pos":[0,86]}]}],"pos":[96392,96479],"yaml":true},{"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","nodes":[{"pos":[0,167],"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","nodes":[{"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","pos":[0,167],"nodes":[{"content":"Can be used to build independently.","pos":[0,35]},{"content":"The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","pos":[36,167]}]}]}],"pos":[96490,96658],"yaml":true,"extradata":"MT"},{"content":"Returns the project instance.","nodes":[{"pos":[0,29],"content":"Returns the project instance.","nodes":[{"content":"Returns the project instance.","pos":[0,29]}]}],"pos":[96860,96890],"yaml":true},{"content":"Creates a project instance based on this project, but completely disconnected from it.","nodes":[{"pos":[0,86],"content":"Creates a project instance based on this project, but completely disconnected from it.","nodes":[{"content":"Creates a project instance based on this project, but completely disconnected from it.","pos":[0,86]}]}],"pos":[98128,98215],"yaml":true},{"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","nodes":[{"pos":[0,167],"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","nodes":[{"content":"Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","pos":[0,167],"nodes":[{"content":"Can be used to build independently.","pos":[0,35]},{"content":"The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.","pos":[36,167]}]}]}],"pos":[98226,98394],"yaml":true,"extradata":"MT"},{"content":"Determines whether created project instance is immutable and whether it contains a look up table to improve performance.","nodes":[{"pos":[0,120],"content":"Determines whether created project instance is immutable and whether it contains a look up table to improve performance.","nodes":[{"content":"Determines whether created project instance is immutable and whether it contains a look up table to improve performance.","pos":[0,120]}]}],"pos":[98666,98787],"yaml":true},{"content":"Returns the project instance.","nodes":[{"pos":[0,29],"content":"Returns the project instance.","nodes":[{"content":"Returns the project instance.","pos":[0,29]}]}],"pos":[98872,98902],"yaml":true},{"content":"Gets the root directory for this project.","nodes":[{"pos":[0,41],"content":"Gets the root directory for this project.","nodes":[{"content":"Gets the root directory for this project.","pos":[0,41]}]}],"pos":[99866,99908],"yaml":true},{"content":"Returns the root directory for this project. The root directory is never null; in-memory projects use the current directory at the time of project load.","nodes":[{"pos":[0,152],"content":"Returns the root directory for this project. The root directory is never null; in-memory projects use the current directory at the time of project load.","nodes":[{"content":"Returns the root directory for this project. The root directory is never null; in-memory projects use the current directory at the time of project load.","pos":[0,152],"nodes":[{"content":"Returns the root directory for this project.","pos":[0,44]},{"content":"The root directory is never null; in-memory projects use the current directory at the time of project load.","pos":[45,152]}]}]}],"pos":[100087,100240],"yaml":true},{"content":"Gets or sets a flag the determines whether <xref href=\"Microsoft.Build.Evaluation.Project.MarkDirty\"></xref> is temporarily disabled. This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.","nodes":[{"pos":[0,263],"content":"Gets or sets a flag the determines whether <xref href=\"Microsoft.Build.Evaluation.Project.MarkDirty\"></xref> is temporarily disabled. This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.","nodes":[{"content":"Gets or sets a flag the determines whether <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Evaluation.Project.MarkDirty\"&gt;&lt;/xref&gt;</ph> is temporarily disabled.","pos":[0,133],"source":"Gets or sets a flag the determines whether <xref href=\"Microsoft.Build.Evaluation.Project.MarkDirty\"></xref> is temporarily disabled."},{"content":"This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.","pos":[134,263]}]}],"pos":[101284,101548],"yaml":true},{"content":"Returns a flag the determines whether `MarkDirty` is temporarily disabled.","nodes":[{"pos":[0,74],"content":"Returns a flag the determines whether <ph id=\"ph1\">`MarkDirty`</ph> is temporarily disabled.","source":"Returns a flag the determines whether `MarkDirty` is temporarily disabled."}],"pos":[101672,101747],"yaml":true},{"content":"Gets a number that is incremented every time that project is re-evaluated.","nodes":[{"pos":[0,74],"content":"Gets a number that is incremented every time that project is re-evaluated.","nodes":[{"content":"Gets a number that is incremented every time that project is re-evaluated.","pos":[0,74]}]}],"pos":[102730,102805],"yaml":true},{"content":"This value should be compared with previous values to see if the project has been re-evaluated. It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.","nodes":[{"pos":[0,251],"content":"This value should be compared with previous values to see if the project has been re-evaluated. It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.","nodes":[{"content":"This value should be compared with previous values to see if the project has been re-evaluated. It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.","pos":[0,251],"nodes":[{"content":"This value should be compared with previous values to see if the project has been re-evaluated.","pos":[0,95]},{"content":"It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.","pos":[96,251]}]}]}],"pos":[102816,103068],"yaml":true,"extradata":"MT"},{"content":"Returns the incremented value.","nodes":[{"pos":[0,30],"content":"Returns the incremented value.","nodes":[{"content":"Returns the incremented value.","pos":[0,30]}]}],"pos":[103185,103216],"yaml":true},{"content":"Evaluates the given string by expanding items and properties. The string is evaluated as if it were found at the very end of the project file.","nodes":[{"pos":[0,142],"content":"Evaluates the given string by expanding items and properties. The string is evaluated as if it were found at the very end of the project file.","nodes":[{"content":"Evaluates the given string by expanding items and properties. The string is evaluated as if it were found at the very end of the project file.","pos":[0,142],"nodes":[{"content":"Evaluates the given string by expanding items and properties.","pos":[0,61]},{"content":"The string is evaluated as if it were found at the very end of the project file.","pos":[62,142]}]}]}],"pos":[104237,104380],"yaml":true},{"content":"This method can be used when best-effort evaluation is sufficient.","nodes":[{"pos":[0,66],"content":"This method can be used when best-effort evaluation is sufficient.","nodes":[{"content":"This method can be used when best-effort evaluation is sufficient.","pos":[0,66]}]}],"pos":[104391,104458],"yaml":true,"extradata":"MT"},{"content":"The string to be evaluated.","nodes":[{"pos":[0,27],"content":"The string to be evaluated.","nodes":[{"content":"The string to be evaluated.","pos":[0,27]}]}],"pos":[104621,104649],"yaml":true},{"content":"Returns the evaluated string.","nodes":[{"pos":[0,29],"content":"Returns the evaluated string.","nodes":[{"content":"Returns the evaluated string.","pos":[0,29]}]}],"pos":[104706,104736],"yaml":true},{"content":"Gets or sets the full path to the project source file.","nodes":[{"pos":[0,54],"content":"Gets or sets the full path to the project source file.","nodes":[{"content":"Gets or sets the full path to the project source file.","pos":[0,54]}]}],"pos":[105661,105716],"yaml":true},{"content":"Setting this property on a project in a project collection renames the project.","nodes":[{"pos":[0,79],"content":"Setting this property on a project in a project collection renames the project.","nodes":[{"content":"Setting this property on a project in a project collection renames the project.","pos":[0,79]}]}],"pos":[105727,105807],"yaml":true,"extradata":"MT"},{"content":"Returns the full path to the project source file. Returns an empty string if the project was not loaded from disk.","nodes":[{"pos":[0,114],"content":"Returns the full path to the project source file. Returns an empty string if the project was not loaded from disk.","nodes":[{"content":"Returns the full path to the project source file. Returns an empty string if the project was not loaded from disk.","pos":[0,114],"nodes":[{"content":"Returns the full path to the project source file.","pos":[0,49]},{"content":"Returns an empty string if the project was not loaded from disk.","pos":[50,114]}]}]}],"pos":[106039,106154],"yaml":true},{"content":"Gets evaluated, escaped value of the Include attribute of the provided items.","nodes":[{"pos":[0,77],"content":"Gets evaluated, escaped value of the Include attribute of the provided items.","nodes":[{"content":"Gets evaluated, escaped value of the Include attribute of the provided items.","pos":[0,77]}]}],"pos":[107490,107568],"yaml":true},{"content":"The item to be evaluated and escaped.","nodes":[{"pos":[0,37],"content":"The item to be evaluated and escaped.","nodes":[{"content":"The item to be evaluated and escaped.","pos":[0,37]}]}],"pos":[107791,107829],"yaml":true},{"content":"Returns the evaluated, escaped value of the Include attribute of the provided items.","nodes":[{"pos":[0,84],"content":"Returns the evaluated, escaped value of the Include attribute of the provided items.","nodes":[{"content":"Returns the evaluated, escaped value of the Include attribute of the provided items.","pos":[0,84]}]}],"pos":[107886,107971],"yaml":true},{"content":"Gets the evaluated, escaped value of the Include attribute of the provided item definition.","nodes":[{"pos":[0,91],"content":"Gets the evaluated, escaped value of the Include attribute of the provided item definition.","nodes":[{"content":"Gets the evaluated, escaped value of the Include attribute of the provided item definition.","pos":[0,91]}]}],"pos":[109263,109355],"yaml":true},{"content":"The item definition to be evaluated and escaped.","nodes":[{"pos":[0,48],"content":"The item definition to be evaluated and escaped.","nodes":[{"content":"The item definition to be evaluated and escaped.","pos":[0,48]}]}],"pos":[109598,109647],"yaml":true},{"content":"Returns the value of the Include attribute.","nodes":[{"pos":[0,43],"content":"Returns the value of the Include attribute.","nodes":[{"content":"Returns the value of the Include attribute.","pos":[0,43]}]}],"pos":[109704,109748],"yaml":true},{"content":"Gets all the items in the project of the given item type. If there are none, returns an empty list. Use AddItem or RemoveItem to modify items in this project.","nodes":[{"pos":[0,158],"content":"Gets all the items in the project of the given item type. If there are none, returns an empty list. Use AddItem or RemoveItem to modify items in this project.","nodes":[{"content":"Gets all the items in the project of the given item type. If there are none, returns an empty list. Use AddItem or RemoveItem to modify items in this project.","pos":[0,158],"nodes":[{"content":"Gets all the items in the project of the given item type.","pos":[0,57]},{"content":"If there are none, returns an empty list.","pos":[58,99]},{"content":"Use AddItem or RemoveItem to modify items in this project.","pos":[100,158]}]}]}],"pos":[110758,110917],"yaml":true},{"content":"Use AddItem or RemoveItem to modify items in this project.","nodes":[{"pos":[0,58],"content":"Use AddItem or RemoveItem to modify items in this project.","nodes":[{"content":"Use AddItem or RemoveItem to modify items in this project.","pos":[0,58]}]}],"pos":[110928,110987],"yaml":true,"extradata":"MT"},{"content":"The item type to be retrieved.","nodes":[{"pos":[0,30],"content":"The item type to be retrieved.","nodes":[{"content":"The item type to be retrieved.","pos":[0,30]}]}],"pos":[111204,111235],"yaml":true},{"content":"Returns all the items in the project of the given item type. Returns an empty list if there are no items with the given item name.","nodes":[{"pos":[0,130],"content":"Returns all the items in the project of the given item type. Returns an empty list if there are no items with the given item name.","nodes":[{"content":"Returns all the items in the project of the given item type. Returns an empty list if there are no items with the given item name.","pos":[0,130],"nodes":[{"content":"Returns all the items in the project of the given item type.","pos":[0,60]},{"content":"Returns an empty list if there are no items with the given item name.","pos":[61,130]}]}]}],"pos":[111357,111488],"yaml":true},{"content":"Gets all items that have the given evaluated Include attribute.","nodes":[{"pos":[0,63],"content":"Gets all items that have the given evaluated Include attribute.","nodes":[{"content":"Gets all items that have the given evaluated Include attribute.","pos":[0,63]}]}],"pos":[112584,112648],"yaml":true},{"content":"For example, this method might return all items that have the evaluated Include attribute \"component.cpp\". Typically zero or one items are returned. However, there may be multiple items with the same path and different item types, or even with the same item types.","nodes":[{"pos":[0,264],"content":"For example, this method might return all items that have the evaluated Include attribute \"component.cpp\". Typically zero or one items are returned. However, there may be multiple items with the same path and different item types, or even with the same item types.","nodes":[{"content":"For example, this method might return all items that have the evaluated Include attribute \"component.cpp\". Typically zero or one items are returned. However, there may be multiple items with the same path and different item types, or even with the same item types.","pos":[0,264],"nodes":[{"content":"For example, this method might return all items that have the evaluated Include attribute \"component.cpp\".","pos":[0,106]},{"content":"Typically zero or one items are returned.","pos":[107,148]},{"content":"However, there may be multiple items with the same path and different item types, or even with the same item types.","pos":[149,264]}]}]}],"pos":[112659,112924],"yaml":true,"extradata":"MT"},{"content":"The evaluated Include attribute.","nodes":[{"pos":[0,32],"content":"The evaluated Include attribute.","nodes":[{"content":"The evaluated Include attribute.","pos":[0,32]}]}],"pos":[113175,113208],"yaml":true},{"content":"Returns all items that have the given evaluated Include attribute.","nodes":[{"pos":[0,66],"content":"Returns all items that have the given evaluated Include attribute.","nodes":[{"content":"Returns all items that have the given evaluated Include attribute.","pos":[0,66]}]}],"pos":[113330,113397],"yaml":true},{"content":"Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true. This is a read-only list: use AddItem or RemoveItem to modify items in this project.","nodes":[{"pos":[0,197],"content":"Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true. This is a read-only list: use AddItem or RemoveItem to modify items in this project.","nodes":[{"content":"Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true. This is a read-only list: use AddItem or RemoveItem to modify items in this project.","pos":[0,197],"nodes":[{"content":"Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.","pos":[0,112]},{"content":"This is a read-only list: use AddItem or RemoveItem to modify items in this project.","pos":[113,197]}]}]}],"pos":[114505,114705],"yaml":true},{"content":"This is a read-only list. Use AddItem or RemoveItem to modify items in this project.","nodes":[{"pos":[0,84],"content":"This is a read-only list. Use AddItem or RemoveItem to modify items in this project.","nodes":[{"content":"This is a read-only list. Use AddItem or RemoveItem to modify items in this project.","pos":[0,84],"nodes":[{"content":"This is a read-only list.","pos":[0,25]},{"content":"Use AddItem or RemoveItem to modify items in this project.","pos":[26,84]}]}]}],"pos":[114716,114801],"yaml":true,"extradata":"MT"},{"content":"The item type to be retrieved.","nodes":[{"pos":[0,30],"content":"The item type to be retrieved.","nodes":[{"content":"The item type to be retrieved.","pos":[0,30]}]}],"pos":[115035,115066],"yaml":true},{"content":"Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.","nodes":[{"pos":[0,115],"content":"Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.","nodes":[{"content":"Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.","pos":[0,115]}]}],"pos":[115188,115304],"yaml":true},{"content":"Gets an enumerator over all the elements in the \"logical project\". The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.","nodes":[{"pos":[0,264],"content":"Gets an enumerator over all the elements in the \"logical project\". The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.","nodes":[{"content":"Gets an enumerator over all the elements in the \"logical project\". The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.","pos":[0,264],"nodes":[{"content":"Gets an enumerator over all the elements in the \"logical project\".","pos":[0,66]},{"content":"The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.","pos":[67,264]}]}]}],"pos":[116300,116565],"yaml":true},{"content":"The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.","nodes":[{"pos":[0,205],"content":"The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.","nodes":[{"content":"The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.","pos":[0,205]}]}],"pos":[116576,116782],"yaml":true,"extradata":"MT"},{"content":"Returns an enumerator over all the elements in the \"logical project\".","nodes":[{"pos":[0,69],"content":"Returns an enumerator over all the elements in the \"logical project\".","nodes":[{"content":"Returns an enumerator over all the elements in the \"logical project\".","pos":[0,69]}]}],"pos":[117064,117134],"yaml":true},{"content":"Gets the escaped value of the provided metadatum.","nodes":[{"pos":[0,49],"content":"Gets the escaped value of the provided metadatum.","nodes":[{"content":"Gets the escaped value of the provided metadatum.","pos":[0,49]}]}],"pos":[118335,118385],"yaml":true},{"content":"The metadatum to be escaped.","nodes":[{"pos":[0,28],"content":"The metadatum to be escaped.","nodes":[{"content":"The metadatum to be escaped.","pos":[0,28]}]}],"pos":[118619,118648],"yaml":true},{"content":"Gets the escaped value of the provided metadatum.","nodes":[{"pos":[0,49],"content":"Gets the escaped value of the provided metadatum.","nodes":[{"content":"Gets the escaped value of the provided metadatum.","pos":[0,49]}]}],"pos":[118705,118755],"yaml":true},{"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","nodes":[{"pos":[0,84],"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","nodes":[{"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","pos":[0,84]}]}],"pos":[120004,120089],"yaml":true},{"content":"The item whose metadata is to be escaped.","nodes":[{"pos":[0,41],"content":"The item whose metadata is to be escaped.","nodes":[{"content":"The item whose metadata is to be escaped.","pos":[0,41]}]}],"pos":[120318,120360],"yaml":true},{"content":"The name of the metadata to be escaped.","nodes":[{"pos":[0,39],"content":"The name of the metadata to be escaped.","nodes":[{"content":"The name of the metadata to be escaped.","pos":[0,39]}]}],"pos":[120420,120460],"yaml":true},{"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","nodes":[{"pos":[0,84],"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","nodes":[{"content":"Gets the escaped value of the metadatum with the provided name on the provided item.","pos":[0,84]}]}],"pos":[120517,120602],"yaml":true},{"content":"Gets the escaped value of the metadatum with the provided name on the provided item definition.","nodes":[{"pos":[0,95],"content":"Gets the escaped value of the metadatum with the provided name on the provided item definition.","nodes":[{"content":"Gets the escaped value of the metadatum with the provided name on the provided item definition.","pos":[0,95]}]}],"pos":[121911,122007],"yaml":true},{"content":"The item definition whose metadata is to be escaped.","nodes":[{"pos":[0,52],"content":"The item definition whose metadata is to be escaped.","nodes":[{"content":"The item definition whose metadata is to be escaped.","pos":[0,52]}]}],"pos":[122256,122309],"yaml":true},{"content":"The name of the metadata to be escaped.","nodes":[{"pos":[0,39],"content":"The name of the metadata to be escaped.","nodes":[{"content":"The name of the metadata to be escaped.","pos":[0,39]}]}],"pos":[122369,122409],"yaml":true},{"content":"Returns the escaped value of the metadatum with the provided name on the provided item definition.","nodes":[{"pos":[0,98],"content":"Returns the escaped value of the metadatum with the provided name on the provided item definition.","nodes":[{"content":"Returns the escaped value of the metadatum with the provided name on the provided item definition.","pos":[0,98]}]}],"pos":[122466,122565],"yaml":true},{"content":"Gets any property in the project that has the specified name.","nodes":[{"pos":[0,61],"content":"Gets any property in the project that has the specified name.","nodes":[{"content":"Gets any property in the project that has the specified name.","pos":[0,61]}]}],"pos":[123586,123648],"yaml":true},{"content":"The name of the property to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the property to retrieve.","nodes":[{"content":"The name of the property to retrieve.","pos":[0,37]}]}],"pos":[123824,123862],"yaml":true},{"content":"Returns any property in the project that has the specified name. Returns null if no property of that name exists.","nodes":[{"pos":[0,113],"content":"Returns any property in the project that has the specified name. Returns null if no property of that name exists.","nodes":[{"content":"Returns any property in the project that has the specified name. Returns null if no property of that name exists.","pos":[0,113],"nodes":[{"content":"Returns any property in the project that has the specified name.","pos":[0,64]},{"content":"Returns null if no property of that name exists.","pos":[65,113]}]}]}],"pos":[123948,124062],"yaml":true},{"content":"Gets the value of the given property in this project.","nodes":[{"pos":[0,53],"content":"Gets the value of the given property in this project.","nodes":[{"content":"Gets the value of the given property in this project.","pos":[0,53]}]}],"pos":[125118,125172],"yaml":true},{"content":"A property with a value of empty string and no property at all are not distinguished between by this method. To determine if a property is set at all in the project, use GetProperty(name).","nodes":[{"pos":[0,188],"content":"A property with a value of empty string and no property at all are not distinguished between by this method. To determine if a property is set at all in the project, use GetProperty(name).","nodes":[{"content":"A property with a value of empty string and no property at all are not distinguished between by this method. To determine if a property is set at all in the project, use GetProperty(name).","pos":[0,188],"nodes":[{"content":"A property with a value of empty string and no property at all are not distinguished between by this method.","pos":[0,108]},{"content":"To determine if a property is set at all in the project, use GetProperty(name).","pos":[109,188]}]}]}],"pos":[125183,125372],"yaml":true,"extradata":"MT"},{"content":"The name of the property whose value is retrieved.","nodes":[{"pos":[0,50],"content":"The name of the property whose value is retrieved.","nodes":[{"content":"The name of the property whose value is retrieved.","pos":[0,50]}]}],"pos":[125517,125568],"yaml":true},{"content":"Returns the value of the given property in this project. Return an empty string if no property of that name exists. Escape sequences are converted before returning the string.","nodes":[{"pos":[0,175],"content":"Returns the value of the given property in this project. Return an empty string if no property of that name exists. Escape sequences are converted before returning the string.","nodes":[{"content":"Returns the value of the given property in this project. Return an empty string if no property of that name exists. Escape sequences are converted before returning the string.","pos":[0,175],"nodes":[{"content":"Returns the value of the given property in this project.","pos":[0,56]},{"content":"Return an empty string if no property of that name exists.","pos":[57,115]},{"content":"Escape sequences are converted before returning the string.","pos":[116,175]}]}]}],"pos":[125625,125801],"yaml":true},{"content":"Get the escaped value of the provided property.","nodes":[{"pos":[0,47],"content":"Get the escaped value of the provided property.","nodes":[{"content":"Get the escaped value of the provided property.","pos":[0,47]}]}],"pos":[127001,127049],"yaml":true},{"content":"The property to be escaped.","nodes":[{"pos":[0,27],"content":"The property to be escaped.","nodes":[{"content":"The property to be escaped.","pos":[0,27]}]}],"pos":[127281,127309],"yaml":true},{"content":"Returns the escaped value of the provided property.","nodes":[{"pos":[0,51],"content":"Returns the escaped value of the provided property.","nodes":[{"content":"Returns the escaped value of the provided property.","pos":[0,51]}]}],"pos":[127366,127418],"yaml":true},{"content":"Gets a dictionary of the global properties used for the evaluation of this project.","nodes":[{"pos":[0,83],"content":"Gets a dictionary of the global properties used for the evaluation of this project.","nodes":[{"content":"Gets a dictionary of the global properties used for the evaluation of this project.","pos":[0,83]}]}],"pos":[128402,128486],"yaml":true},{"content":"This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>.  \n  \n In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.","nodes":[{"pos":[0,104],"content":"This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>.","nodes":[{"content":"This is the publicly exposed getter, that translates into a read-only dead IDictionary<ph id=\"ph1\">\\&lt;</ph>string, string&gt;.","pos":[0,104],"source":"This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>."}]},{"pos":[111,340],"content":"In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.","nodes":[{"content":"In order to easily tell when we're dirtied, setting and removing global properties is done with <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A&gt;</ph>.","pos":[0,229],"source":"In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>."}]}],"pos":[128497,128843],"yaml":true,"extradata":"MT"},{"content":"Returns a dictionary of the global properties used for the evaluation of this project.","nodes":[{"pos":[0,86],"content":"Returns a dictionary of the global properties used for the evaluation of this project.","nodes":[{"content":"Returns a dictionary of the global properties used for the evaluation of this project.","pos":[0,86]}]}],"pos":[129126,129213],"yaml":true},{"content":"Gets a list of all the files that contributed to the evaluation of this project.","nodes":[{"pos":[0,80],"content":"Gets a list of all the files that contributed to the evaluation of this project.","nodes":[{"content":"Gets a list of all the files that contributed to the evaluation of this project.","pos":[0,80]}]}],"pos":[130206,130287],"yaml":true},{"content":"The project root of this project is not included.","nodes":[{"pos":[0,49],"content":"The project root of this project is not included.","nodes":[{"content":"The project root of this project is not included.","pos":[0,49]}]}],"pos":[130298,130348],"yaml":true,"extradata":"MT"},{"content":"Returns a list of all the files that contributed to the evaluation of this project.  \n  \n The name of each item is the Import element that caused the file to be imported. The value of each item is the project root of the imported project. Import elements whose Condition attribute evaluated to false are not included.","nodes":[{"pos":[0,83],"content":"Returns a list of all the files that contributed to the evaluation of this project.","nodes":[{"content":"Returns a list of all the files that contributed to the evaluation of this project.","pos":[0,83]}]},{"pos":[90,317],"content":"The name of each item is the Import element that caused the file to be imported. The value of each item is the project root of the imported project. Import elements whose Condition attribute evaluated to false are not included.","nodes":[{"content":"The name of each item is the Import element that caused the file to be imported. The value of each item is the project root of the imported project. Import elements whose Condition attribute evaluated to false are not included.","pos":[0,227],"nodes":[{"content":"The name of each item is the Import element that caused the file to be imported.","pos":[0,80]},{"content":"The value of each item is the project root of the imported project.","pos":[81,148]},{"content":"Import elements whose Condition attribute evaluated to false are not included.","pos":[149,227]}]}]}],"pos":[130590,130912],"yaml":true},{"content":"Gets a list of duplicate imports if an import was imported multiple times. However, only the first import was used in evaluation.","nodes":[{"pos":[0,129],"content":"Gets a list of duplicate imports if an import was imported multiple times. However, only the first import was used in evaluation.","nodes":[{"content":"Gets a list of duplicate imports if an import was imported multiple times. However, only the first import was used in evaluation.","pos":[0,129],"nodes":[{"content":"Gets a list of duplicate imports if an import was imported multiple times.","pos":[0,74]},{"content":"However, only the first import was used in evaluation.","pos":[75,129]}]}]}],"pos":[131940,132070],"yaml":true},{"content":"Returns a list of duplicate imports.","nodes":[{"pos":[0,36],"content":"Returns a list of duplicate imports.","nodes":[{"content":"Returns a list of duplicate imports.","pos":[0,36]}]}],"pos":[132331,132368],"yaml":true},{"content":"Gets or sets a property that selects whether the targets and tasks of this project can be built.","nodes":[{"pos":[0,96],"content":"Gets or sets a property that selects whether the targets and tasks of this project can be built.","nodes":[{"content":"Gets or sets a property that selects whether the targets and tasks of this project can be built.","pos":[0,96]}]}],"pos":[133343,133440],"yaml":true},{"content":"Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.","nodes":[{"pos":[0,217],"content":"Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.","nodes":[{"content":"Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.","pos":[0,217],"nodes":[{"content":"Can be used for security purposes.","pos":[0,34]},{"content":"By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.","pos":[35,147]},{"content":"When IsBuildEnabled is false, the Build method on this project fails.","pos":[148,217]}]}]}],"pos":[133451,133669],"yaml":true,"extradata":"MT"},{"content":"Returns true if the targets and tasks of this project can be built; false otherwise.","nodes":[{"pos":[0,84],"content":"Returns true if the targets and tasks of this project can be built; false otherwise.","nodes":[{"content":"Returns true if the targets and tasks of this project can be built; false otherwise.","pos":[0,84]}]}],"pos":[133791,133876],"yaml":true},{"content":"Gets a property that indicates whether this project has been modified so that it must be reevaluated.","nodes":[{"pos":[0,101],"content":"Gets a property that indicates whether this project has been modified so that it must be reevaluated.","nodes":[{"content":"Gets a property that indicates whether this project has been modified so that it must be reevaluated.","pos":[0,101]}]}],"pos":[134797,134899],"yaml":true},{"content":"A project is modified and must be reevaluated when the underlying project source code, including changes to imported files. A project is also modified must be reevaluated if the project tool set changes.","nodes":[{"pos":[0,203],"content":"A project is modified and must be reevaluated when the underlying project source code, including changes to imported files. A project is also modified must be reevaluated if the project tool set changes.","nodes":[{"content":"A project is modified and must be reevaluated when the underlying project source code, including changes to imported files. A project is also modified must be reevaluated if the project tool set changes.","pos":[0,203],"nodes":[{"content":"A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.","pos":[0,123]},{"content":"A project is also modified must be reevaluated if the project tool set changes.","pos":[124,203]}]}]}],"pos":[134910,135114],"yaml":true,"extradata":"MT"},{"content":"Returns a property that indicates whether this project has been modified so that it must be reevaluated.","nodes":[{"pos":[0,104],"content":"Returns a property that indicates whether this project has been modified so that it must be reevaluated.","nodes":[{"content":"Returns a property that indicates whether this project has been modified so that it must be reevaluated.","pos":[0,104]}]}],"pos":[135224,135329],"yaml":true},{"content":"Gets a dictionary of item definitions in this project, keyed by item type.","nodes":[{"pos":[0,74],"content":"Gets a dictionary of item definitions in this project, keyed by item type.","nodes":[{"content":"Gets a dictionary of item definitions in this project, keyed by item type.","pos":[0,74]}]}],"pos":[136291,136366],"yaml":true},{"content":"Returns a dictionary of item definitions in this project, keyed by item type.","nodes":[{"pos":[0,77],"content":"Returns a dictionary of item definitions in this project, keyed by item type.","nodes":[{"content":"Returns a dictionary of item definitions in this project, keyed by item type.","pos":[0,77]}]}],"pos":[136725,136803],"yaml":true},{"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"pos":[0,87],"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","pos":[0,87]}]}],"pos":[137783,137871],"yaml":true},{"content":"Returns an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"pos":[0,90],"content":"Returns an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"content":"Returns an enumerator over all items in this project, ordered within groups of item types.","pos":[0,90]}]}],"pos":[138179,138270],"yaml":true},{"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"pos":[0,87],"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","nodes":[{"content":"Gets an enumerator over all items in this project, ordered within groups of item types.","pos":[0,87]}]}],"pos":[139342,139430],"yaml":true},{"content":"Can be used to display all items, even if they are not part of the build in the current configuration.","nodes":[{"pos":[0,102],"content":"Can be used to display all items, even if they are not part of the build in the current configuration.","nodes":[{"content":"Can be used to display all items, even if they are not part of the build in the current configuration.","pos":[0,102]}]}],"pos":[139441,139544],"yaml":true,"extradata":"MT"},{"content":"Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.","nodes":[{"pos":[0,215],"content":"Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.","nodes":[{"content":"Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.","pos":[0,215]}]}],"pos":[139869,140085],"yaml":true},{"content":"Gets an enumerator over all item types in this project.","nodes":[{"pos":[0,55],"content":"Gets an enumerator over all item types in this project.","nodes":[{"content":"Gets an enumerator over all item types in this project.","pos":[0,55]}]}],"pos":[141096,141152],"yaml":true},{"content":"Returns an enumerator over all item types in this project. This is an ordered collection.","nodes":[{"pos":[0,89],"content":"Returns an enumerator over all item types in this project. This is an ordered collection.","nodes":[{"content":"Returns an enumerator over all item types in this project. This is an ordered collection.","pos":[0,89],"nodes":[{"content":"Returns an enumerator over all item types in this project.","pos":[0,58]},{"content":"This is an ordered collection.","pos":[59,89]}]}]}],"pos":[141407,141497],"yaml":true},{"content":"Marks this project as modified.","nodes":[{"pos":[0,31],"content":"Marks this project as modified.","nodes":[{"content":"Marks this project as modified.","pos":[0,31]}]}],"pos":[142499,142531],"yaml":true},{"content":"It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.  \n  \n Sometimes, however, this method must be called. For example, a project may have an Import element whose condition depends on a file that exists on a disk. If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.  \n  \n The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.","nodes":[{"pos":[0,127],"content":"It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.","nodes":[{"content":"It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.","pos":[0,127]}]},{"pos":[134,428],"content":"Sometimes, however, this method must be called. For example, a project may have an Import element whose condition depends on a file that exists on a disk. If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.","nodes":[{"content":"Sometimes, however, this method must be called. For example, a project may have an Import element whose condition depends on a file that exists on a disk. If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.","pos":[0,294],"nodes":[{"content":"Sometimes, however, this method must be called.","pos":[0,47]},{"content":"For example, a project may have an Import element whose condition depends on a file that exists on a disk.","pos":[48,154]},{"content":"If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.","pos":[155,294]}]}]},{"pos":[435,575],"content":"The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A&gt;</ph> method uses this property to determine if an evaluation is necessary.","pos":[0,140],"source":"The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary."}]}],"pos":[142542,143124],"yaml":true,"extradata":"MT"},{"content":"Gets the project collection which contains this project.","nodes":[{"pos":[0,56],"content":"Gets the project collection which contains this project.","nodes":[{"content":"Gets the project collection which contains this project.","pos":[0,56]}]}],"pos":[144168,144225],"yaml":true},{"content":"Returns the project collection which contains this project, which is never null.","nodes":[{"pos":[0,80],"content":"Returns the project collection which contains this project, which is never null.","nodes":[{"content":"Returns the project collection which contains this project, which is never null.","pos":[0,80]}]}],"pos":[144477,144558],"yaml":true},{"content":"The location of the originating file itself, not any specific content within it. If the file has not been given a name, this is an empty location. This is a legitimate case of having no location.","nodes":[{"pos":[0,195],"content":"The location of the originating file itself, not any specific content within it. If the file has not been given a name, this is an empty location. This is a legitimate case of having no location.","nodes":[{"content":"The location of the originating file itself, not any specific content within it. If the file has not been given a name, this is an empty location. This is a legitimate case of having no location.","pos":[0,195],"nodes":[{"content":"The location of the originating file itself, not any specific content within it.","pos":[0,80]},{"content":"If the file has not been given a name, this is an empty location.","pos":[81,146]},{"content":"This is a legitimate case of having no location.","pos":[147,195]}]}]}],"pos":[145624,145820],"yaml":true},{"content":"Returns the originating file location or an empty location.","nodes":[{"pos":[0,59],"content":"Returns the originating file location or an empty location.","nodes":[{"content":"Returns the originating file location or an empty location.","pos":[0,59]}]}],"pos":[146012,146072],"yaml":true},{"content":"Gets an enumerator over all properties in this project. This is an unordered collection.","nodes":[{"pos":[0,88],"content":"Gets an enumerator over all properties in this project. This is an unordered collection.","nodes":[{"content":"Gets an enumerator over all properties in this project. This is an unordered collection.","pos":[0,88],"nodes":[{"content":"Gets an enumerator over all properties in this project.","pos":[0,55]},{"content":"This is an unordered collection.","pos":[56,88]}]}]}],"pos":[147016,147105],"yaml":true},{"content":"Returns an enumerator over all properties in this project. Since properties are evaluated as they appear, this is an unordered collection.","nodes":[{"pos":[0,138],"content":"Returns an enumerator over all properties in this project. Since properties are evaluated as they appear, this is an unordered collection.","nodes":[{"content":"Returns an enumerator over all properties in this project. Since properties are evaluated as they appear, this is an unordered collection.","pos":[0,138],"nodes":[{"content":"Returns an enumerator over all properties in this project.","pos":[0,58]},{"content":"Since properties are evaluated as they appear, this is an unordered collection.","pos":[59,138]}]}]}],"pos":[147426,147565],"yaml":true},{"content":"Reevaluates the project to incorporate any changes.","nodes":[{"pos":[0,51],"content":"Reevaluates the project to incorporate any changes.","nodes":[{"content":"Reevaluates the project to incorporate any changes.","pos":[0,51]}]}],"pos":[148640,148692],"yaml":true},{"content":"The project is reevaluated only if it is marked as modified. Reevaluation incorporates all changes made to the project source code.  \n  \n Throws InvalidProjectFileException if the evaluation fails.","nodes":[{"pos":[0,131],"content":"The project is reevaluated only if it is marked as modified. Reevaluation incorporates all changes made to the project source code.","nodes":[{"content":"The project is reevaluated only if it is marked as modified. Reevaluation incorporates all changes made to the project source code.","pos":[0,131],"nodes":[{"content":"The project is reevaluated only if it is marked as modified.","pos":[0,60]},{"content":"Reevaluation incorporates all changes made to the project source code.","pos":[61,131]}]}]},{"pos":[138,197],"content":"Throws InvalidProjectFileException if the evaluation fails.","nodes":[{"content":"Throws InvalidProjectFileException if the evaluation fails.","pos":[0,59]}]}],"pos":[148703,148905],"yaml":true,"extradata":"MT"},{"content":"Removes a global property and marks the project as modified.","nodes":[{"pos":[0,60],"content":"Removes a global property and marks the project as modified.","nodes":[{"content":"Removes a global property and marks the project as modified.","pos":[0,60]}]}],"pos":[150058,150119],"yaml":true},{"content":"The name of the global property to be removed.","nodes":[{"pos":[0,46],"content":"The name of the global property to be removed.","nodes":[{"content":"The name of the global property to be removed.","pos":[0,46]}]}],"pos":[150266,150313],"yaml":true},{"content":"Returns true if the value of the global property was set.","nodes":[{"pos":[0,57],"content":"Returns true if the value of the global property was set.","nodes":[{"content":"Returns true if the value of the global property was set.","pos":[0,57]}]}],"pos":[150371,150429],"yaml":true},{"content":"Removes an item from the project. The item to be removed must be present in the project, and must not originate from an imported file.","nodes":[{"pos":[0,134],"content":"Removes an item from the project. The item to be removed must be present in the project, and must not originate from an imported file.","nodes":[{"content":"Removes an item from the project. The item to be removed must be present in the project, and must not originate from an imported file.","pos":[0,134],"nodes":[{"content":"Removes an item from the project.","pos":[0,33]},{"content":"The item to be removed must be present in the project, and must not originate from an imported file.","pos":[34,134]}]}]}],"pos":[151531,151666],"yaml":true},{"content":"If the item group containing the item becomes empty, it is also removed.  \n  \n If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.  \n  \n The project is updated, but no further evaluation occurs until reevaluation. For example, if an item of type \"i\" is removed, \"j\" which is evaluated from \"@(i)\" is not modified until reevaluation.","nodes":[{"pos":[0,72],"content":"If the item group containing the item becomes empty, it is also removed.","nodes":[{"content":"If the item group containing the item becomes empty, it is also removed.","pos":[0,72]}]},{"pos":[79,206],"content":"If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.","nodes":[{"content":"If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.","pos":[0,127]}]},{"pos":[213,408],"content":"The project is updated, but no further evaluation occurs until reevaluation. For example, if an item of type \"i\" is removed, \"j\" which is evaluated from \"@(i)\" is not modified until reevaluation.","nodes":[{"content":"The project is updated, but no further evaluation occurs until reevaluation. For example, if an item of type \"i\" is removed, \"j\" which is evaluated from \"@(i)\" is not modified until reevaluation.","pos":[0,195],"nodes":[{"content":"The project is updated, but no further evaluation occurs until reevaluation.","pos":[0,76]},{"content":"For example, if an item of type \"i\" is removed, \"j\" which is evaluated from \"@(i)\" is not modified until reevaluation.","pos":[77,195]}]}]}],"pos":[151677,152098],"yaml":true,"extradata":"MT"},{"content":"The item to be removed.","nodes":[{"pos":[0,23],"content":"The item to be removed.","nodes":[{"content":"The item to be removed.","pos":[0,23]}]}],"pos":[152292,152316],"yaml":true},{"content":"Returns true if the item is present in this evaluated project; otherwise false. Normally this method returns true, since if the requested item is not present, the method throws an exception. If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.","nodes":[{"pos":[0,295],"content":"Returns true if the item is present in this evaluated project; otherwise false. Normally this method returns true, since if the requested item is not present, the method throws an exception. If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.","nodes":[{"content":"Returns true if the item is present in this evaluated project; otherwise false. Normally this method returns true, since if the requested item is not present, the method throws an exception. If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.","pos":[0,295],"nodes":[{"content":"Returns true if the item is present in this evaluated project; otherwise false.","pos":[0,79]},{"content":"Normally this method returns true, since if the requested item is not present, the method throws an exception.","pos":[80,190]},{"content":"If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.","pos":[191,295]}]}]}],"pos":[152374,152670],"yaml":true},{"content":"Removes all the given items from the project, unless they originate from an imported project.","nodes":[{"pos":[0,93],"content":"Removes all the given items from the project, unless they originate from an imported project.","nodes":[{"content":"Removes all the given items from the project, unless they originate from an imported project.","pos":[0,93]}]}],"pos":[153927,154021],"yaml":true},{"content":"If an item originates from an imported project, it is simply skipped.","nodes":[{"pos":[0,69],"content":"If an item originates from an imported project, it is simply skipped.","nodes":[{"content":"If an item originates from an imported project, it is simply skipped.","pos":[0,69]}]}],"pos":[154032,154102],"yaml":true,"extradata":"MT"},{"content":"The items to be removed.","nodes":[{"pos":[0,24],"content":"The items to be removed.","nodes":[{"content":"The items to be removed.","pos":[0,24]}]}],"pos":[154379,154404],"yaml":true},{"content":"Removes an property from the project. The property to be removed must be present in the project, and must not originate from an imported file.","nodes":[{"pos":[0,142],"content":"Removes an property from the project. The property to be removed must be present in the project, and must not originate from an imported file.","nodes":[{"content":"Removes an property from the project. The property to be removed must be present in the project, and must not originate from an imported file.","pos":[0,142],"nodes":[{"content":"Removes an property from the project.","pos":[0,37]},{"content":"The property to be removed must be present in the project, and must not originate from an imported file.","pos":[38,142]}]}]}],"pos":[155545,155688],"yaml":true},{"content":"If the property group containing the property becomes empty, it is also removed.  \n  \n The project is updated, but no further evaluation occurs until reevaluation. For example, if \"p\" is removed, \"q\" which is evaluated from \"$(p)\" is not modified until reevaluation.","nodes":[{"pos":[0,80],"content":"If the property group containing the property becomes empty, it is also removed.","nodes":[{"content":"If the property group containing the property becomes empty, it is also removed.","pos":[0,80]}]},{"pos":[87,266],"content":"The project is updated, but no further evaluation occurs until reevaluation. For example, if \"p\" is removed, \"q\" which is evaluated from \"$(p)\" is not modified until reevaluation.","nodes":[{"content":"The project is updated, but no further evaluation occurs until reevaluation. For example, if \"p\" is removed, \"q\" which is evaluated from \"$(p)\" is not modified until reevaluation.","pos":[0,179],"nodes":[{"content":"The project is updated, but no further evaluation occurs until reevaluation.","pos":[0,76]},{"content":"For example, if \"p\" is removed, \"q\" which is evaluated from \"$(p)\" is not modified until reevaluation.","pos":[77,179]}]}]}],"pos":[155699,155976],"yaml":true,"extradata":"MT"},{"content":"The property to remove.","nodes":[{"pos":[0,23],"content":"The property to remove.","nodes":[{"content":"The property to remove.","pos":[0,23]}]}],"pos":[156190,156214],"yaml":true},{"content":"Returns true if the property is present in this evaluated project; otherwise false.","nodes":[{"pos":[0,83],"content":"Returns true if the property is present in this evaluated project; otherwise false.","nodes":[{"content":"Returns true if the property is present in this evaluated project; otherwise false.","pos":[0,83]}]}],"pos":[156272,156356],"yaml":true},{"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.","nodes":[{"pos":[0,136],"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.","nodes":[{"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.","pos":[0,136]}]}],"pos":[157419,157556],"yaml":true},{"content":"The path to the project source code.","nodes":[{"pos":[0,36],"content":"The path to the project source code.","nodes":[{"content":"The path to the project source code.","pos":[0,36]}]}],"pos":[157718,157755],"yaml":true},{"content":"The character encoding used to save the project.","nodes":[{"pos":[0,48],"content":"The character encoding used to save the project.","nodes":[{"content":"The character encoding used to save the project.","pos":[0,48]}]}],"pos":[157826,157875],"yaml":true},{"content":"Saves the project to the file system, if modified, using the given character encoding.","nodes":[{"pos":[0,86],"content":"Saves the project to the file system, if modified, using the given character encoding.","nodes":[{"content":"Saves the project to the file system, if modified, using the given character encoding.","pos":[0,86]}]}],"pos":[158862,158949],"yaml":true},{"content":"The character encoding used to save the project.","nodes":[{"pos":[0,48],"content":"The character encoding used to save the project.","nodes":[{"content":"The character encoding used to save the project.","pos":[0,48]}]}],"pos":[159109,159158],"yaml":true},{"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.","nodes":[{"pos":[0,138],"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.","nodes":[{"content":"Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.","pos":[0,138]}]}],"pos":[160118,160257],"yaml":true},{"content":"The path to the project source code.","nodes":[{"pos":[0,36],"content":"The path to the project source code.","nodes":[{"content":"The path to the project source code.","pos":[0,36]}]}],"pos":[160388,160425],"yaml":true},{"content":"Saves the project to the provided text writer, whether or not the project has been modified. Uses the character encoding of the text writer and marks the project as unmodified.","nodes":[{"pos":[0,176],"content":"Saves the project to the provided text writer, whether or not the project has been modified. Uses the character encoding of the text writer and marks the project as unmodified.","nodes":[{"content":"Saves the project to the provided text writer, whether or not the project has been modified. Uses the character encoding of the text writer and marks the project as unmodified.","pos":[0,176],"nodes":[{"content":"Saves the project to the provided text writer, whether or not the project has been modified.","pos":[0,92]},{"content":"Uses the character encoding of the text writer and marks the project as unmodified.","pos":[93,176]}]}]}],"pos":[161418,161595],"yaml":true},{"content":"The text writer to save the project to.","nodes":[{"pos":[0,39],"content":"The text writer to save the project to.","nodes":[{"content":"The text writer to save the project to.","pos":[0,39]}]}],"pos":[161751,161791],"yaml":true},{"content":"Saves the project to the file system, if modified, using the default character encoding.","nodes":[{"pos":[0,88],"content":"Saves the project to the file system, if modified, using the default character encoding.","nodes":[{"content":"Saves the project to the file system, if modified, using the default character encoding.","pos":[0,88]}]}],"pos":[162688,162777],"yaml":true},{"content":"Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported files as if they formed a single file.","nodes":[{"pos":[0,119],"content":"Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported files as if they formed a single file.","nodes":[{"content":"Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported files as if they formed a single file.","pos":[0,119]}]}],"pos":[163917,164037],"yaml":true},{"content":"The writer that saves the project file.","nodes":[{"pos":[0,39],"content":"The writer that saves the project file.","nodes":[{"content":"The writer that saves the project file.","pos":[0,39]}]}],"pos":[164207,164247],"yaml":true},{"content":"Sets a global property after the project has been evaluated. If the value changes, the project is marked to require reevaluation.","nodes":[{"pos":[0,129],"content":"Sets a global property after the project has been evaluated. If the value changes, the project is marked to require reevaluation.","nodes":[{"content":"Sets a global property after the project has been evaluated. If the value changes, the project is marked to require reevaluation.","pos":[0,129],"nodes":[{"content":"Sets a global property after the project has been evaluated.","pos":[0,60]},{"content":"If the value changes, the project is marked to require reevaluation.","pos":[61,129]}]}]}],"pos":[165365,165495],"yaml":true},{"content":"The name of the global property to set.","nodes":[{"pos":[0,39],"content":"The name of the global property to set.","nodes":[{"content":"The name of the global property to set.","pos":[0,39]}]}],"pos":[165660,165700],"yaml":true},{"content":"The new value of the global property.","nodes":[{"pos":[0,37],"content":"The new value of the global property.","nodes":[{"content":"The new value of the global property.","pos":[0,37]}]}],"pos":[165768,165806],"yaml":true},{"content":"Returns `true` if the value changes, otherwise returns `false`.","nodes":[{"pos":[0,63],"content":"Returns <ph id=\"ph1\">`true`</ph> if the value changes, otherwise returns <ph id=\"ph2\">`false`</ph>.","source":"Returns `true` if the value changes, otherwise returns `false`."}],"pos":[165864,165928],"yaml":true},{"content":"Sets or adds a property with the given name and value to the project. Overwrites the value of a property with the same name if it did not originate in an imported file.","nodes":[{"pos":[0,168],"content":"Sets or adds a property with the given name and value to the project. Overwrites the value of a property with the same name if it did not originate in an imported file.","nodes":[{"content":"Sets or adds a property with the given name and value to the project. Overwrites the value of a property with the same name if it did not originate in an imported file.","pos":[0,168],"nodes":[{"content":"Sets or adds a property with the given name and value to the project.","pos":[0,69]},{"content":"Overwrites the value of a property with the same name if it did not originate in an imported file.","pos":[70,168]}]}]}],"pos":[167009,167178],"yaml":true},{"content":"If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.  \n  \n Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.  \n  \n Evaluation takes place on a best-effort basis. Properties that are defined in the project source following the new property may be used for evaluation. Only this property is evaluated. Other properties that might depend on it are not affected.","nodes":[{"pos":[0,196],"content":"If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.","nodes":[{"content":"If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.","pos":[0,196]}]},{"pos":[203,395],"content":"Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.","nodes":[{"content":"Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.","pos":[0,192]}]},{"pos":[402,645],"content":"Evaluation takes place on a best-effort basis. Properties that are defined in the project source following the new property may be used for evaluation. Only this property is evaluated. Other properties that might depend on it are not affected.","nodes":[{"content":"Evaluation takes place on a best-effort basis. Properties that are defined in the project source following the new property may be used for evaluation. Only this property is evaluated. Other properties that might depend on it are not affected.","pos":[0,243],"nodes":[{"content":"Evaluation takes place on a best-effort basis.","pos":[0,46]},{"content":"Properties that are defined in the project source following the new property may be used for evaluation.","pos":[47,151]},{"content":"Only this property is evaluated.","pos":[152,184]},{"content":"Other properties that might depend on it are not affected.","pos":[185,243]}]}]}],"pos":[167189,167841],"yaml":true,"extradata":"MT"},{"content":"The name of the property to set.","nodes":[{"pos":[0,32],"content":"The name of the property to set.","nodes":[{"content":"The name of the property to set.","pos":[0,32]}]}],"pos":[168042,168075],"yaml":true},{"content":"The new unevaluated value of the property.","nodes":[{"pos":[0,42],"content":"The new unevaluated value of the property.","nodes":[{"content":"The new unevaluated value of the property.","pos":[0,42]}]}],"pos":[168147,168190],"yaml":true},{"content":"Returns the property.","nodes":[{"pos":[0,21],"content":"Returns the property.","nodes":[{"content":"Returns the property.","pos":[0,21]}]}],"pos":[168276,168298],"yaml":true},{"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled. This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.","nodes":[{"pos":[0,243],"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled. This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.","nodes":[{"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled. This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.","pos":[0,243],"nodes":[{"content":"Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","pos":[0,89]},{"content":"This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.","pos":[90,243]}]}]}],"pos":[169258,169502],"yaml":true},{"content":"Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","nodes":[{"pos":[0,84],"content":"Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","nodes":[{"content":"Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.","pos":[0,84]}]}],"pos":[169624,169709],"yaml":true},{"content":"Gets the value of the SubToolsetVersion attribute, if any. This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.","nodes":[{"pos":[0,181],"content":"Gets the value of the SubToolsetVersion attribute, if any. This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.","nodes":[{"content":"Gets the value of the SubToolsetVersion attribute, if any. This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.","pos":[0,181],"nodes":[{"content":"Gets the value of the SubToolsetVersion attribute, if any.","pos":[0,58]},{"content":"This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.","pos":[59,181]}]}]}],"pos":[170690,170872],"yaml":true},{"content":"Returns the SubToolsetVersion attribute value. Returns an empty string if the attribute is not present.","nodes":[{"pos":[0,103],"content":"Returns the SubToolsetVersion attribute value. Returns an empty string if the attribute is not present.","nodes":[{"content":"Returns the SubToolsetVersion attribute value. Returns an empty string if the attribute is not present.","pos":[0,103],"nodes":[{"content":"Returns the SubToolsetVersion attribute value.","pos":[0,46]},{"content":"Returns an empty string if the attribute is not present.","pos":[47,103]}]}]}],"pos":[170993,171097],"yaml":true},{"content":"Gets a dictionary of all targets in this project, keyed by target name.","nodes":[{"pos":[0,71],"content":"Gets a dictionary of all targets in this project, keyed by target name.","nodes":[{"content":"Gets a dictionary of all targets in this project, keyed by target name.","pos":[0,71]}]}],"pos":[172021,172093],"yaml":true},{"content":"Returns a dictionary of all targets in this project, keyed by target name. Overridden targets are not included in this collection. This dictionary is read-only.","nodes":[{"pos":[0,160],"content":"Returns a dictionary of all targets in this project, keyed by target name. Overridden targets are not included in this collection. This dictionary is read-only.","nodes":[{"content":"Returns a dictionary of all targets in this project, keyed by target name. Overridden targets are not included in this collection. This dictionary is read-only.","pos":[0,160],"nodes":[{"content":"Returns a dictionary of all targets in this project, keyed by target name.","pos":[0,74]},{"content":"Overridden targets are not included in this collection.","pos":[75,130]},{"content":"This dictionary is read-only.","pos":[131,160]}]}]}],"pos":[172442,172603],"yaml":true},{"content":"Gets the tools version that this project was evaluated with, if any.","nodes":[{"pos":[0,68],"content":"Gets the tools version that this project was evaluated with, if any.","nodes":[{"content":"Gets the tools version that this project was evaluated with, if any.","pos":[0,68]}]}],"pos":[173617,173686],"yaml":true},{"content":"Set by the constructor. This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line. The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>. The tools version cannot be changed once the project has been created.","nodes":[{"pos":[0,381],"content":"Set by the constructor. This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line. The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>. The tools version cannot be changed once the project has been created.","nodes":[{"content":"Set by the constructor. This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line. The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>. The tools version cannot be changed once the project has been created.","pos":[0,381],"nodes":[{"content":"Set by the constructor.","pos":[0,23]},{"content":"This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.","pos":[24,195]},{"content":"The actual tools version on the Project tag can be obtained from <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.Project.Xml%2A&gt;</ph>.","pos":[196,310],"source":" The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>."},{"content":"The tools version cannot be changed once the project has been created.","pos":[311,381]}]}]}],"pos":[173697,174079],"yaml":true,"extradata":"MT"},{"content":"Gets the tools version that this project was evaluated with, if any.","nodes":[{"pos":[0,68],"content":"Gets the tools version that this project was evaluated with, if any.","nodes":[{"content":"Gets the tools version that this project was evaluated with, if any.","pos":[0,68]}]}],"pos":[174195,174264],"yaml":true},{"content":"Gets the root project associated with this project. Can never be null","nodes":[{"pos":[0,69],"content":"Gets the root project associated with this project. Can never be null","nodes":[{"content":"Gets the root project associated with this project. Can never be null","pos":[0,69],"nodes":[{"content":"Gets the root project associated with this project.","pos":[0,51]},{"content":"Can never be null","pos":[52,69]}]}]}],"pos":[175159,175229],"yaml":true},{"content":"There is no way to set this property. If you have a new project root, evaluate it into a new project.","nodes":[{"pos":[0,101],"content":"There is no way to set this property. If you have a new project root, evaluate it into a new project.","nodes":[{"content":"There is no way to set this property. If you have a new project root, evaluate it into a new project.","pos":[0,101],"nodes":[{"content":"There is no way to set this property.","pos":[0,37]},{"content":"If you have a new project root, evaluate it into a new project.","pos":[38,101]}]}]}],"pos":[175240,175342],"yaml":true,"extradata":"MT"},{"content":"Returns the root project associated with this project, which can never be null.","nodes":[{"pos":[0,79],"content":"Returns the root project associated with this project, which can never be null.","nodes":[{"content":"Returns the root project associated with this project, which can never be null.","pos":[0,79]}]}],"pos":[175586,175666],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Evaluation.Project\n  commentId: T:Microsoft.Build.Evaluation.Project\n  id: Project\n  children:\n  - Microsoft.Build.Evaluation.Project.#ctor\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.String)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)\n  - Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)\n  - Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  - Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)\n  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  - Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)\n  - Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata\n  - Microsoft.Build.Evaluation.Project.AllEvaluatedItems\n  - Microsoft.Build.Evaluation.Project.AllEvaluatedProperties\n  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  - Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  - Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  - Microsoft.Build.Evaluation.Project.Build(System.String)\n  - Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  - Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)\n  - Microsoft.Build.Evaluation.Project.Build\n  - Microsoft.Build.Evaluation.Project.Build(System.String[])\n  - Microsoft.Build.Evaluation.Project.ConditionedProperties\n  - Microsoft.Build.Evaluation.Project.CreateProjectInstance\n  - Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)\n  - Microsoft.Build.Evaluation.Project.DirectoryPath\n  - Microsoft.Build.Evaluation.Project.DisableMarkDirty\n  - Microsoft.Build.Evaluation.Project.EvaluationCounter\n  - Microsoft.Build.Evaluation.Project.ExpandString(System.String)\n  - Microsoft.Build.Evaluation.Project.FullPath\n  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)\n  - Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)\n  - Microsoft.Build.Evaluation.Project.GetItems(System.String)\n  - Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)\n  - Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)\n  - Microsoft.Build.Evaluation.Project.GetLogicalProject\n  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)\n  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)\n  - Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)\n  - Microsoft.Build.Evaluation.Project.GetProperty(System.String)\n  - Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)\n  - Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)\n  - Microsoft.Build.Evaluation.Project.GlobalProperties\n  - Microsoft.Build.Evaluation.Project.Imports\n  - Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates\n  - Microsoft.Build.Evaluation.Project.IsBuildEnabled\n  - Microsoft.Build.Evaluation.Project.IsDirty\n  - Microsoft.Build.Evaluation.Project.ItemDefinitions\n  - Microsoft.Build.Evaluation.Project.Items\n  - Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition\n  - Microsoft.Build.Evaluation.Project.ItemTypes\n  - Microsoft.Build.Evaluation.Project.MarkDirty\n  - Microsoft.Build.Evaluation.Project.ProjectCollection\n  - Microsoft.Build.Evaluation.Project.ProjectFileLocation\n  - Microsoft.Build.Evaluation.Project.Properties\n  - Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary\n  - Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)\n  - Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)\n  - Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})\n  - Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)\n  - Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)\n  - Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)\n  - Microsoft.Build.Evaluation.Project.Save(System.String)\n  - Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)\n  - Microsoft.Build.Evaluation.Project.Save\n  - Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)\n  - Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)\n  - Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)\n  - Microsoft.Build.Evaluation.Project.SkipEvaluation\n  - Microsoft.Build.Evaluation.Project.SubToolsetVersion\n  - Microsoft.Build.Evaluation.Project.Targets\n  - Microsoft.Build.Evaluation.Project.ToolsVersion\n  - Microsoft.Build.Evaluation.Project.Xml\n  langs:\n  - csharp\n  name: Project\n  nameWithType: Project\n  fullName: Microsoft.Build.Evaluation.Project\n  type: Class\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Represents a project with design time semantics. This class can load project files, edit items and properties and build projects.\n  syntax:\n    content: public class Project\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project()\n  nameWithType: Project.Project()\n  fullName: Project.Project()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs an empty project using the global project collection global properties and default tools version.\n  remarks: This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.\n  syntax:\n    content: public Project ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: subToolsetVersion\n      type: System.String\n      description: Sub Toolset version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.\n  remarks: \"The project is added to the given project collection.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.\"\n  syntax:\n    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: projectFile\n      type: System.String\n      description: The path to the source project file to be evaluated.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version. May be null.\n    - id: subToolsetVersion\n      type: System.String\n      description: The sub toolset version. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: xml\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The project root to use for evaluation.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: subToolsetVersion\n      type: System.String\n      description: Sub toolset version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader from which to read project source code.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.\n  remarks: \"The project is added to the given project collection.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.\"\n  syntax:\n    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: projectFile\n      type: System.String\n      description: The path to the source project file to be evaluated.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);\n    parameters:\n    - id: xml\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The project root to use for evaluation.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n    - id: loadSettings\n      type: Microsoft.Build.Evaluation.ProjectLoadSettings\n      description: The load settings to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.\n  remarks: \"This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);\n    parameters:\n    - id: xml\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The project root to use for evaluation.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(String, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(String, IDictionary<String,String>, String, ProjectCollection)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.\n  remarks: \"The project is added to the given project collection.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.\"\n  syntax:\n    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);\n    parameters:\n    - id: projectFile\n      type: System.String\n      description: The path to the source project file to be evaluated.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The global properties. May be null.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the project is added to. May not be null.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(String, IDictionary<String,String>, String)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String)\n  fullName: Project.Project(String, IDictionary<String,String>, String)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.\n  remarks: \"The project is added to the global project collection.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection. May throw IO-related exceptions.\"\n  syntax:\n    content: public Project (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);\n    parameters:\n    - id: projectFile\n      type: System.String\n      description: The path to the source project file to be evaluated.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(IDictionary<String,String>, String, ProjectCollection)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.\n  remarks: The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.\n  syntax:\n    content: public Project (System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);\n    parameters:\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: The tools version used to evaluate the project. May be null.\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection the new project will be added to.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectRootElement, IDictionary<String,String>, String)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.\n  remarks: \"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);\n    parameters:\n    - id: xml\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: The project root to use for evaluation.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)\n  id: '#ctor(System.Xml.XmlReader)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(XmlReader)\n  nameWithType: Project.Project(XmlReader)\n  fullName: Project.Project(XmlReader)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the global project collection global properties and default tools version.\n  remarks: \"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (System.Xml.XmlReader xmlReader);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(String)\n  nameWithType: Project.Project(String)\n  fullName: Project.Project(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.\n  remarks: \"The project is added to the global project collection.  \\n  \\n Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file. May throw IO-related exceptions.\"\n  syntax:\n    content: public Project (string projectFile);\n    parameters:\n    - id: projectFile\n      type: System.String\n      description: The source project file to be evaluated.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions:\n  - type: Microsoft.Build.Exceptions.InvalidProjectFileException\n    commentId: T:Microsoft.Build.Exceptions.InvalidProjectFileException\n    description: If the evaluation fails.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)\n  id: '#ctor(Microsoft.Build.Evaluation.ProjectCollection)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectCollection)\n  nameWithType: Project.Project(ProjectCollection)\n  fullName: Project.Project(ProjectCollection)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs an empty project using the given project collection global properties and default tools version.\n  remarks: This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.\n  syntax:\n    content: public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);\n    parameters:\n    - id: projectCollection\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: The project collection that the new project is added to.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)\n  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(ProjectRootElement)\n  nameWithType: Project.Project(ProjectRootElement)\n  fullName: Project.Project(ProjectRootElement)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.\n  remarks: \"This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (Microsoft.Build.Construction.ProjectRootElement xml);\n    parameters:\n    - id: xml\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: ProjectRootElement to use for evaluation.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  id: '#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Project(XmlReader, IDictionary<String,String>, String)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String)\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version.\n  remarks: \"This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails. Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.\"\n  syntax:\n    content: public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: Xml reader to read project source code from.\n    - id: globalProperties\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.\n    - id: toolsVersion\n      type: System.String\n      description: Tools version to evaluate with. May be null.\n  overload: Microsoft.Build.Evaluation.Project.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  commentId: M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n  nameWithType: Project.AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n  fullName: Project.AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds an item with the given metadata to the project.\n  remarks: \"The metadata may be null, which indicates no metadata.  \\n  \\n Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.\"\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type of the added item.\n    - id: unevaluatedInclude\n      type: System.String\n      description: Include attribute of the item to be added.\n    - id: metadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}\n      description: The metadata of the added item.\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns the added item.\n  overload: Microsoft.Build.Evaluation.Project.AddItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)\n  id: AddItem(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AddItem(String, String)\n  nameWithType: Project.AddItem(String, String)\n  fullName: Project.AddItem(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds an item with no metadata to the project.\n  remarks: \"Any metadata can be added later. Does not modify the project source if a wildcard expression already includes the new item.  \\n  \\n Evaluation takes place on a best-effort basis. Items that are defined in the project source following the new item may be used for evaluation. Only this item is evaluated. Other items that might depend on it are not affected.\"\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItem (string itemType, string unevaluatedInclude);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type of the added item.\n    - id: unevaluatedInclude\n      type: System.String\n      description: Include attribute of the item to be added.\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns the added item.\n  overload: Microsoft.Build.Evaluation.Project.AddItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  commentId: M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  id: AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n  nameWithType: Project.AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n  fullName: Project.AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds an item with metadata to the project. Metadata may be null, indicating no metadata. Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group. Makes no effort to locate the new item near similar items.\n  remarks: \"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.  \\n  \\n Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.  \\n  \\n Only this item is evaluated. Other items that might depend on it is not affected.  \\n  \\n This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\"\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type to be added.\n    - id: unevaluatedInclude\n      type: System.String\n      description: The unevaluated Include attribute to be added to the item.\n    - id: metadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}\n      description: The metadata to be added.\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns a list of the project items added.\n  overload: Microsoft.Build.Evaluation.Project.AddItemFast*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)\n  id: AddItemFast(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AddItemFast(String, String)\n  nameWithType: Project.AddItemFast(String, String)\n  fullName: Project.AddItemFast(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds an item with no metadata to the project.  Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.  Makes no effort to locate the new item near similar items.\n  remarks: \"Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.  \\n  \\n Evaluates on a best-effort basis: -expands with all items. Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.  \\n  \\n Only this item is evaluated. Other items that might depend on it are not affected.  \\n  \\n This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.\"\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem> AddItemFast (string itemType, string unevaluatedInclude);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type to be added.\n    - id: unevaluatedInclude\n      type: System.String\n      description: The unevaluated Include attribute to be added to the item.\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns a list of the project items added.\n  overload: Microsoft.Build.Evaluation.Project.AddItemFast*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata\n  commentId: P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata\n  id: AllEvaluatedItemDefinitionMetadata\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AllEvaluatedItemDefinitionMetadata\n  nameWithType: Project.AllEvaluatedItemDefinitionMetadata\n  fullName: Project.AllEvaluatedItemDefinitionMetadata\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all item definition metadata encountered during evaluation.\n  remarks: Item metadata is read during the second evaluation pass. Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> AllEvaluatedItemDefinitionMetadata { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}\n      description: Returns all item definition metadata encountered during evaluation. This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.\n  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems\n  commentId: P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems\n  id: AllEvaluatedItems\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AllEvaluatedItems\n  nameWithType: Project.AllEvaluatedItems\n  fullName: Project.AllEvaluatedItems\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.\n  remarks: \"Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.  \\n  \\n In some applications, this complete mutual ordering is significant, and such hosts can use this property.  \\n  \\n The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> AllEvaluatedItems { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.\n  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties\n  commentId: P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties\n  id: AllEvaluatedProperties\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: AllEvaluatedProperties\n  nameWithType: Project.AllEvaluatedProperties\n  fullName: Project.AllEvaluatedProperties\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all properties encountered during evaluation.\n  remarks: These properties are read during the first evaluation pass. Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> AllEvaluatedProperties { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}\n      description: Returns all properties encountered during evaluation. This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.\n  overload: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given targets and using the given loggers and remote loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);\n    parameters:\n    - id: targets\n      type: System.String[]\n      description: The targets to be built.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be used during the build.\n    - id: remoteLoggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n      description: The remote loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given target and using the given loggers and remote loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);\n    parameters:\n    - id: target\n      type: System.String\n      description: The target to be built.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be used during the build.\n    - id: remoteLoggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n      description: The remote loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String[], IEnumerable<ILogger>)\n  nameWithType: Project.Build(String[], IEnumerable<ILogger>)\n  fullName: Project.Build(String[], IEnumerable<ILogger>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given targets and using the given loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);\n    parameters:\n    - id: targets\n      type: System.String[]\n      description: The targets to be built.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, using the default targets and the given loggers and remote loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);\n    parameters:\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be used during the build.\n    - id: remoteLoggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n      description: The remote loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String, IEnumerable<ILogger>)\n  nameWithType: Project.Build(String, IEnumerable<ILogger>)\n  fullName: Project.Build(String, IEnumerable<ILogger>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given target and using the given loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);\n    parameters:\n    - id: target\n      type: System.String\n      description: The target to be built.\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: The loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String)\n  id: Build(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String)\n  nameWithType: Project.Build(String)\n  fullName: Project.Build(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given target.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string target);\n    parameters:\n    - id: target\n      type: System.String\n      description: The target to be built.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(IEnumerable<ILogger>)\n  nameWithType: Project.Build(IEnumerable<ILogger>)\n  fullName: Project.Build(IEnumerable<ILogger>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, using the default targets and the given loggers.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);\n    parameters:\n    - id: loggers\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n      description: An enumerator over all loggers to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)\n  id: Build(Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(ILogger)\n  nameWithType: Project.Build(ILogger)\n  fullName: Project.Build(ILogger)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, using the default targets and the given logger.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (Microsoft.Build.Framework.ILogger logger);\n    parameters:\n    - id: logger\n      type: Microsoft.Build.Framework.ILogger\n      description: The logger to be used during the build.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build\n  commentId: M:Microsoft.Build.Evaluation.Project.Build\n  id: Build\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build()\n  nameWithType: Project.Build()\n  fullName: Project.Build()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, using the default targets.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])\n  commentId: M:Microsoft.Build.Evaluation.Project.Build(System.String[])\n  id: Build(System.String[])\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Build(String[])\n  nameWithType: Project.Build(String[])\n  fullName: Project.Build(String[])\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Builds this project, building the given targets.\n  remarks: To set or get virtual items for build purposes, clone a project instance explicitly and build that. This method does not modify the project object.\n  syntax:\n    content: public bool Build (string[] targets);\n    parameters:\n    - id: targets\n      type: System.String[]\n      description: An array of targets to be built.\n    return:\n      type: System.Boolean\n      description: Returns true on success; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.Build*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties\n  commentId: P:Microsoft.Build.Evaluation.Project.ConditionedProperties\n  id: ConditionedProperties\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ConditionedProperties\n  nameWithType: Project.ConditionedProperties\n  fullName: Project.ConditionedProperties\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.\n  remarks: \"For example, if the following conditions existed on properties in a project: Condition=\\\"'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'\\\" Condition=\\\"'$(Configuration)' == 'Release'\\\" the table would be populated with { \\\"Configuration\\\", { \\\"Debug\\\", \\\"Release\\\" }} { \\\"Platform\\\", { \\\"x86\\\" }} This collection is used by Visual Studio to determine the configurations defined in the project\"\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.IDictionary<string,System.Collections.Generic.List<string>> ConditionedProperties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}\n      description: Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens. The collection is in canonical form. The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.\n  overload: Microsoft.Build.Evaluation.Project.ConditionedProperties*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance\n  commentId: M:Microsoft.Build.Evaluation.Project.CreateProjectInstance\n  id: CreateProjectInstance\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: CreateProjectInstance()\n  nameWithType: Project.CreateProjectInstance()\n  fullName: Project.CreateProjectInstance()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Creates a project instance based on this project, but completely disconnected from it.\n  remarks: Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.\n  syntax:\n    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();\n    parameters: []\n    return:\n      type: Microsoft.Build.Execution.ProjectInstance\n      description: Returns the project instance.\n  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)\n  commentId: M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)\n  id: CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: CreateProjectInstance(ProjectInstanceSettings)\n  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)\n  fullName: Project.CreateProjectInstance(ProjectInstanceSettings)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Creates a project instance based on this project, but completely disconnected from it.\n  remarks: Can be used to build independently. The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.\n  syntax:\n    content: public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);\n    parameters:\n    - id: settings\n      type: Microsoft.Build.Execution.ProjectInstanceSettings\n      description: Determines whether created project instance is immutable and whether it contains a look up table to improve performance.\n    return:\n      type: Microsoft.Build.Execution.ProjectInstance\n      description: Returns the project instance.\n  overload: Microsoft.Build.Evaluation.Project.CreateProjectInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.DirectoryPath\n  commentId: P:Microsoft.Build.Evaluation.Project.DirectoryPath\n  id: DirectoryPath\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: DirectoryPath\n  nameWithType: Project.DirectoryPath\n  fullName: Project.DirectoryPath\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the root directory for this project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public string DirectoryPath { get; }\n    return:\n      type: System.String\n      description: Returns the root directory for this project. The root directory is never null; in-memory projects use the current directory at the time of project load.\n  overload: Microsoft.Build.Evaluation.Project.DirectoryPath*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty\n  commentId: P:Microsoft.Build.Evaluation.Project.DisableMarkDirty\n  id: DisableMarkDirty\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: DisableMarkDirty\n  nameWithType: Project.DisableMarkDirty\n  fullName: Project.DisableMarkDirty\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a flag the determines whether <xref href=\"Microsoft.Build.Evaluation.Project.MarkDirty\"></xref> is temporarily disabled. This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.\n  syntax:\n    content: public bool DisableMarkDirty { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns a flag the determines whether `MarkDirty` is temporarily disabled.\n  overload: Microsoft.Build.Evaluation.Project.DisableMarkDirty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter\n  commentId: P:Microsoft.Build.Evaluation.Project.EvaluationCounter\n  id: EvaluationCounter\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: EvaluationCounter\n  nameWithType: Project.EvaluationCounter\n  fullName: Project.EvaluationCounter\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a number that is incremented every time that project is re-evaluated.\n  remarks: This value should be compared with previous values to see if the project has been re-evaluated. It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.\n  syntax:\n    content: public int EvaluationCounter { get; }\n    return:\n      type: System.Int32\n      description: Returns the incremented value.\n  overload: Microsoft.Build.Evaluation.Project.EvaluationCounter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)\n  id: ExpandString(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ExpandString(String)\n  nameWithType: Project.ExpandString(String)\n  fullName: Project.ExpandString(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Evaluates the given string by expanding items and properties. The string is evaluated as if it were found at the very end of the project file.\n  remarks: This method can be used when best-effort evaluation is sufficient.\n  syntax:\n    content: public string ExpandString (string unexpandedValue);\n    parameters:\n    - id: unexpandedValue\n      type: System.String\n      description: The string to be evaluated.\n    return:\n      type: System.String\n      description: Returns the evaluated string.\n  overload: Microsoft.Build.Evaluation.Project.ExpandString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.FullPath\n  commentId: P:Microsoft.Build.Evaluation.Project.FullPath\n  id: FullPath\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: FullPath\n  nameWithType: Project.FullPath\n  fullName: Project.FullPath\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets the full path to the project source file.\n  remarks: Setting this property on a project in a project collection renames the project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      [set: System.Diagnostics.DebuggerStepThrough]\n\n      public string FullPath { get; set; }\n    return:\n      type: System.String\n      description: Returns the full path to the project source file. Returns an empty string if the project was not loaded from disk.\n  overload: Microsoft.Build.Evaluation.Project.FullPath*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  - type: 'set: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)\n  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetEvaluatedItemIncludeEscaped(ProjectItem)\n  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)\n  fullName: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets evaluated, escaped value of the Include attribute of the provided items.\n  syntax:\n    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);\n    parameters:\n    - id: item\n      type: Microsoft.Build.Evaluation.ProjectItem\n      description: The item to be evaluated and escaped.\n    return:\n      type: System.String\n      description: Returns the evaluated, escaped value of the Include attribute of the provided items.\n  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)\n  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n  fullName: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the evaluated, escaped value of the Include attribute of the provided item definition.\n  syntax:\n    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);\n    parameters:\n    - id: item\n      type: Microsoft.Build.Evaluation.ProjectItemDefinition\n      description: The item definition to be evaluated and escaped.\n    return:\n      type: System.String\n      description: Returns the value of the Include attribute.\n  overload: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetItems(System.String)\n  id: GetItems(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetItems(String)\n  nameWithType: Project.GetItems(String)\n  fullName: Project.GetItems(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all the items in the project of the given item type. If there are none, returns an empty list. Use AddItem or RemoveItem to modify items in this project.\n  remarks: Use AddItem or RemoveItem to modify items in this project.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItems (string itemType);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type to be retrieved.\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns all the items in the project of the given item type. Returns an empty list if there are no items with the given item name.\n  overload: Microsoft.Build.Evaluation.Project.GetItems*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)\n  id: GetItemsByEvaluatedInclude(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetItemsByEvaluatedInclude(String)\n  nameWithType: Project.GetItemsByEvaluatedInclude(String)\n  fullName: Project.GetItemsByEvaluatedInclude(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all items that have the given evaluated Include attribute.\n  remarks: For example, this method might return all items that have the evaluated Include attribute \"component.cpp\". Typically zero or one items are returned. However, there may be multiple items with the same path and different item types, or even with the same item types.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsByEvaluatedInclude (string evaluatedInclude);\n    parameters:\n    - id: evaluatedInclude\n      type: System.String\n      description: The evaluated Include attribute.\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns all items that have the given evaluated Include attribute.\n  overload: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)\n  id: GetItemsIgnoringCondition(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetItemsIgnoringCondition(String)\n  nameWithType: Project.GetItemsIgnoringCondition(String)\n  fullName: Project.GetItemsIgnoringCondition(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: 'Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true. This is a read-only list: use AddItem or RemoveItem to modify items in this project.'\n  remarks: This is a read-only list. Use AddItem or RemoveItem to modify items in this project.\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> GetItemsIgnoringCondition (string itemType);\n    parameters:\n    - id: itemType\n      type: System.String\n      description: The item type to be retrieved.\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.\n  overload: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject\n  commentId: M:Microsoft.Build.Evaluation.Project.GetLogicalProject\n  id: GetLogicalProject\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetLogicalProject()\n  nameWithType: Project.GetLogicalProject()\n  fullName: Project.GetLogicalProject()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all the elements in the \"logical project\". The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.\n  remarks: The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> GetLogicalProject ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n      description: Returns an enumerator over all the elements in the \"logical project\".\n  overload: Microsoft.Build.Evaluation.Project.GetLogicalProject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)\n  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetMetadataValueEscaped(ProjectMetadata)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)\n  fullName: Project.GetMetadataValueEscaped(ProjectMetadata)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the escaped value of the provided metadatum.\n  syntax:\n    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);\n    parameters:\n    - id: metadatum\n      type: Microsoft.Build.Evaluation.ProjectMetadata\n      description: The metadatum to be escaped.\n    return:\n      type: System.String\n      description: Gets the escaped value of the provided metadatum.\n  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)\n  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetMetadataValueEscaped(ProjectItem, String)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectItem, String)\n  fullName: Project.GetMetadataValueEscaped(ProjectItem, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the escaped value of the metadatum with the provided name on the provided item.\n  syntax:\n    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);\n    parameters:\n    - id: item\n      type: Microsoft.Build.Evaluation.ProjectItem\n      description: The item whose metadata is to be escaped.\n    - id: name\n      type: System.String\n      description: The name of the metadata to be escaped.\n    return:\n      type: System.String\n      description: Gets the escaped value of the metadatum with the provided name on the provided item.\n  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)\n  id: GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetMetadataValueEscaped(ProjectItemDefinition, String)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition, String)\n  fullName: Project.GetMetadataValueEscaped(ProjectItemDefinition, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the escaped value of the metadatum with the provided name on the provided item definition.\n  syntax:\n    content: public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);\n    parameters:\n    - id: item\n      type: Microsoft.Build.Evaluation.ProjectItemDefinition\n      description: The item definition whose metadata is to be escaped.\n    - id: name\n      type: System.String\n      description: The name of the metadata to be escaped.\n    return:\n      type: System.String\n      description: Returns the escaped value of the metadatum with the provided name on the provided item definition.\n  overload: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)\n  id: GetProperty(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetProperty(String)\n  nameWithType: Project.GetProperty(String)\n  fullName: Project.GetProperty(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets any property in the project that has the specified name.\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to retrieve.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectProperty\n      description: Returns any property in the project that has the specified name. Returns null if no property of that name exists.\n  overload: Microsoft.Build.Evaluation.Project.GetProperty*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)\n  id: GetPropertyValue(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetPropertyValue(String)\n  nameWithType: Project.GetPropertyValue(String)\n  fullName: Project.GetPropertyValue(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the value of the given property in this project.\n  remarks: A property with a value of empty string and no property at all are not distinguished between by this method. To determine if a property is set at all in the project, use GetProperty(name).\n  syntax:\n    content: public string GetPropertyValue (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property whose value is retrieved.\n    return:\n      type: System.String\n      description: Returns the value of the given property in this project. Return an empty string if no property of that name exists. Escape sequences are converted before returning the string.\n  overload: Microsoft.Build.Evaluation.Project.GetPropertyValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)\n  commentId: M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)\n  id: GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GetPropertyValueEscaped(ProjectProperty)\n  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)\n  fullName: Project.GetPropertyValueEscaped(ProjectProperty)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get the escaped value of the provided property.\n  syntax:\n    content: public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);\n    parameters:\n    - id: property\n      type: Microsoft.Build.Evaluation.ProjectProperty\n      description: The property to be escaped.\n    return:\n      type: System.String\n      description: Returns the escaped value of the provided property.\n  overload: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.GlobalProperties\n  commentId: P:Microsoft.Build.Evaluation.Project.GlobalProperties\n  id: GlobalProperties\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: GlobalProperties\n  nameWithType: Project.GlobalProperties\n  fullName: Project.GlobalProperties\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a dictionary of the global properties used for the evaluation of this project.\n  remarks: \"This is the publicly exposed getter, that translates into a read-only dead IDictionary\\\\<string, string>.  \\n  \\n In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.\"\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Returns a dictionary of the global properties used for the evaluation of this project.\n  overload: Microsoft.Build.Evaluation.Project.GlobalProperties*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Imports\n  commentId: P:Microsoft.Build.Evaluation.Project.Imports\n  id: Imports\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Imports\n  nameWithType: Project.Imports\n  fullName: Project.Imports\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a list of all the files that contributed to the evaluation of this project.\n  remarks: The project root of this project is not included.\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> Imports { get; }\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}\n      description: \"Returns a list of all the files that contributed to the evaluation of this project.  \\n  \\n The name of each item is the Import element that caused the file to be imported. The value of each item is the project root of the imported project. Import elements whose Condition attribute evaluated to false are not included.\"\n  overload: Microsoft.Build.Evaluation.Project.Imports*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates\n  commentId: P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates\n  id: ImportsIncludingDuplicates\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ImportsIncludingDuplicates\n  nameWithType: Project.ImportsIncludingDuplicates\n  fullName: Project.ImportsIncludingDuplicates\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a list of duplicate imports if an import was imported multiple times. However, only the first import was used in evaluation.\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport> ImportsIncludingDuplicates { get; }\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}\n      description: Returns a list of duplicate imports.\n  overload: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled\n  commentId: P:Microsoft.Build.Evaluation.Project.IsBuildEnabled\n  id: IsBuildEnabled\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: IsBuildEnabled\n  nameWithType: Project.IsBuildEnabled\n  fullName: Project.IsBuildEnabled\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a property that selects whether the targets and tasks of this project can be built.\n  remarks: Can be used for security purposes. By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it. When IsBuildEnabled is false, the Build method on this project fails.\n  syntax:\n    content: public bool IsBuildEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns true if the targets and tasks of this project can be built; false otherwise.\n  overload: Microsoft.Build.Evaluation.Project.IsBuildEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.IsDirty\n  commentId: P:Microsoft.Build.Evaluation.Project.IsDirty\n  id: IsDirty\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: IsDirty\n  nameWithType: Project.IsDirty\n  fullName: Project.IsDirty\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a property that indicates whether this project has been modified so that it must be reevaluated.\n  remarks: A project is modified and must be reevaluated when the underlying project source code, including changes to imported files. A project is also modified must be reevaluated if the project tool set changes.\n  syntax:\n    content: public bool IsDirty { get; }\n    return:\n      type: System.Boolean\n      description: Returns a property that indicates whether this project has been modified so that it must be reevaluated.\n  overload: Microsoft.Build.Evaluation.Project.IsDirty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions\n  commentId: P:Microsoft.Build.Evaluation.Project.ItemDefinitions\n  id: ItemDefinitions\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ItemDefinitions\n  nameWithType: Project.ItemDefinitions\n  fullName: Project.ItemDefinitions\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a dictionary of item definitions in this project, keyed by item type.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.IDictionary<string,Microsoft.Build.Evaluation.ProjectItemDefinition> ItemDefinitions { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}\n      description: Returns a dictionary of item definitions in this project, keyed by item type.\n  overload: Microsoft.Build.Evaluation.Project.ItemDefinitions*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Items\n  commentId: P:Microsoft.Build.Evaluation.Project.Items\n  id: Items\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Items\n  nameWithType: Project.Items\n  fullName: Project.Items\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all items in this project, ordered within groups of item types.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> Items { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns an enumerator over all items in this project, ordered within groups of item types.\n  overload: Microsoft.Build.Evaluation.Project.Items*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition\n  commentId: P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition\n  id: ItemsIgnoringCondition\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ItemsIgnoringCondition\n  nameWithType: Project.ItemsIgnoringCondition\n  fullName: Project.ItemsIgnoringCondition\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all items in this project, ordered within groups of item types.\n  remarks: Can be used to display all items, even if they are not part of the build in the current configuration.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem> ItemsIgnoringCondition { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n      description: Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.\n  overload: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ItemTypes\n  commentId: P:Microsoft.Build.Evaluation.Project.ItemTypes\n  id: ItemTypes\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ItemTypes\n  nameWithType: Project.ItemTypes\n  fullName: Project.ItemTypes\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all item types in this project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.ICollection<string> ItemTypes { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: Returns an enumerator over all item types in this project. This is an ordered collection.\n  overload: Microsoft.Build.Evaluation.Project.ItemTypes*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.MarkDirty\n  commentId: M:Microsoft.Build.Evaluation.Project.MarkDirty\n  id: MarkDirty\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: MarkDirty()\n  nameWithType: Project.MarkDirty()\n  fullName: Project.MarkDirty()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Marks this project as modified.\n  remarks: \"It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.  \\n  \\n Sometimes, however, this method must be called. For example, a project may have an Import element whose condition depends on a file that exists on a disk. If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.  \\n  \\n The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.\"\n  syntax:\n    content: public void MarkDirty ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.Project.MarkDirty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ProjectCollection\n  commentId: P:Microsoft.Build.Evaluation.Project.ProjectCollection\n  id: ProjectCollection\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ProjectCollection\n  nameWithType: Project.ProjectCollection\n  fullName: Project.ProjectCollection\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the project collection which contains this project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }\n    return:\n      type: Microsoft.Build.Evaluation.ProjectCollection\n      description: Returns the project collection which contains this project, which is never null.\n  overload: Microsoft.Build.Evaluation.Project.ProjectCollection*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation\n  commentId: P:Microsoft.Build.Evaluation.Project.ProjectFileLocation\n  id: ProjectFileLocation\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ProjectFileLocation\n  nameWithType: Project.ProjectFileLocation\n  fullName: Project.ProjectFileLocation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: The location of the originating file itself, not any specific content within it. If the file has not been given a name, this is an empty location. This is a legitimate case of having no location.\n  syntax:\n    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }\n    return:\n      type: Microsoft.Build.Construction.ElementLocation\n      description: Returns the originating file location or an empty location.\n  overload: Microsoft.Build.Evaluation.Project.ProjectFileLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Properties\n  commentId: P:Microsoft.Build.Evaluation.Project.Properties\n  id: Properties\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: Project.Properties\n  fullName: Project.Properties\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all properties in this project. This is an unordered collection.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty> Properties { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}\n      description: Returns an enumerator over all properties in this project. Since properties are evaluated as they appear, this is an unordered collection.\n  overload: Microsoft.Build.Evaluation.Project.Properties*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary\n  commentId: M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary\n  id: ReevaluateIfNecessary\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ReevaluateIfNecessary()\n  nameWithType: Project.ReevaluateIfNecessary()\n  fullName: Project.ReevaluateIfNecessary()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Reevaluates the project to incorporate any changes.\n  remarks: \"The project is reevaluated only if it is marked as modified. Reevaluation incorporates all changes made to the project source code.  \\n  \\n Throws InvalidProjectFileException if the evaluation fails.\"\n  syntax:\n    content: public void ReevaluateIfNecessary ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)\n  id: RemoveGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: RemoveGlobalProperty(String)\n  nameWithType: Project.RemoveGlobalProperty(String)\n  fullName: Project.RemoveGlobalProperty(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes a global property and marks the project as modified.\n  syntax:\n    content: public bool RemoveGlobalProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the global property to be removed.\n    return:\n      type: System.Boolean\n      description: Returns true if the value of the global property was set.\n  overload: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)\n  commentId: M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)\n  id: RemoveItem(Microsoft.Build.Evaluation.ProjectItem)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: RemoveItem(ProjectItem)\n  nameWithType: Project.RemoveItem(ProjectItem)\n  fullName: Project.RemoveItem(ProjectItem)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes an item from the project. The item to be removed must be present in the project, and must not originate from an imported file.\n  remarks: \"If the item group containing the item becomes empty, it is also removed.  \\n  \\n If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.  \\n  \\n The project is updated, but no further evaluation occurs until reevaluation. For example, if an item of type \\\"i\\\" is removed, \\\"j\\\" which is evaluated from \\\"@(i)\\\" is not modified until reevaluation.\"\n  syntax:\n    content: public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);\n    parameters:\n    - id: item\n      type: Microsoft.Build.Evaluation.ProjectItem\n      description: The item to be removed.\n    return:\n      type: System.Boolean\n      description: Returns true if the item is present in this evaluated project; otherwise false. Normally this method returns true, since if the requested item is not present, the method throws an exception. If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.\n  overload: Microsoft.Build.Evaluation.Project.RemoveItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})\n  commentId: M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})\n  id: RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: RemoveItems(IEnumerable<ProjectItem>)\n  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)\n  fullName: Project.RemoveItems(IEnumerable<ProjectItem>)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes all the given items from the project, unless they originate from an imported project.\n  remarks: If an item originates from an imported project, it is simply skipped.\n  syntax:\n    content: public void RemoveItems (System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem> items);\n    parameters:\n    - id: items\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}\n      description: The items to be removed.\n  overload: Microsoft.Build.Evaluation.Project.RemoveItems*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)\n  commentId: M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)\n  id: RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: RemoveProperty(ProjectProperty)\n  nameWithType: Project.RemoveProperty(ProjectProperty)\n  fullName: Project.RemoveProperty(ProjectProperty)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes an property from the project. The property to be removed must be present in the project, and must not originate from an imported file.\n  remarks: \"If the property group containing the property becomes empty, it is also removed.  \\n  \\n The project is updated, but no further evaluation occurs until reevaluation. For example, if \\\"p\\\" is removed, \\\"q\\\" which is evaluated from \\\"$(p)\\\" is not modified until reevaluation.\"\n  syntax:\n    content: public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);\n    parameters:\n    - id: property\n      type: Microsoft.Build.Evaluation.ProjectProperty\n      description: The property to remove.\n    return:\n      type: System.Boolean\n      description: Returns true if the property is present in this evaluated project; otherwise false.\n  overload: Microsoft.Build.Evaluation.Project.RemoveProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)\n  commentId: M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)\n  id: Save(System.String,System.Text.Encoding)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Save(String, Encoding)\n  nameWithType: Project.Save(String, Encoding)\n  fullName: Project.Save(String, Encoding)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.\n  syntax:\n    content: public void Save (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the project source code.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding used to save the project.\n  overload: Microsoft.Build.Evaluation.Project.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)\n  commentId: M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)\n  id: Save(System.Text.Encoding)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Save(Encoding)\n  nameWithType: Project.Save(Encoding)\n  fullName: Project.Save(Encoding)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves the project to the file system, if modified, using the given character encoding.\n  syntax:\n    content: public void Save (System.Text.Encoding encoding);\n    parameters:\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding used to save the project.\n  overload: Microsoft.Build.Evaluation.Project.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Save(System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.Save(System.String)\n  id: Save(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Save(String)\n  nameWithType: Project.Save(String)\n  fullName: Project.Save(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.\n  syntax:\n    content: public void Save (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the project source code.\n  overload: Microsoft.Build.Evaluation.Project.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)\n  commentId: M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)\n  id: Save(System.IO.TextWriter)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Save(TextWriter)\n  nameWithType: Project.Save(TextWriter)\n  fullName: Project.Save(TextWriter)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves the project to the provided text writer, whether or not the project has been modified. Uses the character encoding of the text writer and marks the project as unmodified.\n  syntax:\n    content: public void Save (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The text writer to save the project to.\n  overload: Microsoft.Build.Evaluation.Project.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Save\n  commentId: M:Microsoft.Build.Evaluation.Project.Save\n  id: Save\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Save()\n  nameWithType: Project.Save()\n  fullName: Project.Save()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves the project to the file system, if modified, using the default character encoding.\n  syntax:\n    content: public void Save ();\n    parameters: []\n  overload: Microsoft.Build.Evaluation.Project.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)\n  commentId: M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)\n  id: SaveLogicalProject(System.IO.TextWriter)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: SaveLogicalProject(TextWriter)\n  nameWithType: Project.SaveLogicalProject(TextWriter)\n  fullName: Project.SaveLogicalProject(TextWriter)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Saves a \"logical\" or \"preprocessed\" project file, that includes all the imported files as if they formed a single file.\n  syntax:\n    content: public void SaveLogicalProject (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The writer that saves the project file.\n  overload: Microsoft.Build.Evaluation.Project.SaveLogicalProject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)\n  id: SetGlobalProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: SetGlobalProperty(String, String)\n  nameWithType: Project.SetGlobalProperty(String, String)\n  fullName: Project.SetGlobalProperty(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Sets a global property after the project has been evaluated. If the value changes, the project is marked to require reevaluation.\n  syntax:\n    content: public bool SetGlobalProperty (string name, string escapedValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the global property to set.\n    - id: escapedValue\n      type: System.String\n      description: The new value of the global property.\n    return:\n      type: System.Boolean\n      description: Returns `true` if the value changes, otherwise returns `false`.\n  overload: Microsoft.Build.Evaluation.Project.SetGlobalProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)\n  commentId: M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)\n  id: SetProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: SetProperty(String, String)\n  nameWithType: Project.SetProperty(String, String)\n  fullName: Project.SetProperty(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Sets or adds a property with the given name and value to the project. Overwrites the value of a property with the same name if it did not originate in an imported file.\n  remarks: \"If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.  \\n  \\n Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.  \\n  \\n Evaluation takes place on a best-effort basis. Properties that are defined in the project source following the new property may be used for evaluation. Only this property is evaluated. Other properties that might depend on it are not affected.\"\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to set.\n    - id: unevaluatedValue\n      type: System.String\n      description: The new unevaluated value of the property.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectProperty\n      description: Returns the property.\n  overload: Microsoft.Build.Evaluation.Project.SetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation\n  commentId: P:Microsoft.Build.Evaluation.Project.SkipEvaluation\n  id: SkipEvaluation\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: SkipEvaluation\n  nameWithType: Project.SkipEvaluation\n  fullName: Project.SkipEvaluation\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled. This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.\n  syntax:\n    content: public bool SkipEvaluation { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.\n  overload: Microsoft.Build.Evaluation.Project.SkipEvaluation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion\n  commentId: P:Microsoft.Build.Evaluation.Project.SubToolsetVersion\n  id: SubToolsetVersion\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: SubToolsetVersion\n  nameWithType: Project.SubToolsetVersion\n  fullName: Project.SubToolsetVersion\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the value of the SubToolsetVersion attribute, if any. This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.\n  syntax:\n    content: public string SubToolsetVersion { get; }\n    return:\n      type: System.String\n      description: Returns the SubToolsetVersion attribute value. Returns an empty string if the attribute is not present.\n  overload: Microsoft.Build.Evaluation.Project.SubToolsetVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Targets\n  commentId: P:Microsoft.Build.Evaluation.Project.Targets\n  id: Targets\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Targets\n  nameWithType: Project.Targets\n  fullName: Project.Targets\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets a dictionary of all targets in this project, keyed by target name.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}\n      description: Returns a dictionary of all targets in this project, keyed by target name. Overridden targets are not included in this collection. This dictionary is read-only.\n  overload: Microsoft.Build.Evaluation.Project.Targets*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.ToolsVersion\n  commentId: P:Microsoft.Build.Evaluation.Project.ToolsVersion\n  id: ToolsVersion\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: ToolsVersion\n  nameWithType: Project.ToolsVersion\n  fullName: Project.ToolsVersion\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the tools version that this project was evaluated with, if any.\n  remarks: Set by the constructor. This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line. The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>. The tools version cannot be changed once the project has been created.\n  syntax:\n    content: public string ToolsVersion { get; }\n    return:\n      type: System.String\n      description: Gets the tools version that this project was evaluated with, if any.\n  overload: Microsoft.Build.Evaluation.Project.ToolsVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.Project.Xml\n  commentId: P:Microsoft.Build.Evaluation.Project.Xml\n  id: Xml\n  parent: Microsoft.Build.Evaluation.Project\n  langs:\n  - csharp\n  name: Xml\n  nameWithType: Project.Xml\n  fullName: Project.Xml\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the root project associated with this project. Can never be null\n  remarks: There is no way to set this property. If you have a new project root, evaluate it into a new project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public Microsoft.Build.Construction.ProjectRootElement Xml { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectRootElement\n      description: Returns the root project associated with this project, which can never be null.\n  overload: Microsoft.Build.Evaluation.Project.Xml*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n  ms.author: susanno\n  manager: douge\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.Build.Exceptions.InvalidProjectFileException\n  parent: Microsoft.Build.Exceptions\n  isExternal: false\n  name: InvalidProjectFileException\n  nameWithType: InvalidProjectFileException\n  fullName: Microsoft.Build.Exceptions.InvalidProjectFileException\n- uid: Microsoft.Build.Evaluation.Project.#ctor\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project()\n  nameWithType: Project.Project()\n  fullName: Project.Project()\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectCollection\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectCollection\n  nameWithType: ProjectCollection\n  fullName: Microsoft.Build.Evaluation.ProjectCollection\n- uid: Microsoft.Build.Evaluation.ProjectLoadSettings\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectLoadSettings\n  nameWithType: ProjectLoadSettings\n  fullName: Microsoft.Build.Evaluation.ProjectLoadSettings\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(String, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, String, ProjectCollection, ProjectLoadSettings)\n- uid: Microsoft.Build.Construction.ProjectRootElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectRootElement\n  nameWithType: ProjectRootElement\n  fullName: Microsoft.Build.Construction.ProjectRootElement\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(String, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection, ProjectLoadSettings)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String, ProjectCollection)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String, ProjectCollection)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(String, IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(String, IDictionary<String,String>, String, ProjectCollection)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(String, IDictionary<String,String>, String)\n  nameWithType: Project.Project(String, IDictionary<String,String>, String)\n  fullName: Project.Project(String, IDictionary<String,String>, String)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(IDictionary<String,String>, String, ProjectCollection)\n  nameWithType: Project.Project(IDictionary<String,String>, String, ProjectCollection)\n  fullName: Project.Project(IDictionary<String,String>, String, ProjectCollection)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectRootElement, IDictionary<String,String>, String)\n  nameWithType: Project.Project(ProjectRootElement, IDictionary<String,String>, String)\n  fullName: Project.Project(ProjectRootElement, IDictionary<String,String>, String)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(XmlReader)\n  nameWithType: Project.Project(XmlReader)\n  fullName: Project.Project(XmlReader)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(String)\n  nameWithType: Project.Project(String)\n  fullName: Project.Project(String)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectCollection)\n  nameWithType: Project.Project(ProjectCollection)\n  fullName: Project.Project(ProjectCollection)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(ProjectRootElement)\n  nameWithType: Project.Project(ProjectRootElement)\n  fullName: Project.Project(ProjectRootElement)\n- uid: Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project(XmlReader, IDictionary<String,String>, String)\n  nameWithType: Project.Project(XmlReader, IDictionary<String,String>, String)\n  fullName: Project.Project(XmlReader, IDictionary<String,String>, String)\n- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n  nameWithType: Project.AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n  fullName: Project.AddItem(String, String, IEnumerable<KeyValuePair<String,String>>)\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: Microsoft.Build.Evaluation.ProjectItem\n  name: ProjectItem\n  nameWithType: ProjectItem\n  fullName: Microsoft.Build.Evaluation.ProjectItem\n- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ProjectItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<ProjectItem>\n  nameWithType: IList<ProjectItem>\n  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ProjectItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectItem\n    name: ProjectItem\n    nameWithType: ProjectItem\n    fullName: Microsoft.Build.Evaluation.ProjectItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,String>>\n  nameWithType: IEnumerable<KeyValuePair<String,String>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItem(String, String)\n  nameWithType: Project.AddItem(String, String)\n  fullName: Project.AddItem(String, String)\n- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n  nameWithType: Project.AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n  fullName: Project.AddItemFast(String, String, IEnumerable<KeyValuePair<String,String>>)\n- uid: Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItemFast(String, String)\n  nameWithType: Project.AddItemFast(String, String)\n  fullName: Project.AddItemFast(String, String)\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedItemDefinitionMetadata\n  nameWithType: Project.AllEvaluatedItemDefinitionMetadata\n  fullName: Project.AllEvaluatedItemDefinitionMetadata\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: Microsoft.Build.Evaluation.ProjectMetadata\n  name: ProjectMetadata\n  nameWithType: ProjectMetadata\n  fullName: Microsoft.Build.Evaluation.ProjectMetadata\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectMetadata>\n  nameWithType: ICollection<ProjectMetadata>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectMetadata\n    name: ProjectMetadata\n    nameWithType: ProjectMetadata\n    fullName: Microsoft.Build.Evaluation.ProjectMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedItems\n  nameWithType: Project.AllEvaluatedItems\n  fullName: Project.AllEvaluatedItems\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectItem>\n  nameWithType: ICollection<ProjectItem>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectItem\n    name: ProjectItem\n    nameWithType: ProjectItem\n    fullName: Microsoft.Build.Evaluation.ProjectItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedProperties\n  nameWithType: Project.AllEvaluatedProperties\n  fullName: Project.AllEvaluatedProperties\n- uid: Microsoft.Build.Evaluation.ProjectProperty\n  name: ProjectProperty\n  nameWithType: ProjectProperty\n  fullName: Microsoft.Build.Evaluation.ProjectProperty\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectProperty}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectProperty>\n  nameWithType: ICollection<ProjectProperty>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectProperty>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectProperty\n    name: ProjectProperty\n    nameWithType: ProjectProperty\n    fullName: Microsoft.Build.Evaluation.ProjectProperty\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(String[], IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Framework.ILogger\n  name: ILogger\n  nameWithType: ILogger\n  fullName: Microsoft.Build.Framework.ILogger\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ILogger>\n  nameWithType: IEnumerable<ILogger>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Framework.ILogger\n    name: ILogger\n    nameWithType: ILogger\n    fullName: Microsoft.Build.Framework.ILogger\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Logging.ForwardingLoggerRecord\n  name: ForwardingLoggerRecord\n  nameWithType: ForwardingLoggerRecord\n  fullName: Microsoft.Build.Logging.ForwardingLoggerRecord\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ForwardingLoggerRecord>\n  nameWithType: IEnumerable<ForwardingLoggerRecord>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord\n    name: ForwardingLoggerRecord\n    nameWithType: ForwardingLoggerRecord\n    fullName: Microsoft.Build.Logging.ForwardingLoggerRecord\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(String, IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String[], IEnumerable<ILogger>)\n  nameWithType: Project.Build(String[], IEnumerable<ILogger>)\n  fullName: Project.Build(String[], IEnumerable<ILogger>)\n- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  nameWithType: Project.Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n  fullName: Project.Build(IEnumerable<ILogger>, IEnumerable<ForwardingLoggerRecord>)\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String, IEnumerable<ILogger>)\n  nameWithType: Project.Build(String, IEnumerable<ILogger>)\n  fullName: Project.Build(String, IEnumerable<ILogger>)\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String)\n  nameWithType: Project.Build(String)\n  fullName: Project.Build(String)\n- uid: Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(IEnumerable<ILogger>)\n  nameWithType: Project.Build(IEnumerable<ILogger>)\n  fullName: Project.Build(IEnumerable<ILogger>)\n- uid: Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(ILogger)\n  nameWithType: Project.Build(ILogger)\n  fullName: Project.Build(ILogger)\n- uid: Microsoft.Build.Evaluation.Project.Build\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build()\n  nameWithType: Project.Build()\n  fullName: Project.Build()\n- uid: Microsoft.Build.Evaluation.Project.Build(System.String[])\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build(String[])\n  nameWithType: Project.Build(String[])\n  fullName: Project.Build(String[])\n- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ConditionedProperties\n  nameWithType: Project.ConditionedProperties\n  fullName: Project.ConditionedProperties\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,List<String>>\n  nameWithType: IDictionary<String,List<String>>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.List<System.String>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: CreateProjectInstance()\n  nameWithType: Project.CreateProjectInstance()\n  fullName: Project.CreateProjectInstance()\n- uid: Microsoft.Build.Execution.ProjectInstance\n  parent: Microsoft.Build.Execution\n  isExternal: false\n  name: ProjectInstance\n  nameWithType: ProjectInstance\n  fullName: Microsoft.Build.Execution.ProjectInstance\n- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: CreateProjectInstance(ProjectInstanceSettings)\n  nameWithType: Project.CreateProjectInstance(ProjectInstanceSettings)\n  fullName: Project.CreateProjectInstance(ProjectInstanceSettings)\n- uid: Microsoft.Build.Execution.ProjectInstanceSettings\n  parent: Microsoft.Build.Execution\n  isExternal: false\n  name: ProjectInstanceSettings\n  nameWithType: ProjectInstanceSettings\n  fullName: Microsoft.Build.Execution.ProjectInstanceSettings\n- uid: Microsoft.Build.Evaluation.Project.DirectoryPath\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: DirectoryPath\n  nameWithType: Project.DirectoryPath\n  fullName: Project.DirectoryPath\n- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: DisableMarkDirty\n  nameWithType: Project.DisableMarkDirty\n  fullName: Project.DisableMarkDirty\n- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: EvaluationCounter\n  nameWithType: Project.EvaluationCounter\n  fullName: Project.EvaluationCounter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Evaluation.Project.ExpandString(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ExpandString(String)\n  nameWithType: Project.ExpandString(String)\n  fullName: Project.ExpandString(String)\n- uid: Microsoft.Build.Evaluation.Project.FullPath\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: FullPath\n  nameWithType: Project.FullPath\n  fullName: Project.FullPath\n- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetEvaluatedItemIncludeEscaped(ProjectItem)\n  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)\n  fullName: Project.GetEvaluatedItemIncludeEscaped(ProjectItem)\n- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n  nameWithType: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n  fullName: Project.GetEvaluatedItemIncludeEscaped(ProjectItemDefinition)\n- uid: Microsoft.Build.Evaluation.ProjectItemDefinition\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: ProjectItemDefinition\n  nameWithType: ProjectItemDefinition\n  fullName: Microsoft.Build.Evaluation.ProjectItemDefinition\n- uid: Microsoft.Build.Evaluation.Project.GetItems(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItems(String)\n  nameWithType: Project.GetItems(String)\n  fullName: Project.GetItems(String)\n- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItemsByEvaluatedInclude(String)\n  nameWithType: Project.GetItemsByEvaluatedInclude(String)\n  fullName: Project.GetItemsByEvaluatedInclude(String)\n- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItemsIgnoringCondition(String)\n  nameWithType: Project.GetItemsIgnoringCondition(String)\n  fullName: Project.GetItemsIgnoringCondition(String)\n- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetLogicalProject()\n  nameWithType: Project.GetLogicalProject()\n  fullName: Project.GetLogicalProject()\n- uid: Microsoft.Build.Construction.ProjectElement\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ProjectElement>\n  nameWithType: IEnumerable<ProjectElement>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Construction.ProjectElement\n    name: ProjectElement\n    nameWithType: ProjectElement\n    fullName: Microsoft.Build.Construction.ProjectElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetMetadataValueEscaped(ProjectMetadata)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectMetadata)\n  fullName: Project.GetMetadataValueEscaped(ProjectMetadata)\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetMetadataValueEscaped(ProjectItem, String)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectItem, String)\n  fullName: Project.GetMetadataValueEscaped(ProjectItem, String)\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetMetadataValueEscaped(ProjectItemDefinition, String)\n  nameWithType: Project.GetMetadataValueEscaped(ProjectItemDefinition, String)\n  fullName: Project.GetMetadataValueEscaped(ProjectItemDefinition, String)\n- uid: Microsoft.Build.Evaluation.Project.GetProperty(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetProperty(String)\n  nameWithType: Project.GetProperty(String)\n  fullName: Project.GetProperty(String)\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetPropertyValue(String)\n  nameWithType: Project.GetPropertyValue(String)\n  fullName: Project.GetPropertyValue(String)\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetPropertyValueEscaped(ProjectProperty)\n  nameWithType: Project.GetPropertyValueEscaped(ProjectProperty)\n  fullName: Project.GetPropertyValueEscaped(ProjectProperty)\n- uid: Microsoft.Build.Evaluation.Project.GlobalProperties\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GlobalProperties\n  nameWithType: Project.GlobalProperties\n  fullName: Project.GlobalProperties\n- uid: Microsoft.Build.Evaluation.Project.Imports\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Imports\n  nameWithType: Project.Imports\n  fullName: Project.Imports\n- uid: Microsoft.Build.Evaluation.ResolvedImport\n  name: ResolvedImport\n  nameWithType: ResolvedImport\n  fullName: Microsoft.Build.Evaluation.ResolvedImport\n- uid: System.Collections.Generic.IList{Microsoft.Build.Evaluation.ResolvedImport}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<ResolvedImport>\n  nameWithType: IList<ResolvedImport>\n  fullName: System.Collections.Generic.IList<Microsoft.Build.Evaluation.ResolvedImport>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ResolvedImport\n    name: ResolvedImport\n    nameWithType: ResolvedImport\n    fullName: Microsoft.Build.Evaluation.ResolvedImport\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ImportsIncludingDuplicates\n  nameWithType: Project.ImportsIncludingDuplicates\n  fullName: Project.ImportsIncludingDuplicates\n- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: IsBuildEnabled\n  nameWithType: Project.IsBuildEnabled\n  fullName: Project.IsBuildEnabled\n- uid: Microsoft.Build.Evaluation.Project.IsDirty\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: IsDirty\n  nameWithType: Project.IsDirty\n  fullName: Project.IsDirty\n- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemDefinitions\n  nameWithType: Project.ItemDefinitions\n  fullName: Project.ItemDefinitions\n- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.ProjectItemDefinition}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,ProjectItemDefinition>\n  nameWithType: IDictionary<String,ProjectItemDefinition>\n  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Evaluation.ProjectItemDefinition>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: Microsoft.Build.Evaluation.ProjectItemDefinition\n    name: ProjectItemDefinition\n    nameWithType: ProjectItemDefinition\n    fullName: Microsoft.Build.Evaluation.ProjectItemDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.Items\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Items\n  nameWithType: Project.Items\n  fullName: Project.Items\n- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemsIgnoringCondition\n  nameWithType: Project.ItemsIgnoringCondition\n  fullName: Project.ItemsIgnoringCondition\n- uid: Microsoft.Build.Evaluation.Project.ItemTypes\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemTypes\n  nameWithType: Project.ItemTypes\n  fullName: Project.ItemTypes\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.MarkDirty\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: MarkDirty()\n  nameWithType: Project.MarkDirty()\n  fullName: Project.MarkDirty()\n- uid: Microsoft.Build.Evaluation.Project.ProjectCollection\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ProjectCollection\n  nameWithType: Project.ProjectCollection\n  fullName: Project.ProjectCollection\n- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ProjectFileLocation\n  nameWithType: Project.ProjectFileLocation\n  fullName: Project.ProjectFileLocation\n- uid: Microsoft.Build.Construction.ElementLocation\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ElementLocation\n  nameWithType: ElementLocation\n  fullName: Microsoft.Build.Construction.ElementLocation\n- uid: Microsoft.Build.Evaluation.Project.Properties\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Properties\n  nameWithType: Project.Properties\n  fullName: Project.Properties\n- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ReevaluateIfNecessary()\n  nameWithType: Project.ReevaluateIfNecessary()\n  fullName: Project.ReevaluateIfNecessary()\n- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveGlobalProperty(String)\n  nameWithType: Project.RemoveGlobalProperty(String)\n  fullName: Project.RemoveGlobalProperty(String)\n- uid: Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveItem(ProjectItem)\n  nameWithType: Project.RemoveItem(ProjectItem)\n  fullName: Project.RemoveItem(ProjectItem)\n- uid: Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveItems(IEnumerable<ProjectItem>)\n  nameWithType: Project.RemoveItems(IEnumerable<ProjectItem>)\n  fullName: Project.RemoveItems(IEnumerable<ProjectItem>)\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ProjectItem>\n  nameWithType: IEnumerable<ProjectItem>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectItem\n    name: ProjectItem\n    nameWithType: ProjectItem\n    fullName: Microsoft.Build.Evaluation.ProjectItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveProperty(ProjectProperty)\n  nameWithType: Project.RemoveProperty(ProjectProperty)\n  fullName: Project.RemoveProperty(ProjectProperty)\n- uid: Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save(String, Encoding)\n  nameWithType: Project.Save(String, Encoding)\n  fullName: Project.Save(String, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save(Encoding)\n  nameWithType: Project.Save(Encoding)\n  fullName: Project.Save(Encoding)\n- uid: Microsoft.Build.Evaluation.Project.Save(System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save(String)\n  nameWithType: Project.Save(String)\n  fullName: Project.Save(String)\n- uid: Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save(TextWriter)\n  nameWithType: Project.Save(TextWriter)\n  fullName: Project.Save(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: Microsoft.Build.Evaluation.Project.Save\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save()\n  nameWithType: Project.Save()\n  fullName: Project.Save()\n- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SaveLogicalProject(TextWriter)\n  nameWithType: Project.SaveLogicalProject(TextWriter)\n  fullName: Project.SaveLogicalProject(TextWriter)\n- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SetGlobalProperty(String, String)\n  nameWithType: Project.SetGlobalProperty(String, String)\n  fullName: Project.SetGlobalProperty(String, String)\n- uid: Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SetProperty(String, String)\n  nameWithType: Project.SetProperty(String, String)\n  fullName: Project.SetProperty(String, String)\n- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SkipEvaluation\n  nameWithType: Project.SkipEvaluation\n  fullName: Project.SkipEvaluation\n- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SubToolsetVersion\n  nameWithType: Project.SubToolsetVersion\n  fullName: Project.SubToolsetVersion\n- uid: Microsoft.Build.Evaluation.Project.Targets\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Targets\n  nameWithType: Project.Targets\n  fullName: Project.Targets\n- uid: Microsoft.Build.Execution.ProjectTargetInstance\n  name: ProjectTargetInstance\n  nameWithType: ProjectTargetInstance\n  fullName: Microsoft.Build.Execution.ProjectTargetInstance\n- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,ProjectTargetInstance>\n  nameWithType: IDictionary<String,ProjectTargetInstance>\n  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: Microsoft.Build.Execution.ProjectTargetInstance\n    name: ProjectTargetInstance\n    nameWithType: ProjectTargetInstance\n    fullName: Microsoft.Build.Execution.ProjectTargetInstance\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.Project.ToolsVersion\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ToolsVersion\n  nameWithType: Project.ToolsVersion\n  fullName: Project.ToolsVersion\n- uid: Microsoft.Build.Evaluation.Project.Xml\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Xml\n  nameWithType: Project.Xml\n  fullName: Project.Xml\n- uid: Microsoft.Build.Evaluation.Project.CreateProjectInstance*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: CreateProjectInstance\n  nameWithType: Project.CreateProjectInstance\n  fullName: Project.CreateProjectInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.#ctor*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Project\n  nameWithType: Project.Project\n  fullName: Project.Project\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.AddItem*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItem\n  nameWithType: Project.AddItem\n  fullName: Project.AddItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.AddItemFast*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AddItemFast\n  nameWithType: Project.AddItemFast\n  fullName: Project.AddItemFast\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedItemDefinitionMetadata\n  nameWithType: Project.AllEvaluatedItemDefinitionMetadata\n  fullName: Project.AllEvaluatedItemDefinitionMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedItems*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedItems\n  nameWithType: Project.AllEvaluatedItems\n  fullName: Project.AllEvaluatedItems\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.AllEvaluatedProperties*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: AllEvaluatedProperties\n  nameWithType: Project.AllEvaluatedProperties\n  fullName: Project.AllEvaluatedProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Build*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Build\n  nameWithType: Project.Build\n  fullName: Project.Build\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ConditionedProperties*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ConditionedProperties\n  nameWithType: Project.ConditionedProperties\n  fullName: Project.ConditionedProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.DirectoryPath*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: DirectoryPath\n  nameWithType: Project.DirectoryPath\n  fullName: Project.DirectoryPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.DisableMarkDirty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: DisableMarkDirty\n  nameWithType: Project.DisableMarkDirty\n  fullName: Project.DisableMarkDirty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.EvaluationCounter*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: EvaluationCounter\n  nameWithType: Project.EvaluationCounter\n  fullName: Project.EvaluationCounter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ExpandString*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ExpandString\n  nameWithType: Project.ExpandString\n  fullName: Project.ExpandString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.FullPath*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: FullPath\n  nameWithType: Project.FullPath\n  fullName: Project.FullPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetEvaluatedItemIncludeEscaped\n  nameWithType: Project.GetEvaluatedItemIncludeEscaped\n  fullName: Project.GetEvaluatedItemIncludeEscaped\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetItems*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItems\n  nameWithType: Project.GetItems\n  fullName: Project.GetItems\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItemsByEvaluatedInclude\n  nameWithType: Project.GetItemsByEvaluatedInclude\n  fullName: Project.GetItemsByEvaluatedInclude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetItemsIgnoringCondition\n  nameWithType: Project.GetItemsIgnoringCondition\n  fullName: Project.GetItemsIgnoringCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetLogicalProject*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetLogicalProject\n  nameWithType: Project.GetLogicalProject\n  fullName: Project.GetLogicalProject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetMetadataValueEscaped\n  nameWithType: Project.GetMetadataValueEscaped\n  fullName: Project.GetMetadataValueEscaped\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetProperty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetProperty\n  nameWithType: Project.GetProperty\n  fullName: Project.GetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValue*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetPropertyValue\n  nameWithType: Project.GetPropertyValue\n  fullName: Project.GetPropertyValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GetPropertyValueEscaped\n  nameWithType: Project.GetPropertyValueEscaped\n  fullName: Project.GetPropertyValueEscaped\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.GlobalProperties*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: GlobalProperties\n  nameWithType: Project.GlobalProperties\n  fullName: Project.GlobalProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Imports*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Imports\n  nameWithType: Project.Imports\n  fullName: Project.Imports\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ImportsIncludingDuplicates\n  nameWithType: Project.ImportsIncludingDuplicates\n  fullName: Project.ImportsIncludingDuplicates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.IsBuildEnabled*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: IsBuildEnabled\n  nameWithType: Project.IsBuildEnabled\n  fullName: Project.IsBuildEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.IsDirty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: IsDirty\n  nameWithType: Project.IsDirty\n  fullName: Project.IsDirty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ItemDefinitions*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemDefinitions\n  nameWithType: Project.ItemDefinitions\n  fullName: Project.ItemDefinitions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Items*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Items\n  nameWithType: Project.Items\n  fullName: Project.Items\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemsIgnoringCondition\n  nameWithType: Project.ItemsIgnoringCondition\n  fullName: Project.ItemsIgnoringCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ItemTypes*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ItemTypes\n  nameWithType: Project.ItemTypes\n  fullName: Project.ItemTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.MarkDirty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: MarkDirty\n  nameWithType: Project.MarkDirty\n  fullName: Project.MarkDirty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ProjectCollection*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ProjectCollection\n  nameWithType: Project.ProjectCollection\n  fullName: Project.ProjectCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ProjectFileLocation*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ProjectFileLocation\n  nameWithType: Project.ProjectFileLocation\n  fullName: Project.ProjectFileLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Properties*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Properties\n  nameWithType: Project.Properties\n  fullName: Project.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ReevaluateIfNecessary\n  nameWithType: Project.ReevaluateIfNecessary\n  fullName: Project.ReevaluateIfNecessary\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.RemoveGlobalProperty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveGlobalProperty\n  nameWithType: Project.RemoveGlobalProperty\n  fullName: Project.RemoveGlobalProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.RemoveItem*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveItem\n  nameWithType: Project.RemoveItem\n  fullName: Project.RemoveItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.RemoveItems*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveItems\n  nameWithType: Project.RemoveItems\n  fullName: Project.RemoveItems\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.RemoveProperty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: RemoveProperty\n  nameWithType: Project.RemoveProperty\n  fullName: Project.RemoveProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Save*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Save\n  nameWithType: Project.Save\n  fullName: Project.Save\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.SaveLogicalProject*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SaveLogicalProject\n  nameWithType: Project.SaveLogicalProject\n  fullName: Project.SaveLogicalProject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.SetGlobalProperty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SetGlobalProperty\n  nameWithType: Project.SetGlobalProperty\n  fullName: Project.SetGlobalProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.SetProperty*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SetProperty\n  nameWithType: Project.SetProperty\n  fullName: Project.SetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.SkipEvaluation*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SkipEvaluation\n  nameWithType: Project.SkipEvaluation\n  fullName: Project.SkipEvaluation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.SubToolsetVersion*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: SubToolsetVersion\n  nameWithType: Project.SubToolsetVersion\n  fullName: Project.SubToolsetVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Targets*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Targets\n  nameWithType: Project.Targets\n  fullName: Project.Targets\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.ToolsVersion*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: ToolsVersion\n  nameWithType: Project.ToolsVersion\n  fullName: Project.ToolsVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: Microsoft.Build.Evaluation.Project.Xml*\n  parent: Microsoft.Build.Evaluation.Project\n  isExternal: false\n  name: Xml\n  nameWithType: Project.Xml\n  fullName: Project.Xml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/Project.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}