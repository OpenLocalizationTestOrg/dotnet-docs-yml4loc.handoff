{"nodes":[{"content":"Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.","nodes":[{"pos":[0,154],"content":"Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.","nodes":[{"content":"Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.","pos":[0,154]}]}],"pos":[1223,1378],"yaml":true},{"content":"Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary). The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary. If a match is found, the corresponding activity is executed. Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer.","nodes":[{"pos":[0,592],"content":"Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary). The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary. If a match is found, the corresponding activity is executed. Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer.","nodes":[{"content":"Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary). The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary. If a match is found, the corresponding activity is executed. Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer.","pos":[0,592],"nodes":[{"content":"Each case in the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Switch%601.Cases%2A&gt;</ph> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary).","pos":[0,202],"source":"Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Switch`1.Expression%2A&gt;</ph> is evaluated and compared against the keys in the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Switch%601.Cases%2A&gt;</ph> dictionary.","pos":[203,383],"source":" The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary."},{"content":"If a match is found, the corresponding activity is executed.","pos":[384,444]},{"content":"Every key in the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Switch%601.Cases%2A&gt;</ph> dictionary must be unique according to the dictionary’s equality comparer.","pos":[445,592],"source":" Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer."}]}]}],"pos":[1389,1982],"yaml":true,"extradata":"MT"},{"content":"The type of the values provided in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.","nodes":[{"pos":[0,115],"content":"The type of the values provided in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> collection.","source":"The type of the values provided in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection."}],"pos":[2575,2691],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class.","nodes":[{"pos":[0,95],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class."}],"pos":[5006,5102],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.","nodes":[{"pos":[0,125],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1\"&gt;&lt;/xref&gt;</ph> class with the specified expression.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression."}],"pos":[6694,6820],"yaml":true},{"content":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.","nodes":[{"pos":[0,141],"content":"The expression to evaluate and compare against the values in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> dictionary.","source":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary."}],"pos":[6999,7141],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.","nodes":[{"pos":[0,125],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1\"&gt;&lt;/xref&gt;</ph> class with the specified expression.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression."}],"pos":[8282,8408],"yaml":true},{"content":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.","nodes":[{"pos":[0,141],"content":"The expression to evaluate and compare against the values in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> dictionary.","source":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary."}],"pos":[8590,8732],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.","nodes":[{"pos":[0,125],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1\"&gt;&lt;/xref&gt;</ph> class with the specified expression.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression."}],"pos":[10098,10224],"yaml":true},{"content":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.","nodes":[{"pos":[0,141],"content":"The expression to evaluate and compare against the values in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> dictionary.","source":"The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary."}],"pos":[10506,10648],"yaml":true},{"content":"Represents the dictionary of potential execution paths. Each entry contains a key and an activity that is executed when the result of the expression matches the key.","nodes":[{"pos":[0,165],"content":"Represents the dictionary of potential execution paths. Each entry contains a key and an activity that is executed when the result of the expression matches the key.","nodes":[{"content":"Represents the dictionary of potential execution paths. Each entry contains a key and an activity that is executed when the result of the expression matches the key.","pos":[0,165],"nodes":[{"content":"Represents the dictionary of potential execution paths.","pos":[0,55]},{"content":"Each entry contains a key and an activity that is executed when the result of the expression matches the key.","pos":[56,165]}]}]}],"pos":[12975,13141],"yaml":true},{"content":"When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property.","nodes":[{"pos":[0,162],"content":"When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property.","nodes":[{"content":"When the activity executes, the case that is executed is the first case whose key matches the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Switch`1.Expression%2A&gt;</ph> property.","pos":[0,162],"source":"When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property."}]}],"pos":[13152,13315],"yaml":true,"extradata":"MT"},{"content":"The execution paths.","nodes":[{"pos":[0,20],"content":"The execution paths.","nodes":[{"content":"The execution paths.","pos":[0,20]}]}],"pos":[13951,13972],"yaml":true},{"content":"Represents the activity that is executed if no keys of entries in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection match the <xref href=\"System.Activities.Statements.Switch`1.Expression\"></xref> property.","nodes":[{"pos":[0,235],"content":"Represents the activity that is executed if no keys of entries in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> collection match the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.Switch`1.Expression\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the activity that is executed if no keys of entries in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection match the <xref href=\"System.Activities.Statements.Switch`1.Expression\"></xref> property."}],"pos":[14961,15197],"yaml":true},{"content":"The default activity to execute.","nodes":[{"pos":[0,32],"content":"The default activity to execute.","nodes":[{"content":"The default activity to execute.","pos":[0,32]}]}],"pos":[15346,15379],"yaml":true},{"content":"Gets the object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.","nodes":[{"pos":[0,122],"content":"Gets the object to compare to the keys in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection."}],"pos":[17697,17820],"yaml":true},{"content":"The comparison occurs after the expression is evaluated.","nodes":[{"pos":[0,56],"content":"The comparison occurs after the expression is evaluated.","nodes":[{"content":"The comparison occurs after the expression is evaluated.","pos":[0,56]}]}],"pos":[17831,17888],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.","nodes":[{"pos":[0,117],"content":"The object to compare to the keys in the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Switch`1.Cases\"&gt;&lt;/xref&gt;</ph> collection.","source":"The object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection."}],"pos":[18517,18635],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Switch`1\n  commentId: T:System.Activities.Statements.Switch`1\n  id: Switch`1\n  children:\n  - System.Activities.Statements.Switch`1.#ctor\n  - System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})\n  - System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})\n  - System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Switch`1.Cases\n  - System.Activities.Statements.Switch`1.Default\n  - System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Switch`1.Expression\n  - System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  langs:\n  - csharp\n  name: Switch<T>\n  nameWithType: Switch<T>\n  fullName: System.Activities.Statements.Switch<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Selects one choice from a number of activities to execute, based on the value of a given expression of the type specified in this object’s type specifier.\n  remarks: Each case in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary consists of a value (serving as the key for the dictionary) and an activity (serving as the value for the dictionary). The <xref:System.Activities.Statements.Switch`1.Expression%2A> is evaluated and compared against the keys in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary. If a match is found, the corresponding activity is executed. Every key in the <xref:System.Activities.Statements.Switch%601.Cases%2A> dictionary must be unique according to the dictionary’s equality comparer.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \\n  \\n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Cases\")]\n\n      public sealed class Switch<T> : System.Activities.NativeActivity\n    typeParameters:\n    - id: T\n      description: The type of the values provided in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.#ctor\n  commentId: M:System.Activities.Statements.Switch`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Switch<T>()\n  nameWithType: Switch<T>.Switch<T>()\n  fullName: Switch<T>.Switch<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \\n  \\n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]\"\n  syntax:\n    content: public Switch ();\n    parameters: []\n  overload: System.Activities.Statements.Switch`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})\n  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})\n  id: '#ctor(System.Activities.Activity{`0})'\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Switch<T>(Activity<T>)\n  nameWithType: Switch<T>.Switch<T>(Activity<T>)\n  fullName: Switch<T>.Switch<T>(Activity<T>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.\n  syntax:\n    content: public Switch (System.Activities.Activity<T> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{T}\n      description: The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.\n  overload: System.Activities.Statements.Switch`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})\n  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})\n  id: '#ctor(System.Activities.InArgument{`0})'\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Switch<T>(InArgument<T>)\n  nameWithType: Switch<T>.Switch<T>(InArgument<T>)\n  fullName: Switch<T>.Switch<T>(InArgument<T>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.\n  syntax:\n    content: public Switch (System.Activities.InArgument<T> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.InArgument`1\n      description: The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.\n  overload: System.Activities.Statements.Switch`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  commentId: M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Switch<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)\n  fullName: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Switch`1\"></xref> class with the specified expression.\n  syntax:\n    content: public Switch (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: The expression to evaluate and compare against the values in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> dictionary.\n  overload: System.Activities.Statements.Switch`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Switch<T>.CacheMetadata(NativeActivityMetadata)\n  fullName: Switch<T>.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.Switch`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Cases\n  commentId: P:System.Activities.Statements.Switch`1.Cases\n  id: Cases\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Cases\n  nameWithType: Switch<T>.Cases\n  fullName: Switch<T>.Cases\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Represents the dictionary of potential execution paths. Each entry contains a key and an activity that is executed when the result of the expression matches the key.\n  remarks: When the activity executes, the case that is executed is the first case whose key matches the <xref:System.Activities.Statements.Switch`1.Expression%2A> property.\n  example:\n  - \"The following code sample demonstrates setting the Cases property of a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \\n  \\n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<T,System.Activities.Activity> Cases { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{T,System.Activities.Activity}\n      description: The execution paths.\n  overload: System.Activities.Statements.Switch`1.Cases*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.Default\n  commentId: P:System.Activities.Statements.Switch`1.Default\n  id: Default\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Default\n  nameWithType: Switch<T>.Default\n  fullName: Switch<T>.Default\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Represents the activity that is executed if no keys of entries in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection match the <xref href=\"System.Activities.Statements.Switch`1.Expression\"></xref> property.\n  syntax:\n    content: public System.Activities.Activity Default { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The default activity to execute.\n  overload: System.Activities.Statements.Switch`1.Default*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Switch<T>.Execute(NativeActivityContext)\n  fullName: Switch<T>.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Switch`1.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Expression\n  commentId: P:System.Activities.Statements.Switch`1.Expression\n  id: Expression\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: Switch<T>.Expression\n  fullName: Switch<T>.Expression\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.\n  remarks: The comparison occurs after the expression is evaluated.\n  example:\n  - \"The following code sample demonstrates setting the Expression property of a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](~/docs/framework/windows-workflow-foundation/samples/using-procedural-activities.md) sample.  \\n  \\n [!code-csharp[wfs_Procedurals#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Activities.RequiredArgument]\n\n      public System.Activities.InArgument<T> Expression { get; set; }\n    return:\n      type: System.Activities.InArgument`1\n      description: The object to compare to the keys in the <xref href=\"System.Activities.Statements.Switch`1.Cases\"></xref> collection.\n  overload: System.Activities.Statements.Switch`1.Expression*\n  exceptions: []\n  attributes:\n  - type: System.Activities.RequiredArgumentAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Switch`1\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Switch`1.#ctor\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Switch<T>()\n  nameWithType: Switch<T>.Switch<T>()\n  fullName: Switch<T>.Switch<T>()\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Switch<T>(Activity<T>)\n  nameWithType: Switch<T>.Switch<T>(Activity<T>)\n  fullName: Switch<T>.Switch<T>(Activity<T>)\n- uid: System.Activities.Activity`1\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Activity{T}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<T>\n  nameWithType: Activity<T>\n  fullName: System.Activities.Activity<T>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Switch<T>(InArgument<T>)\n  nameWithType: Switch<T>.Switch<T>(InArgument<T>)\n  fullName: Switch<T>.Switch<T>(InArgument<T>)\n- uid: System.Activities.InArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Switch<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)\n  fullName: Switch<T>.Switch<T>(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.ActivityContext\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: System.Activities.ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Switch<T>.CacheMetadata(NativeActivityMetadata)\n  fullName: Switch<T>.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Switch`1.Cases\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Cases\n  nameWithType: Switch<T>.Cases\n  fullName: Switch<T>.Cases\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Activities.Activity\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Collections.Generic.IDictionary{T,System.Activities.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<T,Activity>\n  nameWithType: IDictionary<T,Activity>\n  fullName: System.Collections.Generic.IDictionary<T,System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Switch`1.Default\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Default\n  nameWithType: Switch<T>.Default\n  fullName: Switch<T>.Default\n- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Switch<T>.Execute(NativeActivityContext)\n  fullName: Switch<T>.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Switch`1.Expression\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Expression\n  nameWithType: Switch<T>.Expression\n  fullName: Switch<T>.Expression\n- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Switch<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.Switch`1.#ctor*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Switch<T>\n  nameWithType: Switch<T>.Switch<T>\n  fullName: Switch<T>.Switch<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.CacheMetadata*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Switch<T>.CacheMetadata\n  fullName: Switch<T>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Cases*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Cases\n  nameWithType: Switch<T>.Cases\n  fullName: Switch<T>.Cases\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Default*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Default\n  nameWithType: Switch<T>.Default\n  fullName: Switch<T>.Default\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Execute*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Execute\n  nameWithType: Switch<T>.Execute\n  fullName: Switch<T>.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.Expression*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: Expression\n  nameWithType: Switch<T>.Expression\n  fullName: Switch<T>.Expression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.Switch`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: Switch<T>.OnCreateDynamicUpdateMap\n  fullName: Switch<T>.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Switch`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}