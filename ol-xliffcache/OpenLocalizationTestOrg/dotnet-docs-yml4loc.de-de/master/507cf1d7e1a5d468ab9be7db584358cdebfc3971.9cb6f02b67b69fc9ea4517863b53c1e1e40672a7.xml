{"nodes":[{"content":"Provides the generic functionality to create a channel configuration element for a specific type.","nodes":[{"pos":[0,97],"content":"Provides the generic functionality to create a channel configuration element for a specific type.","nodes":[{"content":"Provides the generic functionality to create a channel configuration element for a specific type.","pos":[0,97]}]}],"pos":[708,806],"yaml":true},{"content":"The type of communications channel to specify for the endpoint element that is created.","nodes":[{"pos":[0,87],"content":"The type of communications channel to specify for the endpoint element that is created.","nodes":[{"content":"The type of communications channel to specify for the endpoint element that is created.","pos":[0,87]}]}],"pos":[994,1082],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.ServiceModel.Configuration.ConfigurationChannelFactory`1\"></xref> class with the specified endpoint configuration name, <xref href=\"System.Configuration.Configuration\"></xref> object, and the <xref href=\"System.ServiceModel.EndpointAddress\"></xref> object.","nodes":[{"pos":[0,305],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.ConfigurationChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified endpoint configuration name, <ph id=\"ph2\">&lt;xref href=\"System.Configuration.Configuration\"&gt;&lt;/xref&gt;</ph> object, and the <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a new instance of the <xref href=\"System.ServiceModel.Configuration.ConfigurationChannelFactory`1\"></xref> class with the specified endpoint configuration name, <xref href=\"System.Configuration.Configuration\"></xref> object, and the <xref href=\"System.ServiceModel.EndpointAddress\"></xref> object."}],"pos":[8476,8782],"yaml":true},{"content":"The name property in an endpoint configuration element.","nodes":[{"pos":[0,55],"content":"The name property in an endpoint configuration element.","nodes":[{"content":"The name property in an endpoint configuration element.","pos":[0,55]}]}],"pos":[9074,9130],"yaml":true},{"content":"The settings that define the information in the endpoint element.","nodes":[{"pos":[0,65],"content":"The settings that define the information in the endpoint element.","nodes":[{"content":"The settings that define the information in the endpoint element.","pos":[0,65]}]}],"pos":[9220,9286],"yaml":true},{"content":"The IP address of a destination endpoint in a client or server session. This parameter may be set to `null` to indicate the endpoint address should be taken from the configuration element specified in the <code>configuration</code> parameter.","nodes":[{"pos":[0,242],"content":"The IP address of a destination endpoint in a client or server session. This parameter may be set to `null` to indicate the endpoint address should be taken from the configuration element specified in the <code>configuration</code> parameter.","nodes":[{"content":"The IP address of a destination endpoint in a client or server session.","pos":[0,71]},{"content":"This parameter may be set to <ph id=\"ph1\">`null`</ph> to indicate the endpoint address should be taken from the configuration element specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">configuration</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[72,242],"source":" This parameter may be set to `null` to indicate the endpoint address should be taken from the configuration element specified in the <code>configuration</code> parameter."}]}],"pos":[9377,9620],"yaml":true},{"content":"<code>configuration</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;configuration&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>configuration</code> is `null`."}],"pos":[9819,9857],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  commentId: T:System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  id: ConfigurationChannelFactory`1\n  children:\n  - System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)\n  langs:\n  - csharp\n  name: ConfigurationChannelFactory<TChannel>\n  nameWithType: ConfigurationChannelFactory<TChannel>\n  fullName: System.ServiceModel.Configuration.ConfigurationChannelFactory<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Provides the generic functionality to create a channel configuration element for a specific type.\n  syntax:\n    content: 'public sealed class ConfigurationChannelFactory<TChannel> : System.ServiceModel.ChannelFactory<TChannel>'\n    typeParameters:\n    - id: TChannel\n      description: The type of communications channel to specify for the endpoint element that is created.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ChannelFactory\n  - System.ServiceModel.ChannelFactory`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  - System.ServiceModel.ChannelFactory.CreateFactory\n  - System.ServiceModel.ChannelFactory.Credentials\n  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  - System.ServiceModel.ChannelFactory.Endpoint\n  - System.ServiceModel.ChannelFactory.EnsureOpened\n  - System.ServiceModel.ChannelFactory.GetProperty``1\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.OnAbort\n  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnOpened\n  - System.ServiceModel.ChannelFactory.OnOpening\n  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  - System.ServiceModel.ChannelFactory`1.CreateChannel\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateDescription\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ConfigurationChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  langs:\n  - csharp\n  name: ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n  nameWithType: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n  fullName: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Creates a new instance of the <xref href=\"System.ServiceModel.Configuration.ConfigurationChannelFactory`1\"></xref> class with the specified endpoint configuration name, <xref href=\"System.Configuration.Configuration\"></xref> object, and the <xref href=\"System.ServiceModel.EndpointAddress\"></xref> object.\n  syntax:\n    content: public ConfigurationChannelFactory (string endpointConfigurationName, System.Configuration.Configuration configuration, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name property in an endpoint configuration element.\n    - id: configuration\n      type: System.Configuration.Configuration\n      description: The settings that define the information in the endpoint element.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The IP address of a destination endpoint in a client or server session. This parameter may be set to `null` to indicate the endpoint address should be taken from the configuration element specified in the <code>configuration</code> parameter.\n  overload: System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>configuration</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ConfigurationChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ChannelFactory`1\n  parent: System.ServiceModel\n  isExternal: false\n  name: ChannelFactory<TChannel>\n  nameWithType: ChannelFactory<TChannel>\n  fullName: System.ServiceModel.ChannelFactory<TChannel>\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor(System.String,System.Configuration.Configuration,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  isExternal: false\n  name: ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n  nameWithType: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n  fullName: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>(String, Configuration, EndpointAddress)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.Configuration\n  parent: System.Configuration\n  isExternal: false\n  name: Configuration\n  nameWithType: Configuration\n  fullName: System.Configuration.Configuration\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Configuration.ConfigurationChannelFactory`1.#ctor*\n  parent: System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  isExternal: false\n  name: ConfigurationChannelFactory<TChannel>\n  nameWithType: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>\n  fullName: ConfigurationChannelFactory<TChannel>.ConfigurationChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ConfigurationChannelFactory`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelFactory.DefaultCloseTimeout\n  fullName: ChannelFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelFactory.DefaultOpenTimeout\n  fullName: ChannelFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ChannelFactory.OnAbort\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelFactory.OnAbort()\n  fullName: ChannelFactory.OnAbort()\n- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactory.OnClose(TimeSpan)\n  fullName: ChannelFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)\n  fullName: ChannelFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)\n  fullName: ChannelFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelFactory.OnOpen(TimeSpan)\n  fullName: ChannelFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ChannelFactory.OnOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ChannelFactory.OnOpened()\n  fullName: ChannelFactory.OnOpened()\n- uid: System.ServiceModel.ChannelFactory.OnOpening\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpening()\n  nameWithType: ChannelFactory.OnOpening()\n  fullName: ChannelFactory.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: ApplyConfiguration(String)\n  nameWithType: ChannelFactory.ApplyConfiguration(String)\n  fullName: ChannelFactory.ApplyConfiguration(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateDescription()\n  nameWithType: ChannelFactory<TChannel>.CreateDescription()\n  fullName: ChannelFactory<TChannel>.CreateDescription()\n- uid: System.ServiceModel.ChannelFactory.CreateFactory\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: CreateFactory()\n  nameWithType: ChannelFactory.CreateFactory()\n  fullName: ChannelFactory.CreateFactory()\n- uid: System.ServiceModel.ChannelFactory.Credentials\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Credentials\n  nameWithType: ChannelFactory.Credentials\n  fullName: ChannelFactory.Credentials\n- uid: System.ServiceModel.ChannelFactory.Endpoint\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Endpoint\n  nameWithType: ChannelFactory.Endpoint\n  fullName: ChannelFactory.Endpoint\n- uid: System.ServiceModel.ChannelFactory.EnsureOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: EnsureOpened()\n  nameWithType: ChannelFactory.EnsureOpened()\n  fullName: ChannelFactory.EnsureOpened()\n- uid: System.ServiceModel.ChannelFactory.GetProperty``1\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelFactory.GetProperty<T>()\n  fullName: ChannelFactory.GetProperty<T>()\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(String, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(Binding, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(ServiceEndpoint)\n  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n  fullName: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ChannelFactory.IDisposable.Dispose()\n  fullName: ChannelFactory.IDisposable.Dispose()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel()\n  nameWithType: ChannelFactory<TChannel>.CreateChannel()\n  fullName: ChannelFactory<TChannel>.CreateChannel()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(String)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)\n  fullName: ChannelFactory<TChannel>.CreateChannel(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n"}