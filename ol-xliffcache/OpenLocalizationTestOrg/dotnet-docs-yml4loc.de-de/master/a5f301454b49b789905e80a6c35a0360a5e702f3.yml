### YamlMime:ManagedReference
items:
- uid: System.DllNotFoundException
  commentId: T:System.DllNotFoundException
  id: DllNotFoundException
  children:
  - System.DllNotFoundException.#ctor
  - System.DllNotFoundException.#ctor(System.String)
  - System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.DllNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: DllNotFoundException
  nameWithType: DllNotFoundException
  fullName: System.DllNotFoundException
  type: Class
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System
  summary: The exception that is thrown when a DLL specified in a DLL import cannot be found.
  remarks: "<xref:System.DllNotFoundException> uses the HRESULT COR_E_DLLNOTFOUND, which has the value 0x80131524.  \n  \n For a list of initial property values for an instance of <xref:System.DllNotFoundException>, see the <xref:System.DllNotFoundException.%23ctor%2A> constructors.  \n  \n The <xref:System.DllNotFoundException> is thrown when a dynamic link library defined by the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=fullName> attribute or a comparable language construct, such as the Visual Basic `Declare` statement, cannot be found. It is not thrown when the common language runtime is unable to load a .NET Framework assembly.  \n  \n Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> can specify the path to the directory in which the DLL resides. If a path is not specified, Windows uses the search order described in [Dynamic-Link Library Search Order](http://go.microsoft.com/fwlink/?LinkId=122531)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DllNotFoundException : TypeLoadException
  inheritance:
  - System.Object
  - System.Exception
  - System.TypeLoadException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.TypeLoadException.Message
  - System.TypeLoadException.TypeName
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DllNotFoundException.#ctor
  commentId: M:System.DllNotFoundException.#ctor
  id: '#ctor'
  parent: System.DllNotFoundException
  langs:
  - csharp
  name: DllNotFoundException()
  nameWithType: DllNotFoundException.DllNotFoundException()
  fullName: DllNotFoundException.DllNotFoundException()
  type: Constructor
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DllNotFoundException"></xref> class with default properties.
  remarks: "The following table shows the initial property values for an instance of <xref:System.DllNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.TypeLoadException.Message%2A>|The localized error message string.|"
  syntax:
    content: public DllNotFoundException ();
    parameters: []
  overload: System.DllNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DllNotFoundException.#ctor(System.String)
  commentId: M:System.DllNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DllNotFoundException
  langs:
  - csharp
  name: DllNotFoundException(String)
  nameWithType: DllNotFoundException.DllNotFoundException(String)
  fullName: DllNotFoundException.DllNotFoundException(String)
  type: Constructor
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DllNotFoundException"></xref> class with a specified error message.
  remarks: "The following table shows the initial property values for an instance of <xref:System.DllNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.TypeLoadException.Message%2A>|The error message string.|"
  syntax:
    content: public DllNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  overload: System.DllNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.DllNotFoundException
  langs:
  - csharp
  name: DllNotFoundException(SerializationInfo, StreamingContext)
  nameWithType: DllNotFoundException.DllNotFoundException(SerializationInfo, StreamingContext)
  fullName: DllNotFoundException.DllNotFoundException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.InteropServices
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DllNotFoundException"></xref> class with serialized data.
  syntax:
    content: protected DllNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that contains contextual information about the source or destination.
  overload: System.DllNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DllNotFoundException.#ctor(System.String,System.Exception)
  commentId: M:System.DllNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.DllNotFoundException
  langs:
  - csharp
  name: DllNotFoundException(String, Exception)
  nameWithType: DllNotFoundException.DllNotFoundException(String, Exception)
  fullName: DllNotFoundException.DllNotFoundException(String, Exception)
  type: Constructor
  assemblies:
  - System.Runtime.InteropServices
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DllNotFoundException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.DllNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.TypeLoadException.Message%2A>|The error message string.|"
  syntax:
    content: public DllNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.DllNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
- uid: System.DllNotFoundException.#ctor
  parent: System.DllNotFoundException
  isExternal: false
  name: DllNotFoundException()
  nameWithType: DllNotFoundException.DllNotFoundException()
  fullName: DllNotFoundException.DllNotFoundException()
- uid: System.DllNotFoundException.#ctor(System.String)
  parent: System.DllNotFoundException
  isExternal: false
  name: DllNotFoundException(String)
  nameWithType: DllNotFoundException.DllNotFoundException(String)
  fullName: DllNotFoundException.DllNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.DllNotFoundException
  isExternal: false
  name: DllNotFoundException(SerializationInfo, StreamingContext)
  nameWithType: DllNotFoundException.DllNotFoundException(SerializationInfo, StreamingContext)
  fullName: DllNotFoundException.DllNotFoundException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.DllNotFoundException.#ctor(System.String,System.Exception)
  parent: System.DllNotFoundException
  isExternal: false
  name: DllNotFoundException(String, Exception)
  nameWithType: DllNotFoundException.DllNotFoundException(String, Exception)
  fullName: DllNotFoundException.DllNotFoundException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.DllNotFoundException.#ctor*
  parent: System.DllNotFoundException
  isExternal: false
  name: DllNotFoundException
  nameWithType: DllNotFoundException.DllNotFoundException
  fullName: DllNotFoundException.DllNotFoundException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DllNotFoundException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.TypeLoadException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: TypeLoadException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: TypeLoadException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.TypeLoadException.Message
  parent: System.TypeLoadException
  isExternal: false
  name: Message
  nameWithType: TypeLoadException.Message
  fullName: TypeLoadException.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
- uid: System.TypeLoadException.TypeName
  parent: System.TypeLoadException
  isExternal: false
  name: TypeName
  nameWithType: TypeLoadException.TypeName
  fullName: TypeLoadException.TypeName
