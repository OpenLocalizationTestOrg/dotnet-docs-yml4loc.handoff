{"nodes":[{"content":"Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.","nodes":[{"pos":[0,169],"content":"Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.","nodes":[{"content":"Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.","pos":[0,169]}]}],"pos":[601,771],"yaml":true},{"content":"Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.  \n  \n This interface is not required for design-time support of a bindable list.  \n  \n Binding to data can occur either at run time or in a designer, but there are rules for both. At run time, you can bind to data in any of the following:  \n  \n-   <xref:System.Array>  \n  \n-   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.  \n  \n-   Implementer of <xref:System.ComponentModel.ITypedList>.  \n  \n In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.  \n  \n For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=fullName> class.","nodes":[{"pos":[0,287],"content":"Use this interface if, for instance, you are using a <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> object that represents a <ph id=\"ph2\">`customer`</ph> table, you want to bind to the properties on the <ph id=\"ph3\">`customer`</ph> object that the <ph id=\"ph4\">&lt;xref:System.Data.DataView&gt;</ph> represents, not the properties of the <ph id=\"ph5\">&lt;xref:System.Data.DataView&gt;</ph>.","source":"Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>."},{"pos":[294,368],"content":"This interface is not required for design-time support of a bindable list.","nodes":[{"content":"This interface is not required for design-time support of a bindable list.","pos":[0,74]}]},{"pos":[375,526],"content":"Binding to data can occur either at run time or in a designer, but there are rules for both. At run time, you can bind to data in any of the following:","nodes":[{"content":"Binding to data can occur either at run time or in a designer, but there are rules for both. At run time, you can bind to data in any of the following:","pos":[0,151],"nodes":[{"content":"Binding to data can occur either at run time or in a designer, but there are rules for both.","pos":[0,92]},{"content":"At run time, you can bind to data in any of the following:","pos":[93,151]}]}]},{"pos":[536,555],"content":"<xref:System.Array>","nodes":[]},{"pos":[565,1069],"content":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.","nodes":[{"content":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.","pos":[0,504],"nodes":[{"content":"Implementer of <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id=\"ph2\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph> is anything but <ph id=\"ph4\">&lt;xref:System.Object&gt;</ph>).","pos":[0,214],"source":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>)."},{"content":"You can accomplish this by making the default implementation of <ph id=\"ph1\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.","pos":[215,327],"source":" You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private."},{"content":"If you want to create an <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id=\"ph2\">&lt;xref:System.Collections.CollectionBase&gt;</ph>.","pos":[328,504],"source":" If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>."}]}]},{"pos":[1079,1134],"content":"Implementer of <xref:System.ComponentModel.ITypedList>.","nodes":[{"content":"Implementer of <ph id=\"ph1\">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.","pos":[0,55],"source":"Implementer of <xref:System.ComponentModel.ITypedList>."}]},{"pos":[1141,1261],"content":"In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.","nodes":[{"content":"In a designer, you can initialize binding to <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.","pos":[0,120],"source":"In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules."}]},{"pos":[1268,1393],"content":"For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=fullName> class.","nodes":[{"content":"For more information on binding to a data source, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding?displayProperty=fullName&gt;</ph> class.","pos":[0,125],"source":"For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=fullName> class."}]}],"pos":[782,2192],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data.","nodes":[{"pos":[0,146],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> that represents the properties on each item used to bind data.","source":"Returns the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data."}],"pos":[4717,4864],"yaml":true},{"content":"If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>. For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`. If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`. As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.","nodes":[{"pos":[0,923],"content":"If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>. For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`. If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`. As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.","nodes":[{"content":"If the <ph id=\"ph1\">`listAccessors`</ph> parameter is not <ph id=\"ph2\">`null`</ph>, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <ph id=\"ph3\">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.","pos":[0,212],"source":"If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> containing two tables, <ph id=\"ph2\">`myCustomers`</ph> and <ph id=\"ph3\">`myOrders`</ph>, with a relationship between them called <ph id=\"ph4\">`myCustOrders`</ph>.","pos":[213,363],"source":" For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`."},{"content":"If you create a <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> object to view <ph id=\"ph2\">`myCustomers`</ph>, then calling the <ph id=\"ph3\">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with <ph id=\"ph4\">`null`</ph> returns the property descriptors for the columns in <ph id=\"ph5\">`myCustomers`</ph>.","pos":[364,601],"source":" If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`."},{"content":"As a result, one of the returned property descriptors is a property descriptor for <ph id=\"ph1\">`myCustOrders`</ph>, just as calling the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A&gt;</ph> method with a list accessor array containing the property descriptors for <ph id=\"ph3\">`myCustOrders`</ph> will return the property descriptors for <ph id=\"ph4\">`myOrders`</ph>.","pos":[602,923],"source":" As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`."}]}],"pos":[4875,5799],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects to find in the collection as bindable. This can be `null`.","nodes":[{"pos":[0,140],"content":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects to find in the collection as bindable. This can be `null`.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> objects to find in the collection as bindable.","pos":[0,120],"source":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects to find in the collection as bindable."},{"content":"This can be <ph id=\"ph1\">`null`</ph>.","pos":[121,140],"source":" This can be `null`."}]}],"pos":[6697,6838],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> that represents the properties on each item used to bind data.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data."}],"pos":[6932,7071],"yaml":true},{"content":"Returns the name of the list.","nodes":[{"pos":[0,29],"content":"Returns the name of the list.","nodes":[{"content":"Returns the name of the list.","pos":[0,29]}]}],"pos":[8571,8601],"yaml":true},{"content":"This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.","nodes":[{"pos":[0,119],"content":"This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.","nodes":[{"content":"This method is used only in the design-time framework and by the obsolete <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control.","pos":[0,119],"source":"This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control."}]}],"pos":[8612,8732],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects, for which the list name is returned. This can be `null`.","nodes":[{"pos":[0,139],"content":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects, for which the list name is returned. This can be `null`.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> objects, for which the list name is returned.","pos":[0,119],"source":"An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects, for which the list name is returned."},{"content":"This can be <ph id=\"ph1\">`null`</ph>.","pos":[120,139],"source":" This can be `null`."}]}],"pos":[9574,9714],"yaml":true},{"content":"The name of the list.","nodes":[{"pos":[0,21],"content":"The name of the list.","nodes":[{"content":"The name of the list.","pos":[0,21]}]}],"pos":[9771,9793],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ITypedList\n  commentId: T:System.ComponentModel.ITypedList\n  id: ITypedList\n  children:\n  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])\n  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])\n  langs:\n  - csharp\n  name: ITypedList\n  nameWithType: ITypedList\n  fullName: System.ComponentModel.ITypedList\n  type: Interface\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.\n  remarks: \"Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.  \\n  \\n This interface is not required for design-time support of a bindable list.  \\n  \\n Binding to data can occur either at run time or in a designer, but there are rules for both. At run time, you can bind to data in any of the following:  \\n  \\n-   <xref:System.Array>  \\n  \\n-   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.  \\n  \\n-   Implementer of <xref:System.ComponentModel.ITypedList>.  \\n  \\n In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.  \\n  \\n For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=fullName> class.\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface. A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface. For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]\\n [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]\"\n  syntax:\n    content: public interface ITypedList\n  derivedClasses:\n  - System.Data.DataView\n  - System.Data.DataViewManager\n  - System.Web.UI.WebControls.ListViewPagedDataSource\n  - System.Web.UI.WebControls.PagedDataSource\n  - System.Windows.Forms.BindingSource\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ITypedList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])\n  commentId: M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])\n  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])\n  parent: System.ComponentModel.ITypedList\n  langs:\n  - csharp\n  name: GetItemProperties(PropertyDescriptor[])\n  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])\n  fullName: ITypedList.GetItemProperties(PropertyDescriptor[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data.\n  remarks: If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>. For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`. If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`. As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method. For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]\\n [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);\n    parameters:\n    - id: listAccessors\n      type: System.ComponentModel.PropertyDescriptor[]\n      description: An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects to find in the collection as bindable. This can be `null`.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that represents the properties on each item used to bind data.\n  overload: System.ComponentModel.ITypedList.GetItemProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ITypedList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])\n  commentId: M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])\n  id: GetListName(System.ComponentModel.PropertyDescriptor[])\n  parent: System.ComponentModel.ITypedList\n  langs:\n  - csharp\n  name: GetListName(PropertyDescriptor[])\n  nameWithType: ITypedList.GetListName(PropertyDescriptor[])\n  fullName: ITypedList.GetListName(PropertyDescriptor[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the name of the list.\n  remarks: This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method. For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]\\n [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]\"\n  syntax:\n    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);\n    parameters:\n    - id: listAccessors\n      type: System.ComponentModel.PropertyDescriptor[]\n      description: An array of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> objects, for which the list name is returned. This can be `null`.\n    return:\n      type: System.String\n      description: The name of the list.\n  overload: System.ComponentModel.ITypedList.GetListName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ITypedList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])\n  parent: System.ComponentModel.ITypedList\n  isExternal: false\n  name: GetItemProperties(PropertyDescriptor[])\n  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])\n  fullName: ITypedList.GetItemProperties(PropertyDescriptor[])\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.PropertyDescriptor\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.PropertyDescriptor[]\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor[]\n  nameWithType: PropertyDescriptor[]\n  fullName: System.ComponentModel.PropertyDescriptor[]\n  spec.csharp:\n  - uid: System.ComponentModel.PropertyDescriptor\n    name: PropertyDescriptor\n    nameWithType: PropertyDescriptor\n    fullName: System.ComponentModel.PropertyDescriptor\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])\n  parent: System.ComponentModel.ITypedList\n  isExternal: false\n  name: GetListName(PropertyDescriptor[])\n  nameWithType: ITypedList.GetListName(PropertyDescriptor[])\n  fullName: ITypedList.GetListName(PropertyDescriptor[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.ITypedList.GetItemProperties*\n  parent: System.ComponentModel.ITypedList\n  isExternal: false\n  name: GetItemProperties\n  nameWithType: ITypedList.GetItemProperties\n  fullName: ITypedList.GetItemProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ITypedList.xml\n- uid: System.ComponentModel.ITypedList.GetListName*\n  parent: System.ComponentModel.ITypedList\n  isExternal: false\n  name: GetListName\n  nameWithType: ITypedList.GetListName\n  fullName: ITypedList.GetListName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ITypedList.xml\n"}