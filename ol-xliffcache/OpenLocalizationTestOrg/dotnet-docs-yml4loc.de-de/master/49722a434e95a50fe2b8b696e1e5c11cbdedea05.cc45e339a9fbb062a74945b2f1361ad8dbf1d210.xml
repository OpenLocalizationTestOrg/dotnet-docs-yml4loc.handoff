{"nodes":[{"content":"Provides information for access keys events.","nodes":[{"pos":[0,44],"content":"Provides information for access keys events.","nodes":[{"content":"Provides information for access keys events.","pos":[0,44]}]}],"pos":[506,551],"yaml":true},{"content":"Gets a value that indicates whether other elements are invoked by the key.","nodes":[{"pos":[0,74],"content":"Gets a value that indicates whether other elements are invoked by the key.","nodes":[{"content":"Gets a value that indicates whether other elements are invoked by the key.","pos":[0,74]}]}],"pos":[1961,2036],"yaml":true},{"content":"`true` if other elements are invoked; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if other elements are invoked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if other elements are invoked; otherwise, `false`."}],"pos":[2149,2209],"yaml":true},{"content":"Gets the access keys that was pressed.","nodes":[{"pos":[0,38],"content":"Gets the access keys that was pressed.","nodes":[{"content":"Gets the access keys that was pressed.","pos":[0,38]}]}],"pos":[3197,3236],"yaml":true},{"content":"The access key.","nodes":[{"pos":[0,15],"content":"The access key.","nodes":[{"content":"The access key.","pos":[0,15]}]}],"pos":[3343,3359],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.AccessKeyEventArgs\n  commentId: T:System.Windows.Input.AccessKeyEventArgs\n  id: AccessKeyEventArgs\n  children:\n  - System.Windows.Input.AccessKeyEventArgs.IsMultiple\n  - System.Windows.Input.AccessKeyEventArgs.Key\n  langs:\n  - csharp\n  name: AccessKeyEventArgs\n  nameWithType: AccessKeyEventArgs\n  fullName: System.Windows.Input.AccessKeyEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides information for access keys events.\n  syntax:\n    content: 'public class AccessKeyEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.AccessKeyEventArgs.IsMultiple\n  commentId: P:System.Windows.Input.AccessKeyEventArgs.IsMultiple\n  id: IsMultiple\n  parent: System.Windows.Input.AccessKeyEventArgs\n  langs:\n  - csharp\n  name: IsMultiple\n  nameWithType: AccessKeyEventArgs.IsMultiple\n  fullName: AccessKeyEventArgs.IsMultiple\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a value that indicates whether other elements are invoked by the key.\n  syntax:\n    content: public bool IsMultiple { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if other elements are invoked; otherwise, `false`.'\n  overload: System.Windows.Input.AccessKeyEventArgs.IsMultiple*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.AccessKeyEventArgs.Key\n  commentId: P:System.Windows.Input.AccessKeyEventArgs.Key\n  id: Key\n  parent: System.Windows.Input.AccessKeyEventArgs\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AccessKeyEventArgs.Key\n  fullName: AccessKeyEventArgs.Key\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the access keys that was pressed.\n  syntax:\n    content: public string Key { get; }\n    return:\n      type: System.String\n      description: The access key.\n  overload: System.Windows.Input.AccessKeyEventArgs.Key*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Input.AccessKeyEventArgs.IsMultiple\n  parent: System.Windows.Input.AccessKeyEventArgs\n  isExternal: false\n  name: IsMultiple\n  nameWithType: AccessKeyEventArgs.IsMultiple\n  fullName: AccessKeyEventArgs.IsMultiple\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.AccessKeyEventArgs.Key\n  parent: System.Windows.Input.AccessKeyEventArgs\n  isExternal: false\n  name: Key\n  nameWithType: AccessKeyEventArgs.Key\n  fullName: AccessKeyEventArgs.Key\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Input.AccessKeyEventArgs.IsMultiple*\n  parent: System.Windows.Input.AccessKeyEventArgs\n  isExternal: false\n  name: IsMultiple\n  nameWithType: AccessKeyEventArgs.IsMultiple\n  fullName: AccessKeyEventArgs.IsMultiple\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyEventArgs.xml\n- uid: System.Windows.Input.AccessKeyEventArgs.Key*\n  parent: System.Windows.Input.AccessKeyEventArgs\n  isExternal: false\n  name: Key\n  nameWithType: AccessKeyEventArgs.Key\n  fullName: AccessKeyEventArgs.Key\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}