{"nodes":[{"content":"The exception that is thrown when the <xref href=\"System.Threading.Semaphore.Release*\"></xref> method is called on a semaphore whose count is already at the maximum.","nodes":[{"pos":[0,165],"content":"The exception that is thrown when the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Semaphore.Release*\"&gt;&lt;/xref&gt;</ph> method is called on a semaphore whose count is already at the maximum.","source":"The exception that is thrown when the <xref href=\"System.Threading.Semaphore.Release*\"></xref> method is called on a semaphore whose count is already at the maximum."}],"pos":[781,947],"yaml":true},{"content":"The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore. When the count is zero, subsequent requests block until other threads release the semaphore. When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created. If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown.  \n  \n> [!NOTE]\n>  The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> methods. It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>.  \n  \n <xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred. Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two. A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full. As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.  \n  \n For a list of initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class, see the <xref:System.Threading.SemaphoreFullException.%23ctor> constructor.","nodes":[{"pos":[0,552],"content":"The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore. When the count is zero, subsequent requests block until other threads release the semaphore. When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created. If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown.","nodes":[{"content":"The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore. When the count is zero, subsequent requests block until other threads release the semaphore. When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created. If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown.","pos":[0,552],"nodes":[{"content":"The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.","pos":[0,134]},{"content":"When the count is zero, subsequent requests block until other threads release the semaphore.","pos":[135,227]},{"content":"When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.","pos":[228,349]},{"content":"If a programming error causes a thread to call the <ph id=\"ph1\">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName&gt;</ph> method at this point, a <ph id=\"ph2\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.","pos":[350,552],"source":" If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown."}]}]},{"pos":[560,969],"content":"[!NOTE]\n The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> methods. It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> methods. It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>.","pos":[8,407],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Semaphore&gt;</ph> class does not enforce thread identity on calls to the <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName&gt;</ph> methods.","pos":[1,247],"source":" The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> methods."},{"content":"It is not necessary for the same thread that called <ph id=\"ph1\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> to call <ph id=\"ph2\">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>.","pos":[248,399],"source":" It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>."}]}]},{"pos":[976,1508],"content":"<xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred. Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two. A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full. As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.","nodes":[{"content":"<xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred. Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two. A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full. As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.","pos":[0,532],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> does not necessarily indicate a problem with the code where the exception occurred.","pos":[0,130],"source":"<xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred."},{"content":"Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two.","pos":[131,236]},{"content":"A programming error in thread B causes it to call <ph id=\"ph1\">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> twice, so that the count on the semaphore is full.","pos":[237,382],"source":" A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full."},{"content":"As a result, when thread A eventually calls <ph id=\"ph1\">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.","pos":[383,532],"source":" As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown."}]}]},{"pos":[1515,1705],"content":"For a list of initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class, see the <xref:System.Threading.SemaphoreFullException.%23ctor> constructor.","nodes":[{"content":"For a list of initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class, see the <ph id=\"ph2\">&lt;xref:System.Threading.SemaphoreFullException.%23ctor&gt;</ph> constructor.","pos":[0,190],"source":"For a list of initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class, see the <xref:System.Threading.SemaphoreFullException.%23ctor> constructor."}]}],"pos":[958,2673],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with default values.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SemaphoreFullException\"&gt;&lt;/xref&gt;</ph> class with default values.","source":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with default values."}],"pos":[6154,6276],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Adding the given count to the semaphore would cause it to exceed its maximum count.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The system-supplied error message string.|","nodes":[{"pos":[0,305],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Adding the given count to the semaphore would cause it to exceed its maximum count.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Adding the given count to the semaphore would cause it to exceed its maximum count.\" This message takes into account the current system culture.","pos":[0,305],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Adding the given count to the semaphore would cause it to exceed its maximum count.\"","pos":[0,245],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Adding the given count to the semaphore would cause it to exceed its maximum count.\""},{"content":"This message takes into account the current system culture.","pos":[246,305]}]}]},{"pos":[312,442],"content":"The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class.","nodes":[{"content":"The following table shows the initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class.","pos":[0,130],"source":"The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class."}]},{"pos":[449,457],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[458,463],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[499,540],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[541,548],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[553,587],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[588,629],"content":"The system-supplied error message string.","nodes":[{"content":"The system-supplied error message string.","pos":[0,41]}]}],"pos":[6287,6929],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SemaphoreFullException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message."}],"pos":[8664,8797],"yaml":true},{"content":"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class initialized with this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|`message`.|","nodes":[{"pos":[0,211],"content":"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> is a text string intended to inform the user about the exception.","pos":[0,90],"source":"The content of `message` is a text string intended to inform the user about the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[91,211]}]},{"pos":[218,382],"content":"The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class initialized with this constructor.","nodes":[{"content":"The following table shows the initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class initialized with this constructor.","pos":[0,164],"source":"The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class initialized with this constructor."}]},{"pos":[389,397],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[398,403],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[439,480],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[481,488],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[493,527],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[528,538],"content":"<ph id=\"ph1\">`message`</ph>.","source":"`message`."}],"pos":[8808,9357],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[9507,9569],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with serialized data.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SemaphoreFullException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with serialized data."}],"pos":[11552,11675],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[11686,11918],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown."}],"pos":[12193,12344],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination."}],"pos":[12439,12587],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SemaphoreFullException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[14026,14234],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]}],"pos":[14245,14673],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[14849,14911],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,202],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,202],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[14984,15187],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.SemaphoreFullException\n  commentId: T:System.Threading.SemaphoreFullException\n  id: SemaphoreFullException\n  children:\n  - System.Threading.SemaphoreFullException.#ctor\n  - System.Threading.SemaphoreFullException.#ctor(System.String)\n  - System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: SemaphoreFullException\n  nameWithType: SemaphoreFullException\n  fullName: System.Threading.SemaphoreFullException\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: The exception that is thrown when the <xref href=\"System.Threading.Semaphore.Release*\"></xref> method is called on a semaphore whose count is already at the maximum.\n  remarks: \"The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore. When the count is zero, subsequent requests block until other threads release the semaphore. When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created. If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=fullName> methods. It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>.  \\n  \\n <xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred. Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two. A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full. As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.  \\n  \\n For a list of initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class, see the <xref:System.Threading.SemaphoreFullException.%23ctor> constructor.\"\n  example:\n  - \"The following code example shows how a programming error in one thread can lead to a <xref:System.Threading.SemaphoreFullException> in another thread: Two threads enter a semaphore. The second thread releases the semaphore twice, while the first thread is still executing its task. When the first thread finishes and releases the semaphore, the semaphore count is already full and an exception is thrown.  \\n  \\n [!code-cpp[System.Threading.SemaphoreFullException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/CPP/source.cpp#1)]\\n [!code-csharp[System.Threading.SemaphoreFullException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/CS/source.cs#1)]\\n [!code-vb[System.Threading.SemaphoreFullException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class SemaphoreFullException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SemaphoreFullException.#ctor\n  commentId: M:System.Threading.SemaphoreFullException.#ctor\n  id: '#ctor'\n  parent: System.Threading.SemaphoreFullException\n  langs:\n  - csharp\n  name: SemaphoreFullException()\n  nameWithType: SemaphoreFullException.SemaphoreFullException()\n  fullName: SemaphoreFullException.SemaphoreFullException()\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with default values.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Adding the given count to the semaphore would cause it to exceed its maximum count.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The system-supplied error message string.|\"\n  syntax:\n    content: public SemaphoreFullException ();\n    parameters: []\n  overload: System.Threading.SemaphoreFullException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SemaphoreFullException.#ctor(System.String)\n  commentId: M:System.Threading.SemaphoreFullException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.SemaphoreFullException\n  langs:\n  - csharp\n  name: SemaphoreFullException(String)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(String)\n  fullName: SemaphoreFullException.SemaphoreFullException(String)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message.\n  remarks: \"The content of `message` is a text string intended to inform the user about the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class initialized with this constructor.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|`message`.|\"\n  syntax:\n    content: public SemaphoreFullException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n  overload: System.Threading.SemaphoreFullException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Threading.SemaphoreFullException\n  langs:\n  - csharp\n  name: SemaphoreFullException(SerializationInfo, StreamingContext)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(SerializationInfo, StreamingContext)\n  fullName: SemaphoreFullException.SemaphoreFullException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: protected SemaphoreFullException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.\n  overload: System.Threading.SemaphoreFullException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.SemaphoreFullException\n  langs:\n  - csharp\n  name: SemaphoreFullException(String, Exception)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(String, Exception)\n  fullName: SemaphoreFullException.SemaphoreFullException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.SemaphoreFullException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.\n  syntax:\n    content: public SemaphoreFullException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.Threading.SemaphoreFullException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.SemaphoreFullException.#ctor\n  parent: System.Threading.SemaphoreFullException\n  isExternal: false\n  name: SemaphoreFullException()\n  nameWithType: SemaphoreFullException.SemaphoreFullException()\n  fullName: SemaphoreFullException.SemaphoreFullException()\n- uid: System.Threading.SemaphoreFullException.#ctor(System.String)\n  parent: System.Threading.SemaphoreFullException\n  isExternal: false\n  name: SemaphoreFullException(String)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(String)\n  fullName: SemaphoreFullException.SemaphoreFullException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Threading.SemaphoreFullException\n  isExternal: false\n  name: SemaphoreFullException(SerializationInfo, StreamingContext)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(SerializationInfo, StreamingContext)\n  fullName: SemaphoreFullException.SemaphoreFullException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)\n  parent: System.Threading.SemaphoreFullException\n  isExternal: false\n  name: SemaphoreFullException(String, Exception)\n  nameWithType: SemaphoreFullException.SemaphoreFullException(String, Exception)\n  fullName: SemaphoreFullException.SemaphoreFullException(String, Exception)\n- uid: System.Threading.SemaphoreFullException.#ctor*\n  parent: System.Threading.SemaphoreFullException\n  isExternal: false\n  name: SemaphoreFullException\n  nameWithType: SemaphoreFullException.SemaphoreFullException\n  fullName: SemaphoreFullException.SemaphoreFullException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SemaphoreFullException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}