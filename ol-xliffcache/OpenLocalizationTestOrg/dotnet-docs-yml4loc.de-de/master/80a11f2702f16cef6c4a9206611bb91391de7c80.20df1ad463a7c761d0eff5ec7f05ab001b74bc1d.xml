{"nodes":[{"content":"Provides access to documents, methods, and variables within a symbol store.","nodes":[{"pos":[0,75],"content":"Provides access to documents, methods, and variables within a symbol store.","nodes":[{"content":"Provides access to documents, methods, and variables within a symbol store.","pos":[0,75]}]}],"pos":[1787,1863],"yaml":true},{"content":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class.","nodes":[{"pos":[0,127],"content":"Releases the resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class."}],"pos":[4993,5121],"yaml":true},{"content":"Called by the <xref href=\"System.Diagnostics.SymbolStore.SymReader.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymReader.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class.","nodes":[{"pos":[0,318],"content":"Called by the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymReader.Dispose\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymReader.Finalize\"&gt;&lt;/xref&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Called by the <xref href=\"System.Diagnostics.SymbolStore.SymReader.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymReader.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class."}],"pos":[6280,6599],"yaml":true},{"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.","nodes":[{"pos":[0,206],"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.","nodes":[{"content":"This method is called only by the public <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A&gt;</ph> methods; do not call this method directly.","pos":[0,206],"source":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly."}]}],"pos":[6610,6817],"yaml":true,"extradata":"MT"},{"content":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> to release managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[7048,7146],"yaml":true},{"content":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> is reclaimed by garbage collection.","nodes":[{"pos":[0,175],"content":"Releases unmanaged resources and performs other cleanup operations before the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymReader\"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.","source":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> is reclaimed by garbage collection."}],"pos":[8264,8440],"yaml":true},{"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"pos":[0,309],"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"content":"This method overrides  <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph>.","pos":[0,56],"source":"This method overrides  <xref:System.Object.Finalize%2A>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id=\"ph2\">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.","pos":[57,309],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]}],"pos":[8451,8761],"yaml":true,"extradata":"MT"},{"content":"Gets a document specified by the URL for the document and optionally the language, language vendor, and type.","nodes":[{"pos":[0,109],"content":"Gets a document specified by the URL for the document and optionally the language, language vendor, and type.","nodes":[{"content":"Gets a document specified by the URL for the document and optionally the language, language vendor, and type.","pos":[0,109]}]}],"pos":[10076,10186],"yaml":true},{"content":"The `language`, `languageVendor`, and `documentType` parameters are currently ignored.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">`language`</ph>, <ph id=\"ph2\">`languageVendor`</ph>, and <ph id=\"ph3\">`documentType`</ph> parameters are currently ignored.","source":"The `language`, `languageVendor`, and `documentType` parameters are currently ignored."}],"pos":[10197,10284],"yaml":true,"extradata":"MT"},{"content":"The URL that identifies the document.","nodes":[{"pos":[0,37],"content":"The URL that identifies the document.","nodes":[{"content":"The URL that identifies the document.","pos":[0,37]}]}],"pos":[10525,10563],"yaml":true},{"content":"The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>. to indicate any language.","nodes":[{"pos":[0,122],"content":"The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>. to indicate any language.","nodes":[{"content":"The document language.","pos":[0,22]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[23,96],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>."},{"content":"to indicate any language.","pos":[97,122]}]}],"pos":[10625,10748],"yaml":true},{"content":"The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any language vendor.","nodes":[{"pos":[0,159],"content":"The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any language vendor.","nodes":[{"content":"The identity of the vendor for the document language.","pos":[0,53]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph> to indicate any language vendor.","pos":[54,159],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any language vendor."}]}],"pos":[10816,10976],"yaml":true},{"content":"The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any document type.","nodes":[{"pos":[0,129],"content":"The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any document type.","nodes":[{"content":"The type of the document.","pos":[0,25]},{"content":"You can specify this parameter as <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph> to indicate any document type.","pos":[26,129],"source":" You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any document type."}]}],"pos":[11042,11172],"yaml":true},{"content":"The document with the specified URL if found in the symbol store, or `null` if the document does not exist.","nodes":[{"pos":[0,107],"content":"The document with the specified URL if found in the symbol store, or <ph id=\"ph1\">`null`</ph> if the document does not exist.","source":"The document with the specified URL if found in the symbol store, or `null` if the document does not exist."}],"pos":[11262,11370],"yaml":true},{"content":"Gets an array of all documents defined in the symbol store.","nodes":[{"pos":[0,59],"content":"Gets an array of all documents defined in the symbol store.","nodes":[{"content":"Gets an array of all documents defined in the symbol store.","pos":[0,59]}]}],"pos":[12412,12472],"yaml":true},{"content":"An array of all documents defined in the symbol store.","nodes":[{"pos":[0,54],"content":"An array of all documents defined in the symbol store.","nodes":[{"content":"An array of all documents defined in the symbol store.","pos":[0,54]}]}],"pos":[12687,12742],"yaml":true},{"content":"There is insufficient memory to satisfy the request.","nodes":[{"pos":[0,52],"content":"There is insufficient memory to satisfy the request.","nodes":[{"content":"There is insufficient memory to satisfy the request.","pos":[0,52]}]}],"pos":[12923,12976],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[13971,14044],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[14265,14338],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[14527,14541],"yaml":true},{"content":"Gets a symbol reader method object when given the identifier of a method.","nodes":[{"pos":[0,73],"content":"Gets a symbol reader method object when given the identifier of a method.","nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method.","pos":[0,73]}]}],"pos":[15647,15721],"yaml":true},{"content":"The metadata token of the method.","nodes":[{"pos":[0,33],"content":"The metadata token of the method.","nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]}],"pos":[15974,16008],"yaml":true},{"content":"The symbol reader method object for the specified method identifier.","nodes":[{"pos":[0,68],"content":"The symbol reader method object for the specified method identifier.","nodes":[{"content":"The symbol reader method object for the specified method identifier.","pos":[0,68]}]}],"pos":[16096,16165],"yaml":true},{"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","nodes":[{"pos":[0,107],"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","nodes":[{"content":"Gets a symbol reader method object when given the identifier of a method and its edit and continue version.","pos":[0,107]}]}],"pos":[17412,17520],"yaml":true},{"content":"The metadata token of the method.","nodes":[{"pos":[0,33],"content":"The metadata token of the method.","nodes":[{"content":"The metadata token of the method.","pos":[0,33]}]}],"pos":[17786,17820],"yaml":true},{"content":"The edit and continue version of the method.","nodes":[{"pos":[0,44],"content":"The edit and continue version of the method.","nodes":[{"content":"The edit and continue version of the method.","pos":[0,44]}]}],"pos":[17882,17927],"yaml":true},{"content":"The symbol reader method object for the specified method identifier and version.","nodes":[{"pos":[0,80],"content":"The symbol reader method object for the specified method identifier and version.","nodes":[{"content":"The symbol reader method object for the specified method identifier and version.","pos":[0,80]}]}],"pos":[18015,18096],"yaml":true},{"content":"Gets a symbol reader method object that contains a specified position in a document.","nodes":[{"pos":[0,84],"content":"Gets a symbol reader method object that contains a specified position in a document.","nodes":[{"content":"Gets a symbol reader method object that contains a specified position in a document.","pos":[0,84]}]}],"pos":[19547,19632],"yaml":true},{"content":"The document in which the method is located.","nodes":[{"pos":[0,44],"content":"The document in which the method is located.","nodes":[{"content":"The document in which the method is located.","pos":[0,44]}]}],"pos":[19939,19984],"yaml":true},{"content":"The position of the line within the document. The lines are numbered, beginning with 1.","nodes":[{"pos":[0,87],"content":"The position of the line within the document. The lines are numbered, beginning with 1.","nodes":[{"content":"The position of the line within the document. The lines are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of the line within the document.","pos":[0,45]},{"content":"The lines are numbered, beginning with 1.","pos":[46,87]}]}]}],"pos":[20043,20131],"yaml":true},{"content":"The position of column within the document. The columns are numbered, beginning with 1.","nodes":[{"pos":[0,87],"content":"The position of column within the document. The columns are numbered, beginning with 1.","nodes":[{"content":"The position of column within the document. The columns are numbered, beginning with 1.","pos":[0,87],"nodes":[{"content":"The position of column within the document.","pos":[0,43]},{"content":"The columns are numbered, beginning with 1.","pos":[44,87]}]}]}],"pos":[20192,20280],"yaml":true},{"content":"The symbol reader method object for the specified position in the document.","nodes":[{"pos":[0,75],"content":"The symbol reader method object for the specified position in the document.","nodes":[{"content":"The symbol reader method object for the specified position in the document.","pos":[0,75]}]}],"pos":[20368,20444],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[21510,21583],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[21801,21874],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[22058,22072],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[23280,23353],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[23587,23615],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[23675,23703],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[23760,23833],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[24019,24033],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[25157,25230],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[25490,25518],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[25610,25683],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[25866,25880],"yaml":true},{"content":"Replaces the existing symbol store with a delta symbol store.","nodes":[{"pos":[0,61],"content":"Replaces the existing symbol store with a delta symbol store.","nodes":[{"content":"Replaces the existing symbol store with a delta symbol store.","pos":[0,61]}]}],"pos":[27004,27066],"yaml":true},{"content":"The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.  \n  \n Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .","nodes":[{"pos":[0,241],"content":"The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A&gt;</ph> is much like the <ph id=\"ph2\">&lt;xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A&gt;</ph> method, but the given delta acts as a complete replacement rather than an update.","pos":[0,241],"source":"The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update."}]},{"pos":[248,543],"content":"Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .","nodes":[{"content":"Only one of the parameters, <ph id=\"ph1\">`fileName`</ph> or <ph id=\"ph2\">`stream`</ph>, needs to be specified.","pos":[0,74],"source":"Only one of the parameters, `fileName` or `stream`, needs to be specified."},{"content":"If <ph id=\"ph1\">`fileName`</ph> is specified, the symbol store is updated with the symbols in that file.","pos":[75,161],"source":" If `fileName` is specified, the symbol store is updated with the symbols in that file."},{"content":"If <ph id=\"ph1\">`stream`</ph> is specified, the symbol store is updated with the data from the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> .","pos":[162,295],"source":" If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> ."}]}],"pos":[27077,27625],"yaml":true,"extradata":"MT"},{"content":"The name of the file containing the symbol store, or `null` if using an in-memory store.","nodes":[{"pos":[0,88],"content":"The name of the file containing the symbol store, or <ph id=\"ph1\">`null`</ph> if using an in-memory store.","source":"The name of the file containing the symbol store, or `null` if using an in-memory store."}],"pos":[27801,27890],"yaml":true},{"content":"The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store.","nodes":[{"pos":[0,123],"content":"The pointer to the input stream for the symbol store, or <ph id=\"ph1\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph> if using an on-disk store.","source":"The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store."}],"pos":[27952,28076],"yaml":true},{"content":"Updates the existing symbol store with a delta symbol store.","nodes":[{"pos":[0,60],"content":"Updates the existing symbol store with a delta symbol store.","nodes":[{"content":"Updates the existing symbol store with a delta symbol store.","pos":[0,60]}]}],"pos":[29284,29345],"yaml":true},{"content":"This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.  \n  \n Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .","nodes":[{"pos":[0,127],"content":"This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.","nodes":[{"content":"This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.","pos":[0,127]}]},{"pos":[134,429],"content":"Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .","nodes":[{"content":"Only one of the parameters, <ph id=\"ph1\">`fileName`</ph> or <ph id=\"ph2\">`stream`</ph>, needs to be specified.","pos":[0,74],"source":"Only one of the parameters, `fileName` or `stream`, needs to be specified."},{"content":"If <ph id=\"ph1\">`fileName`</ph> is specified, the symbol store is updated with the symbols in that file.","pos":[75,161],"source":" If `fileName` is specified, the symbol store is updated with the symbols in that file."},{"content":"If <ph id=\"ph1\">`stream`</ph> is specified, the symbol store is updated with the data from the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> .","pos":[162,295],"source":" If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> ."}]}],"pos":[29356,29790],"yaml":true,"extradata":"MT"},{"content":"The name of the file containing the symbol store, or `null` if using an in-memory store.","nodes":[{"pos":[0,88],"content":"The name of the file containing the symbol store, or <ph id=\"ph1\">`null`</ph> if using an in-memory store.","source":"The name of the file containing the symbol store, or `null` if using an in-memory store."}],"pos":[29965,30054],"yaml":true},{"content":"The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store.","nodes":[{"pos":[0,123],"content":"The pointer to the input stream for the symbol store, or <ph id=\"ph1\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph> if using an on-disk store.","source":"The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store."}],"pos":[30116,30240],"yaml":true},{"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","nodes":[{"pos":[0,105],"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","nodes":[{"content":"Gets the metadata token for the method that was specified as the user entry point for the module, if any.","pos":[0,105]}]}],"pos":[31296,31402],"yaml":true},{"content":"The return value is normally the main method.","nodes":[{"pos":[0,45],"content":"The return value is normally the main method.","nodes":[{"content":"The return value is normally the main method.","pos":[0,45]}]}],"pos":[31413,31459],"yaml":true,"extradata":"MT"},{"content":"The metadata token for the method that is the user entry point for the module.","nodes":[{"pos":[0,78],"content":"The metadata token for the method that is the user entry point for the module.","nodes":[{"content":"The metadata token for the method that is the user entry point for the module.","pos":[0,78]}]}],"pos":[31650,31729],"yaml":true},{"content":"An entry point was not found.","nodes":[{"pos":[0,29],"content":"An entry point was not found.","nodes":[{"content":"An entry point was not found.","pos":[0,29]}]}],"pos":[31944,31974],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymReader\n  commentId: T:System.Diagnostics.SymbolStore.SymReader\n  id: SymReader\n  children:\n  - System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  - System.Diagnostics.SymbolStore.SymReader.Dispose\n  - System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymReader.Finalize\n  - System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  - System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  - System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  - System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  - System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  - System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  - System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  langs:\n  - csharp\n  name: SymReader\n  nameWithType: SymReader\n  fullName: System.Diagnostics.SymbolStore.SymReader\n  type: Class\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Provides access to documents, methods, and variables within a symbol store.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymReaderBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolReader\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymReaderBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)'\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: SymReader(ISymUnmanagedReader*)\n  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)\n  fullName: SymReader.SymReader(ISymUnmanagedReader*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);\n    parameters:\n    - id: pReader\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*\n      description: ''\n  overload: System.Diagnostics.SymbolStore.SymReader.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymReader.Dispose()\n  fullName: SymReader.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class.\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymReader.Dispose(Boolean)\n  fullName: SymReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Called by the <xref href=\"System.Diagnostics.SymbolStore.SymReader.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymReader.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> class.\n  remarks: This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.\n  syntax:\n    content: >-\n      [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]\n\n      protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: '`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.Finalize\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymReader.Finalize()\n  fullName: SymReader.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymReader\"></xref> is reclaimed by garbage collection.\n  remarks: This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.\n  syntax:\n    content: ~SymReader ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymReader.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetDocument(String, Guid, Guid, Guid)\n  nameWithType: SymReader.GetDocument(String, Guid, Guid, Guid)\n  fullName: SymReader.GetDocument(String, Guid, Guid, Guid)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a document specified by the URL for the document and optionally the language, language vendor, and type.\n  remarks: The `language`, `languageVendor`, and `documentType` parameters are currently ignored.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL that identifies the document.\n    - id: language\n      type: System.Guid\n      description: The document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref>. to indicate any language.\n    - id: languageVendor\n      type: System.Guid\n      description: The identity of the vendor for the document language. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any language vendor.\n    - id: documentType\n      type: System.Guid\n      description: The type of the document. You can specify this parameter as <xref href=\"System.Guid.Empty\"></xref> to indicate any document type.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document with the specified URL if found in the symbol store, or `null` if the document does not exist.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetDocument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  id: GetDocuments\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetDocuments()\n  nameWithType: SymReader.GetDocuments()\n  fullName: SymReader.GetDocuments()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an array of all documents defined in the symbol store.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: An array of all documents defined in the symbol store.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetDocuments*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to satisfy the request.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  id: GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetGlobalVariables()\n  nameWithType: SymReader.GetGlobalVariables()\n  fullName: SymReader.GetGlobalVariables()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken)\n  nameWithType: SymReader.GetMethod(SymbolToken)\n  fullName: SymReader.GetMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken, Int32)\n  nameWithType: SymReader.GetMethod(SymbolToken, Int32)\n  fullName: SymReader.GetMethod(SymbolToken, Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object when given the identifier of a method and its edit and continue version.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token of the method.\n    - id: version\n      type: System.Int32\n      description: The edit and continue version of the method.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified method identifier and version.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  fullName: SymReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a symbol reader method object that contains a specified position in a document.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document in which the method is located.\n    - id: line\n      type: System.Int32\n      description: The position of the line within the document. The lines are numbered, beginning with 1.\n    - id: column\n      type: System.Int32\n      description: The position of column within the document. The columns are numbered, beginning with 1.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The symbol reader method object for the specified position in the document.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: SymReader.GetNamespaces()\n  fullName: SymReader.GetNamespaces()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetSymAttribute(SymbolToken, String)\n  nameWithType: SymReader.GetSymAttribute(SymbolToken, String)\n  fullName: SymReader.GetSymAttribute(SymbolToken, String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  syntax:\n    content: public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: This parameter is not used.\n    - id: name\n      type: System.String\n      description: This parameter is not used.\n    return:\n      type: System.Byte[]\n      description: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetVariables(SymbolToken)\n  nameWithType: SymReader.GetVariables(SymbolToken)\n  fullName: SymReader.GetVariables(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: This parameter is not used.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  overload: System.Diagnostics.SymbolStore.SymReader.GetVariables*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  id: ReplaceSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: ReplaceSymbolStore(String, IntPtr)\n  nameWithType: SymReader.ReplaceSymbolStore(String, IntPtr)\n  fullName: SymReader.ReplaceSymbolStore(String, IntPtr)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Replaces the existing symbol store with a delta symbol store.\n  remarks: \"The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.  \\n  \\n Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .\"\n  syntax:\n    content: public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file containing the symbol store, or `null` if using an in-memory store.\n    - id: stream\n      type: System.IntPtr\n      description: The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store.\n  overload: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  commentId: M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  id: UpdateSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: UpdateSymbolStore(String, IntPtr)\n  nameWithType: SymReader.UpdateSymbolStore(String, IntPtr)\n  fullName: SymReader.UpdateSymbolStore(String, IntPtr)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Updates the existing symbol store with a delta symbol store.\n  remarks: \"This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.  \\n  \\n Only one of the parameters, `fileName` or `stream`, needs to be specified. If `fileName` is specified, the symbol store is updated with the symbols in that file. If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .\"\n  syntax:\n    content: public virtual void UpdateSymbolStore (string fileName, IntPtr stream);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file containing the symbol store, or `null` if using an in-memory store.\n    - id: stream\n      type: System.IntPtr\n      description: The pointer to the input stream for the symbol store, or <xref href=\"System.IntPtr.Zero\"></xref> if using an on-disk store.\n  overload: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  commentId: P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  id: UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: UserEntryPoint\n  nameWithType: SymReader.UserEntryPoint\n  fullName: SymReader.UserEntryPoint\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the metadata token for the method that was specified as the user entry point for the module, if any.\n  remarks: The return value is normally the main method.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the method that is the user entry point for the module.\n  overload: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: An entry point was not found.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymReaderBase\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymReaderBase\n  nameWithType: SymReaderBase\n  fullName: System.Diagnostics.SymbolStore.SymReaderBase\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Runtime.InteropServices.COMException\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: COMException\n  nameWithType: COMException\n  fullName: System.Runtime.InteropServices.COMException\n- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: SymReader(ISymUnmanagedReader*)\n  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)\n  fullName: SymReader.SymReader(ISymUnmanagedReader*)\n- uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader\n  name: ISymUnmanagedReader\n  nameWithType: ISymUnmanagedReader\n  fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader\n- uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*\n  parent: System.Diagnostics.SymbolStore.Private\n  isExternal: true\n  name: ISymUnmanagedReader*\n  nameWithType: ISymUnmanagedReader*\n  fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader\n    name: ISymUnmanagedReader\n    nameWithType: ISymUnmanagedReader\n    fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader\n  - name: '*'\n    nameWithType: '*'\n    fullName: '*'\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymReader.Dispose()\n  fullName: SymReader.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymReader.Dispose(Boolean)\n  fullName: SymReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymReader.Finalize\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymReader.Finalize()\n  fullName: SymReader.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocument(String, Guid, Guid, Guid)\n  nameWithType: SymReader.GetDocument(String, Guid, Guid, Guid)\n  fullName: SymReader.GetDocument(String, Guid, Guid, Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocuments()\n  nameWithType: SymReader.GetDocuments()\n  fullName: SymReader.GetDocuments()\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument[]\n  nameWithType: ISymbolDocument[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolDocument\n    name: ISymbolDocument\n    nameWithType: ISymbolDocument\n    fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetGlobalVariables()\n  nameWithType: SymReader.GetGlobalVariables()\n  fullName: SymReader.GetGlobalVariables()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable[]\n  nameWithType: ISymbolVariable[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethod(SymbolToken)\n  nameWithType: SymReader.GetMethod(SymbolToken)\n  fullName: SymReader.GetMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethod(SymbolToken, Int32)\n  nameWithType: SymReader.GetMethod(SymbolToken, Int32)\n  fullName: SymReader.GetMethod(SymbolToken, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n  fullName: SymReader.GetMethodFromDocumentPosition(ISymbolDocument, Int32, Int32)\n- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: SymReader.GetNamespaces()\n  fullName: SymReader.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace[]\n  nameWithType: ISymbolNamespace[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n    name: ISymbolNamespace\n    nameWithType: ISymbolNamespace\n    fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetSymAttribute(SymbolToken, String)\n  nameWithType: SymReader.GetSymAttribute(SymbolToken, String)\n  fullName: SymReader.GetSymAttribute(SymbolToken, String)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetVariables(SymbolToken)\n  nameWithType: SymReader.GetVariables(SymbolToken)\n  fullName: SymReader.GetVariables(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: ReplaceSymbolStore(String, IntPtr)\n  nameWithType: SymReader.ReplaceSymbolStore(String, IntPtr)\n  fullName: SymReader.ReplaceSymbolStore(String, IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UpdateSymbolStore(String, IntPtr)\n  nameWithType: SymReader.UpdateSymbolStore(String, IntPtr)\n  fullName: SymReader.UpdateSymbolStore(String, IntPtr)\n- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: SymReader.UserEntryPoint\n  fullName: SymReader.UserEntryPoint\n- uid: System.Diagnostics.SymbolStore.SymReader.#ctor*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: SymReader\n  nameWithType: SymReader.SymReader\n  fullName: SymReader.SymReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Dispose\n  nameWithType: SymReader.Dispose\n  fullName: SymReader.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.Finalize*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Finalize\n  nameWithType: SymReader.Finalize\n  fullName: SymReader.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocument\n  nameWithType: SymReader.GetDocument\n  fullName: SymReader.GetDocument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocuments\n  nameWithType: SymReader.GetDocuments\n  fullName: SymReader.GetDocuments\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetGlobalVariables\n  nameWithType: SymReader.GetGlobalVariables\n  fullName: SymReader.GetGlobalVariables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethod\n  nameWithType: SymReader.GetMethod\n  fullName: SymReader.GetMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition\n  nameWithType: SymReader.GetMethodFromDocumentPosition\n  fullName: SymReader.GetMethodFromDocumentPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetNamespaces\n  nameWithType: SymReader.GetNamespaces\n  fullName: SymReader.GetNamespaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetSymAttribute\n  nameWithType: SymReader.GetSymAttribute\n  fullName: SymReader.GetSymAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetVariables\n  nameWithType: SymReader.GetVariables\n  fullName: SymReader.GetVariables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: ReplaceSymbolStore\n  nameWithType: SymReader.ReplaceSymbolStore\n  fullName: SymReader.ReplaceSymbolStore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UpdateSymbolStore\n  nameWithType: SymReader.UpdateSymbolStore\n  fullName: SymReader.UpdateSymbolStore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: SymReader.UserEntryPoint\n  fullName: SymReader.UserEntryPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.SymbolStore.SymReaderBase.{dtor}\n  parent: System.Diagnostics.SymbolStore.SymReaderBase\n  isExternal: false\n  name: '{dtor}()'\n  nameWithType: SymReaderBase.{dtor}()\n  fullName: SymReaderBase.{dtor}()\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}