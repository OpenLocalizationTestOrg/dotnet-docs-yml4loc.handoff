{"nodes":[{"content":"Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's raw data.","nodes":[{"pos":[0,174],"content":"Represents a key identifier clause that identifies a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> security token using the X.509 certificate's raw data.","source":"Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's raw data."}],"pos":[1158,1333],"yaml":true},{"content":"Typically, the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's raw data. The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data.  \n  \n [!INCLUDE[indigo1](~/includes/indigo1-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.  \n  \n-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \n  \n-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \n  \n-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  \n  \n <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>","nodes":[{"pos":[0,936],"content":"Typically, the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's raw data. The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data.","nodes":[{"content":"Typically, the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's raw data. The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data.","pos":[0,936],"nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.","pos":[0,166],"source":"Typically, the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> does not need to be used, other than when a custom security token service is created."},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[167,312]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.","pos":[313,535]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[536,616]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph> class to reference a <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security token using the X.509 certificate's raw data.","pos":[617,819],"source":" Use the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's raw data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A&gt;</ph> method returns the raw data.","pos":[820,936],"source":" The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data."}]}]},{"pos":[943,1120],"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> supports the following types of security token references for <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.","source":"[!INCLUDE[indigo1](~/includes/indigo1-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens."},{"pos":[1130,1200],"content":"<xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>","nodes":[]},{"pos":[1210,1275],"content":"<xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>","nodes":[]},{"pos":[1285,1350],"content":"<xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","nodes":[]},{"pos":[1357,1425],"content":"<xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>","nodes":[]}],"pos":[1344,2782],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified raw data of an X.509 certificate.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified raw data of an X.509 certificate.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified raw data of an X.509 certificate."}],"pos":[5273,5447],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the raw data of an X.509 certificate.","nodes":[{"pos":[0,96],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the raw data of an X.509 certificate.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the raw data of an X.509 certificate."}],"pos":[5627,5724],"yaml":true},{"content":"<code>certificateRawData</code> is `null`.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;certificateRawData&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificateRawData</code> is `null`."}],"pos":[5918,5961],"yaml":true},{"content":"<code>certificateRawData</code> is zero length.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;certificateRawData&lt;/code&gt;</ph> is zero length.","source":"<code>certificateRawData</code> is zero length."}],"pos":[6075,6123],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified X.509 certificate.","nodes":[{"pos":[0,158],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified X.509 certificate.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified X.509 certificate."}],"pos":[7504,7663],"yaml":true},{"content":"The raw data is obtained for the `certificate` parameter using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method.","nodes":[{"pos":[0,161],"content":"The raw data is obtained for the <ph id=\"ph1\">`certificate`</ph> parameter using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A&gt;</ph> method.","source":"The raw data is obtained for the `certificate` parameter using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method."}],"pos":[7674,7836],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> that contains the X.509 certificate.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate."}],"pos":[8107,8231],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[8425,8461],"yaml":true},{"content":"Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor.","nodes":[{"pos":[0,151],"content":"Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor.","nodes":[{"content":"Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor.","pos":[0,151]}]}],"pos":[9558,9710],"yaml":true},{"content":"To create the key, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.","nodes":[{"pos":[0,111],"content":"To create the key, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.","nodes":[{"content":"To create the key, call the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> method.","pos":[0,111],"source":"To create the key, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method."}]}],"pos":[9721,9833],"yaml":true,"extradata":"MT"},{"content":"`true` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`true`</ph> in all cases.","source":"`true` in all cases."}],"pos":[9957,9980],"yaml":true},{"content":"Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.","nodes":[{"pos":[0,108],"content":"Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.","nodes":[{"content":"Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.","pos":[0,108]}]}],"pos":[11165,11274],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> that contains the key(s) associated with the X.509 certificate.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"&gt;&lt;/xref&gt;</ph> that contains the key(s) associated with the X.509 certificate.","source":"A <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> that contains the key(s) associated with the X.509 certificate."}],"pos":[11469,11610],"yaml":true},{"content":"Gets the raw data associated with the X.509 certificate.","nodes":[{"pos":[0,56],"content":"Gets the raw data associated with the X.509 certificate.","nodes":[{"content":"Gets the raw data associated with the X.509 certificate.","pos":[0,56]}]}],"pos":[12822,12879],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the raw data associated with the X.509 certificate.","nodes":[{"pos":[0,110],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the raw data associated with the X.509 certificate.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the raw data associated with the X.509 certificate."}],"pos":[13011,13122],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.","nodes":[{"pos":[0,125],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.","pos":[0,125]}]}],"pos":[14537,14663],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> method calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method for the `certificate` and then compares that to the current instance.","nodes":[{"pos":[0,261],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A&gt;</ph> method for the <ph id=\"ph3\">`certificate`</ph> and then compares that to the current instance.","source":"The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> method calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method for the `certificate` and then compares that to the current instance."}],"pos":[14674,14936],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> that contains the X.509 certificate to compare.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare."}],"pos":[15189,15324],"yaml":true},{"content":"`true` if <code>certificate</code> has the raw data that matches the current instance; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has the raw data that matches the current instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>certificate</code> has the raw data that matches the current instance; otherwise, `false`."}],"pos":[15382,15491],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[15687,15723],"yaml":true},{"content":"Returns the current object.","nodes":[{"pos":[0,27],"content":"Returns the current object.","nodes":[{"content":"Returns the current object.","pos":[0,27]}]}],"pos":[16800,16828],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> method returns the raw data that is Base-64 encoded.","nodes":[{"pos":[0,134],"content":"The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> method returns the raw data that is Base-64 encoded.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A&gt;</ph> method returns the raw data that is Base-64 encoded.","pos":[0,134],"source":"The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> method returns the raw data that is Base-64 encoded."}]}],"pos":[16839,16974],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the current object.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current object.","source":"A <xref href=\"System.String\"></xref> that represents the current object."}],"pos":[17109,17182],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  commentId: T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  id: X509RawDataKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString\n  langs:\n  - csharp\n  name: X509RawDataKeyIdentifierClause\n  nameWithType: X509RawDataKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's raw data.\n  remarks: \"Typically, the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's raw data. The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data.  \\n  \\n [!INCLUDE[indigo1](~/includes/indigo1-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  \\n  \\n <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>\"\n  syntax:\n    content: 'public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: X509RawDataKeyIdentifierClause(Byte[])\n  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])\n  fullName: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified raw data of an X.509 certificate.\n  syntax:\n    content: public X509RawDataKeyIdentifierClause (byte[] certificateRawData);\n    parameters:\n    - id: certificateRawData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the raw data of an X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificateRawData</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>certificateRawData</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: X509RawDataKeyIdentifierClause(X509Certificate2)\n  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)\n  fullName: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\"></xref> class using the specified X.509 certificate.\n  remarks: The raw data is obtained for the `certificate` parameter using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method.\n  syntax:\n    content: public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey\n  commentId: P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey\n  id: CanCreateKey\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: CanCreateKey\n  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey\n  fullName: X509RawDataKeyIdentifierClause.CanCreateKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor.\n  remarks: To create the key, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.\n  syntax:\n    content: public override bool CanCreateKey { get; }\n    return:\n      type: System.Boolean\n      description: '`true` in all cases.'\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey\n  id: CreateKey\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: CreateKey()\n  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()\n  fullName: X509RawDataKeyIdentifierClause.CreateKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKey CreateKey ();\n    parameters: []\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> that contains the key(s) associated with the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData\n  id: GetX509RawData\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetX509RawData()\n  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()\n  fullName: X509RawDataKeyIdentifierClause.GetX509RawData()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the raw data associated with the X.509 certificate.\n  syntax:\n    content: public byte[] GetX509RawData ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the raw data associated with the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(X509Certificate2)\n  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.\n  remarks: The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches%2A> method calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method for the `certificate` and then compares that to the current instance.\n  syntax:\n    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>certificate</code> has the raw data that matches the current instance; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString\n  commentId: M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString\n  id: ToString\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: X509RawDataKeyIdentifierClause.ToString()\n  fullName: X509RawDataKeyIdentifierClause.ToString()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the current object.\n  remarks: The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString%2A> method returns the raw data that is Base-64 encoded.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the current object.\n  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: X509RawDataKeyIdentifierClause(Byte[])\n  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])\n  fullName: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: X509RawDataKeyIdentifierClause(X509Certificate2)\n  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)\n  fullName: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey\n  fullName: X509RawDataKeyIdentifierClause.CanCreateKey\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: CreateKey()\n  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()\n  fullName: X509RawDataKeyIdentifierClause.CreateKey()\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: GetX509RawData()\n  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()\n  fullName: X509RawDataKeyIdentifierClause.GetX509RawData()\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: Matches(X509Certificate2)\n  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: ToString()\n  nameWithType: X509RawDataKeyIdentifierClause.ToString()\n  fullName: X509RawDataKeyIdentifierClause.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: X509RawDataKeyIdentifierClause\n  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause\n  fullName: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey\n  fullName: X509RawDataKeyIdentifierClause.CanCreateKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: CreateKey\n  nameWithType: X509RawDataKeyIdentifierClause.CreateKey\n  fullName: X509RawDataKeyIdentifierClause.CreateKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: GetX509RawData\n  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData\n  fullName: X509RawDataKeyIdentifierClause.GetX509RawData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: X509RawDataKeyIdentifierClause.Matches\n  fullName: X509RawDataKeyIdentifierClause.Matches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*\n  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  isExternal: false\n  name: ToString\n  nameWithType: X509RawDataKeyIdentifierClause.ToString\n  fullName: X509RawDataKeyIdentifierClause.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509RawDataKeyIdentifierClause.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: ClauseType\n  nameWithType: SecurityKeyIdentifierClause.ClauseType\n  fullName: SecurityKeyIdentifierClause.ClauseType\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: DerivationLength\n  nameWithType: SecurityKeyIdentifierClause.DerivationLength\n  fullName: SecurityKeyIdentifierClause.DerivationLength\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: GetDerivationNonce()\n  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()\n  fullName: SecurityKeyIdentifierClause.GetDerivationNonce()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: Id\n  nameWithType: SecurityKeyIdentifierClause.Id\n  fullName: SecurityKeyIdentifierClause.Id\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: BinaryKeyIdentifierClause.GetBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[])\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n"}