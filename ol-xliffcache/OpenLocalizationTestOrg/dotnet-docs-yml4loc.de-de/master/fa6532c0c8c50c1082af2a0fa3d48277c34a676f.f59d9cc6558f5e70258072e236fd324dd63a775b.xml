{"nodes":[{"content":"Provides the client certificate fields issued by the client in response to the server's request for the client's identity.","nodes":[{"pos":[0,122],"content":"Provides the client certificate fields issued by the client in response to the server's request for the client's identity.","nodes":[{"content":"Provides the client certificate fields issued by the client in response to the server's request for the client's identity.","pos":[0,122]}]}],"pos":[1237,1360],"yaml":true},{"content":"If a Web browser uses the SSL3.0/PCT1 protocol (the URL begins with https:// instead of http://) to connect to a server and the server requires client certificates, the browser sends the client certificate fields contained in its digital certificate.  \n  \n For more information about digital certificates, see the document X.509: Public-key and attribute certificate frameworks, available on the International Telecommunication Union (ITU) site at http://www.itu.int.","nodes":[{"pos":[0,250],"content":"If a Web browser uses the SSL3.0/PCT1 protocol (the URL begins with https:// instead of http://) to connect to a server and the server requires client certificates, the browser sends the client certificate fields contained in its digital certificate.","nodes":[{"content":"If a Web browser uses the SSL3.0/PCT1 protocol (the URL begins with https:// instead of http://) to connect to a server and the server requires client certificates, the browser sends the client certificate fields contained in its digital certificate.","pos":[0,250]}]},{"pos":[257,467],"content":"For more information about digital certificates, see the document X.509: Public-key and attribute certificate frameworks, available on the International Telecommunication Union (ITU) site at http://www.itu.int.","nodes":[{"content":"For more information about digital certificates, see the document X.509: Public-key and attribute certificate frameworks, available on the International Telecommunication Union (ITU) site at http://www.itu.int.","pos":[0,210]}]}],"pos":[1371,1843],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the certificate issuer, in binary format.","nodes":[{"pos":[0,54],"content":"Gets or sets the certificate issuer, in binary format.","nodes":[{"content":"Gets or sets the certificate issuer, in binary format.","pos":[0,54]}]}],"pos":[6768,6823],"yaml":true},{"content":"The certificate issuer, expressed in binary format.","nodes":[{"pos":[0,51],"content":"The certificate issuer, expressed in binary format.","nodes":[{"content":"The certificate issuer, expressed in binary format.","pos":[0,51]}]}],"pos":[6939,6991],"yaml":true},{"content":"Gets the encoding of the certificate.","nodes":[{"pos":[0,37],"content":"Gets the encoding of the certificate.","nodes":[{"content":"Gets the encoding of the certificate.","pos":[0,37]}]}],"pos":[7976,8014],"yaml":true},{"content":"For more information about the CERT_CONTEXT structure, see http://msdn.microsoft.com and search for CERT_CONTEXT.","nodes":[{"pos":[0,113],"content":"For more information about the CERT_CONTEXT structure, see http://msdn.microsoft.com and search for CERT_CONTEXT.","nodes":[{"content":"For more information about the CERT_CONTEXT structure, see http://msdn.microsoft.com and search for CERT_CONTEXT.","pos":[0,113]}]}],"pos":[8025,8139],"yaml":true,"extradata":"MT"},{"content":"One of the CERT_CONTEXT.dwCertEncodingType values.","nodes":[{"pos":[0,50],"content":"One of the CERT_CONTEXT.dwCertEncodingType values.","nodes":[{"content":"One of the CERT_CONTEXT.dwCertEncodingType values.","pos":[0,50]}]}],"pos":[8251,8302],"yaml":true},{"content":"Gets a string containing the binary stream of the entire certificate content, in ASN.1 format.","nodes":[{"pos":[0,94],"content":"Gets a string containing the binary stream of the entire certificate content, in ASN.1 format.","nodes":[{"content":"Gets a string containing the binary stream of the entire certificate content, in ASN.1 format.","pos":[0,94]}]}],"pos":[9281,9376],"yaml":true},{"content":"The client certificate.","nodes":[{"pos":[0,23],"content":"The client certificate.","nodes":[{"content":"The client certificate.","pos":[0,23]}]}],"pos":[9491,9515],"yaml":true},{"content":"Gets the unique ID for the client certificate, if provided.","nodes":[{"pos":[0,59],"content":"Gets the unique ID for the client certificate, if provided.","nodes":[{"content":"Gets the unique ID for the client certificate, if provided.","pos":[0,59]}]}],"pos":[10463,10523],"yaml":true},{"content":"The <xref:System.Web.HttpClientCertificate.Cookie%2A> can be used as a signature for the whole client certificate.","nodes":[{"pos":[0,114],"content":"The <xref:System.Web.HttpClientCertificate.Cookie%2A> can be used as a signature for the whole client certificate.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpClientCertificate.Cookie%2A&gt;</ph> can be used as a signature for the whole client certificate.","pos":[0,114],"source":"The <xref:System.Web.HttpClientCertificate.Cookie%2A> can be used as a signature for the whole client certificate."}]}],"pos":[10534,10649],"yaml":true,"extradata":"MT"},{"content":"The client certificate ID.","nodes":[{"pos":[0,26],"content":"The client certificate ID.","nodes":[{"content":"The client certificate ID.","pos":[0,26]}]}],"pos":[10759,10786],"yaml":true},{"content":"A set of flags that provide additional client certificate information.","nodes":[{"pos":[0,70],"content":"A set of flags that provide additional client certificate information.","nodes":[{"content":"A set of flags that provide additional client certificate information.","pos":[0,70]}]}],"pos":[11723,11794],"yaml":true},{"content":"Bit0 is set to 1 if the client certificate is present. Bit1 is set to 1 if the Certificate Authority (CA) of the client certificate is not in the list of recognized CAs on the server.","nodes":[{"pos":[0,183],"content":"Bit0 is set to 1 if the client certificate is present. Bit1 is set to 1 if the Certificate Authority (CA) of the client certificate is not in the list of recognized CAs on the server.","nodes":[{"content":"Bit0 is set to 1 if the client certificate is present. Bit1 is set to 1 if the Certificate Authority (CA) of the client certificate is not in the list of recognized CAs on the server.","pos":[0,183],"nodes":[{"content":"Bit0 is set to 1 if the client certificate is present.","pos":[0,54]},{"content":"Bit1 is set to 1 if the Certificate Authority (CA) of the client certificate is not in the list of recognized CAs on the server.","pos":[55,183]}]}]}],"pos":[11805,11989],"yaml":true,"extradata":"MT"},{"content":"A set of Boolean flags.","nodes":[{"pos":[0,23],"content":"A set of Boolean flags.","nodes":[{"content":"A set of Boolean flags.","pos":[0,23]}]}],"pos":[12094,12118],"yaml":true},{"content":"Returns individual client certificate fields by name.","nodes":[{"pos":[0,53],"content":"Returns individual client certificate fields by name.","nodes":[{"content":"Returns individual client certificate fields by name.","pos":[0,53]}]}],"pos":[13109,13163],"yaml":true},{"content":"The item in the collection to retrieve.","nodes":[{"pos":[0,39],"content":"The item in the collection to retrieve.","nodes":[{"content":"The item in the collection to retrieve.","pos":[0,39]}]}],"pos":[13306,13346],"yaml":true},{"content":"The value of the item specified by <code>field</code>.","nodes":[{"pos":[0,54],"content":"The value of the item specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">field</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the item specified by <code>field</code>."}],"pos":[13403,13458],"yaml":true},{"content":"Gets a value that indicates whether the client certificate is present.","nodes":[{"pos":[0,70],"content":"Gets a value that indicates whether the client certificate is present.","nodes":[{"content":"Gets a value that indicates whether the client certificate is present.","pos":[0,70]}]}],"pos":[14416,14487],"yaml":true},{"content":"`true` if the client certificate is present; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the client certificate is present; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the client certificate is present; otherwise, `false`."}],"pos":[14599,14666],"yaml":true},{"content":"A string that contains a list of subfield values containing information about the certificate issuer.","nodes":[{"pos":[0,101],"content":"A string that contains a list of subfield values containing information about the certificate issuer.","nodes":[{"content":"A string that contains a list of subfield values containing information about the certificate issuer.","pos":[0,101]}]}],"pos":[15612,15714],"yaml":true},{"content":"The certificate issuer's information.","nodes":[{"pos":[0,37],"content":"The certificate issuer's information.","nodes":[{"content":"The certificate issuer's information.","pos":[0,37]}]}],"pos":[15824,15862],"yaml":true},{"content":"Gets a value that indicates whether the client certificate is valid.","nodes":[{"pos":[0,68],"content":"Gets a value that indicates whether the client certificate is valid.","nodes":[{"content":"Gets a value that indicates whether the client certificate is valid.","pos":[0,68]}]}],"pos":[16811,16880],"yaml":true},{"content":"The client certificate is not valid if the Certificate Authority (CA) is not in the list of recognized CAs on the server.","nodes":[{"pos":[0,121],"content":"The client certificate is not valid if the Certificate Authority (CA) is not in the list of recognized CAs on the server.","nodes":[{"content":"The client certificate is not valid if the Certificate Authority (CA) is not in the list of recognized CAs on the server.","pos":[0,121]}]}],"pos":[16891,17013],"yaml":true,"extradata":"MT"},{"content":"`true` if the client certificate is valid; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the client certificate is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the client certificate is valid; otherwise, `false`."}],"pos":[17123,17188],"yaml":true},{"content":"Gets the number of bits in the digital certificate key size. For example, 128.","nodes":[{"pos":[0,78],"content":"Gets the number of bits in the digital certificate key size. For example, 128.","nodes":[{"content":"Gets the number of bits in the digital certificate key size. For example, 128.","pos":[0,78],"nodes":[{"content":"Gets the number of bits in the digital certificate key size.","pos":[0,60]},{"content":"For example, 128.","pos":[61,78]}]}]}],"pos":[18138,18217],"yaml":true},{"content":"The number of bits in the key size.","nodes":[{"pos":[0,35],"content":"The number of bits in the key size.","nodes":[{"content":"The number of bits in the key size.","pos":[0,35]}]}],"pos":[18324,18360],"yaml":true},{"content":"Gets the public key binary value from the certificate.","nodes":[{"pos":[0,54],"content":"Gets the public key binary value from the certificate.","nodes":[{"content":"Gets the public key binary value from the certificate.","pos":[0,54]}]}],"pos":[19322,19377],"yaml":true},{"content":"A byte array that contains the public key value.","nodes":[{"pos":[0,48],"content":"A byte array that contains the public key value.","nodes":[{"content":"A byte array that contains the public key value.","pos":[0,48]}]}],"pos":[19490,19539],"yaml":true},{"content":"Gets the number of bits in the server certificate private key. For example, 1024.","nodes":[{"pos":[0,81],"content":"Gets the number of bits in the server certificate private key. For example, 1024.","nodes":[{"content":"Gets the number of bits in the server certificate private key. For example, 1024.","pos":[0,81],"nodes":[{"content":"Gets the number of bits in the server certificate private key.","pos":[0,62]},{"content":"For example, 1024.","pos":[63,81]}]}]}],"pos":[20527,20609],"yaml":true},{"content":"The number of bits in the server certificate private key.","nodes":[{"pos":[0,57],"content":"The number of bits in the server certificate private key.","nodes":[{"content":"The number of bits in the server certificate private key.","pos":[0,57]}]}],"pos":[20722,20780],"yaml":true},{"content":"Provides the certificate serial number as an ASCII representation of hexadecimal bytes separated by hyphens. For example, 04-67-F3-02.","nodes":[{"pos":[0,134],"content":"Provides the certificate serial number as an ASCII representation of hexadecimal bytes separated by hyphens. For example, 04-67-F3-02.","nodes":[{"content":"Provides the certificate serial number as an ASCII representation of hexadecimal bytes separated by hyphens. For example, 04-67-F3-02.","pos":[0,134],"nodes":[{"content":"Provides the certificate serial number as an ASCII representation of hexadecimal bytes separated by hyphens.","pos":[0,108]},{"content":"For example, 04-67-F3-02.","pos":[109,134]}]}]}],"pos":[21766,21901],"yaml":true},{"content":"The certificate serial number.","nodes":[{"pos":[0,30],"content":"The certificate serial number.","nodes":[{"content":"The certificate serial number.","pos":[0,30]}]}],"pos":[22017,22048],"yaml":true},{"content":"Gets the issuer field of the server certificate.","nodes":[{"pos":[0,48],"content":"Gets the issuer field of the server certificate.","nodes":[{"content":"Gets the issuer field of the server certificate.","pos":[0,48]}]}],"pos":[23033,23082],"yaml":true},{"content":"The issuer field of the server certificate.","nodes":[{"pos":[0,43],"content":"The issuer field of the server certificate.","nodes":[{"content":"The issuer field of the server certificate.","pos":[0,43]}]}],"pos":[23198,23242],"yaml":true},{"content":"Gets the subject field of the server certificate.","nodes":[{"pos":[0,49],"content":"Gets the subject field of the server certificate.","nodes":[{"content":"Gets the subject field of the server certificate.","pos":[0,49]}]}],"pos":[24233,24283],"yaml":true},{"content":"The subject field of the server certificate.","nodes":[{"pos":[0,44],"content":"The subject field of the server certificate.","nodes":[{"content":"The subject field of the server certificate.","pos":[0,44]}]}],"pos":[24400,24445],"yaml":true},{"content":"Gets the subject field of the client certificate.","nodes":[{"pos":[0,49],"content":"Gets the subject field of the client certificate.","nodes":[{"content":"Gets the subject field of the client certificate.","pos":[0,49]}]}],"pos":[25401,25451],"yaml":true},{"content":"If `String` is specified without a subfield, the <xref:System.Web.HttpClientCertificate> collection returns a comma-separated list of subfields. For example, C=US, O= Msft.","nodes":[{"pos":[0,172],"content":"If `String` is specified without a subfield, the <xref:System.Web.HttpClientCertificate> collection returns a comma-separated list of subfields. For example, C=US, O= Msft.","nodes":[{"content":"If <ph id=\"ph1\">`String`</ph> is specified without a subfield, the <ph id=\"ph2\">&lt;xref:System.Web.HttpClientCertificate&gt;</ph> collection returns a comma-separated list of subfields.","pos":[0,144],"source":"If `String` is specified without a subfield, the <xref:System.Web.HttpClientCertificate> collection returns a comma-separated list of subfields."},{"content":"For example, C=US, O= Msft.","pos":[145,172]}]}],"pos":[25462,25635],"yaml":true,"extradata":"MT"},{"content":"The subject field of the client certificate.","nodes":[{"pos":[0,44],"content":"The subject field of the client certificate.","nodes":[{"content":"The subject field of the client certificate.","pos":[0,44]}]}],"pos":[25746,25791],"yaml":true},{"content":"Gets the date when the certificate becomes valid. The date varies with international settings.","nodes":[{"pos":[0,94],"content":"Gets the date when the certificate becomes valid. The date varies with international settings.","nodes":[{"content":"Gets the date when the certificate becomes valid. The date varies with international settings.","pos":[0,94],"nodes":[{"content":"Gets the date when the certificate becomes valid.","pos":[0,49]},{"content":"The date varies with international settings.","pos":[50,94]}]}]}],"pos":[26753,26848],"yaml":true},{"content":"The date when the certificate becomes valid.","nodes":[{"pos":[0,44],"content":"The date when the certificate becomes valid.","nodes":[{"content":"The date when the certificate becomes valid.","pos":[0,44]}]}],"pos":[26965,27010],"yaml":true},{"content":"Gets the certificate expiration date.","nodes":[{"pos":[0,37],"content":"Gets the certificate expiration date.","nodes":[{"content":"Gets the certificate expiration date.","pos":[0,37]}]}],"pos":[27980,28018],"yaml":true},{"content":"The year value is displayed as a four-digit number.","nodes":[{"pos":[0,51],"content":"The year value is displayed as a four-digit number.","nodes":[{"content":"The year value is displayed as a four-digit number.","pos":[0,51]}]}],"pos":[28029,28081],"yaml":true,"extradata":"MT"},{"content":"The certificate expiration date.","nodes":[{"pos":[0,32],"content":"The certificate expiration date.","nodes":[{"content":"The certificate expiration date.","pos":[0,32]}]}],"pos":[28199,28232],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpClientCertificate\n  commentId: T:System.Web.HttpClientCertificate\n  id: HttpClientCertificate\n  children:\n  - System.Web.HttpClientCertificate.BinaryIssuer\n  - System.Web.HttpClientCertificate.CertEncoding\n  - System.Web.HttpClientCertificate.Certificate\n  - System.Web.HttpClientCertificate.Cookie\n  - System.Web.HttpClientCertificate.Flags\n  - System.Web.HttpClientCertificate.Get(System.String)\n  - System.Web.HttpClientCertificate.IsPresent\n  - System.Web.HttpClientCertificate.Issuer\n  - System.Web.HttpClientCertificate.IsValid\n  - System.Web.HttpClientCertificate.KeySize\n  - System.Web.HttpClientCertificate.PublicKey\n  - System.Web.HttpClientCertificate.SecretKeySize\n  - System.Web.HttpClientCertificate.SerialNumber\n  - System.Web.HttpClientCertificate.ServerIssuer\n  - System.Web.HttpClientCertificate.ServerSubject\n  - System.Web.HttpClientCertificate.Subject\n  - System.Web.HttpClientCertificate.ValidFrom\n  - System.Web.HttpClientCertificate.ValidUntil\n  langs:\n  - csharp\n  name: HttpClientCertificate\n  nameWithType: HttpClientCertificate\n  fullName: System.Web.HttpClientCertificate\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides the client certificate fields issued by the client in response to the server's request for the client's identity.\n  remarks: \"If a Web browser uses the SSL3.0/PCT1 protocol (the URL begins with https:// instead of http://) to connect to a server and the server requires client certificates, the browser sends the client certificate fields contained in its digital certificate.  \\n  \\n For more information about digital certificates, see the document X.509: Public-key and attribute certificate frameworks, available on the International Telecommunication Union (ITU) site at http://www.itu.int.\"\n  syntax:\n    content: 'public class HttpClientCertificate : System.Collections.Specialized.NameValueCollection'\n  inheritance:\n  - System.Object\n  - System.Collections.Specialized.NameObjectCollectionBase\n  - System.Collections.Specialized.NameValueCollection\n  implements: []\n  inheritedMembers:\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.Count\n  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  - System.Collections.Specialized.NameObjectCollectionBase.Keys\n  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  - System.Collections.Specialized.NameValueCollection.AllKeys\n  - System.Collections.Specialized.NameValueCollection.Clear\n  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  - System.Collections.Specialized.NameValueCollection.HasKeys\n  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.Item(System.String)\n  - System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.BinaryIssuer\n  commentId: P:System.Web.HttpClientCertificate.BinaryIssuer\n  id: BinaryIssuer\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: BinaryIssuer\n  nameWithType: HttpClientCertificate.BinaryIssuer\n  fullName: HttpClientCertificate.BinaryIssuer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the certificate issuer, in binary format.\n  syntax:\n    content: public byte[] BinaryIssuer { get; }\n    return:\n      type: System.Byte[]\n      description: The certificate issuer, expressed in binary format.\n  overload: System.Web.HttpClientCertificate.BinaryIssuer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.CertEncoding\n  commentId: P:System.Web.HttpClientCertificate.CertEncoding\n  id: CertEncoding\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: CertEncoding\n  nameWithType: HttpClientCertificate.CertEncoding\n  fullName: HttpClientCertificate.CertEncoding\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the encoding of the certificate.\n  remarks: For more information about the CERT_CONTEXT structure, see http://msdn.microsoft.com and search for CERT_CONTEXT.\n  syntax:\n    content: public int CertEncoding { get; }\n    return:\n      type: System.Int32\n      description: One of the CERT_CONTEXT.dwCertEncodingType values.\n  overload: System.Web.HttpClientCertificate.CertEncoding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Certificate\n  commentId: P:System.Web.HttpClientCertificate.Certificate\n  id: Certificate\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: HttpClientCertificate.Certificate\n  fullName: HttpClientCertificate.Certificate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a string containing the binary stream of the entire certificate content, in ASN.1 format.\n  syntax:\n    content: public byte[] Certificate { get; }\n    return:\n      type: System.Byte[]\n      description: The client certificate.\n  overload: System.Web.HttpClientCertificate.Certificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Cookie\n  commentId: P:System.Web.HttpClientCertificate.Cookie\n  id: Cookie\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Cookie\n  nameWithType: HttpClientCertificate.Cookie\n  fullName: HttpClientCertificate.Cookie\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the unique ID for the client certificate, if provided.\n  remarks: The <xref:System.Web.HttpClientCertificate.Cookie%2A> can be used as a signature for the whole client certificate.\n  syntax:\n    content: public string Cookie { get; }\n    return:\n      type: System.String\n      description: The client certificate ID.\n  overload: System.Web.HttpClientCertificate.Cookie*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Flags\n  commentId: P:System.Web.HttpClientCertificate.Flags\n  id: Flags\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: HttpClientCertificate.Flags\n  fullName: HttpClientCertificate.Flags\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: A set of flags that provide additional client certificate information.\n  remarks: Bit0 is set to 1 if the client certificate is present. Bit1 is set to 1 if the Certificate Authority (CA) of the client certificate is not in the list of recognized CAs on the server.\n  syntax:\n    content: public int Flags { get; }\n    return:\n      type: System.Int32\n      description: A set of Boolean flags.\n  overload: System.Web.HttpClientCertificate.Flags*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Get(System.String)\n  commentId: M:System.Web.HttpClientCertificate.Get(System.String)\n  id: Get(System.String)\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: HttpClientCertificate.Get(String)\n  fullName: HttpClientCertificate.Get(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Returns individual client certificate fields by name.\n  syntax:\n    content: public override string Get (string field);\n    parameters:\n    - id: field\n      type: System.String\n      description: The item in the collection to retrieve.\n    return:\n      type: System.String\n      description: The value of the item specified by <code>field</code>.\n  overload: System.Web.HttpClientCertificate.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.IsPresent\n  commentId: P:System.Web.HttpClientCertificate.IsPresent\n  id: IsPresent\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: IsPresent\n  nameWithType: HttpClientCertificate.IsPresent\n  fullName: HttpClientCertificate.IsPresent\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value that indicates whether the client certificate is present.\n  syntax:\n    content: public bool IsPresent { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the client certificate is present; otherwise, `false`.'\n  overload: System.Web.HttpClientCertificate.IsPresent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Issuer\n  commentId: P:System.Web.HttpClientCertificate.Issuer\n  id: Issuer\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Issuer\n  nameWithType: HttpClientCertificate.Issuer\n  fullName: HttpClientCertificate.Issuer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: A string that contains a list of subfield values containing information about the certificate issuer.\n  syntax:\n    content: public string Issuer { get; }\n    return:\n      type: System.String\n      description: The certificate issuer's information.\n  overload: System.Web.HttpClientCertificate.Issuer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.IsValid\n  commentId: P:System.Web.HttpClientCertificate.IsValid\n  id: IsValid\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: HttpClientCertificate.IsValid\n  fullName: HttpClientCertificate.IsValid\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value that indicates whether the client certificate is valid.\n  remarks: The client certificate is not valid if the Certificate Authority (CA) is not in the list of recognized CAs on the server.\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the client certificate is valid; otherwise, `false`.'\n  overload: System.Web.HttpClientCertificate.IsValid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.KeySize\n  commentId: P:System.Web.HttpClientCertificate.KeySize\n  id: KeySize\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: HttpClientCertificate.KeySize\n  fullName: HttpClientCertificate.KeySize\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of bits in the digital certificate key size. For example, 128.\n  syntax:\n    content: public int KeySize { get; }\n    return:\n      type: System.Int32\n      description: The number of bits in the key size.\n  overload: System.Web.HttpClientCertificate.KeySize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.PublicKey\n  commentId: P:System.Web.HttpClientCertificate.PublicKey\n  id: PublicKey\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: HttpClientCertificate.PublicKey\n  fullName: HttpClientCertificate.PublicKey\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the public key binary value from the certificate.\n  syntax:\n    content: public byte[] PublicKey { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the public key value.\n  overload: System.Web.HttpClientCertificate.PublicKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.SecretKeySize\n  commentId: P:System.Web.HttpClientCertificate.SecretKeySize\n  id: SecretKeySize\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: SecretKeySize\n  nameWithType: HttpClientCertificate.SecretKeySize\n  fullName: HttpClientCertificate.SecretKeySize\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of bits in the server certificate private key. For example, 1024.\n  syntax:\n    content: public int SecretKeySize { get; }\n    return:\n      type: System.Int32\n      description: The number of bits in the server certificate private key.\n  overload: System.Web.HttpClientCertificate.SecretKeySize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.SerialNumber\n  commentId: P:System.Web.HttpClientCertificate.SerialNumber\n  id: SerialNumber\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: SerialNumber\n  nameWithType: HttpClientCertificate.SerialNumber\n  fullName: HttpClientCertificate.SerialNumber\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides the certificate serial number as an ASCII representation of hexadecimal bytes separated by hyphens. For example, 04-67-F3-02.\n  syntax:\n    content: public string SerialNumber { get; }\n    return:\n      type: System.String\n      description: The certificate serial number.\n  overload: System.Web.HttpClientCertificate.SerialNumber*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.ServerIssuer\n  commentId: P:System.Web.HttpClientCertificate.ServerIssuer\n  id: ServerIssuer\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: ServerIssuer\n  nameWithType: HttpClientCertificate.ServerIssuer\n  fullName: HttpClientCertificate.ServerIssuer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the issuer field of the server certificate.\n  syntax:\n    content: public string ServerIssuer { get; }\n    return:\n      type: System.String\n      description: The issuer field of the server certificate.\n  overload: System.Web.HttpClientCertificate.ServerIssuer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.ServerSubject\n  commentId: P:System.Web.HttpClientCertificate.ServerSubject\n  id: ServerSubject\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: ServerSubject\n  nameWithType: HttpClientCertificate.ServerSubject\n  fullName: HttpClientCertificate.ServerSubject\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the subject field of the server certificate.\n  syntax:\n    content: public string ServerSubject { get; }\n    return:\n      type: System.String\n      description: The subject field of the server certificate.\n  overload: System.Web.HttpClientCertificate.ServerSubject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.Subject\n  commentId: P:System.Web.HttpClientCertificate.Subject\n  id: Subject\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: Subject\n  nameWithType: HttpClientCertificate.Subject\n  fullName: HttpClientCertificate.Subject\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the subject field of the client certificate.\n  remarks: If `String` is specified without a subfield, the <xref:System.Web.HttpClientCertificate> collection returns a comma-separated list of subfields. For example, C=US, O= Msft.\n  syntax:\n    content: public string Subject { get; }\n    return:\n      type: System.String\n      description: The subject field of the client certificate.\n  overload: System.Web.HttpClientCertificate.Subject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.ValidFrom\n  commentId: P:System.Web.HttpClientCertificate.ValidFrom\n  id: ValidFrom\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: HttpClientCertificate.ValidFrom\n  fullName: HttpClientCertificate.ValidFrom\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the date when the certificate becomes valid. The date varies with international settings.\n  syntax:\n    content: public DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: The date when the certificate becomes valid.\n  overload: System.Web.HttpClientCertificate.ValidFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpClientCertificate.ValidUntil\n  commentId: P:System.Web.HttpClientCertificate.ValidUntil\n  id: ValidUntil\n  parent: System.Web.HttpClientCertificate\n  langs:\n  - csharp\n  name: ValidUntil\n  nameWithType: HttpClientCertificate.ValidUntil\n  fullName: HttpClientCertificate.ValidUntil\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the certificate expiration date.\n  remarks: The year value is displayed as a four-digit number.\n  syntax:\n    content: public DateTime ValidUntil { get; }\n    return:\n      type: System.DateTime\n      description: The certificate expiration date.\n  overload: System.Web.HttpClientCertificate.ValidUntil*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.HttpClientCertificate.BinaryIssuer\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: BinaryIssuer\n  nameWithType: HttpClientCertificate.BinaryIssuer\n  fullName: HttpClientCertificate.BinaryIssuer\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpClientCertificate.CertEncoding\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: CertEncoding\n  nameWithType: HttpClientCertificate.CertEncoding\n  fullName: HttpClientCertificate.CertEncoding\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpClientCertificate.Certificate\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Certificate\n  nameWithType: HttpClientCertificate.Certificate\n  fullName: HttpClientCertificate.Certificate\n- uid: System.Web.HttpClientCertificate.Cookie\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Cookie\n  nameWithType: HttpClientCertificate.Cookie\n  fullName: HttpClientCertificate.Cookie\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpClientCertificate.Flags\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Flags\n  nameWithType: HttpClientCertificate.Flags\n  fullName: HttpClientCertificate.Flags\n- uid: System.Web.HttpClientCertificate.Get(System.String)\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Get(String)\n  nameWithType: HttpClientCertificate.Get(String)\n  fullName: HttpClientCertificate.Get(String)\n- uid: System.Web.HttpClientCertificate.IsPresent\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: IsPresent\n  nameWithType: HttpClientCertificate.IsPresent\n  fullName: HttpClientCertificate.IsPresent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpClientCertificate.Issuer\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Issuer\n  nameWithType: HttpClientCertificate.Issuer\n  fullName: HttpClientCertificate.Issuer\n- uid: System.Web.HttpClientCertificate.IsValid\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: IsValid\n  nameWithType: HttpClientCertificate.IsValid\n  fullName: HttpClientCertificate.IsValid\n- uid: System.Web.HttpClientCertificate.KeySize\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: KeySize\n  nameWithType: HttpClientCertificate.KeySize\n  fullName: HttpClientCertificate.KeySize\n- uid: System.Web.HttpClientCertificate.PublicKey\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: PublicKey\n  nameWithType: HttpClientCertificate.PublicKey\n  fullName: HttpClientCertificate.PublicKey\n- uid: System.Web.HttpClientCertificate.SecretKeySize\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: SecretKeySize\n  nameWithType: HttpClientCertificate.SecretKeySize\n  fullName: HttpClientCertificate.SecretKeySize\n- uid: System.Web.HttpClientCertificate.SerialNumber\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: SerialNumber\n  nameWithType: HttpClientCertificate.SerialNumber\n  fullName: HttpClientCertificate.SerialNumber\n- uid: System.Web.HttpClientCertificate.ServerIssuer\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ServerIssuer\n  nameWithType: HttpClientCertificate.ServerIssuer\n  fullName: HttpClientCertificate.ServerIssuer\n- uid: System.Web.HttpClientCertificate.ServerSubject\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ServerSubject\n  nameWithType: HttpClientCertificate.ServerSubject\n  fullName: HttpClientCertificate.ServerSubject\n- uid: System.Web.HttpClientCertificate.Subject\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Subject\n  nameWithType: HttpClientCertificate.Subject\n  fullName: HttpClientCertificate.Subject\n- uid: System.Web.HttpClientCertificate.ValidFrom\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ValidFrom\n  nameWithType: HttpClientCertificate.ValidFrom\n  fullName: HttpClientCertificate.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.HttpClientCertificate.ValidUntil\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ValidUntil\n  nameWithType: HttpClientCertificate.ValidUntil\n  fullName: HttpClientCertificate.ValidUntil\n- uid: System.Web.HttpClientCertificate.BinaryIssuer*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: BinaryIssuer\n  nameWithType: HttpClientCertificate.BinaryIssuer\n  fullName: HttpClientCertificate.BinaryIssuer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.CertEncoding*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: CertEncoding\n  nameWithType: HttpClientCertificate.CertEncoding\n  fullName: HttpClientCertificate.CertEncoding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Certificate*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Certificate\n  nameWithType: HttpClientCertificate.Certificate\n  fullName: HttpClientCertificate.Certificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Cookie*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Cookie\n  nameWithType: HttpClientCertificate.Cookie\n  fullName: HttpClientCertificate.Cookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Flags*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Flags\n  nameWithType: HttpClientCertificate.Flags\n  fullName: HttpClientCertificate.Flags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Get*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Get\n  nameWithType: HttpClientCertificate.Get\n  fullName: HttpClientCertificate.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.IsPresent*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: IsPresent\n  nameWithType: HttpClientCertificate.IsPresent\n  fullName: HttpClientCertificate.IsPresent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Issuer*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Issuer\n  nameWithType: HttpClientCertificate.Issuer\n  fullName: HttpClientCertificate.Issuer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.IsValid*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: IsValid\n  nameWithType: HttpClientCertificate.IsValid\n  fullName: HttpClientCertificate.IsValid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.KeySize*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: KeySize\n  nameWithType: HttpClientCertificate.KeySize\n  fullName: HttpClientCertificate.KeySize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.PublicKey*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: PublicKey\n  nameWithType: HttpClientCertificate.PublicKey\n  fullName: HttpClientCertificate.PublicKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.SecretKeySize*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: SecretKeySize\n  nameWithType: HttpClientCertificate.SecretKeySize\n  fullName: HttpClientCertificate.SecretKeySize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.SerialNumber*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: SerialNumber\n  nameWithType: HttpClientCertificate.SerialNumber\n  fullName: HttpClientCertificate.SerialNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.ServerIssuer*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ServerIssuer\n  nameWithType: HttpClientCertificate.ServerIssuer\n  fullName: HttpClientCertificate.ServerIssuer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.ServerSubject*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ServerSubject\n  nameWithType: HttpClientCertificate.ServerSubject\n  fullName: HttpClientCertificate.ServerSubject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.Subject*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: Subject\n  nameWithType: HttpClientCertificate.Subject\n  fullName: HttpClientCertificate.Subject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.ValidFrom*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ValidFrom\n  nameWithType: HttpClientCertificate.ValidFrom\n  fullName: HttpClientCertificate.ValidFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Web.HttpClientCertificate.ValidUntil*\n  parent: System.Web.HttpClientCertificate\n  isExternal: false\n  name: ValidUntil\n  nameWithType: HttpClientCertificate.ValidUntil\n  fullName: HttpClientCertificate.ValidUntil\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpClientCertificate.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseAdd(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)\n  fullName: NameObjectCollectionBase.BaseAdd(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseClear()\n  nameWithType: NameObjectCollectionBase.BaseClear()\n  fullName: NameObjectCollectionBase.BaseClear()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGet(Int32)\n  fullName: NameObjectCollectionBase.BaseGet(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(String)\n  nameWithType: NameObjectCollectionBase.BaseGet(String)\n  fullName: NameObjectCollectionBase.BaseGet(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllKeys()\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()\n  fullName: NameObjectCollectionBase.BaseGetAllKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues()\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues()\n  fullName: NameObjectCollectionBase.BaseGetAllValues()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues(Type)\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)\n  fullName: NameObjectCollectionBase.BaseGetAllValues(Type)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetKey(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)\n  fullName: NameObjectCollectionBase.BaseGetKey(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseHasKeys()\n  nameWithType: NameObjectCollectionBase.BaseHasKeys()\n  fullName: NameObjectCollectionBase.BaseHasKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemove(String)\n  nameWithType: NameObjectCollectionBase.BaseRemove(String)\n  fullName: NameObjectCollectionBase.BaseRemove(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemoveAt(Int32)\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)\n  fullName: NameObjectCollectionBase.BaseRemoveAt(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(Int32, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)\n  fullName: NameObjectCollectionBase.BaseSet(Int32, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)\n  fullName: NameObjectCollectionBase.BaseSet(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.Count\n  fullName: NameObjectCollectionBase.Count\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.GetEnumerator()\n  fullName: NameObjectCollectionBase.GetEnumerator()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n  fullName: NameObjectCollectionBase.IsReadOnly\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n  fullName: NameObjectCollectionBase.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)\n  fullName: NameObjectCollectionBase.OnDeserialization(Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.ICollection.SyncRoot\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Add(NameValueCollection)\n  nameWithType: NameValueCollection.Add(NameValueCollection)\n  fullName: NameValueCollection.Add(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Add(String, String)\n  nameWithType: NameValueCollection.Add(String, String)\n  fullName: NameValueCollection.Add(String, String)\n- uid: System.Collections.Specialized.NameValueCollection.AllKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: AllKeys\n  nameWithType: NameValueCollection.AllKeys\n  fullName: NameValueCollection.AllKeys\n- uid: System.Collections.Specialized.NameValueCollection.Clear\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: NameValueCollection.Clear()\n  fullName: NameValueCollection.Clear()\n- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: NameValueCollection.CopyTo(Array, Int32)\n  fullName: NameValueCollection.CopyTo(Array, Int32)\n- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: NameValueCollection.Get(Int32)\n  fullName: NameValueCollection.Get(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetKey(Int32)\n  nameWithType: NameValueCollection.GetKey(Int32)\n  fullName: NameValueCollection.GetKey(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetValues(Int32)\n  nameWithType: NameValueCollection.GetValues(Int32)\n  fullName: NameValueCollection.GetValues(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetValues(String)\n  nameWithType: NameValueCollection.GetValues(String)\n  fullName: NameValueCollection.GetValues(String)\n- uid: System.Collections.Specialized.NameValueCollection.HasKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: HasKeys()\n  nameWithType: NameValueCollection.HasKeys()\n  fullName: NameValueCollection.HasKeys()\n- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: InvalidateCachedArrays()\n  nameWithType: NameValueCollection.InvalidateCachedArrays()\n  fullName: NameValueCollection.InvalidateCachedArrays()\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: NameValueCollection.Item(Int32)\n  fullName: NameValueCollection.Item(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: NameValueCollection.Item(String)\n  fullName: NameValueCollection.Item(String)\n- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: NameValueCollection.Remove(String)\n  fullName: NameValueCollection.Remove(String)\n- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Set(String, String)\n  nameWithType: NameValueCollection.Set(String, String)\n  fullName: NameValueCollection.Set(String, String)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}