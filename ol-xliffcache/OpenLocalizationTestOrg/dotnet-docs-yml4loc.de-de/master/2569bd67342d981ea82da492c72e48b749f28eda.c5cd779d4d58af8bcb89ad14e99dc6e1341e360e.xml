{"nodes":[{"content":"Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.","nodes":[{"pos":[0,98],"content":"Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.","nodes":[{"content":"Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.","pos":[0,98]}]}],"pos":[828,927],"yaml":true},{"content":"Use the <xref:System.Messaging.MessageQueueAccessControlEntry> class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.  \n  \n There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.  \n  \n An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.  \n  \n The <xref:System.Messaging.MessageQueueAccessControlEntry> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.  \n  \n To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing <xref:System.Messaging.MessageQueueAccessControlEntry> instance.  \n  \n You can then pass the <xref:System.Messaging.MessageQueueAccessControlEntry> instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>.","nodes":[{"pos":[0,743],"content":"Use the <xref:System.Messaging.MessageQueueAccessControlEntry> class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.","nodes":[{"content":"Use the <xref:System.Messaging.MessageQueueAccessControlEntry> class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.","pos":[0,743],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> class to specify rights to apply to a trustee.","pos":[0,109],"source":"Use the <xref:System.Messaging.MessageQueueAccessControlEntry> class to specify rights to apply to a trustee."},{"content":"These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues.","pos":[110,246]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlList&gt;</ph> so that you can add rights for more than one trustee at a time.","pos":[247,577],"source":" The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time."},{"content":"The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.","pos":[578,743]}]}]},{"pos":[750,901],"content":"There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.","nodes":[{"content":"There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.","pos":[0,151],"nodes":[{"content":"There are some exceptions to this generalization about where the new right is added and its effects.","pos":[0,100]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Messaging&gt;</ph>.","pos":[101,151],"source":" For more information, see <xref:System.Messaging>."}]}]},{"pos":[908,1721],"content":"An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.","nodes":[{"content":"An overload of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor allows you specify a <ph id=\"ph2\">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> member to indicate whether to allow or deny rights to the trustee.","pos":[0,231],"source":"An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee."},{"content":"The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights.","pos":[232,356]},{"content":"For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied.","pos":[357,578]},{"content":"You can use two entry types to override this behavior: <ph id=\"ph1\">`Set`</ph> and <ph id=\"ph2\">`Revoke`</ph>.","pos":[579,653],"source":" You can use two entry types to override this behavior: `Set` and `Revoke`."},{"content":"For more information about controlling the way in which access rights are determined, see the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> enumeration topic.","pos":[654,813],"source":" For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic."}]},{"pos":[1728,2534],"content":"The <xref:System.Messaging.MessageQueueAccessControlEntry> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself.","pos":[0,207],"source":"The <xref:System.Messaging.MessageQueueAccessControlEntry> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself."},{"content":"This is different from code access security, which is implemented through the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueuePermission&gt;</ph> and related classes.","pos":[208,353],"source":" This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes."},{"content":"Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself.","pos":[354,626]},{"content":"See the topic <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconcodeaccesssecurity&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03)</ept> for more information about code access security.","pos":[627,806],"source":" See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security."}]},{"pos":[2541,3125],"content":"To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing <xref:System.Messaging.MessageQueueAccessControlEntry> instance.","nodes":[{"content":"To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing <xref:System.Messaging.MessageQueueAccessControlEntry> instance.","pos":[0,584],"nodes":[{"content":"To set message queue permissions for a trustee, create a new instance of the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.Trustee%2A&gt;</ph> class and pass it into an overload of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor.","pos":[0,251],"source":"To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor."},{"content":"Specify the message queue access rights either by passing an instance of <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> into the constructor or by setting the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property on an existing <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> instance.","pos":[252,584],"source":" Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing <xref:System.Messaging.MessageQueueAccessControlEntry> instance."}]}]},{"pos":[3132,3481],"content":"You can then pass the <xref:System.Messaging.MessageQueueAccessControlEntry> instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>.","nodes":[{"content":"You can then pass the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> instance directly to the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName&gt;</ph> method, or alternately add the entry to an instance of <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>.","pos":[0,349],"source":"You can then pass the <xref:System.Messaging.MessageQueueAccessControlEntry> instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>."}]}],"pos":[938,4433],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, granting the specified Message Queuing access rights to the specified trustee.","nodes":[{"pos":[0,188],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueAccessControlEntry\"&gt;&lt;/xref&gt;</ph> class, granting the specified Message Queuing access rights to the specified trustee.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, granting the specified Message Queuing access rights to the specified trustee."}],"pos":[6564,6753],"yaml":true},{"content":"Use this overload of the constructor to grant rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.  \n  \n Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.","nodes":[{"pos":[0,486],"content":"Use this overload of the constructor to grant rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.","nodes":[{"content":"Use this overload of the constructor to grant rights to the specified trustee.","pos":[0,78]},{"content":"The rights you specify in the <ph id=\"ph1\">`rights`</ph> parameter are a bitwise combination of members of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties.","pos":[79,326],"source":" The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties."},{"content":"The constructor uses the rights you pass in to set this instance's <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property.","pos":[327,486],"source":" The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property."}]},{"pos":[493,894],"content":"Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.","nodes":[{"content":"Pass this instance of <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> directly into an overload of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method to grant rights only to this trustee, or add this instance to a <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> to grant or deny rights to multiple trustees at once.","pos":[0,401],"source":"Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once."}]}],"pos":[6764,7663],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.","source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."}],"pos":[7900,8006],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee.","nodes":[{"pos":[0,163],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueAccessRights\"&gt;&lt;/xref&gt;</ph> values which defines the combination of rights to grant to the trustee.","source":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee."}],"pos":[8096,8260],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, with the specified trustee and Message Queuing access rights. The type of access (such as `Allow` or `Deny`) is defined by the entry type you pass in.","nodes":[{"pos":[0,260],"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, with the specified trustee and Message Queuing access rights. The type of access (such as `Allow` or `Deny`) is defined by the entry type you pass in.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueAccessControlEntry\"&gt;&lt;/xref&gt;</ph> class, with the specified trustee and Message Queuing access rights.","pos":[0,171],"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, with the specified trustee and Message Queuing access rights."},{"content":"The type of access (such as <ph id=\"ph1\">`Allow`</ph> or <ph id=\"ph2\">`Deny`</ph>) is defined by the entry type you pass in.","pos":[172,260],"source":" The type of access (such as `Allow` or `Deny`) is defined by the entry type you pass in."}]}],"pos":[9898,10159],"yaml":true},{"content":"Use this overload of the constructor to grant or deny rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.  \n  \n For more information about granting or denying rights, see the <xref:System.Messaging.AccessControlEntryType> topic. For two members, `Allow` and `Deny`, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted. Two other members, `Set` and `Revoke`, overwrite any existing rights. Use the member whose behavior is applicable to your application.  \n  \n Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant or deny rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.","nodes":[{"pos":[0,494],"content":"Use this overload of the constructor to grant or deny rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.","nodes":[{"content":"Use this overload of the constructor to grant or deny rights to the specified trustee.","pos":[0,86]},{"content":"The rights you specify in the <ph id=\"ph1\">`rights`</ph> parameter are a bitwise combination of members of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties.","pos":[87,334],"source":" The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties."},{"content":"The constructor uses the rights you pass in to set this instance's <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property.","pos":[335,494],"source":" The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property."}]},{"pos":[501,1001],"content":"For more information about granting or denying rights, see the <xref:System.Messaging.AccessControlEntryType> topic. For two members, `Allow` and `Deny`, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted. Two other members, `Set` and `Revoke`, overwrite any existing rights. Use the member whose behavior is applicable to your application.","nodes":[{"content":"For more information about granting or denying rights, see the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> topic.","pos":[0,116],"source":"For more information about granting or denying rights, see the <xref:System.Messaging.AccessControlEntryType> topic."},{"content":"For two members, <ph id=\"ph1\">`Allow`</ph> and <ph id=\"ph2\">`Deny`</ph>, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted.","pos":[117,365],"source":" For two members, `Allow` and `Deny`, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted."},{"content":"Two other members, <ph id=\"ph1\">`Set`</ph> and <ph id=\"ph2\">`Revoke`</ph>, overwrite any existing rights.","pos":[366,435],"source":" Two other members, `Set` and `Revoke`, overwrite any existing rights."},{"content":"Use the member whose behavior is applicable to your application.","pos":[436,500]}]},{"pos":[1008,1417],"content":"Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant or deny rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.","nodes":[{"content":"Pass this instance of <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> directly into an overload of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> method to grant or deny rights only to this trustee, or add this instance to a <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlList&gt;</ph> before calling <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> to grant or deny rights to multiple trustees at once.","pos":[0,409],"source":"Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant or deny rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once."}]}],"pos":[10170,11594],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.","source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."}],"pos":[11882,11988],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee.","nodes":[{"pos":[0,163],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueAccessRights\"&gt;&lt;/xref&gt;</ph> values which defines the combination of rights to grant to the trustee.","source":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee."}],"pos":[12078,12242],"yaml":true},{"content":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set or revoke the specified rights.","nodes":[{"pos":[0,155],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;&lt;/xref&gt;</ph> values, which specifies whether to allow, deny, set or revoke the specified rights.","source":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set or revoke the specified rights."}],"pos":[12333,12489],"yaml":true},{"content":"Gets or sets the set of Message Queuing-specific rights to apply to the trustee.","nodes":[{"pos":[0,80],"content":"Gets or sets the set of Message Queuing-specific rights to apply to the trustee.","nodes":[{"content":"Gets or sets the set of Message Queuing-specific rights to apply to the trustee.","pos":[0,80]}]}],"pos":[13660,13741],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties. The value of this property is set by the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor, but you can change it at any time before using this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> in a call to <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.","nodes":[{"pos":[0,568],"content":"The <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties. The value of this property is set by the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor, but you can change it at any time before using this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> in a call to <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties. The value of this property is set by the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor, but you can change it at any time before using this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> in a call to <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.","pos":[0,568],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A&gt;</ph> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties.","pos":[0,235],"source":"The <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties."},{"content":"The value of this property is set by the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A&gt;</ph> constructor, but you can change it at any time before using this instance of <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph> in a call to <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName&gt;</ph>.","pos":[236,568],"source":" The value of this property is set by the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor, but you can change it at any time before using this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> in a call to <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>."}]}]}],"pos":[13752,14321],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> members. The default is defined by the <code>rights</code> parameter passed into the constructor.","nodes":[{"pos":[0,189],"content":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> members. The default is defined by the <code>rights</code> parameter passed into the constructor.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueAccessRights\"&gt;&lt;/xref&gt;</ph> members.","pos":[0,100],"source":"A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> members."},{"content":"The default is defined by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rights</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter passed into the constructor.","pos":[101,189],"source":" The default is defined by the <code>rights</code> parameter passed into the constructor."}]}],"pos":[14517,14707],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueueAccessControlEntry\n  commentId: T:System.Messaging.MessageQueueAccessControlEntry\n  id: MessageQueueAccessControlEntry\n  children:\n  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)\n  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  - System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights\n  langs:\n  - csharp\n  name: MessageQueueAccessControlEntry\n  nameWithType: MessageQueueAccessControlEntry\n  fullName: System.Messaging.MessageQueueAccessControlEntry\n  type: Class\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.\n  remarks: \"Use the <xref:System.Messaging.MessageQueueAccessControlEntry> class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.  \\n  \\n There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.  \\n  \\n An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.  \\n  \\n The <xref:System.Messaging.MessageQueueAccessControlEntry> class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.  \\n  \\n To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing <xref:System.Messaging.MessageQueueAccessControlEntry> instance.  \\n  \\n You can then pass the <xref:System.Messaging.MessageQueueAccessControlEntry> instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>.\"\n  syntax:\n    content: 'public class MessageQueueAccessControlEntry : System.Messaging.AccessControlEntry'\n  inheritance:\n  - System.Object\n  - System.Messaging.AccessControlEntry\n  implements: []\n  inheritedMembers:\n  - System.Messaging.AccessControlEntry.CustomAccessRights\n  - System.Messaging.AccessControlEntry.EntryType\n  - System.Messaging.AccessControlEntry.GenericAccessRights\n  - System.Messaging.AccessControlEntry.StandardAccessRights\n  - System.Messaging.AccessControlEntry.Trustee\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)\n  commentId: M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)\n  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)'\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  langs:\n  - csharp\n  name: MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, granting the specified Message Queuing access rights to the specified trustee.\n  remarks: \"Use this overload of the constructor to grant rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.  \\n  \\n Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.\"\n  syntax:\n    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n    - id: rights\n      type: System.Messaging.MessageQueueAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee.\n  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  commentId: M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)'\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  langs:\n  - csharp\n  name: MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueAccessControlEntry\"></xref> class, with the specified trustee and Message Queuing access rights. The type of access (such as `Allow` or `Deny`) is defined by the entry type you pass in.\n  remarks: \"Use this overload of the constructor to grant or deny rights to the specified trustee. The rights you specify in the `rights` parameter are a bitwise combination of members of the <xref:System.Messaging.MessageQueueAccessRights> bitflag, which includes such rights as receiving messages, deleting queues, and setting queue properties. The constructor uses the rights you pass in to set this instance's <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property.  \\n  \\n For more information about granting or denying rights, see the <xref:System.Messaging.AccessControlEntryType> topic. For two members, `Allow` and `Deny`, there may be preexisting and possibly contradictory access rights, so the order in which the rights appear in the queue's discretionary access control list (DACL) affects whether the right is ultimately granted. Two other members, `Set` and `Revoke`, overwrite any existing rights. Use the member whose behavior is applicable to your application.  \\n  \\n Pass this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> directly into an overload of the <xref:System.Messaging.MessageQueue.SetPermissions%2A> method to grant or deny rights only to this trustee, or add this instance to a <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A> to grant or deny rights to multiple trustees at once.\"\n  syntax:\n    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n    - id: rights\n      type: System.Messaging.MessageQueueAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> values which defines the combination of rights to grant to the trustee.\n    - id: entryType\n      type: System.Messaging.AccessControlEntryType\n      description: One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set or revoke the specified rights.\n  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights\n  commentId: P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights\n  id: MessageQueueAccessRights\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  langs:\n  - csharp\n  name: MessageQueueAccessRights\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the set of Message Queuing-specific rights to apply to the trustee.\n  remarks: The <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property enables you to specify Message Queuing object-specific rights such as receiving, peeking, or writing messages, or setting queue properties. The value of this property is set by the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor, but you can change it at any time before using this instance of <xref:System.Messaging.MessageQueueAccessControlEntry> in a call to <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.\n  syntax:\n    content: public System.Messaging.MessageQueueAccessRights MessageQueueAccessRights { get; set; }\n    return:\n      type: System.Messaging.MessageQueueAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.MessageQueueAccessRights\"></xref> members. The default is defined by the <code>rights</code> parameter passed into the constructor.\n  overload: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\nreferences:\n- uid: System.Messaging.AccessControlEntry\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntry\n  nameWithType: AccessControlEntry\n  fullName: System.Messaging.AccessControlEntry\n- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  isExternal: false\n  name: MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights)\n- uid: System.Messaging.Trustee\n  parent: System.Messaging\n  isExternal: false\n  name: Trustee\n  nameWithType: Trustee\n  fullName: System.Messaging.Trustee\n- uid: System.Messaging.MessageQueueAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueAccessRights\n  nameWithType: MessageQueueAccessRights\n  fullName: System.Messaging.MessageQueueAccessRights\n- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  isExternal: false\n  name: MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee, MessageQueueAccessRights, AccessControlEntryType)\n- uid: System.Messaging.AccessControlEntryType\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  isExternal: false\n  name: MessageQueueAccessRights\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessRights\n- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor*\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  isExternal: false\n  name: MessageQueueAccessControlEntry\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*\n  parent: System.Messaging.MessageQueueAccessControlEntry\n  isExternal: false\n  name: MessageQueueAccessRights\n  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights\n  fullName: MessageQueueAccessControlEntry.MessageQueueAccessRights\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueAccessControlEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: AccessControlEntry.CustomAccessRights\n- uid: System.Messaging.AccessControlEntry.EntryType\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: AccessControlEntry.EntryType\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: AccessControlEntry.GenericAccessRights\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: AccessControlEntry.StandardAccessRights\n- uid: System.Messaging.AccessControlEntry.Trustee\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: AccessControlEntry.Trustee\n"}