{"nodes":[{"content":"Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.","nodes":[{"pos":[0,129],"content":"Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.","nodes":[{"content":"Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.","pos":[0,129]}]}],"pos":[970,1100],"yaml":true},{"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The <xref:System.Messaging.AccessControlEntry> class provides access to these common rights.  \n  \n When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.","nodes":[{"pos":[0,463],"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The <xref:System.Messaging.AccessControlEntry> class provides access to these common rights.","nodes":[{"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The <xref:System.Messaging.AccessControlEntry> class provides access to these common rights.","pos":[0,463],"nodes":[{"content":"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects.","pos":[0,137]},{"content":"When you assign rights for these general operations, the application interprets them in a way specific to that application.","pos":[138,261]},{"content":"For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue.","pos":[262,370]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> class provides access to these common rights.","pos":[371,463],"source":" The <xref:System.Messaging.AccessControlEntry> class provides access to these common rights."}]}]},{"pos":[470,1066],"content":"When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.","nodes":[{"content":"When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.","pos":[0,596],"nodes":[{"content":"When working with access control entries, you specify a trustee to which you are assigning the rights.","pos":[0,102]},{"content":"You must set at least one of the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt;</ph> properties to indicate which rights to assign to the trustee.","pos":[103,400],"source":" You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee."},{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt;</ph> property to specify whether the rights you indicate should be granted or denied.","pos":[401,553],"source":" You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied."},{"content":"The default entry type is to allow rights.","pos":[554,596]}]}]}],"pos":[1111,2182],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies neither a trustee nor set of rights to apply.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;&lt;/xref&gt;</ph> class that specifies neither a trustee nor set of rights to apply.","source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies neither a trustee nor set of rights to apply."}],"pos":[3602,3760],"yaml":true},{"content":"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.  \n  \n You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so.","nodes":[{"pos":[0,414],"content":"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.Trustee%2A&gt;</ph> property and at least one of the <ph id=\"ph2\">&lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt;</ph> properties before using this <ph id=\"ph5\">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instance to set access rights for a trustee.","pos":[0,414],"source":"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee."}]},{"pos":[421,571],"content":"You can optionally set the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt;</ph> property, though it defaults to <ph id=\"ph2\">`Allow`</ph> if you choose not to do so.","source":"You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so."}],"pos":[3771,4347],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee to which rights are granted or denied.","nodes":[{"pos":[0,160],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;&lt;/xref&gt;</ph> class that specifies a trustee to which rights are granted or denied.","source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee to which rights are granted or denied."}],"pos":[5541,5702],"yaml":true},{"content":"Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.","nodes":[{"pos":[0,416],"content":"Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.EntryType%2A&gt;</ph> property and at least one of the <ph id=\"ph2\">&lt;xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt;</ph> properties before using this <ph id=\"ph5\">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instance to set access rights for a trustee.","pos":[0,416],"source":"Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee."}]}],"pos":[5713,6130],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.","source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."}],"pos":[6305,6411],"yaml":true},{"content":"The <code>trustee</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">trustee</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>trustee</code> parameter is `null`."}],"pos":[6582,6628],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;&lt;/xref&gt;</ph> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.","source":"Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee, rights to assign, and whether to grant or deny these rights."}],"pos":[8224,8408],"yaml":true},{"content":"This overload of the constructor sets the <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> property to a bitwise combination of the `genericAccessRights` and `standardAccessRights` parameters you specify.","nodes":[{"pos":[0,220],"content":"This overload of the constructor sets the <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A&gt;</ph> property to a bitwise combination of the <ph id=\"ph2\">`genericAccessRights`</ph> and <ph id=\"ph3\">`standardAccessRights`</ph> parameters you specify.","source":"This overload of the constructor sets the <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> property to a bitwise combination of the `genericAccessRights` and `standardAccessRights` parameters you specify."}],"pos":[8419,8640],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;&lt;/xref&gt;</ph> that specifies a user, group, computer, domain, or alias.","source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias."}],"pos":[8984,9090],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.","nodes":[{"pos":[0,94],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values."}],"pos":[9188,9283],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.","nodes":[{"pos":[0,95],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values."}],"pos":[9383,9479],"yaml":true},{"content":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;&lt;/xref&gt;</ph> values, which specifies whether to allow, deny, set, or revoke the specified rights.","source":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights."}],"pos":[9570,9727],"yaml":true},{"content":"The <code>trustee</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">trustee</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>trustee</code> parameter is `null`."}],"pos":[9898,9944],"yaml":true},{"content":"The <code>genericAccessRights</code>, <code>standardAccessRights</code>, or <code>entryType</code> parameters are not valid enumeration values.","nodes":[{"pos":[0,143],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">genericAccessRights</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">standardAccessRights</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">entryType</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameters are not valid enumeration values.","source":"The <code>genericAccessRights</code>, <code>standardAccessRights</code>, or <code>entryType</code> parameters are not valid enumeration values."}],"pos":[10090,10234],"yaml":true},{"content":"Gets or sets custom access rights.","nodes":[{"pos":[0,34],"content":"Gets or sets custom access rights.","nodes":[{"content":"Gets or sets custom access rights.","pos":[0,34]}]}],"pos":[11213,11248],"yaml":true},{"content":"Application-specific access rights, usually defined as a bitflag.","nodes":[{"pos":[0,65],"content":"Application-specific access rights, usually defined as a bitflag.","nodes":[{"content":"Application-specific access rights, usually defined as a bitflag.","pos":[0,65]}]}],"pos":[11374,11440],"yaml":true},{"content":"Gets or sets a value that indicates how the access rights apply to the trustee.","nodes":[{"pos":[0,79],"content":"Gets or sets a value that indicates how the access rights apply to the trustee.","nodes":[{"content":"Gets or sets a value that indicates how the access rights apply to the trustee.","pos":[0,79]}]}],"pos":[12450,12530],"yaml":true},{"content":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is `Allow`.","nodes":[{"pos":[0,180],"content":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is `Allow`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;&lt;/xref&gt;</ph> values, which specifies whether to allow, deny, set, or revoke the specified rights.","pos":[0,156],"source":"One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights."},{"content":"The default is <ph id=\"ph1\">`Allow`</ph>.","pos":[157,180],"source":" The default is `Allow`."}]}],"pos":[12707,12888],"yaml":true},{"content":"The entry type is not a valid <xref href=\"System.Messaging.AccessControlEntryType\"></xref> enumeration value.","nodes":[{"pos":[0,109],"content":"The entry type is not a valid <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntryType\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"The entry type is not a valid <xref href=\"System.Messaging.AccessControlEntryType\"></xref> enumeration value."}],"pos":[13107,13217],"yaml":true},{"content":"Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.","nodes":[{"pos":[0,139],"content":"Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.","nodes":[{"content":"Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.","pos":[0,139]}]}],"pos":[14202,14342],"yaml":true},{"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.","nodes":[{"pos":[0,335],"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.","nodes":[{"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.","pos":[0,335],"nodes":[{"content":"Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights.","pos":[0,138]},{"content":"Each type of securable object maps these bits to a set of its standard and object-specific access rights.","pos":[139,244]},{"content":"Applications that define private securable objects can also use the generic access rights.","pos":[245,335]}]}]}],"pos":[14353,14689],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.","nodes":[{"pos":[0,94],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values."}],"pos":[14870,14965],"yaml":true},{"content":"The value you set is not a valid combination of <xref href=\"System.Messaging.GenericAccessRights\"></xref> bitflag members.","nodes":[{"pos":[0,122],"content":"The value you set is not a valid combination of <ph id=\"ph1\">&lt;xref href=\"System.Messaging.GenericAccessRights\"&gt;&lt;/xref&gt;</ph> bitflag members.","source":"The value you set is not a valid combination of <xref href=\"System.Messaging.GenericAccessRights\"></xref> bitflag members."}],"pos":[15194,15317],"yaml":true},{"content":"Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.","nodes":[{"pos":[0,117],"content":"Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.","nodes":[{"content":"Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[0,117]}]}],"pos":[16308,16426],"yaml":true},{"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","nodes":[{"pos":[0,391],"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","nodes":[{"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[0,391],"nodes":[{"content":"The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights.","pos":[0,105]},{"content":"Each type of securable object has a set of access rights that correspond to operations specific to that type of object.","pos":[106,225]},{"content":"In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.","pos":[226,391]}]}]}],"pos":[16437,16829],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.","nodes":[{"pos":[0,95],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values."}],"pos":[17013,17109],"yaml":true},{"content":"The value you set is not a valid combination of <xref href=\"System.Messaging.StandardAccessRights\"></xref> bitflag members.","nodes":[{"pos":[0,123],"content":"The value you set is not a valid combination of <ph id=\"ph1\">&lt;xref href=\"System.Messaging.StandardAccessRights\"&gt;&lt;/xref&gt;</ph> bitflag members.","source":"The value you set is not a valid combination of <xref href=\"System.Messaging.StandardAccessRights\"></xref> bitflag members."}],"pos":[17339,17463],"yaml":true},{"content":"Gets or sets the user, group, domain, or alias to which you are assigning access rights.","nodes":[{"pos":[0,88],"content":"Gets or sets the user, group, domain, or alias to which you are assigning access rights.","nodes":[{"content":"Gets or sets the user, group, domain, or alias to which you are assigning access rights.","pos":[0,88]}]}],"pos":[18376,18465],"yaml":true},{"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.","nodes":[{"pos":[0,295],"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.","nodes":[{"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.","pos":[0,295],"nodes":[{"content":"Both users and programs, such as Win32 services, use user accounts to log on to the local computer.","pos":[0,99]},{"content":"Group accounts cannot be used to log on to a computer, but are useful in <ph id=\"ph1\">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instances to allow or deny a set of access rights to one or more user accounts.","pos":[100,295],"source":" Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts."}]}]}],"pos":[18476,18772],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user account, group account, or logon session to which a <xref href=\"System.Messaging.AccessControlEntry\"></xref> applies.","nodes":[{"pos":[0,187],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.Trustee\"&gt;&lt;/xref&gt;</ph> that specifies a user account, group account, or logon session to which a <ph id=\"ph2\">&lt;xref href=\"System.Messaging.AccessControlEntry\"&gt;&lt;/xref&gt;</ph> applies.","source":"A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user account, group account, or logon session to which a <xref href=\"System.Messaging.AccessControlEntry\"></xref> applies."}],"pos":[18917,19105],"yaml":true},{"content":"The <xref href=\"System.Messaging.AccessControlEntry.Trustee\"></xref> property is `null`.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlEntry.Trustee\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.AccessControlEntry.Trustee\"></xref> property is `null`."}],"pos":[19278,19367],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.AccessControlEntry\n  commentId: T:System.Messaging.AccessControlEntry\n  id: AccessControlEntry\n  children:\n  - System.Messaging.AccessControlEntry.#ctor\n  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  - System.Messaging.AccessControlEntry.CustomAccessRights\n  - System.Messaging.AccessControlEntry.EntryType\n  - System.Messaging.AccessControlEntry.GenericAccessRights\n  - System.Messaging.AccessControlEntry.StandardAccessRights\n  - System.Messaging.AccessControlEntry.Trustee\n  langs:\n  - csharp\n  name: AccessControlEntry\n  nameWithType: AccessControlEntry\n  fullName: System.Messaging.AccessControlEntry\n  type: Class\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.\n  remarks: \"Many applications have similar operations to which a trustee can be assigned rights, for example, reading, writing, and deleting objects. When you assign rights for these general operations, the application interprets them in a way specific to that application. For example, Message Queuing interprets the reading operation as receiving or peeking messages from a queue. The <xref:System.Messaging.AccessControlEntry> class provides access to these common rights.  \\n  \\n When working with access control entries, you specify a trustee to which you are assigning the rights. You must set at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties to indicate which rights to assign to the trustee. You can set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property to specify whether the rights you indicate should be granted or denied. The default entry type is to allow rights.\"\n  syntax:\n    content: public class AccessControlEntry\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Messaging.MessageQueueAccessControlEntry\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.#ctor\n  commentId: M:System.Messaging.AccessControlEntry.#ctor\n  id: '#ctor'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry()\n  nameWithType: AccessControlEntry.AccessControlEntry()\n  fullName: AccessControlEntry.AccessControlEntry()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies neither a trustee nor set of rights to apply.\n  remarks: \"Set the <xref:System.Messaging.AccessControlEntry.Trustee%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.  \\n  \\n You can optionally set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property, though it defaults to `Allow` if you choose not to do so.\"\n  syntax:\n    content: public AccessControlEntry ();\n    parameters: []\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  commentId: M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  id: '#ctor(System.Messaging.Trustee)'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry(Trustee)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)\n  fullName: AccessControlEntry.AccessControlEntry(Trustee)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee to which rights are granted or denied.\n  remarks: Set the <xref:System.Messaging.AccessControlEntry.EntryType%2A> property and at least one of the <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, or <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> properties before using this <xref:System.Messaging.AccessControlEntry> instance to set access rights for a trustee.\n  syntax:\n    content: public AccessControlEntry (System.Messaging.Trustee trustee);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>trustee</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  commentId: M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n  fullName: AccessControlEntry.AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.AccessControlEntry\"></xref> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.\n  remarks: This overload of the constructor sets the <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> property to a bitwise combination of the `genericAccessRights` and `standardAccessRights` parameters you specify.\n  syntax:\n    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);\n    parameters:\n    - id: trustee\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user, group, computer, domain, or alias.\n    - id: genericAccessRights\n      type: System.Messaging.GenericAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.\n    - id: standardAccessRights\n      type: System.Messaging.StandardAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.\n    - id: entryType\n      type: System.Messaging.AccessControlEntryType\n      description: One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights.\n  overload: System.Messaging.AccessControlEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>trustee</code> parameter is `null`.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>genericAccessRights</code>, <code>standardAccessRights</code>, or <code>entryType</code> parameters are not valid enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights\n  commentId: P:System.Messaging.AccessControlEntry.CustomAccessRights\n  id: CustomAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: AccessControlEntry.CustomAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets custom access rights.\n  syntax:\n    content: protected int CustomAccessRights { get; set; }\n    return:\n      type: System.Int32\n      description: Application-specific access rights, usually defined as a bitflag.\n  overload: System.Messaging.AccessControlEntry.CustomAccessRights*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.EntryType\n  commentId: P:System.Messaging.AccessControlEntry.EntryType\n  id: EntryType\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: AccessControlEntry.EntryType\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates how the access rights apply to the trustee.\n  syntax:\n    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }\n    return:\n      type: System.Messaging.AccessControlEntryType\n      description: One of the <xref href=\"System.Messaging.AccessControlEntryType\"></xref> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is `Allow`.\n  overload: System.Messaging.AccessControlEntry.EntryType*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The entry type is not a valid <xref href=\"System.Messaging.AccessControlEntryType\"></xref> enumeration value.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights\n  commentId: P:System.Messaging.AccessControlEntry.GenericAccessRights\n  id: GenericAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: AccessControlEntry.GenericAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.\n  remarks: Securable objects use the four high-order bits of the Windows 2000 and Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.\n  syntax:\n    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.GenericAccessRights\"></xref> values.\n  overload: System.Messaging.AccessControlEntry.GenericAccessRights*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value you set is not a valid combination of <xref href=\"System.Messaging.GenericAccessRights\"></xref> bitflag members.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights\n  commentId: P:System.Messaging.AccessControlEntry.StandardAccessRights\n  id: StandardAccessRights\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: AccessControlEntry.StandardAccessRights\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.\n  remarks: The Windows 2000 and Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.\n  syntax:\n    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }\n    return:\n      type: System.Messaging.StandardAccessRights\n      description: A bitwise combination of the <xref href=\"System.Messaging.StandardAccessRights\"></xref> values.\n  overload: System.Messaging.AccessControlEntry.StandardAccessRights*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value you set is not a valid combination of <xref href=\"System.Messaging.StandardAccessRights\"></xref> bitflag members.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.AccessControlEntry.Trustee\n  commentId: P:System.Messaging.AccessControlEntry.Trustee\n  id: Trustee\n  parent: System.Messaging.AccessControlEntry\n  langs:\n  - csharp\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: AccessControlEntry.Trustee\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the user, group, domain, or alias to which you are assigning access rights.\n  remarks: Both users and programs, such as Win32 services, use user accounts to log on to the local computer. Group accounts cannot be used to log on to a computer, but are useful in <xref:System.Messaging.AccessControlEntry> instances to allow or deny a set of access rights to one or more user accounts.\n  syntax:\n    content: public System.Messaging.Trustee Trustee { get; set; }\n    return:\n      type: System.Messaging.Trustee\n      description: A <xref href=\"System.Messaging.Trustee\"></xref> that specifies a user account, group account, or logon session to which a <xref href=\"System.Messaging.AccessControlEntry\"></xref> applies.\n  overload: System.Messaging.AccessControlEntry.Trustee*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Messaging.AccessControlEntry.Trustee\"></xref> property is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Messaging.AccessControlEntry.#ctor\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry()\n  nameWithType: AccessControlEntry.AccessControlEntry()\n  fullName: AccessControlEntry.AccessControlEntry()\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry(Trustee)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)\n  fullName: AccessControlEntry.AccessControlEntry(Trustee)\n- uid: System.Messaging.Trustee\n  parent: System.Messaging\n  isExternal: false\n  name: Trustee\n  nameWithType: Trustee\n  fullName: System.Messaging.Trustee\n- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n  nameWithType: AccessControlEntry.AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n  fullName: AccessControlEntry.AccessControlEntry(Trustee, GenericAccessRights, StandardAccessRights, AccessControlEntryType)\n- uid: System.Messaging.GenericAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: GenericAccessRights\n  fullName: System.Messaging.GenericAccessRights\n- uid: System.Messaging.StandardAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: StandardAccessRights\n  fullName: System.Messaging.StandardAccessRights\n- uid: System.Messaging.AccessControlEntryType\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlEntryType\n  nameWithType: AccessControlEntryType\n  fullName: System.Messaging.AccessControlEntryType\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: AccessControlEntry.CustomAccessRights\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Messaging.AccessControlEntry.EntryType\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: AccessControlEntry.EntryType\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: AccessControlEntry.GenericAccessRights\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: AccessControlEntry.StandardAccessRights\n- uid: System.Messaging.AccessControlEntry.Trustee\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: AccessControlEntry.Trustee\n- uid: System.Messaging.AccessControlEntry.#ctor*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: AccessControlEntry\n  nameWithType: AccessControlEntry.AccessControlEntry\n  fullName: AccessControlEntry.AccessControlEntry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Messaging.AccessControlEntry.CustomAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: CustomAccessRights\n  nameWithType: AccessControlEntry.CustomAccessRights\n  fullName: AccessControlEntry.CustomAccessRights\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Messaging.AccessControlEntry.EntryType*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: AccessControlEntry.EntryType\n  fullName: AccessControlEntry.EntryType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Messaging.AccessControlEntry.GenericAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: AccessControlEntry.GenericAccessRights\n  fullName: AccessControlEntry.GenericAccessRights\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Messaging.AccessControlEntry.StandardAccessRights*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: StandardAccessRights\n  nameWithType: AccessControlEntry.StandardAccessRights\n  fullName: AccessControlEntry.StandardAccessRights\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Messaging.AccessControlEntry.Trustee*\n  parent: System.Messaging.AccessControlEntry\n  isExternal: false\n  name: Trustee\n  nameWithType: AccessControlEntry.Trustee\n  fullName: AccessControlEntry.Trustee\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/AccessControlEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}