### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.ObjectSecurity
  commentId: T:System.Security.AccessControl.ObjectSecurity
  id: ObjectSecurity
  children:
  - System.Security.AccessControl.ObjectSecurity.#ctor
  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  langs:
  - csharp
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: System.Security.AccessControl.ObjectSecurity
  type: Class
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href="System.Security.AccessControl.CommonObjectSecurity"></xref> and <xref href="System.Security.AccessControl.DirectoryObjectSecurity"></xref> classes.
  syntax:
    content: public abstract class ObjectSecurity
  inheritance:
  - System.Object
  derivedClasses:
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.DirectoryObjectSecurity
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.#ctor
  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity()
  nameWithType: ObjectSecurity.ObjectSecurity()
  fullName: ObjectSecurity.ObjectSecurity()
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.ObjectSecurity"></xref> class.
  syntax:
    content: protected ObjectSecurity ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity(CommonSecurityDescriptor)
  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  fullName: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.ObjectSecurity"></xref> class.
  syntax:
    content: protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: The <xref href="System.Security.AccessControl.CommonSecurityDescriptor"></xref> of the new <xref href="System.Security.AccessControl.CommonObjectSecurity"></xref> instance.
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ObjectSecurity(Boolean, Boolean)
  nameWithType: ObjectSecurity.ObjectSecurity(Boolean, Boolean)
  fullName: ObjectSecurity.ObjectSecurity(Boolean, Boolean)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.ObjectSecurity"></xref> class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, bool isDS);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a container object.'
    - id: isDS
      type: System.Boolean
      description: True if the new <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a directory object.
  overload: System.Security.AccessControl.ObjectSecurity.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: ObjectSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the <xref href="System.Type"></xref> of the securable object associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: public abstract Type AccessRightType { get; }
    return:
      type: System.Type
      description: The type of the securable object associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  overload: System.Security.AccessControl.ObjectSecurity.AccessRightType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AccessRule"></xref> class with the specified values.
  syntax:
    content: public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href="System.Security.Principal.SecurityIdentifier"></xref>.
    - id: accessMask
      type: System.Int32
      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.
    - id: isInherited
      type: System.Boolean
      description: true if this rule is inherited from a parent container.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Specifies the inheritance properties of the access rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href="System.Security.AccessControl.InheritanceFlags.None"></xref>.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: Specifies the valid access control type.
    return:
      type: System.Security.AccessControl.AccessRule
      description: The <xref href="System.Security.AccessControl.AccessRule"></xref> object that this method creates.
  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  id: AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: ObjectSecurity.AccessRulesModified
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object have been modified.
  syntax:
    content: protected bool AccessRulesModified { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the access rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object have been modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: ObjectSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the <xref href="System.Type"></xref> of the object associated with the access rules of this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object. The <xref href="System.Type"></xref> object must be an object that can be cast as a <xref href="System.Security.Principal.SecurityIdentifier"></xref> object.
  syntax:
    content: public abstract Type AccessRuleType { get; }
    return:
      type: System.Type
      description: The type of the object associated with the access rules of this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  id: AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: ObjectSecurity.AreAccessRulesCanonical
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether the access rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object are in canonical order.
  syntax:
    content: public bool AreAccessRulesCanonical { get; }
    return:
      type: System.Boolean
      description: '`true` if the access rules are in canonical order; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  id: AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: ObjectSecurity.AreAccessRulesProtected
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is protected.
  syntax:
    content: public bool AreAccessRulesProtected { get; }
    return:
      type: System.Boolean
      description: '`true` if the DACL is protected; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  id: AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: ObjectSecurity.AreAuditRulesCanonical
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether the audit rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object are in canonical order.
  syntax:
    content: public bool AreAuditRulesCanonical { get; }
    return:
      type: System.Boolean
      description: '`true` if the audit rules are in canonical order; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  id: AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: ObjectSecurity.AreAuditRulesProtected
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is protected.
  syntax:
    content: public bool AreAuditRulesProtected { get; }
    return:
      type: System.Boolean
      description: '`true` if the SACL is protected; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule"></xref> class with the specified values.
  syntax:
    content: public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href="System.Security.Principal.SecurityIdentifier"></xref>.
    - id: accessMask
      type: System.Int32
      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.
    - id: isInherited
      type: System.Boolean
      description: '`true` if this rule is inherited from a parent container.'
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Specifies the inheritance properties of the audit rule.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href="System.Security.AccessControl.InheritanceFlags.None"></xref>.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: Specifies the conditions for which the rule is audited.
    return:
      type: System.Security.AccessControl.AuditRule
      description: The <xref href="System.Security.AccessControl.AuditRule"></xref> object that this method creates.
  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  id: AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: ObjectSecurity.AuditRulesModified
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object have been modified.
  syntax:
    content: protected bool AuditRulesModified { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the audit rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object have been modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: ObjectSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the <xref href="System.Type"></xref> object associated with the audit rules of this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object. The <xref href="System.Type"></xref> object must be an object that can be cast as a <xref href="System.Security.Principal.SecurityIdentifier"></xref> object.
  syntax:
    content: public abstract Type AuditRuleType { get; }
    return:
      type: System.Type
      description: The type of the object associated with the audit rules of this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  id: GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetGroup(Type)
  nameWithType: ObjectSecurity.GetGroup(Type)
  fullName: ObjectSecurity.GetGroup(Type)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the primary group associated with the specified owner.
  syntax:
    content: public System.Security.Principal.IdentityReference GetGroup (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: The owner for which to get the primary group.
    return:
      type: System.Security.Principal.IdentityReference
      description: The primary group associated with the specified owner.
  overload: System.Security.AccessControl.ObjectSecurity.GetGroup*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  id: GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetOwner(Type)
  nameWithType: ObjectSecurity.GetOwner(Type)
  fullName: ObjectSecurity.GetOwner(Type)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the owner associated with the specified primary group.
  syntax:
    content: public System.Security.Principal.IdentityReference GetOwner (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: The primary group for which to get the owner.
    return:
      type: System.Security.Principal.IdentityReference
      description: The owner associated with the specified group.
  overload: System.Security.AccessControl.ObjectSecurity.GetOwner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>targetType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>targetType</code> is not an <xref href="System.Security.Principal.IdentityReference"></xref> type.
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: Some or all identity references could not be translated.
  - type: System.SystemException
    commentId: T:System.SystemException
    description: A Win32 error code was returned.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  id: GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetSecurityDescriptorBinaryForm()
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Returns an array of byte values that represents the security descriptor information for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  remarks: This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.
  syntax:
    content: public byte[] GetSecurityDescriptorBinaryForm ();
    parameters: []
    return:
      type: System.Byte[]
      description: An array of byte values that represents the security descriptor for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object. This method returns `null` if there is no security information in this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  id: GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.
    return:
      type: System.String
      description: The SDDL representation of the specified sections of the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified
  id: GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: ObjectSecurity.GroupModified
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.
  syntax:
    content: protected bool GroupModified { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the group associated with the securable object has been modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.GroupModified*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: ObjectSecurity.IsContainer
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a container object.
  syntax:
    content: protected bool IsContainer { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a container object; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.IsContainer*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS
  id: IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: ObjectSecurity.IsDS
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets a Boolean value that specifies whether this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a directory object.
  syntax:
    content: protected bool IsDS { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object is a directory object; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.IsDS*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  id: IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: IsSddlConversionSupported()
  nameWithType: ObjectSecurity.IsSddlConversionSupported()
  fullName: ObjectSecurity.IsSddlConversionSupported()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format.
  syntax:
    content: public static bool IsSddlConversionSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the security descriptor associated with this  <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)
  fullName: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.
  syntax:
    content: protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the DACL.
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to modify.
    - id: modified
      type: System.Boolean
      description: '`true` if the DACL is successfully modified; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if the DACL is successfully modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccess*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.
  syntax:
    content: public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the DACL.
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to modify.
    - id: modified
      type: System.Boolean
      description: '`true` if the DACL is successfully modified; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if the DACL is successfully modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)
  fullName: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the SACL.
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to modify.
    - id: modified
      type: System.Boolean
      description: '`true` if the SACL is successfully modified; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if the SACL is successfully modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAudit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the SACL.
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to modify.
    - id: modified
      type: System.Boolean
      description: '`true` if the SACL is successfully modified; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if the SACL is successfully modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified
  id: OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: ObjectSecurity.OwnerModified
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.
  syntax:
    content: protected bool OwnerModified { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the owner of the securable object has been modified; otherwise, `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.OwnerModified*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)
  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Saves the specified sections of the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.
  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.
  syntax:
    content: protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: The handle used to retrieve the persisted information.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: One of the <xref href="System.Security.AccessControl.AccessControlSections"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)
  fullName: ObjectSecurity.Persist(String, AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Saves the specified sections of the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.
  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.
  syntax:
    content: protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: name
      type: System.String
      description: The name used to retrieve the persisted information.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: One of the <xref href="System.Security.AccessControl.AccessControlSections"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: Persist(Boolean, String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)
  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Saves the specified sections of the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.
  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.
  syntax:
    content: >-
      [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]

      protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: enableOwnershipPrivilege
      type: System.Boolean
      description: '`true` to enable the privilege that allows the caller to take ownership of the object.'
    - id: name
      type: System.String
      description: The name used to retrieve the persisted information.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: One of the <xref href="System.Security.AccessControl.AccessControlSections"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.
  overload: System.Security.AccessControl.ObjectSecurity.Persist*
  exceptions: []
  attributes:
  - type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  id: PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)
  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all access rules associated with the specified <xref href="System.Security.Principal.IdentityReference"></xref>.
  syntax:
    content: public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The <xref href="System.Security.Principal.IdentityReference"></xref> for which to remove all access rules.
  overload: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: All access rules are not in canonical order.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  id: PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)
  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all audit rules associated with the specified <xref href="System.Security.Principal.IdentityReference"></xref>.
  syntax:
    content: public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The <xref href="System.Security.Principal.IdentityReference"></xref> for which to remove all audit rules.
  overload: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: All audit rules are not in canonical order.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock
  id: ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ReadLock()
  nameWithType: ObjectSecurity.ReadLock()
  fullName: ObjectSecurity.ReadLock()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Locks this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object for read access.
  syntax:
    content: protected void ReadLock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.ReadLock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock
  id: ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: ReadUnlock()
  nameWithType: ObjectSecurity.ReadUnlock()
  fullName: ObjectSecurity.ReadUnlock()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Unlocks this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object for read access.
  syntax:
    content: protected void ReadUnlock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.ReadUnlock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  id: SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetAccessRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)
  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets or removes protection of the access rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.
  syntax:
    content: public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: '`true` to protect the access rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from inheritance; `false` to allow inheritance.'
    - id: preserveInheritance
      type: System.Boolean
      description: '`true` to preserve inherited access rules; `false` to remove inherited access rules. This parameter is ignored if <code>isProtected</code> is `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  id: SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetAuditRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)
  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets or removes protection of the audit rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.
  syntax:
    content: public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: '`true` to protect the audit rules associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from inheritance; `false` to allow inheritance.'
    - id: preserveInheritance
      type: System.Boolean
      description: '`true` to preserve inherited audit rules; `false` to remove inherited audit rules. This parameter is ignored if <code>isProtected</code> is `false`.'
  overload: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  id: SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetGroup(IdentityReference)
  nameWithType: ObjectSecurity.SetGroup(IdentityReference)
  fullName: ObjectSecurity.SetGroup(IdentityReference)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the primary group for the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: public void SetGroup (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The primary group to set.
  overload: System.Security.AccessControl.ObjectSecurity.SetGroup*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  id: SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetOwner(IdentityReference)
  nameWithType: ObjectSecurity.SetOwner(IdentityReference)
  fullName: ObjectSecurity.SetOwner(IdentityReference)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the owner for the security descriptor associated with this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object.
  syntax:
    content: public void SetOwner (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The owner to set.
  overload: System.Security.AccessControl.ObjectSecurity.SetOwner*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  id: SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorBinaryForm(Byte[])
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the security descriptor for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from the specified array of byte values.
  remarks: "If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: The array of bytes from which to set the security descriptor.
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  id: SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the specified sections of the security descriptor for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from the specified array of byte values.
  remarks: "If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: The array of bytes from which to set the security descriptor.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  id: SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorSddlForm(String)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the security descriptor for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.
  remarks: "If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public void SetSecurityDescriptorSddlForm (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: The SDDL string from which to set the security descriptor.
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  id: SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)
  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Sets the specified sections of the security descriptor for this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.
  remarks: "If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: sddlForm
      type: System.String
      description: The SDDL string from which to set the security descriptor.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.
  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock
  id: WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: WriteLock()
  nameWithType: ObjectSecurity.WriteLock()
  fullName: ObjectSecurity.WriteLock()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Locks this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object for write access.
  syntax:
    content: protected void WriteLock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.WriteLock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock
  id: WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  langs:
  - csharp
  name: WriteUnlock()
  nameWithType: ObjectSecurity.WriteUnlock()
  fullName: ObjectSecurity.WriteUnlock()
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Unlocks this <xref href="System.Security.AccessControl.ObjectSecurity"></xref> object for write access.
  syntax:
    content: protected void WriteUnlock ();
    parameters: []
  overload: System.Security.AccessControl.ObjectSecurity.WriteUnlock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Security.AccessControl.ObjectSecurity.#ctor
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity()
  nameWithType: ObjectSecurity.ObjectSecurity()
  fullName: ObjectSecurity.ObjectSecurity()
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity(CommonSecurityDescriptor)
  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
  fullName: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity(Boolean, Boolean)
  nameWithType: ObjectSecurity.ObjectSecurity(Boolean, Boolean)
  fullName: ObjectSecurity.ObjectSecurity(Boolean, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: ObjectSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: ObjectSecurity.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetGroup(Type)
  nameWithType: ObjectSecurity.GetGroup(Type)
  fullName: ObjectSecurity.GetGroup(Type)
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetOwner(Type)
  nameWithType: ObjectSecurity.GetOwner(Type)
  fullName: ObjectSecurity.GetOwner(Type)
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm()
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported()
  nameWithType: ObjectSecurity.IsSddlConversionSupported()
  fullName: ObjectSecurity.IsSddlConversionSupported()
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)
  fullName: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)
  fullName: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(SafeHandle, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)
  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)
  fullName: ObjectSecurity.Persist(String, AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist(Boolean, String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)
  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)
  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)
  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock()
  nameWithType: ObjectSecurity.ReadLock()
  fullName: ObjectSecurity.ReadLock()
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock()
  nameWithType: ObjectSecurity.ReadUnlock()
  fullName: ObjectSecurity.ReadUnlock()
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAccessRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)
  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAuditRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)
  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetGroup(IdentityReference)
  nameWithType: ObjectSecurity.SetGroup(IdentityReference)
  fullName: ObjectSecurity.SetGroup(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetOwner(IdentityReference)
  nameWithType: ObjectSecurity.SetOwner(IdentityReference)
  fullName: ObjectSecurity.SetOwner(IdentityReference)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm(Byte[])
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm(String)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)
  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock()
  nameWithType: ObjectSecurity.WriteLock()
  fullName: ObjectSecurity.WriteLock()
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock()
  nameWithType: ObjectSecurity.WriteUnlock()
  fullName: ObjectSecurity.WriteUnlock()
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorBinaryForm
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetSecurityDescriptorSddlForm
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.#ctor*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ObjectSecurity
  nameWithType: ObjectSecurity.ObjectSecurity
  fullName: ObjectSecurity.ObjectSecurity
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: ObjectSecurity.AccessRightType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ObjectSecurity.AccessRuleFactory
  fullName: ObjectSecurity.AccessRuleFactory
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: ObjectSecurity.AccessRulesModified
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: ObjectSecurity.AccessRuleType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: ObjectSecurity.AreAccessRulesCanonical
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: ObjectSecurity.AreAccessRulesProtected
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: ObjectSecurity.AreAuditRulesCanonical
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: ObjectSecurity.AreAuditRulesProtected
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ObjectSecurity.AuditRuleFactory
  fullName: ObjectSecurity.AuditRuleFactory
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: ObjectSecurity.AuditRulesModified
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: ObjectSecurity.AuditRuleType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetGroup
  nameWithType: ObjectSecurity.GetGroup
  fullName: ObjectSecurity.GetGroup
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetOwner
  nameWithType: ObjectSecurity.GetOwner
  fullName: ObjectSecurity.GetOwner
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm
  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm
  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: ObjectSecurity.GroupModified
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: ObjectSecurity.IsContainer
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.IsDS*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: ObjectSecurity.IsDS
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported
  nameWithType: ObjectSecurity.IsSddlConversionSupported
  fullName: ObjectSecurity.IsSddlConversionSupported
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: ObjectSecurity.ModifyAccess
  fullName: ObjectSecurity.ModifyAccess
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAccessRule
  nameWithType: ObjectSecurity.ModifyAccessRule
  fullName: ObjectSecurity.ModifyAccessRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: ObjectSecurity.ModifyAudit
  fullName: ObjectSecurity.ModifyAudit
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ModifyAuditRule
  nameWithType: ObjectSecurity.ModifyAuditRule
  fullName: ObjectSecurity.ModifyAuditRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: ObjectSecurity.OwnerModified
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.Persist*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: Persist
  nameWithType: ObjectSecurity.Persist
  fullName: ObjectSecurity.Persist
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAccessRules
  nameWithType: ObjectSecurity.PurgeAccessRules
  fullName: ObjectSecurity.PurgeAccessRules
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: PurgeAuditRules
  nameWithType: ObjectSecurity.PurgeAuditRules
  fullName: ObjectSecurity.PurgeAuditRules
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock
  nameWithType: ObjectSecurity.ReadLock
  fullName: ObjectSecurity.ReadLock
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock
  nameWithType: ObjectSecurity.ReadUnlock
  fullName: ObjectSecurity.ReadUnlock
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAccessRuleProtection
  nameWithType: ObjectSecurity.SetAccessRuleProtection
  fullName: ObjectSecurity.SetAccessRuleProtection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetAuditRuleProtection
  nameWithType: ObjectSecurity.SetAuditRuleProtection
  fullName: ObjectSecurity.SetAuditRuleProtection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetGroup
  nameWithType: ObjectSecurity.SetGroup
  fullName: ObjectSecurity.SetGroup
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: SetOwner
  nameWithType: ObjectSecurity.SetOwner
  fullName: ObjectSecurity.SetOwner
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock
  nameWithType: ObjectSecurity.WriteLock
  fullName: ObjectSecurity.WriteLock
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock*
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock
  nameWithType: ObjectSecurity.WriteUnlock
  fullName: ObjectSecurity.WriteUnlock
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
