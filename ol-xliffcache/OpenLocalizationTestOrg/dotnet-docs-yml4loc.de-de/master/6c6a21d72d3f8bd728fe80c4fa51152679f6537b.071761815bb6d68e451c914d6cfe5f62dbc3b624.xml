{"nodes":[{"content":"Specifies whether a property should be localized. This class cannot be inherited.","nodes":[{"pos":[0,81],"content":"Specifies whether a property should be localized. This class cannot be inherited.","nodes":[{"content":"Specifies whether a property should be localized. This class cannot be inherited.","pos":[0,81],"nodes":[{"content":"Specifies whether a property should be localized.","pos":[0,49]},{"content":"This class cannot be inherited.","pos":[50,81]}]}]}],"pos":[942,1024],"yaml":true},{"content":"When code is generated for a component, members that are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` have their property values saved in resource files. You can localize these resource files without modifying the code.  \n  \n By default, members that have no localizable attribute or are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false` will have their property values persisted to code, if the data type allows. Otherwise, if the main component is set to `Localizable`, all properties will be persisted to the resource file. The default is `false`.  \n  \n> [!NOTE]\n>  When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value is <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,254],"content":"When code is generated for a component, members that are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` have their property values saved in resource files. You can localize these resource files without modifying the code.","nodes":[{"content":"When code is generated for a component, members that are marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph> have their property values saved in resource files.","pos":[0,188],"source":"When code is generated for a component, members that are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` have their property values saved in resource files."},{"content":"You can localize these resource files without modifying the code.","pos":[189,254]}]},{"pos":[261,616],"content":"By default, members that have no localizable attribute or are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false` will have their property values persisted to code, if the data type allows. Otherwise, if the main component is set to `Localizable`, all properties will be persisted to the resource file. The default is `false`.","nodes":[{"content":"By default, members that have no localizable attribute or are marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph> will have their property values persisted to code, if the data type allows.","pos":[0,218],"source":"By default, members that have no localizable attribute or are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false` will have their property values persisted to code, if the data type allows."},{"content":"Otherwise, if the main component is set to <ph id=\"ph1\">`Localizable`</ph>, all properties will be persisted to the resource file.","pos":[219,331],"source":" Otherwise, if the main component is set to `Localizable`, all properties will be persisted to the resource file."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[332,355],"source":" The default is `false`."}]},{"pos":[624,1281],"content":"[!NOTE]\n When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value is <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value is <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.","pos":[8,655],"nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.LocalizableAttribute.Yes&gt;</ph>.","pos":[1,212],"source":" When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>."},{"content":"For a property marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph>, the value is <ph id=\"ph3\">&lt;xref:System.ComponentModel.LocalizableAttribute.No&gt;</ph>.","pos":[213,376],"source":" For a property marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value is <xref:System.ComponentModel.LocalizableAttribute.No>."},{"content":"Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[377,647],"source":" Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>."}]}]},{"pos":[1288,1399],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1035,2444],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> class."}],"pos":[9310,9415],"yaml":true},{"content":"`true` if a property should be localized; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if a property should be localized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a property should be localized; otherwise, `false`."}],"pos":[10471,10535],"yaml":true},{"content":"Specifies the default value, which is <xref href=\"System.ComponentModel.LocalizableAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"pos":[0,139],"content":"Specifies the default value, which is <xref href=\"System.ComponentModel.LocalizableAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"content":"Specifies the default value, which is <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute.No\"&gt;&lt;/xref&gt;</ph>.","pos":[0,105],"source":"Specifies the default value, which is <xref href=\"System.ComponentModel.LocalizableAttribute.No\"></xref>."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[106,139],"source":" This `static` field is read-only."}]}],"pos":[11867,12007],"yaml":true},{"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>.","nodes":[{"pos":[0,341],"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>.","pos":[0,341],"nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute.No&gt;</ph>.","pos":[0,140],"source":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName&gt;</ph>.","pos":[141,341],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>."}]}]}],"pos":[12018,12360],"yaml":true,"extradata":"MT"},{"content":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.","nodes":[{"pos":[0,134],"content":"Returns whether the value of the given object is equal to the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>."}],"pos":[13881,14016],"yaml":true},{"content":"The object to test the value equality of.","nodes":[{"pos":[0,41],"content":"The object to test the value equality of.","nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]}],"pos":[14156,14198],"yaml":true},{"content":"`true` if the value of the given object is equal to that of the current; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the value of the given object is equal to that of the current; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the given object is equal to that of the current; otherwise, `false`."}],"pos":[14256,14351],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[15715,15756],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.","nodes":[{"pos":[0,92],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>."}],"pos":[15890,15983],"yaml":true},{"content":"Determines if this attribute is the default.","nodes":[{"pos":[0,44],"content":"Determines if this attribute is the default.","nodes":[{"content":"Determines if this attribute is the default.","pos":[0,44]}]}],"pos":[17394,17439],"yaml":true},{"content":"`true` if the attribute is the default value for this attribute class; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the attribute is the default value for this attribute class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the attribute is the default value for this attribute class; otherwise, `false`."}],"pos":[17583,17676],"yaml":true},{"content":"Gets a value indicating whether a property should be localized.","nodes":[{"pos":[0,63],"content":"Gets a value indicating whether a property should be localized.","nodes":[{"content":"Gets a value indicating whether a property should be localized.","pos":[0,63]}]}],"pos":[18996,19060],"yaml":true},{"content":"`true` if a property should be localized; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if a property should be localized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a property should be localized; otherwise, `false`."}],"pos":[20432,20496],"yaml":true},{"content":"Specifies that a property should not be localized. This `static` field is read-only.","nodes":[{"pos":[0,84],"content":"Specifies that a property should not be localized. This `static` field is read-only.","nodes":[{"content":"Specifies that a property should not be localized.","pos":[0,50]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[51,84],"source":" This `static` field is read-only."}]}],"pos":[21806,21891],"yaml":true},{"content":"This field is the default setting for this attribute.  \n  \n When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.","nodes":[{"pos":[0,53],"content":"This field is the default setting for this attribute.","nodes":[{"content":"This field is the default setting for this attribute.","pos":[0,53]}]},{"pos":[60,475],"content":"When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.LocalizableAttribute.No&gt;</ph>.","pos":[0,211],"source":"When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[212,415],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>."}]}],"pos":[21902,22382],"yaml":true,"extradata":"MT"},{"content":"Specifies that a property should be localized. This `static` field is read-only.","nodes":[{"pos":[0,80],"content":"Specifies that a property should be localized. This `static` field is read-only.","nodes":[{"content":"Specifies that a property should be localized.","pos":[0,46]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[47,80],"source":" This `static` field is read-only."}]}],"pos":[23810,23891],"yaml":true},{"content":"When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName>.","nodes":[{"pos":[0,416],"content":"When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.LocalizableAttribute.Yes&gt;</ph>.","pos":[0,211],"source":"When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName&gt;</ph>.","pos":[212,416],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName>."}]}],"pos":[23902,24319],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.LocalizableAttribute\n  commentId: T:System.ComponentModel.LocalizableAttribute\n  id: LocalizableAttribute\n  children:\n  - System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.LocalizableAttribute.Default\n  - System.ComponentModel.LocalizableAttribute.Equals(System.Object)\n  - System.ComponentModel.LocalizableAttribute.GetHashCode\n  - System.ComponentModel.LocalizableAttribute.IsDefaultAttribute\n  - System.ComponentModel.LocalizableAttribute.IsLocalizable\n  - System.ComponentModel.LocalizableAttribute.No\n  - System.ComponentModel.LocalizableAttribute.Yes\n  langs:\n  - csharp\n  name: LocalizableAttribute\n  nameWithType: LocalizableAttribute\n  fullName: System.ComponentModel.LocalizableAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies whether a property should be localized. This class cannot be inherited.\n  remarks: \"When code is generated for a component, members that are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` have their property values saved in resource files. You can localize these resource files without modifying the code.  \\n  \\n By default, members that have no localizable attribute or are marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false` will have their property values persisted to code, if the data type allows. Otherwise, if the main component is set to `Localizable`, all properties will be persisted to the resource file. The default is `false`.  \\n  \\n> [!NOTE]\\n>  When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value is <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example marks a property as needing to be localized.  \\n  \\n [!code-cpp[classic localizableattribute example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LocalizableAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[classic localizableattribute example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LocalizableAttribute Example/CS/source.cs#1)]\\n [!code-vb[classic localizableattribute example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LocalizableAttribute Example/VB/source.vb#1)]  \\n  \\n The next example shows how to check the value of the <xref:System.ComponentModel.LocalizableAttribute> for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Then, the code gets `MyProperty` from the <xref:System.ComponentModel.PropertyDescriptorCollection>. Next, it returns the attributes for this property and saves them in the attributes variable.  \\n  \\n Finally, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.LocalizableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property needs to be localized.  \\n  \\n [!code-cpp[classic localizableattribute example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LocalizableAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[classic localizableattribute example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LocalizableAttribute Example/CS/source.cs#2)]\\n [!code-vb[classic localizableattribute example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LocalizableAttribute Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class LocalizableAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: LocalizableAttribute(Boolean)\n  nameWithType: LocalizableAttribute.LocalizableAttribute(Boolean)\n  fullName: LocalizableAttribute.LocalizableAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example marks a property as needing to be localized. This code creates a new <xref:System.ComponentModel.LocalizableAttribute>, sets its value to <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>, and binds it to the property.  \\n  \\n [!code-cpp[Classic LocalizableAttribute.LocalizableAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LocalizableAttribute.LocalizableAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic LocalizableAttribute.LocalizableAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LocalizableAttribute.LocalizableAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic LocalizableAttribute.LocalizableAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LocalizableAttribute.LocalizableAttribute Example/VB/source.vb#1)]\"\n  syntax:\n    content: public LocalizableAttribute (bool isLocalizable);\n    parameters:\n    - id: isLocalizable\n      type: System.Boolean\n      description: '`true` if a property should be localized; otherwise, `false`.'\n  overload: System.ComponentModel.LocalizableAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.Default\n  commentId: F:System.ComponentModel.LocalizableAttribute.Default\n  id: Default\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: LocalizableAttribute.Default\n  fullName: LocalizableAttribute.Default\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies the default value, which is <xref href=\"System.ComponentModel.LocalizableAttribute.No\"></xref>. This `static` field is read-only.\n  remarks: When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.LocalizableAttribute Default;\n    return:\n      type: System.ComponentModel.LocalizableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LocalizableAttribute.Equals(Object)\n  fullName: LocalizableAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the given object is equal to that of the current; otherwise, `false`.'\n  overload: System.ComponentModel.LocalizableAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.GetHashCode\n  commentId: M:System.ComponentModel.LocalizableAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LocalizableAttribute.GetHashCode()\n  fullName: LocalizableAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.\n  overload: System.ComponentModel.LocalizableAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: LocalizableAttribute.IsDefaultAttribute()\n  fullName: LocalizableAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: Determines if this attribute is the default.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the attribute is the default value for this attribute class; otherwise, `false`.'\n  overload: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.IsLocalizable\n  commentId: P:System.ComponentModel.LocalizableAttribute.IsLocalizable\n  id: IsLocalizable\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: IsLocalizable\n  nameWithType: LocalizableAttribute.IsLocalizable\n  fullName: LocalizableAttribute.IsLocalizable\n  type: Property\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether a property should be localized.\n  remarks: ''\n  example:\n  - \"The following example shows how to check the value of the <xref:System.ComponentModel.LocalizableAttribute> for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Then, the code gets `MyProperty` from the <xref:System.ComponentModel.PropertyDescriptorCollection>. Next, it returns the attributes for this property and saves them in the attributes variable.  \\n  \\n Finally, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.LocalizableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property needs to be localized.  \\n  \\n [!code-cpp[Classic LocalizableAttribute.IsLocalizable Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LocalizableAttribute.IsLocalizable Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic LocalizableAttribute.IsLocalizable Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LocalizableAttribute.IsLocalizable Example/CS/source.cs#1)]\\n [!code-vb[Classic LocalizableAttribute.IsLocalizable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LocalizableAttribute.IsLocalizable Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool IsLocalizable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a property should be localized; otherwise, `false`.'\n  overload: System.ComponentModel.LocalizableAttribute.IsLocalizable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.No\n  commentId: F:System.ComponentModel.LocalizableAttribute.No\n  id: No\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: LocalizableAttribute.No\n  fullName: LocalizableAttribute.No\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that a property should not be localized. This `static` field is read-only.\n  remarks: \"This field is the default setting for this attribute.  \\n  \\n When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.No?displayProperty=fullName>.\"\n  syntax:\n    content: public static readonly System.ComponentModel.LocalizableAttribute No;\n    return:\n      type: System.ComponentModel.LocalizableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LocalizableAttribute.Yes\n  commentId: F:System.ComponentModel.LocalizableAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.LocalizableAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: LocalizableAttribute.Yes\n  fullName: LocalizableAttribute.Yes\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that a property should be localized. This `static` field is read-only.\n  remarks: When you mark a property with the <xref:System.ComponentModel.LocalizableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.LocalizableAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.LocalizableAttribute.Yes?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.LocalizableAttribute Yes;\n    return:\n      type: System.ComponentModel.LocalizableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: LocalizableAttribute(Boolean)\n  nameWithType: LocalizableAttribute.LocalizableAttribute(Boolean)\n  fullName: LocalizableAttribute.LocalizableAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.LocalizableAttribute.Default\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: Default\n  nameWithType: LocalizableAttribute.Default\n  fullName: LocalizableAttribute.Default\n- uid: System.ComponentModel.LocalizableAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: LocalizableAttribute\n  nameWithType: LocalizableAttribute\n  fullName: System.ComponentModel.LocalizableAttribute\n- uid: System.ComponentModel.LocalizableAttribute.Equals(System.Object)\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LocalizableAttribute.Equals(Object)\n  fullName: LocalizableAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.LocalizableAttribute.GetHashCode\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LocalizableAttribute.GetHashCode()\n  fullName: LocalizableAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: LocalizableAttribute.IsDefaultAttribute()\n  fullName: LocalizableAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.LocalizableAttribute.IsLocalizable\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: LocalizableAttribute.IsLocalizable\n  fullName: LocalizableAttribute.IsLocalizable\n- uid: System.ComponentModel.LocalizableAttribute.No\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: No\n  nameWithType: LocalizableAttribute.No\n  fullName: LocalizableAttribute.No\n- uid: System.ComponentModel.LocalizableAttribute.Yes\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: LocalizableAttribute.Yes\n  fullName: LocalizableAttribute.Yes\n- uid: System.ComponentModel.LocalizableAttribute.#ctor*\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: LocalizableAttribute\n  nameWithType: LocalizableAttribute.LocalizableAttribute\n  fullName: LocalizableAttribute.LocalizableAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n- uid: System.ComponentModel.LocalizableAttribute.Equals*\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: LocalizableAttribute.Equals\n  fullName: LocalizableAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n- uid: System.ComponentModel.LocalizableAttribute.GetHashCode*\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LocalizableAttribute.GetHashCode\n  fullName: LocalizableAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n- uid: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: LocalizableAttribute.IsDefaultAttribute\n  fullName: LocalizableAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n- uid: System.ComponentModel.LocalizableAttribute.IsLocalizable*\n  parent: System.ComponentModel.LocalizableAttribute\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: LocalizableAttribute.IsLocalizable\n  fullName: LocalizableAttribute.IsLocalizable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LocalizableAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}