{"nodes":[{"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","nodes":[{"pos":[0,77],"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","nodes":[{"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","pos":[0,77]}]}],"pos":[761,839],"yaml":true},{"content":"<xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas. It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.  \n  \n <xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials. You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.  \n  \n## Resolving DTDs  \n If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> method to get a stream representation of the DTD. If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters. If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.  \n  \n The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource. There is no `get` accessor to this property for security reasons. When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.  \n  \n Resolving all other XML resources is very similar to resolving DTDs. <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content. The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.  \n  \n## Extending the XmlUrlResolver class  \n The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache. In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server. The performance gains here must be weighed against the need for up-to-date content.  \n  \n The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache. This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method.  \n  \n [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]\n [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  \n  \n The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method. This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects. The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.  \n  \n The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.  \n  \n An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`. When this value is set to `true`, the instance resolves a resource from the default cache if possible. When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.  \n  \n> [!NOTE]\n>  This example leverages the extensibility of the XML classes in the .NET Framework. Other classes can be extended and customized to suit the needs of a particular application.","nodes":[{"pos":[0,300],"content":"<xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas. It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","nodes":[{"content":"<xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas. It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","pos":[0,300],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.","pos":[0,137],"source":"<xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas."},{"content":"It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","pos":[138,300]}]}]},{"pos":[307,523],"content":"<xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id=\"ph2\">&lt;xref:System.Xml&gt;</ph> namespace.","pos":[0,108],"source":"<xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace."},{"content":"It supports the <ph id=\"ph1\">`file://`</ph> and <ph id=\"ph2\">`http://`</ph> protocols and requests from the <ph id=\"ph3\">&lt;xref:System.Net.WebRequest&gt;</ph> class.","pos":[109,216],"source":" It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class."}]},{"pos":[531,813],"content":"[!IMPORTANT]\n <xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials. You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials. You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.","pos":[13,280],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects can contain sensitive information such as user credentials.","pos":[1,101],"source":" <xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials."},{"content":"You should be careful when you cache <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects and should not pass <ph id=\"ph2\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects to an untrusted component.","pos":[102,267],"source":" You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component."}]}]},{"pos":[822,836],"content":"Resolving DTDs","linkify":"Resolving DTDs","nodes":[{"content":"Resolving DTDs","pos":[0,14]}]},{"pos":[840,1402],"content":"If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> method to get a stream representation of the DTD. If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters. If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.","nodes":[{"content":"If an XML reader (<ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>) is reading an XML file that contains an external DTD, it calls the <ph id=\"ph2\">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt;</ph> method to get a stream representation of the DTD.","pos":[0,239],"source":"If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> method to get a stream representation of the DTD."},{"content":"If the URI of the DTD is a relative URI, the XML reader calls the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt;</ph> method and returns an absolute URI for the given <ph id=\"ph2\">`relativeUri`</ph> and <ph id=\"ph3\">`baseURi`</ph> parameters.","pos":[240,466],"source":" If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> doesn't know how to resolve the URI, it returns <ph id=\"ph2\">`null`</ph>.","pos":[467,562],"source":" If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`."}]},{"pos":[1409,1838],"content":"The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource. There is no `get` accessor to this property for security reasons. When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;</ph> method uses the information in the <ph id=\"ph2\">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property as appropriate to gain access to the resource.","pos":[0,213],"source":"The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource."},{"content":"There is no <ph id=\"ph1\">`get`</ph> accessor to this property for security reasons.","pos":[214,279],"source":" There is no `get` accessor to this property for security reasons."},{"content":"When overwriting <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph>, <bpt id=\"p1\">**</bpt>GetEntity<ept id=\"p1\">**</ept> is the method that utilizes the credential information in the <bpt id=\"p2\">**</bpt>Credentials<ept id=\"p2\">**</ept> property.","pos":[280,429],"source":" When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property."}]},{"pos":[1845,2156],"content":"Resolving all other XML resources is very similar to resolving DTDs. <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content. The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.","nodes":[{"content":"Resolving all other XML resources is very similar to resolving DTDs. <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content. The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.","pos":[0,311],"nodes":[{"content":"Resolving all other XML resources is very similar to resolving DTDs.","pos":[0,68]},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> negotiates the connection with the external resource and returns a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> representation of the content.","pos":[69,220],"source":" <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content."},{"content":"The object that is making the call to <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> interprets the stream.","pos":[221,311],"source":" The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream."}]}]},{"pos":[2165,2199],"content":"Extending the XmlUrlResolver class","linkify":"Extending the XmlUrlResolver class","nodes":[{"content":"Extending the XmlUrlResolver class","pos":[0,34]}]},{"pos":[2203,2567],"content":"The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache. In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server. The performance gains here must be weighed against the need for up-to-date content.","nodes":[{"content":"The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache. In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server. The performance gains here must be weighed against the need for up-to-date content.","pos":[0,364],"nodes":[{"content":"The default behavior of the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is to resolve an XML data resource from its source, not from cache.","pos":[0,134],"source":"The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache."},{"content":"In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.","pos":[135,280]},{"content":"The performance gains here must be weighed against the need for up-to-date content.","pos":[281,364]}]}]},{"pos":[2574,2920],"content":"The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache. This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method.","nodes":[{"content":"The following example extends <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> and builds a new class, <ph id=\"ph2\">`XmlCachingResolver`</ph>, to retrieve resources from the cache.","pos":[0,146],"source":"The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache."},{"content":"This is done by overriding the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;</ph> method.","pos":[147,346],"source":" This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method."}]},{"pos":[2927,3200],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XmlCachingResolver_ex#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>XmlCachingResolver_ex#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]\n [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]"},{"pos":[3207,3627],"content":"The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method. This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects. The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.","nodes":[{"content":"The caching behavior of the <ph id=\"ph1\">`XmlCachingResolver`</ph> class is implemented in the <ph id=\"ph2\">`GetEntity`</ph> method.","pos":[0,96],"source":"The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method."},{"content":"This is done by creating new <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> objects.","pos":[97,214],"source":" This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object is created using the <ph id=\"ph2\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.Default&gt;</ph> member of the <ph id=\"ph3\">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph> enumeration.","pos":[215,420],"source":" The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration."}]},{"pos":[3634,3804],"content":"The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> object is set with the <ph id=\"ph3\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object.","pos":[0,170],"source":"The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object."}]},{"pos":[3811,4135],"content":"An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`. When this value is set to `true`, the instance resolves a resource from the default cache if possible. When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.","nodes":[{"content":"An instance of the <ph id=\"ph1\">`XmlCachingResolver`</ph> class is created with the <ph id=\"ph2\">`Boolean`</ph> <ph id=\"ph3\">`enableHttpCaching`</ph>.","pos":[0,96],"source":"An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`."},{"content":"When this value is set to <ph id=\"ph1\">`true`</ph>, the instance resolves a resource from the default cache if possible.","pos":[97,199],"source":" When this value is set to `true`, the instance resolves a resource from the default cache if possible."},{"content":"When <ph id=\"ph1\">`enableHttpCaching`</ph> is set to <ph id=\"ph2\">`false`</ph>, the instance uses the default behavior and resolves resources from their source.","pos":[200,324],"source":" When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source."}]},{"pos":[4143,4328],"content":"[!NOTE]\n This example leverages the extensibility of the XML classes in the .NET Framework. Other classes can be extended and customized to suit the needs of a particular application.","leadings":["","> "],"nodes":[{"content":" This example leverages the extensibility of the XML classes in the .NET Framework. Other classes can be extended and customized to suit the needs of a particular application.","pos":[8,183],"nodes":[{"content":"This example leverages the extensibility of the XML classes in the .NET Framework.","pos":[1,83]},{"content":"Other classes can be extended and customized to suit the needs of a particular application.","pos":[84,175]}]}]}],"pos":[850,5210],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.XmlUrlResolver\"></xref> class.","nodes":[{"pos":[0,87],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlUrlResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.XmlUrlResolver\"></xref> class."}],"pos":[7264,7352],"yaml":true},{"content":"Gets or sets the cache policy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object.","nodes":[{"pos":[0,99],"content":"Gets or sets the cache policy for the underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the cache policy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object."}],"pos":[8600,8700],"yaml":true},{"content":"The cache policy for the underlying web request.","nodes":[{"pos":[0,48],"content":"The cache policy for the underlying web request.","nodes":[{"content":"The cache policy for the underlying web request.","pos":[0,48]}]}],"pos":[8866,8915],"yaml":true},{"content":"Sets credentials used to authenticate web requests.","nodes":[{"pos":[0,51],"content":"Sets credentials used to authenticate web requests.","nodes":[{"content":"Sets credentials used to authenticate web requests.","pos":[0,51]}]}],"pos":[10101,10153],"yaml":true},{"content":"If the virtual directory does not require authentication, this property does not need to be set. Otherwise, the credentials of the user must be supplied.  \n  \n You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.  \n  \n The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.  \n  \n```  \nNetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   \nCredentialCache myCache = new CredentialCache();   \nmyCache.Add(new Uri(\"http://www.contoso.com/\"), \"Basic\", myCred);   \nmyCache.Add(new Uri(\"http://app.contoso.com/\"), \"Basic\", myCred);  \nXmlUrlResolver resolver = new XmlUrlResolver();  \nresolver.Credentials = myCache;  \n```","nodes":[{"pos":[0,153],"content":"If the virtual directory does not require authentication, this property does not need to be set. Otherwise, the credentials of the user must be supplied.","nodes":[{"content":"If the virtual directory does not require authentication, this property does not need to be set. Otherwise, the credentials of the user must be supplied.","pos":[0,153],"nodes":[{"content":"If the virtual directory does not require authentication, this property does not need to be set.","pos":[0,96]},{"content":"Otherwise, the credentials of the user must be supplied.","pos":[97,153]}]}]},{"pos":[160,367],"content":"You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.","nodes":[{"content":"You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.","pos":[0,207],"nodes":[{"content":"You can associate different credentials with different URIs and add them to a cache.","pos":[0,84]},{"content":"You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.","pos":[85,207]}]}]},{"pos":[374,496],"content":"The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.","nodes":[{"content":"The following C# code shows how to set the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property to a credential cache.","pos":[0,122],"source":"The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache."}]}],"pos":[10164,11065],"yaml":true,"extradata":"MT"},{"content":"The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlUrlResolver` has no user credentials.","nodes":[{"pos":[0,170],"content":"The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlUrlResolver` has no user credentials.","nodes":[{"content":"The credentials to be used to authenticate web requests.","pos":[0,56]},{"content":"If this property is not set, the value defaults to <ph id=\"ph1\">`null`</ph>; that is, the <ph id=\"ph2\">`XmlUrlResolver`</ph> has no user credentials.","pos":[57,170],"source":" If this property is not set, the value defaults to `null`; that is, the `XmlUrlResolver` has no user credentials."}]}],"pos":[11725,11896],"yaml":true},{"content":"Maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,58],"content":"Maps a URI to an object that contains the actual resource.","nodes":[{"content":"Maps a URI to an object that contains the actual resource.","pos":[0,58]}]}],"pos":[13239,13298],"yaml":true},{"content":"This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.  \n  \n> [!IMPORTANT]\n>  Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.","nodes":[{"pos":[0,125],"content":"This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.","nodes":[{"content":"This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.","pos":[0,125]}]},{"pos":[132,232],"content":"For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.","nodes":[{"content":"For the asynchronous version of this method, see <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</ph>.","pos":[0,100],"source":"For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>."}]},{"pos":[240,654],"content":"[!IMPORTANT]\n Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.","leadings":["","> "],"nodes":[{"content":" Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.","pos":[13,412],"nodes":[{"content":"Your application can mitigate memory denial of service threats to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method by implementing IStream<ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> to limit the number of bytes read.","pos":[1,236],"source":" Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read."},{"content":"This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method.","pos":[237,399],"source":" This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method."}]}]}],"pos":[13309,13971],"yaml":true,"extradata":"MT"},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[14827,14931],"yaml":true},{"content":"Currently not used.","nodes":[{"pos":[0,19],"content":"Currently not used.","nodes":[{"content":"Currently not used.","pos":[0,19]}]}],"pos":[14991,15011],"yaml":true},{"content":"The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"pos":[0,116],"content":"The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current implementation only returns <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects.","pos":[30,116],"source":" The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects."}]}],"pos":[15081,15198],"yaml":true},{"content":"A stream object or `null` if a type other than stream is specified.","nodes":[{"pos":[0,67],"content":"A stream object or <ph id=\"ph1\">`null`</ph> if a type other than stream is specified.","source":"A stream object or `null` if a type other than stream is specified."}],"pos":[15255,15323],"yaml":true},{"content":"<code>ofObjectToReturn</code> is neither `null` nor a `Stream` type.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is neither <ph id=\"ph2\">`null`</ph> nor a <ph id=\"ph3\">`Stream`</ph> type.","source":"<code>ofObjectToReturn</code> is neither `null` nor a `Stream` type."}],"pos":[15478,15547],"yaml":true},{"content":"The specified URI is not an absolute URI.","nodes":[{"pos":[0,41],"content":"The specified URI is not an absolute URI.","nodes":[{"content":"The specified URI is not an absolute URI.","pos":[0,41]}]}],"pos":[15643,15685],"yaml":true},{"content":"<code>absoluteUri</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>absoluteUri</code> is `null`."}],"pos":[15787,15823],"yaml":true},{"content":"There is a runtime error (for example, an interrupted server connection).","nodes":[{"pos":[0,73],"content":"There is a runtime error (for example, an interrupted server connection).","nodes":[{"content":"There is a runtime error (for example, an interrupted server connection).","pos":[0,73]}]}],"pos":[15901,15975],"yaml":true},{"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,73],"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"content":"Asynchronously maps a URI to an object that contains the actual resource.","pos":[0,73]}]}],"pos":[17280,17354],"yaml":true},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[17579,17683],"yaml":true},{"content":"Currently not used.","nodes":[{"pos":[0,19],"content":"Currently not used.","nodes":[{"content":"Currently not used.","pos":[0,19]}]}],"pos":[17743,17763],"yaml":true},{"content":"The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"pos":[0,116],"content":"The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current implementation only returns <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects.","pos":[30,116],"source":" The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects."}]}],"pos":[17833,17950],"yaml":true},{"content":"A stream object or `null` if a type other than stream is specified.","nodes":[{"pos":[0,67],"content":"A stream object or <ph id=\"ph1\">`null`</ph> if a type other than stream is specified.","source":"A stream object or `null` if a type other than stream is specified."}],"pos":[18036,18104],"yaml":true},{"content":"Gets or sets the network proxy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object.","nodes":[{"pos":[0,100],"content":"Gets or sets the network proxy for the underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the network proxy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object."}],"pos":[19274,19375],"yaml":true},{"content":"The <xref href=\"System.Net.IWebProxy\"></xref> to use to access the Internet resource.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.IWebProxy\"&gt;&lt;/xref&gt;</ph> to use to access the Internet resource.","source":"The <xref href=\"System.Net.IWebProxy\"></xref> to use to access the Internet resource."}],"pos":[19505,19591],"yaml":true},{"content":"Resolves the absolute URI from the base and relative URIs.","nodes":[{"pos":[0,58],"content":"Resolves the absolute URI from the base and relative URIs.","nodes":[{"content":"Resolves the absolute URI from the base and relative URIs.","pos":[0,58]}]}],"pos":[20880,20939],"yaml":true},{"content":"The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.","nodes":[{"pos":[0,116],"content":"The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.","nodes":[{"content":"The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.","pos":[0,116]}]}],"pos":[20950,21067],"yaml":true,"extradata":"MT"},{"content":"The base URI used to resolve the relative URI.","nodes":[{"pos":[0,46],"content":"The base URI used to resolve the relative URI.","nodes":[{"content":"The base URI used to resolve the relative URI.","pos":[0,46]}]}],"pos":[21232,21279],"yaml":true},{"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"pos":[0,213],"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"content":"The URI to resolve.","pos":[0,19]},{"content":"The URI can be absolute or relative.","pos":[20,56]},{"content":"If absolute, this value effectively replaces the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> value.","pos":[57,133],"source":" If absolute, this value effectively replaces the <code>baseUri</code> value."},{"content":"If relative, it combines with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> to make an absolute URI.","pos":[134,213],"source":" If relative, it combines with the <code>baseUri</code> to make an absolute URI."}]}],"pos":[21346,21560],"yaml":true},{"content":"The absolute URI, or `null` if the relative URI cannot be resolved.","nodes":[{"pos":[0,67],"content":"The absolute URI, or <ph id=\"ph1\">`null`</ph> if the relative URI cannot be resolved.","source":"The absolute URI, or `null` if the relative URI cannot be resolved."}],"pos":[21614,21682],"yaml":true},{"content":"<code>baseUri</code> is `null` or <code>relativeUri</code> is `null`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;baseUri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>baseUri</code> is `null` or <code>relativeUri</code> is `null`."}],"pos":[21848,21918],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlUrlResolver\n  commentId: T:System.Xml.XmlUrlResolver\n  id: XmlUrlResolver\n  children:\n  - System.Xml.XmlUrlResolver.#ctor\n  - System.Xml.XmlUrlResolver.CachePolicy\n  - System.Xml.XmlUrlResolver.Credentials\n  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)\n  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  - System.Xml.XmlUrlResolver.Proxy\n  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)\n  langs:\n  - csharp\n  name: XmlUrlResolver\n  nameWithType: XmlUrlResolver\n  fullName: System.Xml.XmlUrlResolver\n  type: Class\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Resolves external XML resources named by a Uniform Resource Identifier (URI).\n  remarks: \"<xref:System.Xml.XmlUrlResolver> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas. It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.  \\n  \\n <xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xml.XmlUrlResolver> objects can contain sensitive information such as user credentials. You should be careful when you cache <xref:System.Xml.XmlUrlResolver> objects and should not pass <xref:System.Xml.XmlUrlResolver> objects to an untrusted component.  \\n  \\n## Resolving DTDs  \\n If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> method to get a stream representation of the DTD. If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters. If the <xref:System.Xml.XmlUrlResolver> doesn't know how to resolve the URI, it returns `null`.  \\n  \\n The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource. There is no `get` accessor to this property for security reasons. When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.  \\n  \\n Resolving all other XML resources is very similar to resolving DTDs. <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content. The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.  \\n  \\n## Extending the XmlUrlResolver class  \\n The default behavior of the <xref:System.Xml.XmlUrlResolver> class is to resolve an XML data resource from its source, not from cache. In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server. The performance gains here must be weighed against the need for up-to-date content.  \\n  \\n The following example extends <xref:System.Xml.XmlUrlResolver> and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache. This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method.  \\n  \\n [!code-csharp[XmlCachingResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlCachingResolver_ex/CS/XmlCachingResolver_ex.cs#1)]\\n [!code-vb[XmlCachingResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlCachingResolver_ex/VB/XmlCachingResolver_ex.vb#1)]  \\n  \\n The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method. This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects. The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel.Default> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.  \\n  \\n The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.  \\n  \\n An instance of the `XmlCachingResolver` class is created with the `Boolean` `enableHttpCaching`. When this value is set to `true`, the instance resolves a resource from the default cache if possible. When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.  \\n  \\n> [!NOTE]\\n>  This example leverages the extensibility of the XML classes in the .NET Framework. Other classes can be extended and customized to suit the needs of a particular application.\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlReader> that uses an <xref:System.Xml.XmlUrlResolver> with default credentials.  \\n  \\n [!code-csharp[XmlResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#1)]\\n [!code-vb[XmlResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#1)]\"\n  syntax:\n    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlResolver\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.#ctor\n  commentId: M:System.Xml.XmlUrlResolver.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: XmlUrlResolver()\n  nameWithType: XmlUrlResolver.XmlUrlResolver()\n  fullName: XmlUrlResolver.XmlUrlResolver()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlUrlResolver\"></xref> class.\n  syntax:\n    content: public XmlUrlResolver ();\n    parameters: []\n  overload: System.Xml.XmlUrlResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.CachePolicy\n  commentId: P:System.Xml.XmlUrlResolver.CachePolicy\n  id: CachePolicy\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: CachePolicy\n  nameWithType: XmlUrlResolver.CachePolicy\n  fullName: XmlUrlResolver.CachePolicy\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets the cache policy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object.\n  syntax:\n    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }\n    return:\n      type: System.Net.Cache.RequestCachePolicy\n      description: The cache policy for the underlying web request.\n  overload: System.Xml.XmlUrlResolver.CachePolicy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.Credentials\n  commentId: P:System.Xml.XmlUrlResolver.Credentials\n  id: Credentials\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: XmlUrlResolver.Credentials\n  fullName: XmlUrlResolver.Credentials\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Sets credentials used to authenticate web requests.\n  remarks: \"If the virtual directory does not require authentication, this property does not need to be set. Otherwise, the credentials of the user must be supplied.  \\n  \\n You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.  \\n  \\n The following C# code shows how to set the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property to a credential cache.  \\n  \\n```  \\nNetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   \\nCredentialCache myCache = new CredentialCache();   \\nmyCache.Add(new Uri(\\\"http://www.contoso.com/\\\"), \\\"Basic\\\", myCred);   \\nmyCache.Add(new Uri(\\\"http://app.contoso.com/\\\"), \\\"Basic\\\", myCred);  \\nXmlUrlResolver resolver = new XmlUrlResolver();  \\nresolver.Credentials = myCache;  \\n```\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \\n  \\n [!code-csharp[XmlResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_Samples/CS/XmlResolver_Samples.cs#2)]\\n [!code-vb[XmlResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_Samples/VB/XmlResolver_Samples.vb#2)]\"\n  syntax:\n    content: public override System.Net.ICredentials Credentials { set; }\n    return:\n      type: System.Net.ICredentials\n      description: The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlUrlResolver` has no user credentials.\n  overload: System.Xml.XmlUrlResolver.Credentials*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)\n  id: GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlUrlResolver.GetEntity(Uri, String, Type)\n  fullName: XmlUrlResolver.GetEntity(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Maps a URI to an object that contains the actual resource.\n  remarks: \"This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.  \\n  \\n For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.  \\n  \\n> [!IMPORTANT]\\n>  Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A> method.\"\n  example:\n  - \"The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \\n  \\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlUrlResolver.ResolveUri Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.\n    return:\n      type: System.Object\n      description: A stream object or `null` if a type other than stream is specified.\n  overload: System.Xml.XmlUrlResolver.GetEntity*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>ofObjectToReturn</code> is neither `null` nor a `Stream` type.\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The specified URI is not an absolute URI.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>absoluteUri</code> is `null`.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: There is a runtime error (for example, an interrupted server connection).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  id: GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlUrlResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlUrlResolver.GetEntityAsync(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Asynchronously maps a URI to an object that contains the actual resource.\n  syntax:\n    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current implementation only returns <xref href=\"System.IO.Stream\"></xref> objects.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A stream object or `null` if a type other than stream is specified.\n  overload: System.Xml.XmlUrlResolver.GetEntityAsync*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.Proxy\n  commentId: P:System.Xml.XmlUrlResolver.Proxy\n  id: Proxy\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: XmlUrlResolver.Proxy\n  fullName: XmlUrlResolver.Proxy\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets the network proxy for the underlying <xref href=\"System.Net.WebRequest\"></xref> object.\n  syntax:\n    content: public System.Net.IWebProxy Proxy { set; }\n    return:\n      type: System.Net.IWebProxy\n      description: The <xref href=\"System.Net.IWebProxy\"></xref> to use to access the Internet resource.\n  overload: System.Xml.XmlUrlResolver.Proxy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)\n  commentId: M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)\n  id: ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlUrlResolver\n  langs:\n  - csharp\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlUrlResolver.ResolveUri(Uri, String)\n  fullName: XmlUrlResolver.ResolveUri(Uri, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Resolves the absolute URI from the base and relative URIs.\n  remarks: The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.\n  syntax:\n    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI used to resolve the relative URI.\n    - id: relativeUri\n      type: System.String\n      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.\n    return:\n      type: System.Uri\n      description: The absolute URI, or `null` if the relative URI cannot be resolved.\n  overload: System.Xml.XmlUrlResolver.ResolveUri*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>baseUri</code> is `null` or <code>relativeUri</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.UriFormatException\n  parent: System\n  isExternal: false\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Xml.XmlUrlResolver.#ctor\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: XmlUrlResolver()\n  nameWithType: XmlUrlResolver.XmlUrlResolver()\n  fullName: XmlUrlResolver.XmlUrlResolver()\n- uid: System.Xml.XmlUrlResolver.CachePolicy\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: CachePolicy\n  nameWithType: XmlUrlResolver.CachePolicy\n  fullName: XmlUrlResolver.CachePolicy\n- uid: System.Net.Cache.RequestCachePolicy\n  parent: System.Net.Cache\n  isExternal: false\n  name: RequestCachePolicy\n  nameWithType: RequestCachePolicy\n  fullName: System.Net.Cache.RequestCachePolicy\n- uid: System.Xml.XmlUrlResolver.Credentials\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlUrlResolver.Credentials\n  fullName: XmlUrlResolver.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlUrlResolver.GetEntity(Uri, String, Type)\n  fullName: XmlUrlResolver.GetEntity(Uri, String, Type)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlUrlResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlUrlResolver.GetEntityAsync(Uri, String, Type)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.XmlUrlResolver.Proxy\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: Proxy\n  nameWithType: XmlUrlResolver.Proxy\n  fullName: XmlUrlResolver.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlUrlResolver.ResolveUri(Uri, String)\n  fullName: XmlUrlResolver.ResolveUri(Uri, String)\n- uid: System.Xml.XmlUrlResolver.#ctor*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: XmlUrlResolver\n  nameWithType: XmlUrlResolver.XmlUrlResolver\n  fullName: XmlUrlResolver.XmlUrlResolver\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.CachePolicy*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: CachePolicy\n  nameWithType: XmlUrlResolver.CachePolicy\n  fullName: XmlUrlResolver.CachePolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.Credentials*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlUrlResolver.Credentials\n  fullName: XmlUrlResolver.Credentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.GetEntity*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: GetEntity\n  nameWithType: XmlUrlResolver.GetEntity\n  fullName: XmlUrlResolver.GetEntity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.GetEntityAsync*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: GetEntityAsync\n  nameWithType: XmlUrlResolver.GetEntityAsync\n  fullName: XmlUrlResolver.GetEntityAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.Proxy*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: Proxy\n  nameWithType: XmlUrlResolver.Proxy\n  fullName: XmlUrlResolver.Proxy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Xml.XmlUrlResolver.ResolveUri*\n  parent: System.Xml.XmlUrlResolver\n  isExternal: false\n  name: ResolveUri\n  nameWithType: XmlUrlResolver.ResolveUri\n  fullName: XmlUrlResolver.ResolveUri\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlUrlResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: SupportsType(Uri, Type)\n  nameWithType: XmlResolver.SupportsType(Uri, Type)\n  fullName: XmlResolver.SupportsType(Uri, Type)\n"}