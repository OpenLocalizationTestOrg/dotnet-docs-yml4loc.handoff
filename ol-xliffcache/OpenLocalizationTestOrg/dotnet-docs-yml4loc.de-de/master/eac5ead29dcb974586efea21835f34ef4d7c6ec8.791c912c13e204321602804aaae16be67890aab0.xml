{"nodes":[{"content":"Specifies what should be done when a directory that is to be deleted contains files or directories.","nodes":[{"pos":[0,99],"content":"Specifies what should be done when a directory that is to be deleted contains files or directories.","nodes":[{"content":"Specifies what should be done when a directory that is to be deleted contains files or directories.","pos":[0,99]}]}],"pos":[610,710],"yaml":true},{"content":"This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.","nodes":[{"pos":[0,116],"content":"This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.","nodes":[{"content":"This enumeration is used with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A&gt;</ph> method.","pos":[0,116],"source":"This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method."}]}],"pos":[721,838],"yaml":true,"extradata":"MT"},{"content":"Delete the contents of the directory along with the directory. Default.","nodes":[{"pos":[0,71],"content":"Delete the contents of the directory along with the directory. Default.","nodes":[{"content":"Delete the contents of the directory along with the directory. Default.","pos":[0,71],"nodes":[{"content":"Delete the contents of the directory along with the directory.","pos":[0,62]},{"content":"Default.","pos":[63,71]}]}]}],"pos":[1984,2056],"yaml":true},{"content":"Throw an <xref href=\"System.IO.IOException\"></xref> if the directory is not empty. The `Data` property of the exception lists the file(s) that could not be deleted.","nodes":[{"pos":[0,164],"content":"Throw an <xref href=\"System.IO.IOException\"></xref> if the directory is not empty. The `Data` property of the exception lists the file(s) that could not be deleted.","nodes":[{"content":"Throw an <ph id=\"ph1\">&lt;xref href=\"System.IO.IOException\"&gt;&lt;/xref&gt;</ph> if the directory is not empty.","pos":[0,82],"source":"Throw an <xref href=\"System.IO.IOException\"></xref> if the directory is not empty."},{"content":"The <ph id=\"ph1\">`Data`</ph> property of the exception lists the file(s) that could not be deleted.","pos":[83,164],"source":" The `Data` property of the exception lists the file(s) that could not be deleted."}]}],"pos":[3213,3378],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  commentId: T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  id: DeleteDirectoryOption\n  children:\n  - Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  - Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  langs:\n  - csharp\n  name: DeleteDirectoryOption\n  nameWithType: DeleteDirectoryOption\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  type: Enum\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Specifies what should be done when a directory that is to be deleted contains files or directories.\n  remarks: This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.\n  syntax:\n    content: public enum DeleteDirectoryOption\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/DeleteDirectoryOption.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  commentId: F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  id: DeleteAllContents\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  langs:\n  - csharp\n  name: DeleteAllContents\n  nameWithType: DeleteDirectoryOption.DeleteAllContents\n  fullName: DeleteDirectoryOption.DeleteAllContents\n  type: Field\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Delete the contents of the directory along with the directory. Default.\n  syntax:\n    content: DeleteAllContents\n    return:\n      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/DeleteDirectoryOption.xml\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  commentId: F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  id: ThrowIfDirectoryNonEmpty\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  langs:\n  - csharp\n  name: ThrowIfDirectoryNonEmpty\n  nameWithType: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  fullName: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  type: Field\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Throw an <xref href=\"System.IO.IOException\"></xref> if the directory is not empty. The `Data` property of the exception lists the file(s) that could not be deleted.\n  syntax:\n    content: ThrowIfDirectoryNonEmpty\n    return:\n      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/DeleteDirectoryOption.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  isExternal: false\n  name: DeleteAllContents\n  nameWithType: DeleteDirectoryOption.DeleteAllContents\n  fullName: DeleteDirectoryOption.DeleteAllContents\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  parent: Microsoft.VisualBasic.FileIO\n  isExternal: false\n  name: DeleteDirectoryOption\n  nameWithType: DeleteDirectoryOption\n  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  parent: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  isExternal: false\n  name: ThrowIfDirectoryNonEmpty\n  nameWithType: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n  fullName: DeleteDirectoryOption.ThrowIfDirectoryNonEmpty\n"}