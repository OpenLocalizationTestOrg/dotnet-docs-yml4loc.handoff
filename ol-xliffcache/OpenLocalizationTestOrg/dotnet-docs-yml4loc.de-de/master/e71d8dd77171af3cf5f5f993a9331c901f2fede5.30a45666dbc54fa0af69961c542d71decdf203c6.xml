{"nodes":[{"content":"Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.SymMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.","nodes":[{"pos":[0,196],"content":"Represents a lexical scope within <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymMethod\"&gt;&lt;/xref&gt;</ph>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.","source":"Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.SymMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes."}],"pos":[1041,1238],"yaml":true},{"content":"The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope.","nodes":[{"pos":[0,125],"content":"The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.SymScope&gt;</ph> class also provides access to all locals defined within the current scope.","pos":[0,125],"source":"The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope."}]}],"pos":[1249,1375],"yaml":true,"extradata":"MT"},{"content":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class.","nodes":[{"pos":[0,126],"content":"Releases the resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymScope\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class."}],"pos":[4472,4599],"yaml":true},{"content":"Called by the <xref href=\"System.Diagnostics.SymbolStore.SymScope.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymScope.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class.","nodes":[{"pos":[0,315],"content":"Called by the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymScope.Dispose\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymScope.Finalize\"&gt;&lt;/xref&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymScope\"&gt;&lt;/xref&gt;</ph> class.","source":"Called by the <xref href=\"System.Diagnostics.SymbolStore.SymScope.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymScope.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class."}],"pos":[5751,6067],"yaml":true},{"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.","nodes":[{"pos":[0,204],"content":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.","nodes":[{"content":"This method is called only by the public <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A&gt;</ph> methods; do not call this method directly.","pos":[0,204],"source":"This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly."}]}],"pos":[6078,6283],"yaml":true,"extradata":"MT"},{"content":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> to release managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[6514,6612],"yaml":true},{"content":"Gets the end offset of the current lexical scope.","nodes":[{"pos":[0,49],"content":"Gets the end offset of the current lexical scope.","nodes":[{"content":"Gets the end offset of the current lexical scope.","pos":[0,49]}]}],"pos":[7725,7775],"yaml":true},{"content":"The ending Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","nodes":[{"pos":[0,134],"content":"The ending Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","nodes":[{"content":"The ending Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","pos":[0,134],"nodes":[{"content":"The ending Microsoft intermediate language (MSIL) offset.","pos":[0,57]},{"content":"The offset is from the beginning of the method of the current lexical scope.","pos":[58,134]}]}]}],"pos":[7892,8027],"yaml":true},{"content":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> is reclaimed by garbage collection.","nodes":[{"pos":[0,174],"content":"Releases unmanaged resources and performs other cleanup operations before the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymScope\"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.","source":"Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> is reclaimed by garbage collection."}],"pos":[9036,9211],"yaml":true},{"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"pos":[0,309],"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"content":"This method overrides  <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph>.","pos":[0,56],"source":"This method overrides  <xref:System.Object.Finalize%2A>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id=\"ph2\">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.","pos":[57,309],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]}],"pos":[9222,9532],"yaml":true,"extradata":"MT"},{"content":"Gets the child lexical scopes of the current lexical scope.","nodes":[{"pos":[0,59],"content":"Gets the child lexical scopes of the current lexical scope.","nodes":[{"content":"Gets the child lexical scopes of the current lexical scope.","pos":[0,59]}]}],"pos":[10614,10674],"yaml":true},{"content":"The lexical scopes enclosed by the current lexical scope.","nodes":[{"pos":[0,57],"content":"The lexical scopes enclosed by the current lexical scope.","nodes":[{"content":"The lexical scopes enclosed by the current lexical scope.","pos":[0,57]}]}],"pos":[10882,10940],"yaml":true},{"content":"There is insufficient memory to satisfy the request.","nodes":[{"pos":[0,52],"content":"There is insufficient memory to satisfy the request.","nodes":[{"content":"There is insufficient memory to satisfy the request.","pos":[0,52]}]}],"pos":[11119,11172],"yaml":true},{"content":"Gets the local variables within the current lexical scope.","nodes":[{"pos":[0,58],"content":"Gets the local variables within the current lexical scope.","nodes":[{"content":"Gets the local variables within the current lexical scope.","pos":[0,58]}]}],"pos":[12107,12166],"yaml":true},{"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","nodes":[{"pos":[0,200],"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","nodes":[{"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","pos":[0,200],"nodes":[{"content":"The local variables are returned in no particular order.","pos":[0,56]},{"content":"If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","pos":[57,200]}]}]}],"pos":[12177,12378],"yaml":true,"extradata":"MT"},{"content":"The local variables within the current lexical scope.","nodes":[{"pos":[0,53],"content":"The local variables within the current lexical scope.","nodes":[{"content":"The local variables within the current lexical scope.","pos":[0,53]}]}],"pos":[12590,12644],"yaml":true},{"content":"There is insufficient memory to satisfy the request.","nodes":[{"pos":[0,52],"content":"There is insufficient memory to satisfy the request.","nodes":[{"content":"There is insufficient memory to satisfy the request.","pos":[0,52]}]}],"pos":[12821,12874],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[13833,13906],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.","nodes":[{"pos":[0,72],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> in all cases.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases."}],"pos":[14124,14197],"yaml":true},{"content":"Gets the method that contains the current lexical scope.","nodes":[{"pos":[0,56],"content":"Gets the method that contains the current lexical scope.","nodes":[{"content":"Gets the method that contains the current lexical scope.","pos":[0,56]}]}],"pos":[15194,15251],"yaml":true},{"content":"The method that contains the current lexical scope.","nodes":[{"pos":[0,51],"content":"The method that contains the current lexical scope.","nodes":[{"content":"The method that contains the current lexical scope.","pos":[0,51]}]}],"pos":[15438,15490],"yaml":true},{"content":"Gets the parent lexical scope of the current scope.","nodes":[{"pos":[0,51],"content":"Gets the parent lexical scope of the current scope.","nodes":[{"content":"Gets the parent lexical scope of the current scope.","pos":[0,51]}]}],"pos":[16480,16532],"yaml":true},{"content":"The enclosing lexical scope of the current scope.","nodes":[{"pos":[0,49],"content":"The enclosing lexical scope of the current scope.","nodes":[{"content":"The enclosing lexical scope of the current scope.","pos":[0,49]}]}],"pos":[16717,16767],"yaml":true},{"content":"Gets the start offset of the current lexical scope.","nodes":[{"pos":[0,51],"content":"Gets the start offset of the current lexical scope.","nodes":[{"content":"Gets the start offset of the current lexical scope.","pos":[0,51]}]}],"pos":[17787,17839],"yaml":true},{"content":"The starting Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","nodes":[{"pos":[0,136],"content":"The starting Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","nodes":[{"content":"The starting Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.","pos":[0,136],"nodes":[{"content":"The starting Microsoft intermediate language (MSIL) offset.","pos":[0,59]},{"content":"The offset is from the beginning of the method of the current lexical scope.","pos":[60,136]}]}]}],"pos":[17958,18095],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymScope\n  commentId: T:System.Diagnostics.SymbolStore.SymScope\n  id: SymScope\n  children:\n  - System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)\n  - System.Diagnostics.SymbolStore.SymScope.Dispose\n  - System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymScope.EndOffset\n  - System.Diagnostics.SymbolStore.SymScope.Finalize\n  - System.Diagnostics.SymbolStore.SymScope.GetChildren\n  - System.Diagnostics.SymbolStore.SymScope.GetLocals\n  - System.Diagnostics.SymbolStore.SymScope.GetNamespaces\n  - System.Diagnostics.SymbolStore.SymScope.Method\n  - System.Diagnostics.SymbolStore.SymScope.Parent\n  - System.Diagnostics.SymbolStore.SymScope.StartOffset\n  langs:\n  - csharp\n  name: SymScope\n  nameWithType: SymScope\n  fullName: System.Diagnostics.SymbolStore.SymScope\n  type: Class\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.SymMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.\n  remarks: The <xref:System.Diagnostics.SymbolStore.SymScope> class also provides access to all locals defined within the current scope.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymScopeBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolScope\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymScopeBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)'\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: SymScope(ISymUnmanagedScope*)\n  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)\n  fullName: SymScope.SymScope(ISymUnmanagedScope*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);\n    parameters:\n    - id: pScope\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*\n      description: ''\n  overload: System.Diagnostics.SymbolStore.SymScope.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.Dispose\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymScope.Dispose()\n  fullName: SymScope.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases the resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class.\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymScope.Dispose(Boolean)\n  fullName: SymScope.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Called by the <xref href=\"System.Diagnostics.SymbolStore.SymScope.Dispose\"></xref> and <xref href=\"System.Diagnostics.SymbolStore.SymScope.Finalize\"></xref> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> class.\n  remarks: This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.\n  syntax:\n    content: >-\n      [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]\n\n      protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: '`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset\n  commentId: P:System.Diagnostics.SymbolStore.SymScope.EndOffset\n  id: EndOffset\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: EndOffset\n  nameWithType: SymScope.EndOffset\n  fullName: SymScope.EndOffset\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the end offset of the current lexical scope.\n  syntax:\n    content: public virtual int EndOffset { get; }\n    return:\n      type: System.Int32\n      description: The ending Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.EndOffset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.Finalize\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymScope.Finalize()\n  fullName: SymScope.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href=\"System.Diagnostics.SymbolStore.SymScope\"></xref> is reclaimed by garbage collection.\n  remarks: This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.\n  syntax:\n    content: ~SymScope ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymScope.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.GetChildren\n  id: GetChildren\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: GetChildren()\n  nameWithType: SymScope.GetChildren()\n  fullName: SymScope.GetChildren()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the child lexical scopes of the current lexical scope.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope[]\n      description: The lexical scopes enclosed by the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.GetChildren*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to satisfy the request.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.GetLocals\n  id: GetLocals\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: GetLocals()\n  nameWithType: SymScope.GetLocals()\n  fullName: SymScope.GetLocals()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the local variables within the current lexical scope.\n  remarks: The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: The local variables within the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.GetLocals*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to satisfy the request.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces\n  commentId: M:System.Diagnostics.SymbolStore.SymScope.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: SymScope.GetNamespaces()\n  fullName: SymScope.GetNamespaces()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: Throws a <xref href=\"System.NotSupportedException\"></xref> in all cases.\n  overload: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.Method\n  commentId: P:System.Diagnostics.SymbolStore.SymScope.Method\n  id: Method\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: Method\n  nameWithType: SymScope.Method\n  fullName: SymScope.Method\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the method that contains the current lexical scope.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The method that contains the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.Method*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.Parent\n  commentId: P:System.Diagnostics.SymbolStore.SymScope.Parent\n  id: Parent\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: SymScope.Parent\n  fullName: SymScope.Parent\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the parent lexical scope of the current scope.\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: The enclosing lexical scope of the current scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.Parent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset\n  commentId: P:System.Diagnostics.SymbolStore.SymScope.StartOffset\n  id: StartOffset\n  parent: System.Diagnostics.SymbolStore.SymScope\n  langs:\n  - csharp\n  name: StartOffset\n  nameWithType: SymScope.StartOffset\n  fullName: SymScope.StartOffset\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the start offset of the current lexical scope.\n  syntax:\n    content: public virtual int StartOffset { get; }\n    return:\n      type: System.Int32\n      description: The starting Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.SymScope.StartOffset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymScopeBase\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymScopeBase\n  nameWithType: SymScopeBase\n  fullName: System.Diagnostics.SymbolStore.SymScopeBase\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: SymScope(ISymUnmanagedScope*)\n  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)\n  fullName: SymScope.SymScope(ISymUnmanagedScope*)\n- uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope\n  name: ISymUnmanagedScope\n  nameWithType: ISymUnmanagedScope\n  fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope\n- uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*\n  parent: System.Diagnostics.SymbolStore.Private\n  isExternal: true\n  name: ISymUnmanagedScope*\n  nameWithType: ISymUnmanagedScope*\n  fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope\n    name: ISymUnmanagedScope\n    nameWithType: ISymUnmanagedScope\n    fullName: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope\n  - name: '*'\n    nameWithType: '*'\n    fullName: '*'\n- uid: System.Diagnostics.SymbolStore.SymScope.Dispose\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymScope.Dispose()\n  fullName: SymScope.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymScope.Dispose(Boolean)\n  fullName: SymScope.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: EndOffset\n  nameWithType: SymScope.EndOffset\n  fullName: SymScope.EndOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymScope.Finalize\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymScope.Finalize()\n  fullName: SymScope.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetChildren()\n  nameWithType: SymScope.GetChildren()\n  fullName: SymScope.GetChildren()\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.ISymbolScope[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope[]\n  nameWithType: ISymbolScope[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolScope\n    name: ISymbolScope\n    nameWithType: ISymbolScope\n    fullName: System.Diagnostics.SymbolStore.ISymbolScope\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetLocals()\n  nameWithType: SymScope.GetLocals()\n  fullName: SymScope.GetLocals()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable[]\n  nameWithType: ISymbolVariable[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: SymScope.GetNamespaces()\n  fullName: SymScope.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace[]\n  nameWithType: ISymbolNamespace[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n    name: ISymbolNamespace\n    nameWithType: ISymbolNamespace\n    fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.SymScope.Method\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Method\n  nameWithType: SymScope.Method\n  fullName: SymScope.Method\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymScope.Parent\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Parent\n  nameWithType: SymScope.Parent\n  fullName: SymScope.Parent\n- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: StartOffset\n  nameWithType: SymScope.StartOffset\n  fullName: SymScope.StartOffset\n- uid: System.Diagnostics.SymbolStore.SymScope.#ctor*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: SymScope\n  nameWithType: SymScope.SymScope\n  fullName: SymScope.SymScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Dispose\n  nameWithType: SymScope.Dispose\n  fullName: SymScope.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: EndOffset\n  nameWithType: SymScope.EndOffset\n  fullName: SymScope.EndOffset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.Finalize*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Finalize\n  nameWithType: SymScope.Finalize\n  fullName: SymScope.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetChildren\n  nameWithType: SymScope.GetChildren\n  fullName: SymScope.GetChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetLocals\n  nameWithType: SymScope.GetLocals\n  fullName: SymScope.GetLocals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: GetNamespaces\n  nameWithType: SymScope.GetNamespaces\n  fullName: SymScope.GetNamespaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.Method*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Method\n  nameWithType: SymScope.Method\n  fullName: SymScope.Method\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.Parent*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: Parent\n  nameWithType: SymScope.Parent\n  fullName: SymScope.Parent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset*\n  parent: System.Diagnostics.SymbolStore.SymScope\n  isExternal: false\n  name: StartOffset\n  nameWithType: SymScope.StartOffset\n  fullName: SymScope.StartOffset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymScope.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.SymbolStore.SymScopeBase.{dtor}\n  parent: System.Diagnostics.SymbolStore.SymScopeBase\n  isExternal: false\n  name: '{dtor}()'\n  nameWithType: SymScopeBase.{dtor}()\n  fullName: SymScopeBase.{dtor}()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}