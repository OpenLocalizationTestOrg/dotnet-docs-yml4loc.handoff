{"nodes":[{"content":"Provides storage for multiple credentials.","nodes":[{"pos":[0,42],"content":"Provides storage for multiple credentials.","nodes":[{"content":"Provides storage for multiple credentials.","pos":[0,42]}]}],"pos":[1064,1107],"yaml":true},{"content":"The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required. When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.  \n  \n The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.","nodes":[{"pos":[0,575],"content":"The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required. When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.","nodes":[{"content":"The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required. When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.","pos":[0,575],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> class stores credentials for multiple Internet resources.","pos":[0,95],"source":"The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources."},{"content":"Applications that need to access multiple resources can store the credentials for those resources in a <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> instance that then provides the proper set of credentials to the Internet resource when required.","pos":[96,330],"source":" Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.GetCredential%2A&gt;</ph> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.","pos":[331,575],"source":" When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match."}]}]},{"pos":[582,961],"content":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.","nodes":[{"content":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.","pos":[0,379],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property contains the system credentials of the current security context.","pos":[0,133],"source":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context."},{"content":"For client applications, these represent the user name, password, and domain of the user who is currently logged in.","pos":[134,250]},{"content":"For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.","pos":[251,379]}]}]}],"pos":[1118,2084],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.CredentialCache\"></xref> class.","nodes":[{"pos":[0,84],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.CredentialCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Net.CredentialCache\"></xref> class."}],"pos":[4958,5043],"yaml":true},{"content":"The constructor creates a <xref:System.Net.CredentialCache> instance.","nodes":[{"pos":[0,69],"content":"The constructor creates a <xref:System.Net.CredentialCache> instance.","nodes":[{"content":"The constructor creates a <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> instance.","pos":[0,69],"source":"The constructor creates a <xref:System.Net.CredentialCache> instance."}]}],"pos":[5054,5124],"yaml":true,"extradata":"MT"},{"content":"Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.","nodes":[{"pos":[0,223],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.","source":"Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol."}],"pos":[7451,7675],"yaml":true},{"content":"The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.","nodes":[{"pos":[0,445],"content":"The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.","nodes":[{"content":"The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.","pos":[0,445],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.Add%2A&gt;</ph> method places a <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance for use with protocols other than SMTP into the <ph id=\"ph3\">&lt;xref:System.Net.CredentialCache&gt;</ph>.","pos":[0,188],"source":"The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>."},{"content":"The cache stores credentials in the order in which they are added to it.","pos":[189,261]},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29&gt;</ph> method is called, it returns the proper matching <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance.","pos":[262,445],"source":" When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance."}]}]}],"pos":[7686,8132],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that specifies the URI prefix of the resources that the credential grants access to.","source":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to."}],"pos":[8977,9096],"yaml":true},{"content":"The authentication scheme used by the resource named in <code>uriPrefix</code>.","nodes":[{"pos":[0,79],"content":"The authentication scheme used by the resource named in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uriPrefix</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The authentication scheme used by the resource named in <code>uriPrefix</code>."}],"pos":[9160,9240],"yaml":true},{"content":"The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> to add to the credential cache.","source":"The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache."}],"pos":[9315,9401],"yaml":true},{"content":"<code>uriPrefix</code> is `null`.  \n  \n -or-  \n  \n <code>authType</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;uriPrefix&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>uriPrefix</code> is `null`."},{"pos":[40,44],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[51,83],"content":"<ph id=\"ph1\">&lt;code&gt;authType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>authType</code> is `null`."}],"pos":[9561,9651],"yaml":true},{"content":"The same credentials are added more than once.","nodes":[{"pos":[0,46],"content":"The same credentials are added more than once.","nodes":[{"content":"The same credentials are added more than once.","pos":[0,46]}]}],"pos":[9745,9792],"yaml":true},{"content":"Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.","nodes":[{"pos":[0,295],"content":"Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.","nodes":[{"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol.","pos":[0,182],"source":"Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol."},{"content":"Credentials added using this method are valid for SMTP only.","pos":[183,243]},{"content":"This method does not work for HTTP or FTP requests.","pos":[244,295]}]}],"pos":[11406,11702],"yaml":true},{"content":"This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`. The comparison is done case-insensitively.  \n  \n The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\".  \n  \n Credentials added with this method are only valid for use with SMTP. This method does not work for HTTP or FTP protocols.","nodes":[{"pos":[0,491],"content":"This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`. The comparison is done case-insensitively.","nodes":[{"content":"This method places a <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance for use with SMTP into the <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache&gt;</ph>.","pos":[0,127],"source":"This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>."},{"content":"The cache stores credentials in the order in which they are added to it.","pos":[128,200]},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29&gt;</ph> method is called, it returns a <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance that is selected by matching the <ph id=\"ph3\">`host`</ph>, <ph id=\"ph4\">`port`</ph>, and <ph id=\"ph5\">`authType`</ph>.","pos":[201,448],"source":" When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`."},{"content":"The comparison is done case-insensitively.","pos":[449,491]}]},{"pos":[498,584],"content":"The supported values for <ph id=\"ph1\">`authType`</ph> are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\".","source":"The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\"."},{"pos":[591,712],"content":"Credentials added with this method are only valid for use with SMTP. This method does not work for HTTP or FTP protocols.","nodes":[{"content":"Credentials added with this method are only valid for use with SMTP. This method does not work for HTTP or FTP protocols.","pos":[0,121],"nodes":[{"content":"Credentials added with this method are only valid for use with SMTP.","pos":[0,68]},{"content":"This method does not work for HTTP or FTP protocols.","pos":[69,121]}]}]}],"pos":[11713,12440],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that identifies the host computer.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the host computer.","source":"A <xref href=\"System.String\"></xref> that identifies the host computer."}],"pos":[13301,13373],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the port to connect to on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>."}],"pos":[13432,13528],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code> using <code>cred</code>.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the authentication scheme used when connecting to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept> using <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">cred</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code> using <code>cred</code>."}],"pos":[13602,13748],"yaml":true},{"content":"The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> to add to the credential cache.","source":"The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache."}],"pos":[13829,13915],"yaml":true},{"content":"<code>host</code> is `null`.  \n  \n -or-  \n  \n <code>authType</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>host</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,78],"content":"<ph id=\"ph1\">&lt;code&gt;authType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>authType</code> is `null`."}],"pos":[14075,14160],"yaml":true},{"content":"<code>authType</code> not an accepted value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;authType&lt;/code&gt;</ph> not an accepted value.","source":"<code>authType</code> not an accepted value."}],"pos":[14254,14299],"yaml":true},{"content":"<code>port</code> is less than zero.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than zero.","source":"<code>port</code> is less than zero."}],"pos":[14413,14450],"yaml":true},{"content":"Gets the system credentials of the application.","nodes":[{"pos":[0,47],"content":"Gets the system credentials of the application.","nodes":[{"content":"Gets the system credentials of the application.","pos":[0,47]}]}],"pos":[15817,15865],"yaml":true},{"content":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.  \n  \n <xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.  \n  \n To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.  \n  \n The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\". This method does not work for HTTP or FTP protocols.  \n  \n> [!NOTE]\n>  The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.","nodes":[{"pos":[0,136],"content":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property applies only to NTLM, negotiate, and Kerberos-based authentication.","pos":[0,136],"source":"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication."}]},{"pos":[143,576],"content":"<xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.","nodes":[{"content":"<xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.","pos":[0,433],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> represents the system credentials for the current security context in which the application is running.","pos":[0,159],"source":"<xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running."},{"content":"For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.","pos":[160,303]},{"content":"For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.","pos":[304,433]}]}]},{"pos":[583,737],"content":"To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.","nodes":[{"content":"To get the credentials as a <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance, use the <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A&gt;</ph> property.","pos":[0,154],"source":"To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property."}]},{"pos":[744,883],"content":"The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\". This method does not work for HTTP or FTP protocols.","nodes":[{"content":"The supported values for <ph id=\"ph1\">`authType`</ph> are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\".","pos":[0,86],"source":"The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\"."},{"content":"This method does not work for HTTP or FTP protocols.","pos":[87,139]}]},{"pos":[891,1104],"content":"[!NOTE]\n The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ICredentials&gt;</ph> instance returned by <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> cannot be used to view the user name, password, or domain of the current security context.","pos":[9,211],"source":" The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context."}]}],"pos":[15876,17000],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.ICredentials\"></xref> that represents the system credentials of the application.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.ICredentials\"&gt;&lt;/xref&gt;</ph> that represents the system credentials of the application.","source":"An <xref href=\"System.Net.ICredentials\"></xref> that represents the system credentials of the application."}],"pos":[17870,17977],"yaml":true},{"content":"Gets the network credentials of the current security context.","nodes":[{"pos":[0,61],"content":"Gets the network credentials of the current security context.","nodes":[{"content":"Gets the network credentials of the current security context.","pos":[0,61]}]}],"pos":[19462,19524],"yaml":true},{"content":"The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.  \n  \n The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.","nodes":[{"pos":[0,178],"content":"The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.","nodes":[{"content":"The credentials returned by the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A&gt;</ph> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.","pos":[0,178],"source":"The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication."}]},{"pos":[185,669],"content":"The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.","nodes":[{"content":"The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.","pos":[0,484],"nodes":[{"content":"The credentials returned by <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A&gt;</ph> represents the authentication credentials for the current security context in which the application is running.","pos":[0,202],"source":"The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running."},{"content":"For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.","pos":[203,346]},{"content":"For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.","pos":[347,484]}]}]}],"pos":[19535,20209],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkCredential\"></xref> that represents the network credentials of the current user or application.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> that represents the network credentials of the current user or application.","source":"An <xref href=\"System.Net.NetworkCredential\"></xref> that represents the network credentials of the current user or application."}],"pos":[20382,20511],"yaml":true},{"content":"Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.","nodes":[{"pos":[0,159],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.","source":"Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified Uniform Resource Identifier (URI) and authentication type."}],"pos":[22046,22206],"yaml":true},{"content":"The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type. If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.  \n  \n <xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type. The following table shows examples.  \n  \n|URI Prefix|Matches|  \n|----------------|-------------|  \n|`http://www.contoso.com/portal/news.htm`|Requests for the specific Web page `news.htm`.|  \n|`http://www.contoso.com/portal/`|Requests for all content in the `portal` path, except the page `news.htm`.|  \n|`http://www.contoso.com/`|Requests for all resources at `www.contoso.com`, except those in the `portal` path.|","nodes":[{"pos":[0,372],"content":"The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type. If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29&gt;</ph> method searches the <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache&gt;</ph> and returns the <ph id=\"ph3\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance for the specified URI and authorization type.","pos":[0,244],"source":"The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> contains no matching <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance, <ph id=\"ph3\">`null`</ph> is returned.","pos":[245,372],"source":" If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned."}]},{"pos":[379,590],"content":"<xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type. The following table shows examples.","nodes":[{"content":"<xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type. The following table shows examples.","pos":[0,211],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.GetCredential%2A&gt;</ph> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type.","pos":[0,175],"source":"<xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type."},{"content":"The following table shows examples.","pos":[176,211]}]}]},{"pos":[597,607],"content":"URI Prefix","nodes":[{"content":"URI Prefix","pos":[0,10]}]},{"pos":[608,615],"content":"Matches","nodes":[{"content":"Matches","pos":[0,7]}]},{"pos":[696,742],"content":"Requests for the specific Web page <ph id=\"ph1\">`news.htm`</ph>.","source":"Requests for the specific Web page `news.htm`."},{"pos":[780,854],"content":"Requests for all content in the <ph id=\"ph1\">`portal`</ph> path, except the page <ph id=\"ph2\">`news.htm`</ph>.","source":"Requests for all content in the `portal` path, except the page `news.htm`."},{"pos":[885,968],"content":"Requests for all resources at <ph id=\"ph1\">`www.contoso.com`</ph>, except those in the <ph id=\"ph2\">`portal`</ph> path.","source":"Requests for all resources at `www.contoso.com`, except those in the `portal` path."}],"pos":[22217,23197],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that specifies the URI prefix of the resources that the credential grants access to.","source":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to."}],"pos":[24141,24260],"yaml":true},{"content":"The authentication scheme used by the resource named in <code>uriPrefix</code>.","nodes":[{"pos":[0,79],"content":"The authentication scheme used by the resource named in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uriPrefix</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The authentication scheme used by the resource named in <code>uriPrefix</code>."}],"pos":[24324,24404],"yaml":true},{"content":"A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> or, if there is no matching credential in the cache, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`."}],"pos":[24476,24589],"yaml":true},{"content":"<code>uriPrefix</code> or <code>authType</code> is `null`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;uriPrefix&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;authType&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>uriPrefix</code> or <code>authType</code> is `null`."}],"pos":[24759,24818],"yaml":true},{"content":"Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified host, port, and authentication protocol.","nodes":[{"pos":[0,141],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance associated with the specified host, port, and authentication protocol.","source":"Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified host, port, and authentication protocol."}],"pos":[26348,26490],"yaml":true},{"content":"This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type. The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.  \n  \n The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\".","nodes":[{"pos":[0,424],"content":"This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type. The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.","nodes":[{"content":"This method searches the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache&gt;</ph> and returns the <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance for the specified host, port, and authorization type.","pos":[0,173],"source":"This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type."},{"content":"The <ph id=\"ph1\">`host`</ph>, <ph id=\"ph2\">`port`</ph>, and <ph id=\"ph3\">`authType`</ph> values passed to this method are case-insensitively compared to the values specified when the credential was added to the <ph id=\"ph4\">&lt;xref:System.Net.CredentialCache&gt;</ph> using the <ph id=\"ph5\">&lt;xref:System.Net.CredentialCache.Add%2A&gt;</ph> methods.","pos":[174,424],"source":" The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods."}]},{"pos":[431,517],"content":"The supported values for <ph id=\"ph1\">`authType`</ph> are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\".","source":"The supported values for `authType` are \"NTLM\", \"Digest\", \"Kerberos\", and \"Negotiate\"."}],"pos":[26501,27031],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that identifies the host computer.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the host computer.","source":"A <xref href=\"System.String\"></xref> that identifies the host computer."}],"pos":[27232,27304],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the port to connect to on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>."}],"pos":[27363,27459],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the authentication scheme used when connecting to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>."}],"pos":[27533,27655],"yaml":true},{"content":"A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> or, if there is no matching credential in the cache, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`."}],"pos":[27727,27840],"yaml":true},{"content":"<code>host</code> is `null`.  \n  \n -or-  \n  \n <code>authType</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>host</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,78],"content":"<ph id=\"ph1\">&lt;code&gt;authType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>authType</code> is `null`."}],"pos":[28010,28095],"yaml":true},{"content":"<code>authType</code> not an accepted value.  \n  \n -or-  \n  \n <code>host</code> is equal to the empty string (\"\").","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;authType&lt;/code&gt;</ph> not an accepted value.","source":"<code>authType</code> not an accepted value."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,114],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is equal to the empty string (\"\").","source":"<code>host</code> is equal to the empty string (\"\")."}],"pos":[28189,28312],"yaml":true},{"content":"<code>port</code> is less than zero.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than zero.","source":"<code>port</code> is less than zero."}],"pos":[28426,28463],"yaml":true},{"content":"Returns an enumerator that can iterate through the <xref href=\"System.Net.CredentialCache\"></xref> instance.","nodes":[{"pos":[0,108],"content":"Returns an enumerator that can iterate through the <ph id=\"ph1\">&lt;xref href=\"System.Net.CredentialCache\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an enumerator that can iterate through the <xref href=\"System.Net.CredentialCache\"></xref> instance."}],"pos":[29804,29913],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Net.CredentialCache\"></xref>.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Net.CredentialCache\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Net.CredentialCache\"></xref>."}],"pos":[30808,30920],"yaml":true},{"content":"Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.","nodes":[{"pos":[0,192],"content":"Deletes a <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.","source":"Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol."}],"pos":[32401,32594],"yaml":true},{"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.  \n  \n If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.","nodes":[{"pos":[0,347],"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.","nodes":[{"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.","pos":[0,347],"nodes":[{"content":"This method removes a <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance from the <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache&gt;</ph> if the specified URI prefix and authentication protocol match those associated with the credential.","pos":[0,209],"source":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential."},{"content":"Multiple calls to the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.Remove%2A&gt;</ph> method for the same <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> have no effect.","pos":[210,347],"source":" Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect."}]}]},{"pos":[354,478],"content":"If <ph id=\"ph1\">`authType`</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`uriPrefix`</ph> is <ph id=\"ph4\">`null`</ph>, or no matching credential is found in the cache, this method does nothing.","source":"If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing."}],"pos":[32605,33088],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential is used for.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that specifies the URI prefix of the resources that the credential is used for.","source":"A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential is used for."}],"pos":[33850,33964],"yaml":true},{"content":"The authentication scheme used by the host named in <code>uriPrefix</code>.","nodes":[{"pos":[0,75],"content":"The authentication scheme used by the host named in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uriPrefix</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The authentication scheme used by the host named in <code>uriPrefix</code>."}],"pos":[34028,34104],"yaml":true},{"content":"Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified host, port, and authentication protocol.","nodes":[{"pos":[0,163],"content":"Deletes a <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> instance from the cache if it is associated with the specified host, port, and authentication protocol.","source":"Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified host, port, and authentication protocol."}],"pos":[35656,35820],"yaml":true},{"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.  \n  \n If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.","nodes":[{"pos":[0,348],"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.","nodes":[{"content":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.","pos":[0,348],"nodes":[{"content":"This method removes a <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> instance from the <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache&gt;</ph> if the specified host, port, and authentication protocol match those associated with the credential.","pos":[0,210],"source":"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential."},{"content":"Multiple calls to the <ph id=\"ph1\">&lt;xref:System.Net.CredentialCache.Remove%2A&gt;</ph> method for the same <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph> have no effect.","pos":[211,348],"source":" Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect."}]}]},{"pos":[355,479],"content":"If <ph id=\"ph1\">`authType`</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`uriPrefix`</ph> is <ph id=\"ph4\">`null`</ph>, or no matching credential is found in the cache, this method does nothing.","source":"If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing."}],"pos":[35831,36315],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that identifies the host computer.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the host computer.","source":"A <xref href=\"System.String\"></xref> that identifies the host computer."}],"pos":[36485,36557],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the port to connect to on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>."}],"pos":[36616,36712],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that identifies the authentication scheme used when connecting to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>."}],"pos":[36786,36908],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.CredentialCache\n  commentId: T:System.Net.CredentialCache\n  id: CredentialCache\n  children:\n  - System.Net.CredentialCache.#ctor\n  - System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)\n  - System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)\n  - System.Net.CredentialCache.DefaultCredentials\n  - System.Net.CredentialCache.DefaultNetworkCredentials\n  - System.Net.CredentialCache.GetCredential(System.Uri,System.String)\n  - System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)\n  - System.Net.CredentialCache.GetEnumerator\n  - System.Net.CredentialCache.Remove(System.Uri,System.String)\n  - System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)\n  langs:\n  - csharp\n  name: CredentialCache\n  nameWithType: CredentialCache\n  fullName: System.Net.CredentialCache\n  type: Class\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Provides storage for multiple credentials.\n  remarks: \"The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required. When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.  \\n  \\n The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.\"\n  example:\n  - \"The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.  \\n  \\n [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]\\n [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerable\n  - System.Net.ICredentials\n  - System.Net.ICredentialsByHost\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.#ctor\n  commentId: M:System.Net.CredentialCache.#ctor\n  id: '#ctor'\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: CredentialCache()\n  nameWithType: CredentialCache.CredentialCache()\n  fullName: CredentialCache.CredentialCache()\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Creates a new instance of the <xref href=\"System.Net.CredentialCache\"></xref> class.\n  remarks: The constructor creates a <xref:System.Net.CredentialCache> instance.\n  example:\n  - \"The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.  \\n  \\n [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]\\n [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]\"\n  syntax:\n    content: public CredentialCache ();\n    parameters: []\n  overload: System.Net.CredentialCache.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)\n  commentId: M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)\n  id: Add(System.Uri,System.String,System.Net.NetworkCredential)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: Add(Uri, String, NetworkCredential)\n  nameWithType: CredentialCache.Add(Uri, String, NetworkCredential)\n  fullName: CredentialCache.Add(Uri, String, NetworkCredential)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.\n  remarks: The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.\n  example:\n  - \"The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.  \\n  \\n [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]\\n [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);\n    parameters:\n    - id: uriPrefix\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to.\n    - id: authType\n      type: System.String\n      description: The authentication scheme used by the resource named in <code>uriPrefix</code>.\n    - id: cred\n      type: System.Net.NetworkCredential\n      description: The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache.\n  overload: System.Net.CredentialCache.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>uriPrefix</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>authType</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The same credentials are added more than once.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)\n  commentId: M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)\n  id: Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: Add(String, Int32, String, NetworkCredential)\n  nameWithType: CredentialCache.Add(String, Int32, String, NetworkCredential)\n  fullName: CredentialCache.Add(String, Int32, String, NetworkCredential)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Adds a <xref href=\"System.Net.NetworkCredential\"></xref> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.\n  remarks: \"This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>. The cache stores credentials in the order in which they are added to it. When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`. The comparison is done case-insensitively.  \\n  \\n The supported values for `authType` are \\\"NTLM\\\", \\\"Digest\\\", \\\"Kerberos\\\", and \\\"Negotiate\\\".  \\n  \\n Credentials added with this method are only valid for use with SMTP. This method does not work for HTTP or FTP protocols.\"\n  example:\n  - \"The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials for use with SMTP and uses one of those credentials with a <xref:System.Net.Mail.SmtpClient>.  \\n  \\n [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]\\n [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]\\n [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]\"\n  syntax:\n    content: public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);\n    parameters:\n    - id: host\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the host computer.\n    - id: port\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.\n    - id: authenticationType\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code> using <code>cred</code>.\n    - id: credential\n      type: System.Net.NetworkCredential\n      description: The <xref href=\"System.Net.NetworkCredential\"></xref> to add to the credential cache.\n  overload: System.Net.CredentialCache.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>host</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>authType</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>authType</code> not an accepted value.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>port</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.DefaultCredentials\n  commentId: P:System.Net.CredentialCache.DefaultCredentials\n  id: DefaultCredentials\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: DefaultCredentials\n  nameWithType: CredentialCache.DefaultCredentials\n  fullName: CredentialCache.DefaultCredentials\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the system credentials of the application.\n  remarks: \"The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.  \\n  \\n <xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.  \\n  \\n To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.  \\n  \\n The supported values for `authType` are \\\"NTLM\\\", \\\"Digest\\\", \\\"Kerberos\\\", and \\\"Negotiate\\\". This method does not work for HTTP or FTP protocols.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.\"\n  example:\n  - \"The following code example uses the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property to get the system credentials of the application.  \\n  \\n [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]\\n [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]\\n [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]\"\n  syntax:\n    content: public static System.Net.ICredentials DefaultCredentials { get; }\n    return:\n      type: System.Net.ICredentials\n      description: An <xref href=\"System.Net.ICredentials\"></xref> that represents the system credentials of the application.\n  overload: System.Net.CredentialCache.DefaultCredentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.DefaultNetworkCredentials\n  commentId: P:System.Net.CredentialCache.DefaultNetworkCredentials\n  id: DefaultNetworkCredentials\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: DefaultNetworkCredentials\n  nameWithType: CredentialCache.DefaultNetworkCredentials\n  fullName: CredentialCache.DefaultNetworkCredentials\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the network credentials of the current security context.\n  remarks: \"The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.  \\n  \\n The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.\"\n  syntax:\n    content: public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }\n    return:\n      type: System.Net.NetworkCredential\n      description: An <xref href=\"System.Net.NetworkCredential\"></xref> that represents the network credentials of the current user or application.\n  overload: System.Net.CredentialCache.DefaultNetworkCredentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.GetCredential(System.Uri,System.String)\n  commentId: M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)\n  id: GetCredential(System.Uri,System.String)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: GetCredential(Uri, String)\n  nameWithType: CredentialCache.GetCredential(Uri, String)\n  fullName: CredentialCache.GetCredential(Uri, String)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.\n  remarks: \"The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type. If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.  \\n  \\n <xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type. The following table shows examples.  \\n  \\n|URI Prefix|Matches|  \\n|----------------|-------------|  \\n|`http://www.contoso.com/portal/news.htm`|Requests for the specific Web page `news.htm`.|  \\n|`http://www.contoso.com/portal/`|Requests for all content in the `portal` path, except the page `news.htm`.|  \\n|`http://www.contoso.com/`|Requests for all resources at `www.contoso.com`, except those in the `portal` path.|\"\n  example:\n  - \"The following code example uses the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method to return the <xref:System.Net.NetworkCredential> instance associated with the specified URI and authentication type.  \\n  \\n [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]\\n [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]\\n [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]\"\n  syntax:\n    content: public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);\n    parameters:\n    - id: uriPrefix\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential grants access to.\n    - id: authType\n      type: System.String\n      description: The authentication scheme used by the resource named in <code>uriPrefix</code>.\n    return:\n      type: System.Net.NetworkCredential\n      description: A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`.\n  overload: System.Net.CredentialCache.GetCredential*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uriPrefix</code> or <code>authType</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)\n  commentId: M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)\n  id: GetCredential(System.String,System.Int32,System.String)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: GetCredential(String, Int32, String)\n  nameWithType: CredentialCache.GetCredential(String, Int32, String)\n  fullName: CredentialCache.GetCredential(String, Int32, String)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns the <xref href=\"System.Net.NetworkCredential\"></xref> instance associated with the specified host, port, and authentication protocol.\n  remarks: \"This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type. The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.  \\n  \\n The supported values for `authType` are \\\"NTLM\\\", \\\"Digest\\\", \\\"Kerberos\\\", and \\\"Negotiate\\\".\"\n  syntax:\n    content: public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);\n    parameters:\n    - id: host\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the host computer.\n    - id: port\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.\n    - id: authenticationType\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>.\n    return:\n      type: System.Net.NetworkCredential\n      description: A <xref href=\"System.Net.NetworkCredential\"></xref> or, if there is no matching credential in the cache, `null`.\n  overload: System.Net.CredentialCache.GetCredential*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>host</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>authType</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>authType</code> not an accepted value.  \\n  \\n -or-  \\n  \\n <code>host</code> is equal to the empty string (\\\"\\\").\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>port</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.GetEnumerator\n  commentId: M:System.Net.CredentialCache.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: CredentialCache.GetEnumerator()\n  fullName: CredentialCache.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns an enumerator that can iterate through the <xref href=\"System.Net.CredentialCache\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Net.CredentialCache.GetEnumerator%2A> method to return an enumerator that can iterate through the <xref:System.Net.CredentialCache> instance.  \\n  \\n [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]\\n [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]\\n [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Net.CredentialCache\"></xref>.\n  overload: System.Net.CredentialCache.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.Remove(System.Uri,System.String)\n  commentId: M:System.Net.CredentialCache.Remove(System.Uri,System.String)\n  id: Remove(System.Uri,System.String)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: Remove(Uri, String)\n  nameWithType: CredentialCache.Remove(Uri, String)\n  fullName: CredentialCache.Remove(Uri, String)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.\n  remarks: \"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.  \\n  \\n If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.\"\n  example:\n  - \"The following code example uses this method to delete a <xref:System.Net.NetworkCredential> instance from the cache.  \\n  \\n [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]\\n [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]\\n [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]\"\n  syntax:\n    content: public void Remove (Uri uriPrefix, string authType);\n    parameters:\n    - id: uriPrefix\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> that specifies the URI prefix of the resources that the credential is used for.\n    - id: authType\n      type: System.String\n      description: The authentication scheme used by the host named in <code>uriPrefix</code>.\n  overload: System.Net.CredentialCache.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)\n  commentId: M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)\n  id: Remove(System.String,System.Int32,System.String)\n  parent: System.Net.CredentialCache\n  langs:\n  - csharp\n  name: Remove(String, Int32, String)\n  nameWithType: CredentialCache.Remove(String, Int32, String)\n  fullName: CredentialCache.Remove(String, Int32, String)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Deletes a <xref href=\"System.Net.NetworkCredential\"></xref> instance from the cache if it is associated with the specified host, port, and authentication protocol.\n  remarks: \"This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential. Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.  \\n  \\n If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.\"\n  syntax:\n    content: public void Remove (string host, int port, string authenticationType);\n    parameters:\n    - id: host\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the host computer.\n    - id: port\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the port to connect to on <code>host</code>.\n    - id: authenticationType\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that identifies the authentication scheme used when connecting to <code>host</code>.\n  overload: System.Net.CredentialCache.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.CredentialCache.#ctor\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: CredentialCache()\n  nameWithType: CredentialCache.CredentialCache()\n  fullName: CredentialCache.CredentialCache()\n- uid: System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Add(Uri, String, NetworkCredential)\n  nameWithType: CredentialCache.Add(Uri, String, NetworkCredential)\n  fullName: CredentialCache.Add(Uri, String, NetworkCredential)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: false\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Add(String, Int32, String, NetworkCredential)\n  nameWithType: CredentialCache.Add(String, Int32, String, NetworkCredential)\n  fullName: CredentialCache.Add(String, Int32, String, NetworkCredential)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.CredentialCache.DefaultCredentials\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: DefaultCredentials\n  nameWithType: CredentialCache.DefaultCredentials\n  fullName: CredentialCache.DefaultCredentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.CredentialCache.DefaultNetworkCredentials\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: DefaultNetworkCredentials\n  nameWithType: CredentialCache.DefaultNetworkCredentials\n  fullName: CredentialCache.DefaultNetworkCredentials\n- uid: System.Net.CredentialCache.GetCredential(System.Uri,System.String)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: GetCredential(Uri, String)\n  nameWithType: CredentialCache.GetCredential(Uri, String)\n  fullName: CredentialCache.GetCredential(Uri, String)\n- uid: System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: GetCredential(String, Int32, String)\n  nameWithType: CredentialCache.GetCredential(String, Int32, String)\n  fullName: CredentialCache.GetCredential(String, Int32, String)\n- uid: System.Net.CredentialCache.GetEnumerator\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CredentialCache.GetEnumerator()\n  fullName: CredentialCache.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.CredentialCache.Remove(System.Uri,System.String)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Remove(Uri, String)\n  nameWithType: CredentialCache.Remove(Uri, String)\n  fullName: CredentialCache.Remove(Uri, String)\n- uid: System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Remove(String, Int32, String)\n  nameWithType: CredentialCache.Remove(String, Int32, String)\n  fullName: CredentialCache.Remove(String, Int32, String)\n- uid: System.Net.CredentialCache.#ctor*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: CredentialCache\n  nameWithType: CredentialCache.CredentialCache\n  fullName: CredentialCache.CredentialCache\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.Add*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Add\n  nameWithType: CredentialCache.Add\n  fullName: CredentialCache.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.DefaultCredentials*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: DefaultCredentials\n  nameWithType: CredentialCache.DefaultCredentials\n  fullName: CredentialCache.DefaultCredentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.DefaultNetworkCredentials*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: DefaultNetworkCredentials\n  nameWithType: CredentialCache.DefaultNetworkCredentials\n  fullName: CredentialCache.DefaultNetworkCredentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.GetCredential*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: GetCredential\n  nameWithType: CredentialCache.GetCredential\n  fullName: CredentialCache.GetCredential\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.GetEnumerator*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: CredentialCache.GetEnumerator\n  fullName: CredentialCache.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Net.CredentialCache.Remove*\n  parent: System.Net.CredentialCache\n  isExternal: false\n  name: Remove\n  nameWithType: CredentialCache.Remove\n  fullName: CredentialCache.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/CredentialCache.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Net.ICredentialsByHost\n  parent: System.Net\n  isExternal: false\n  name: ICredentialsByHost\n  nameWithType: ICredentialsByHost\n  fullName: System.Net.ICredentialsByHost\n"}