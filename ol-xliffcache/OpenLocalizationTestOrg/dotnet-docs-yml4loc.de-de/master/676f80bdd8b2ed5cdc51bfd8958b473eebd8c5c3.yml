### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ParallelOptions
  commentId: T:System.Threading.Tasks.ParallelOptions
  id: ParallelOptions
  children:
  - System.Threading.Tasks.ParallelOptions.#ctor
  - System.Threading.Tasks.ParallelOptions.CancellationToken
  - System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  - System.Threading.Tasks.ParallelOptions.TaskScheduler
  langs:
  - csharp
  name: ParallelOptions
  nameWithType: ParallelOptions
  fullName: System.Threading.Tasks.ParallelOptions
  type: Class
  assemblies:
  - System.Threading.Tasks.Parallel
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Stores options that configure the operation of methods on the <xref href="System.Threading.Tasks.Parallel"></xref> class.
  syntax:
    content: public class ParallelOptions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ParallelOptions.#ctor
  commentId: M:System.Threading.Tasks.ParallelOptions.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  name: ParallelOptions()
  nameWithType: ParallelOptions.ParallelOptions()
  fullName: ParallelOptions.ParallelOptions()
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Parallel
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <xref href="System.Threading.Tasks.ParallelOptions"></xref> class.
  remarks: "This constructor initializes the instance with default values. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> is initialized to -1, signifying that there is no upper bound set on how much parallelism should be employed. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> is initialized to a non-cancelable token, and <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> is initialized to the default scheduler (TaskScheduler.Default).  \n  \n All of these defaults may be overwritten using the property set accessors on the instance."
  syntax:
    content: public ParallelOptions ();
    parameters: []
  overload: System.Threading.Tasks.ParallelOptions.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ParallelOptions.CancellationToken
  commentId: P:System.Threading.Tasks.ParallelOptions.CancellationToken
  id: CancellationToken
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  name: CancellationToken
  nameWithType: ParallelOptions.CancellationToken
  fullName: ParallelOptions.CancellationToken
  type: Property
  assemblies:
  - System.Threading.Tasks.Parallel
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets or sets the <xref href="System.Threading.CancellationToken"></xref> associated with this <xref href="System.Threading.Tasks.ParallelOptions"></xref> instance.
  remarks: Providing a <xref:System.Threading.CancellationToken> to a <xref:System.Threading.Tasks.Parallel> method enables the operation to be exited early. Code external to the operation may cancel the token, and if the operation observes the token being set, it may exit early by throwing an <xref:System.OperationCanceledException>.
  syntax:
    content: public System.Threading.CancellationToken CancellationToken { get; set; }
    return:
      type: System.Threading.CancellationToken
      description: The token that is associated with this instance.
  overload: System.Threading.Tasks.ParallelOptions.CancellationToken*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  commentId: P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  id: MaxDegreeOfParallelism
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  name: MaxDegreeOfParallelism
  nameWithType: ParallelOptions.MaxDegreeOfParallelism
  fullName: ParallelOptions.MaxDegreeOfParallelism
  type: Property
  assemblies:
  - System.Threading.Tasks.Parallel
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets or sets the maximum number of concurrent tasks enabled by this <xref href="System.Threading.Tasks.ParallelOptions"></xref> instance.
  remarks: "The <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> property affects the number of concurrent operations run by <xref:System.Threading.Tasks.Parallel> method calls that are passed this <xref:System.Threading.Tasks.ParallelOptions> instance. A positive property value limits the number of concurrent operations to the set value. If it is -1,  there is no limit on the number of concurrently running operations.  \n  \n By default, <xref:System.Threading.Tasks.Parallel.For%2A> and <xref:System.Threading.Tasks.Parallel.ForEach%2A> will utilize however many threads the underlying scheduler provides, so changing <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> from the default only limits how many concurrent tasks will be used.  \n  \n Generally, you do not need to modify this setting. However, you may choose to set it explicitly in advanced usage scenarios such as these:  \n  \n-   When you know that a particular algorithm you're using won't scale beyond a certain number of cores. You can set the property to avoid wasting cycles on additional cores.  \n  \n-   When you're running multiple algorithms concurrently and want to manually define how much of the system each algorithm can utilize. You can set a <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> value for each.  \n  \n-   When the thread pool's heuristics is unable to determine the right number of threads to use and could end up injecting too many threads. For example, in long-running loop body iterations, the thread pool might not be able to tell the difference between reasonable progress or livelock or deadlock, and might not be able to reclaim threads that were added to improve performance. In this case, you can set the property to ensure that you don't use more than a reasonable number of threads."
  syntax:
    content: public int MaxDegreeOfParallelism { get; set; }
    return:
      type: System.Int32
      description: An integer that represents the maximum degree of parallelism.
  overload: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to zero or to a value that is less than -1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler
  commentId: P:System.Threading.Tasks.ParallelOptions.TaskScheduler
  id: TaskScheduler
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  name: TaskScheduler
  nameWithType: ParallelOptions.TaskScheduler
  fullName: ParallelOptions.TaskScheduler
  type: Property
  assemblies:
  - System.Threading.Tasks.Parallel
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets or sets the <xref href="System.Threading.Tasks.TaskScheduler"></xref> associated with this <xref href="System.Threading.Tasks.ParallelOptions"></xref> instance. Setting this property to null indicates that the current scheduler should be used.
  syntax:
    content: public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: The task scheduler that is associated with this instance.
  overload: System.Threading.Tasks.ParallelOptions.TaskScheduler*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Threading.Tasks.ParallelOptions.#ctor
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: ParallelOptions()
  nameWithType: ParallelOptions.ParallelOptions()
  fullName: ParallelOptions.ParallelOptions()
- uid: System.Threading.Tasks.ParallelOptions.CancellationToken
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: CancellationToken
  nameWithType: ParallelOptions.CancellationToken
  fullName: ParallelOptions.CancellationToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: MaxDegreeOfParallelism
  nameWithType: ParallelOptions.MaxDegreeOfParallelism
  fullName: ParallelOptions.MaxDegreeOfParallelism
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: TaskScheduler
  nameWithType: ParallelOptions.TaskScheduler
  fullName: ParallelOptions.TaskScheduler
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ParallelOptions.#ctor*
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: ParallelOptions
  nameWithType: ParallelOptions.ParallelOptions
  fullName: ParallelOptions.ParallelOptions
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
- uid: System.Threading.Tasks.ParallelOptions.CancellationToken*
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: CancellationToken
  nameWithType: ParallelOptions.CancellationToken
  fullName: ParallelOptions.CancellationToken
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism*
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: MaxDegreeOfParallelism
  nameWithType: ParallelOptions.MaxDegreeOfParallelism
  fullName: ParallelOptions.MaxDegreeOfParallelism
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler*
  parent: System.Threading.Tasks.ParallelOptions
  isExternal: false
  name: TaskScheduler
  nameWithType: ParallelOptions.TaskScheduler
  fullName: ParallelOptions.TaskScheduler
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ParallelOptions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
