{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class creates a directory identifier for one or more LDAP servers.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class creates a directory identifier for one or more LDAP servers.","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class creates a directory identifier for one or more LDAP servers."}],"pos":[1486,1637],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server.","nodes":[{"pos":[0,257],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server.","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server."}],"pos":[3331,3589],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.  \n  \n Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,282],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server, or <ph id=\"ph1\">`null`</ph>.","pos":[15,167],"source":" A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server, or `null`."},{"content":"If <ph id=\"ph1\">`null`</ph>, it represents the identity of any domain controller in the domain associated with the computer account.","pos":[168,282],"source":" If `null`, it represents the identity of any domain controller in the domain associated with the computer account."}]},{"pos":[289,392],"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,103]}]}],"pos":[3738,4135],"yaml":true},{"content":"Thrown if <code>server</code> has space.","nodes":[{"pos":[0,40],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> has space.","source":"Thrown if <code>server</code> has space."}],"pos":[4321,4362],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"pos":[0,364],"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server and properties.","pos":[0,285],"source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties."},{"content":"This constructor creates an identifier that represents a set of LDAP servers.","pos":[287,364]}]}],"pos":[5594,5959],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,260],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,260],"nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[15,156]},{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[157,260]}]}]}],"pos":[6124,6385],"yaml":true},{"content":"The port number to use when connecting to the server.","nodes":[{"pos":[0,53],"content":"The port number to use when connecting to the server.","nodes":[{"content":"The port number to use when connecting to the server.","pos":[0,53]}]}],"pos":[6450,6504],"yaml":true},{"content":"Thrown if <code>server</code> has space.","nodes":[{"pos":[0,40],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> has space.","source":"Thrown if <code>server</code> has space."}],"pos":[6690,6731],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"pos":[0,381],"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server and properties.","pos":[0,302],"source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties."},{"content":"This constructor creates an identifier that represents a set of LDAP servers.","pos":[304,381]}]}],"pos":[8047,8429],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,260],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,260],"nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[15,156]},{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[157,260]}]}]}],"pos":[8631,8892],"yaml":true},{"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"pos":[0,267],"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if each element in servers is a fully-qualified DNS host name.","pos":[0,69],"source":"`true` if each element in servers is a fully-qualified DNS host name."},{"content":"If <ph id=\"ph1\">`false`</ph>, an element can be an IP address, a DNS domain or host name, or <ph id=\"ph2\">`null`</ph>.","pos":[70,152],"source":" If `false`, an element can be an IP address, a DNS domain or host name, or `null`."},{"content":"If <ph id=\"ph1\">`null`</ph>, it represents the identity of any domain controller in the domain associated with the computer account.","pos":[153,267],"source":" If `null`, it represents the identity of any domain controller in the domain associated with the computer account."}]}],"pos":[8974,9244],"yaml":true},{"content":"`true` if the connection is UDP or `false` if the connection uses TCP/IP.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the connection is UDP or <ph id=\"ph2\">`false`</ph> if the connection uses TCP/IP.","source":"`true` if the connection is UDP or `false` if the connection uses TCP/IP."}],"pos":[9315,9391],"yaml":true},{"content":"Thrown if <code>server</code> contains only white space.","nodes":[{"pos":[0,56],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains only white space.","source":"Thrown if <code>server</code> contains only white space."}],"pos":[9577,9634],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"pos":[0,381],"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server and properties.","pos":[0,302],"source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties."},{"content":"This constructor creates an identifier that represents a set of LDAP servers.","pos":[304,381]}]}],"pos":[10962,11344],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,260],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,260],"nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[15,156]},{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[157,260]}]}]}],"pos":[11552,11813],"yaml":true},{"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"pos":[0,263],"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if each element in servers is a fully-qualified DNS host name.","pos":[0,69],"source":"`true` if each element in servers is a fully-qualified DNS host name."},{"content":"If <ph id=\"ph1\">`false`</ph>, an element can be an IP address, a DNS domain or host name, or null.","pos":[70,150],"source":" If `false`, an element can be an IP address, a DNS domain or host name, or null."},{"content":"If null, it represents the identity of any domain controller in the domain associated with the computer account.","pos":[151,263]}]}],"pos":[11895,12161],"yaml":true},{"content":"`true` if the connection is UDP or `false` if the connection uses TCP/IP.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the connection is UDP or <ph id=\"ph2\">`false`</ph> if the connection uses TCP/IP.","source":"`true` if the connection is UDP or `false` if the connection uses TCP/IP."}],"pos":[12232,12308],"yaml":true},{"content":"Thrown if <code>server</code> has space.","nodes":[{"pos":[0,40],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> has space.","source":"Thrown if <code>server</code> has space."}],"pos":[12494,12535],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"pos":[0,394],"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server and properties.","pos":[0,315],"source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties."},{"content":"This constructor creates an identifier that represents a set of LDAP servers.","pos":[317,394]}]}],"pos":[13911,14306],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,260],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,260],"nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[15,156]},{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[157,260]}]}]}],"pos":[14524,14785],"yaml":true},{"content":"The port number to be used when connecting to the server.","nodes":[{"pos":[0,57],"content":"The port number to be used when connecting to the server.","nodes":[{"content":"The port number to be used when connecting to the server.","pos":[0,57]}]}],"pos":[14850,14908],"yaml":true},{"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"pos":[0,263],"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if each element in servers is a fully-qualified DNS host name.","pos":[0,69],"source":"`true` if each element in servers is a fully-qualified DNS host name."},{"content":"If <ph id=\"ph1\">`false`</ph>, an element can be an IP address, a DNS domain or host name, or null.","pos":[70,150],"source":" If `false`, an element can be an IP address, a DNS domain or host name, or null."},{"content":"If null, it represents the identity of any domain controller in the domain associated with the computer account.","pos":[151,263]}]}],"pos":[14990,15256],"yaml":true},{"content":"`true` if the connection is UDP or `false` if the connection uses TCP/IP.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the connection is UDP or <ph id=\"ph2\">`false`</ph> if the connection uses TCP/IP.","source":"`true` if the connection is UDP or `false` if the connection uses TCP/IP."}],"pos":[15327,15403],"yaml":true},{"content":"Thrown if <code>server</code> has space.","nodes":[{"pos":[0,40],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> has space.","source":"Thrown if <code>server</code> has space."}],"pos":[15589,15630],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"pos":[0,396],"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\"&gt;&lt;/xref&gt;</ph> constructor creates an instance of the <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"&gt;&lt;/xref&gt;</ph> class using the specified server and properties.","pos":[0,317],"source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties."},{"content":"This constructor creates an identifier that represents a set of LDAP servers.","pos":[319,396]}]}],"pos":[17018,17415],"yaml":true},{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"pos":[0,260],"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","nodes":[{"content":"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[0,260],"nodes":[{"content":"The server ID.","pos":[0,14]},{"content":"A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server.","pos":[15,156]},{"content":"Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).","pos":[157,260]}]}]}],"pos":[17639,17900],"yaml":true},{"content":"the port number to be used when connecting to a server.","nodes":[{"pos":[0,55],"content":"the port number to be used when connecting to a server.","nodes":[{"content":"the port number to be used when connecting to a server.","pos":[0,55]}]}],"pos":[17965,18021],"yaml":true},{"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"pos":[0,263],"content":"`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if each element in servers is a fully-qualified DNS host name.","pos":[0,69],"source":"`true` if each element in servers is a fully-qualified DNS host name."},{"content":"If <ph id=\"ph1\">`false`</ph>, an element can be an IP address, a DNS domain or host name, or null.","pos":[70,150],"source":" If `false`, an element can be an IP address, a DNS domain or host name, or null."},{"content":"If null, it represents the identity of any domain controller in the domain associated with the computer account.","pos":[151,263]}]}],"pos":[18103,18369],"yaml":true},{"content":"`true` if the connection is UDP or `false` if the connection uses TCP/IP.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the connection is UDP or <ph id=\"ph2\">`false`</ph> if the connection uses TCP/IP.","source":"`true` if the connection is UDP or `false` if the connection uses TCP/IP."}],"pos":[18440,18516],"yaml":true},{"content":"Thrown if <code>server</code> has space.","nodes":[{"pos":[0,40],"content":"Thrown if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">server</ph><ept id=\"p1\">&lt;/code&gt;</ept> has space.","source":"Thrown if <code>server</code> has space."}],"pos":[18702,18743],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\"></xref> property specifies that the connection is User Datagram Protocol (UDP).","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\"&gt;&lt;/xref&gt;</ph> property specifies that the connection is User Datagram Protocol (UDP).","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\"></xref> property specifies that the connection is User Datagram Protocol (UDP)."}],"pos":[19841,20012],"yaml":true},{"content":"This property is `true` if the connection is UDP. This property is `false` if the LDAP connection is over TCP/IP.","nodes":[{"pos":[0,113],"content":"This property is `true` if the connection is UDP. This property is `false` if the LDAP connection is over TCP/IP.","nodes":[{"content":"This property is <ph id=\"ph1\">`true`</ph> if the connection is UDP.","pos":[0,49],"source":"This property is `true` if the connection is UDP."},{"content":"This property is <ph id=\"ph1\">`false`</ph> if the LDAP connection is over TCP/IP.","pos":[50,113],"source":" This property is `false` if the LDAP connection is over TCP/IP."}]}],"pos":[20129,20243],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\"></xref> property specifies that a server name is a fully-qualified DNS host name.","nodes":[{"pos":[0,183],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\"&gt;&lt;/xref&gt;</ph> property specifies that a server name is a fully-qualified DNS host name.","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\"></xref> property specifies that a server name is a fully-qualified DNS host name."}],"pos":[21511,21695],"yaml":true},{"content":"This property is `true` if a server name is a fully-qualified DNS host name.","nodes":[{"pos":[0,76],"content":"This property is <ph id=\"ph1\">`true`</ph> if a server name is a fully-qualified DNS host name.","source":"This property is `true` if a server name is a fully-qualified DNS host name."}],"pos":[21823,21900],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\"></xref> property contains the portnumber to be used to connect to the server.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\"&gt;&lt;/xref&gt;</ph> property contains the portnumber to be used to connect to the server.","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\"></xref> property contains the portnumber to be used to connect to the server."}],"pos":[23089,23254],"yaml":true},{"content":"Returns an integer representing the port number.","nodes":[{"pos":[0,48],"content":"Returns an integer representing the port number.","nodes":[{"content":"Returns an integer representing the port number.","pos":[0,48]}]}],"pos":[23364,23413],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\"></xref> property contains the set of servers this object identifies.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\"&gt;&lt;/xref&gt;</ph> property contains the set of servers this object identifies.","source":"The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\"></xref> property contains the set of servers this object identifies."}],"pos":[24569,24722],"yaml":true},{"content":"The set of servers this object identifies.","nodes":[{"pos":[0,42],"content":"The set of servers this object identifies.","nodes":[{"content":"The set of servers this object identifies.","pos":[0,42]}]}],"pos":[24837,24880],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  commentId: T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  id: LdapDirectoryIdentifier\n  children:\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\n  - System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier\n  nameWithType: LdapDirectoryIdentifier\n  fullName: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  type: Class\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class creates a directory identifier for one or more LDAP servers.\n  syntax:\n    content: 'public class LdapDirectoryIdentifier : System.DirectoryServices.Protocols.DirectoryIdentifier'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.Protocols.DirectoryIdentifier\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server.\n  syntax:\n    content: public LdapDirectoryIdentifier (string server);\n    parameters:\n    - id: server\n      type: System.String\n      description: \"The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.  \\n  \\n Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\"\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> has space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String, Int32)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.\n  syntax:\n    content: public LdapDirectoryIdentifier (string server, int portNumber);\n    parameters:\n    - id: server\n      type: System.String\n      description: The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\n    - id: portNumber\n      type: System.Int32\n      description: The port number to use when connecting to the server.\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> has space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\n  id: '#ctor(System.String,System.Boolean,System.Boolean)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.\n  syntax:\n    content: public LdapDirectoryIdentifier (string server, bool fullyQualifiedDnsHostName, bool connectionless);\n    parameters:\n    - id: server\n      type: System.String\n      description: The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\n    - id: fullyQualifiedDnsHostName\n      type: System.Boolean\n      description: '`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or `null`. If `null`, it represents the identity of any domain controller in the domain associated with the computer account.'\n    - id: connectionless\n      type: System.Boolean\n      description: '`true` if the connection is UDP or `false` if the connection uses TCP/IP.'\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> contains only white space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)\n  id: '#ctor(System.String[],System.Boolean,System.Boolean)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String[], Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.\n  syntax:\n    content: public LdapDirectoryIdentifier (string[] servers, bool fullyQualifiedDnsHostName, bool connectionless);\n    parameters:\n    - id: servers\n      type: System.String[]\n      description: The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\n    - id: fullyQualifiedDnsHostName\n      type: System.Boolean\n      description: '`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.'\n    - id: connectionless\n      type: System.Boolean\n      description: '`true` if the connection is UDP or `false` if the connection uses TCP/IP.'\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> has space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\n  id: '#ctor(System.String,System.Int32,System.Boolean,System.Boolean)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.\n  syntax:\n    content: public LdapDirectoryIdentifier (string server, int portNumber, bool fullyQualifiedDnsHostName, bool connectionless);\n    parameters:\n    - id: server\n      type: System.String\n      description: The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\n    - id: portNumber\n      type: System.Int32\n      description: The port number to be used when connecting to the server.\n    - id: fullyQualifiedDnsHostName\n      type: System.Boolean\n      description: '`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.'\n    - id: connectionless\n      type: System.Boolean\n      description: '`true` if the connection is UDP or `false` if the connection uses TCP/IP.'\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> has space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\n  commentId: M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\n  id: '#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)'\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\"></xref> constructor creates an instance of the <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier\"></xref> class using the specified server and properties.  This constructor creates an identifier that represents a set of LDAP servers.\n  syntax:\n    content: public LdapDirectoryIdentifier (string[] servers, int portNumber, bool fullyQualifiedDnsHostName, bool connectionless);\n    parameters:\n    - id: servers\n      type: System.String[]\n      description: The server ID. A string specifying the server which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the ID itself by a colon (:).\n    - id: portNumber\n      type: System.Int32\n      description: the port number to be used when connecting to a server.\n    - id: fullyQualifiedDnsHostName\n      type: System.Boolean\n      description: '`true` if each element in servers is a fully-qualified DNS host name. If `false`, an element can be an IP address, a DNS domain or host name, or null. If null, it represents the identity of any domain controller in the domain associated with the computer account.'\n    - id: connectionless\n      type: System.Boolean\n      description: '`true` if the connection is UDP or `false` if the connection uses TCP/IP.'\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Thrown if <code>server</code> has space.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\n  commentId: P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\n  id: Connectionless\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: Connectionless\n  nameWithType: LdapDirectoryIdentifier.Connectionless\n  fullName: LdapDirectoryIdentifier.Connectionless\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\"></xref> property specifies that the connection is User Datagram Protocol (UDP).\n  syntax:\n    content: public bool Connectionless { get; }\n    return:\n      type: System.Boolean\n      description: This property is `true` if the connection is UDP. This property is `false` if the LDAP connection is over TCP/IP.\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  commentId: P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  id: FullyQualifiedDnsHostName\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: FullyQualifiedDnsHostName\n  nameWithType: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  fullName: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\"></xref> property specifies that a server name is a fully-qualified DNS host name.\n  syntax:\n    content: public bool FullyQualifiedDnsHostName { get; }\n    return:\n      type: System.Boolean\n      description: This property is `true` if a server name is a fully-qualified DNS host name.\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\n  commentId: P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\n  id: PortNumber\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: PortNumber\n  nameWithType: LdapDirectoryIdentifier.PortNumber\n  fullName: LdapDirectoryIdentifier.PortNumber\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\"></xref> property contains the portnumber to be used to connect to the server.\n  syntax:\n    content: public int PortNumber { get; }\n    return:\n      type: System.Int32\n      description: Returns an integer representing the port number.\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\n  commentId: P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\n  id: Servers\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  langs:\n  - csharp\n  name: Servers\n  nameWithType: LdapDirectoryIdentifier.Servers\n  fullName: LdapDirectoryIdentifier.Servers\n  type: Property\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\"></xref> property contains the set of servers this object identifies.\n  syntax:\n    content: public string[] Servers { get; }\n    return:\n      type: System.String[]\n      description: The set of servers this object identifies.\n  overload: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.DirectoryServices.Protocols.DirectoryIdentifier\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: DirectoryIdentifier\n  nameWithType: DirectoryIdentifier\n  fullName: System.DirectoryServices.Protocols.DirectoryIdentifier\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String, Int32)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Boolean, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String[], Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Boolean, Boolean)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String, Int32, Boolean, Boolean)\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier(String[], Int32, Boolean, Boolean)\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: Connectionless\n  nameWithType: LdapDirectoryIdentifier.Connectionless\n  fullName: LdapDirectoryIdentifier.Connectionless\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: FullyQualifiedDnsHostName\n  nameWithType: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  fullName: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: PortNumber\n  nameWithType: LdapDirectoryIdentifier.PortNumber\n  fullName: LdapDirectoryIdentifier.PortNumber\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: Servers\n  nameWithType: LdapDirectoryIdentifier.Servers\n  fullName: LdapDirectoryIdentifier.Servers\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor*\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: LdapDirectoryIdentifier\n  nameWithType: LdapDirectoryIdentifier.LdapDirectoryIdentifier\n  fullName: LdapDirectoryIdentifier.LdapDirectoryIdentifier\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless*\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: Connectionless\n  nameWithType: LdapDirectoryIdentifier.Connectionless\n  fullName: LdapDirectoryIdentifier.Connectionless\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName*\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: FullyQualifiedDnsHostName\n  nameWithType: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  fullName: LdapDirectoryIdentifier.FullyQualifiedDnsHostName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber*\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: PortNumber\n  nameWithType: LdapDirectoryIdentifier.PortNumber\n  fullName: LdapDirectoryIdentifier.PortNumber\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers*\n  parent: System.DirectoryServices.Protocols.LdapDirectoryIdentifier\n  isExternal: false\n  name: Servers\n  nameWithType: LdapDirectoryIdentifier.Servers\n  fullName: LdapDirectoryIdentifier.Servers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/LdapDirectoryIdentifier.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}