{"nodes":[{"content":"Allows you to specify properties related to Windows credentials to be used to represent the client.","nodes":[{"pos":[0,99],"content":"Allows you to specify properties related to Windows credentials to be used to represent the client.","nodes":[{"content":"Allows you to specify properties related to Windows credentials to be used to represent the client.","pos":[0,99]}]}],"pos":[692,792],"yaml":true},{"content":"The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client. The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used.","nodes":[{"pos":[0,656],"content":"The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client. The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used.","nodes":[{"content":"The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client. The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used.","pos":[0,656],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential&gt;</ph> enables the setting of Windows client properties used when communicating with a service.","pos":[0,152],"source":"The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A&gt;</ph> sets the level of impersonation the service can assume when impersonating the client.","pos":[153,331],"source":" The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A&gt;</ph> enables a client to authenticate with username and password to the service.","pos":[332,491],"source":" The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> determines whether NTLM can be used to authenticate the client if Kerberos is not used.","pos":[492,656],"source":" The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used."}]}]}],"pos":[803,1460],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the allowed impersonation level.","nodes":[{"pos":[0,45],"content":"Gets or sets the allowed impersonation level.","nodes":[{"content":"Gets or sets the allowed impersonation level.","pos":[0,45]}]}],"pos":[3643,3689],"yaml":true},{"content":"This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication. Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting. It is also a function of the associated privileges and domain settings for the account in which the service is running.  \n  \n The client must explicitly set the allowed impersonation level using this property.  \n  \n When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service. This is due to underlying Windows operating system behavior.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] Windows impersonation, go to [Impersonating and Reverting](http://go.microsoft.com/fwlink/?LinkId=96178). [!INCLUDE[crabout](~/includes/crabout-md.md)] impersonation using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).","nodes":[{"pos":[0,390],"content":"This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication. Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting. It is also a function of the associated privileges and domain settings for the account in which the service is running.","nodes":[{"content":"This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication. Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting. It is also a function of the associated privileges and domain settings for the account in which the service is running.","pos":[0,390],"nodes":[{"content":"This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication.","pos":[0,133]},{"content":"Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting.","pos":[134,270]},{"content":"It is also a function of the associated privileges and domain settings for the account in which the service is running.","pos":[271,390]}]}]},{"pos":[397,480],"content":"The client must explicitly set the allowed impersonation level using this property.","nodes":[{"content":"The client must explicitly set the allowed impersonation level using this property.","pos":[0,83]}]},{"pos":[487,713],"content":"When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service. This is due to underlying Windows operating system behavior.","nodes":[{"content":"When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service. This is due to underlying Windows operating system behavior.","pos":[0,226],"nodes":[{"content":"When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service.","pos":[0,165]},{"content":"This is due to underlying Windows operating system behavior.","pos":[166,226]}]}]},{"pos":[720,1099],"content":"[!INCLUDE[crabout](~/includes/crabout-md.md)] Windows impersonation, go to [Impersonating and Reverting](http://go.microsoft.com/fwlink/?LinkId=96178). [!INCLUDE[crabout](~/includes/crabout-md.md)] impersonation using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> Windows impersonation, go to <bpt id=\"p1\">[</bpt>Impersonating and Reverting<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=96178)</ept>.","pos":[0,151],"source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] Windows impersonation, go to [Impersonating and Reverting](http://go.microsoft.com/fwlink/?LinkId=96178)."},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> impersonation using <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Delegation and Impersonation<ept id=\"p1\">](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)</ept>.","pos":[152,379],"source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] impersonation using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)."}]}],"pos":[3700,4808],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> values.","nodes":[{"pos":[0,89],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> values."}],"pos":[5351,5441],"yaml":true},{"content":"Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.","nodes":[{"pos":[0,123],"content":"Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.","nodes":[{"content":"Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.","pos":[0,123]}]}],"pos":[6691,6815],"yaml":true},{"content":"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available.  \n  \n Setting this property to `false` causes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to make a best-effort to throw an exception if NTLM is used. Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.  \n  \n Certain deployments such as workgroups and local accounts require NTLM authentication. Setting this flag to `false` in such deployments result in authentication failures when using [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to `false`.  \n  \n NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.  \n  \n The Microsoft Kerberos security package adds greater security than NTLM to systems on a network. Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.","nodes":[{"pos":[0,104],"content":"Setting this property to <ph id=\"ph1\">`true`</ph> allows authentication to downgrade to NTLM if Kerberos is not available.","source":"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available."},{"pos":[111,364],"content":"Setting this property to `false` causes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to make a best-effort to throw an exception if NTLM is used. Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.","nodes":[{"content":"Setting this property to <ph id=\"ph1\">`false`</ph> causes <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> to make a best-effort to throw an exception if NTLM is used.","pos":[0,146],"source":"Setting this property to `false` causes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to make a best-effort to throw an exception if NTLM is used."},{"content":"Note that setting this property to <ph id=\"ph1\">`false`</ph> may not prevent NTLM credentials from being sent over the wire.","pos":[147,253],"source":" Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire."}]},{"pos":[371,706],"content":"Certain deployments such as workgroups and local accounts require NTLM authentication. Setting this flag to `false` in such deployments result in authentication failures when using [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to `false`.","nodes":[{"content":"Certain deployments such as workgroups and local accounts require NTLM authentication.","pos":[0,86]},{"content":"Setting this flag to <ph id=\"ph1\">`false`</ph> in such deployments result in authentication failures when using <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>.","pos":[87,227],"source":" Setting this flag to `false` in such deployments result in authentication failures when using [!INCLUDE[indigo2](~/includes/indigo2-md.md)]."},{"content":"In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to <ph id=\"ph1\">`false`</ph>.","pos":[228,335],"source":" In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to `false`."}]},{"pos":[713,880],"content":"NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.","nodes":[{"content":"NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.","pos":[0,167]}]},{"pos":[887,1214],"content":"The Microsoft Kerberos security package adds greater security than NTLM to systems on a network. Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.","nodes":[{"content":"The Microsoft Kerberos security package adds greater security than NTLM to systems on a network. Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.","pos":[0,327],"nodes":[{"content":"The Microsoft Kerberos security package adds greater security than NTLM to systems on a network.","pos":[0,96]},{"content":"Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.","pos":[97,327]}]}]}],"pos":[6826,8051],"yaml":true,"extradata":"MT"},{"content":"`true` if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, `false` otherwise. The default is `true`.","nodes":[{"pos":[0,131],"content":"`true` if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, `false` otherwise. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, <ph id=\"ph2\">`false`</ph> otherwise.","pos":[0,108],"source":"`true` if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, `false` otherwise."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[109,131],"source":" The default is `true`."}]}],"pos":[8168,8302],"yaml":true},{"content":"Gets or sets the Windows client credential.","nodes":[{"pos":[0,43],"content":"Gets or sets the Windows client credential.","nodes":[{"content":"Gets or sets the Windows client credential.","pos":[0,43]}]}],"pos":[9578,9622],"yaml":true},{"content":"By default, the current thread's credentials are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for doing Windows SSPI Negotiate authentication.  \n  \n To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property. Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.","nodes":[{"pos":[0,151],"content":"By default, the current thread's credentials are used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> for doing Windows SSPI Negotiate authentication.","source":"By default, the current thread's credentials are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for doing Windows SSPI Negotiate authentication."},{"pos":[158,446],"content":"To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property. Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.","nodes":[{"content":"To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property. Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.","pos":[0,288],"nodes":[{"content":"To authenticate the client as another principal, change the properties of the instance of the <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> class that is returned by this property.","pos":[0,170],"source":"To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property."},{"content":"Alternatively, create a new instance of the <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> class and assign it to this property.","pos":[171,288],"source":" Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property."}]}]}],"pos":[9633,10084],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.NetworkCredential\"></xref> for the client.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> for the client.","source":"The <xref href=\"System.Net.NetworkCredential\"></xref> for the client."}],"pos":[10888,10958],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.WindowsClientCredential\n  commentId: T:System.ServiceModel.Security.WindowsClientCredential\n  id: WindowsClientCredential\n  children:\n  - System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel\n  - System.ServiceModel.Security.WindowsClientCredential.AllowNtlm\n  - System.ServiceModel.Security.WindowsClientCredential.ClientCredential\n  langs:\n  - csharp\n  name: WindowsClientCredential\n  nameWithType: WindowsClientCredential\n  fullName: System.ServiceModel.Security.WindowsClientCredential\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Allows you to specify properties related to Windows credentials to be used to represent the client.\n  remarks: The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client. The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service. The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used.\n  example:\n  - \"The following example creates a client and gets a reference to the <xref:System.ServiceModel.Security.WindowsClientCredential>. The code then changes the <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> to a new value.  \\n  \\n [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]\\n [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]\"\n  syntax:\n    content: public sealed class WindowsClientCredential\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel\n  commentId: P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel\n  id: AllowedImpersonationLevel\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  langs:\n  - csharp\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientCredential.AllowedImpersonationLevel\n  fullName: WindowsClientCredential.AllowedImpersonationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the allowed impersonation level.\n  remarks: \"This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication. Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting. It is also a function of the associated privileges and domain settings for the account in which the service is running.  \\n  \\n The client must explicitly set the allowed impersonation level using this property.  \\n  \\n When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service. This is due to underlying Windows operating system behavior.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] Windows impersonation, go to [Impersonating and Reverting](http://go.microsoft.com/fwlink/?LinkId=96178). [!INCLUDE[crabout](~/includes/crabout-md.md)] impersonation using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).\"\n  example:\n  - \"The following example shows how to set this property.  \\n  \\n [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]\\n [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]\"\n  syntax:\n    content: public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> values.\n  overload: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm\n  commentId: P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm\n  id: AllowNtlm\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  langs:\n  - csharp\n  name: AllowNtlm\n  nameWithType: WindowsClientCredential.AllowNtlm\n  fullName: WindowsClientCredential.AllowNtlm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.\n  remarks: \"Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available.  \\n  \\n Setting this property to `false` causes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to make a best-effort to throw an exception if NTLM is used. Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.  \\n  \\n Certain deployments such as workgroups and local accounts require NTLM authentication. Setting this flag to `false` in such deployments result in authentication failures when using [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to `false`.  \\n  \\n NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.  \\n  \\n The Microsoft Kerberos security package adds greater security than NTLM to systems on a network. Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.\"\n  syntax:\n    content: public bool AllowNtlm { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, `false` otherwise. The default is `true`.'\n  overload: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential\n  commentId: P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential\n  id: ClientCredential\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  langs:\n  - csharp\n  name: ClientCredential\n  nameWithType: WindowsClientCredential.ClientCredential\n  fullName: WindowsClientCredential.ClientCredential\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the Windows client credential.\n  remarks: \"By default, the current thread's credentials are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for doing Windows SSPI Negotiate authentication.  \\n  \\n To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property. Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.\"\n  example:\n  - \"The following code examples show how to authenticate the client as a different principal.  \\n  \\n This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.  \\n  \\n [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  \\n  \\n This is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.  \\n  \\n [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]\"\n  syntax:\n    content: public System.Net.NetworkCredential ClientCredential { get; set; }\n    return:\n      type: System.Net.NetworkCredential\n      description: The <xref href=\"System.Net.NetworkCredential\"></xref> for the client.\n  overload: System.ServiceModel.Security.WindowsClientCredential.ClientCredential*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientCredential.AllowedImpersonationLevel\n  fullName: WindowsClientCredential.AllowedImpersonationLevel\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientCredential.AllowNtlm\n  fullName: WindowsClientCredential.AllowNtlm\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: ClientCredential\n  nameWithType: WindowsClientCredential.ClientCredential\n  fullName: WindowsClientCredential.ClientCredential\n- uid: System.Net.NetworkCredential\n  parent: System.Net\n  isExternal: false\n  name: NetworkCredential\n  nameWithType: NetworkCredential\n  fullName: System.Net.NetworkCredential\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel*\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientCredential.AllowedImpersonationLevel\n  fullName: WindowsClientCredential.AllowedImpersonationLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm*\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientCredential.AllowNtlm\n  fullName: WindowsClientCredential.AllowNtlm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential*\n  parent: System.ServiceModel.Security.WindowsClientCredential\n  isExternal: false\n  name: ClientCredential\n  nameWithType: WindowsClientCredential.ClientCredential\n  fullName: WindowsClientCredential.ClientCredential\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/WindowsClientCredential.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}