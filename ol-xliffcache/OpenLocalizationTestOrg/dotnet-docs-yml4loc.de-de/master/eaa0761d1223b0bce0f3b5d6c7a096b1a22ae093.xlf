<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa0761d1223b0bce0f3b5d6c7a096b1a22ae093</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.Design.Serialization.ComponentSerializationService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f71d51c67d40a8eab8a31f14487261287f98dfc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22d383238712286be5e592074272f4dd06f1d264</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for serializing a set of components or serializable objects into a serialization store.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> serializes a set of components or serializable objects into a serialization store.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can then be deserialized later.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can choose to serialize only selected properties for an object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is <ph id="ph1">`abstract`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> will provide a concrete implementation of this class and add it as a service to its <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows objects to be serialized in the format best suited for them.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> class replaces the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService&gt;</ph> interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.ComponentSerializationService"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple objects can be serialized into the same serialization store.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are finished with the store, you can call its <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new created serialization store.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Deserializes the given store to produce a collection of objects.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to deserialize.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Deserializes the given store and populates the given <ph id="ph1">&lt;xref href="System.ComponentModel.IContainer"&gt;&lt;/xref&gt;</ph> with deserialized <ph id="ph2">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method deserializes <ph id="ph1">`store`</ph> to produce a collection of objects contained within it.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are deserialized in the same order in which they were serialized.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Created objects that implement <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> are added to <ph id="ph2">`container`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to deserialize.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.IContainer"&gt;&lt;/xref&gt;</ph> to which <ph id="ph2">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> objects will be added.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A collection of objects created according to the stored state.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Deserializes the given <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to the given container.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</ph> method deserializes <ph id="ph2">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, it will be added to <ph id="ph2">`container`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to deserialize.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The container to which <ph id="ph1">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> objects will be added.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deserializes the given <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to the given container, optionally validating recycled types.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</ph> method deserializes <ph id="ph2">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, it will be added to <ph id="ph2">`container`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to deserialize.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The container to which <ph id="ph1">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> objects will be added.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Deserializes the given <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to the given container, optionally applying default property values.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A&gt;</ph> method deserializes <ph id="ph2">`store`</ph>, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the caller can create in advance an object however it sees fit.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that object also implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, it will be added to <ph id="ph2">`container`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to deserialize.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The container to which <ph id="ph1">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> objects will be added.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to guarantee that the deserialization will only work if applied to an object of the same type.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the default property values should be applied.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;container&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> does not contain data in a format the serialization container can process.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> from a stream.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the returned store to deserialize objects by passing it to one of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> from which the store will be loaded.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> does not contain data saved by a previous call to <ph id="ph2">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Serializes the given object to the given <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The store can be used to serialize more than one object by calling this method more than once.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to which the state of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> will be written.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Serializes the given object, accounting for default property values.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard serialization, as implemented through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A&gt;</ph> method, only serializes values that differ from the component's default state.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A&gt;</ph> method does not use this shortcut.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to which the state of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> will be serialized.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The object to serialize.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A&gt;</ph> method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the member should be a property or an event.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to which the state of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">member</ph><ept id="p1">&lt;/code&gt;</ept> will be serialized.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The object to which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> is attached.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;&lt;/xref&gt;</ph> specifying the member to serialize.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Serializes the given member on the given object, accounting for the default property value.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A&gt;</ph> method serializes the <ph id="ph2">`member`</ph> on <ph id="ph3">`owningObject`</ph>, even if <ph id="ph4">`member`</ph> contains the default property value.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A&gt;</ph> method takes this into account and would clear the state of the property in this case.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.SerializationStore"&gt;&lt;/xref&gt;</ph> to which the state of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">member</ph><ept id="p1">&lt;/code&gt;</ept> will be serialized.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The object to which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">member</ph><ept id="p1">&lt;/code&gt;</ept> is attached.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The member to serialize.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;store&lt;/code&gt;</ph> is closed, or <ph id="ph2">&lt;code&gt;store&lt;/code&gt;</ph> is not a supported type of serialization store.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use a store returned by <ph id="ph1">&lt;xref href="System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>