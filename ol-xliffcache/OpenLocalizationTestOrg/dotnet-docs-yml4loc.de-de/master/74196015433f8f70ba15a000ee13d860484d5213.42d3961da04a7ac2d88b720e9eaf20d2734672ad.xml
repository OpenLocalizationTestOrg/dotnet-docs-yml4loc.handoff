{"nodes":[{"content":"The single method, <xref href=\"System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\"></xref>, exposed by this class is obsolete. You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object.","nodes":[{"pos":[0,431],"content":"The single method, <xref href=\"System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\"></xref>, exposed by this class is obsolete. You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object.","nodes":[{"content":"The single method, <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\"&gt;&lt;/xref&gt;</ph>, exposed by this class is obsolete.","pos":[0,252],"source":"The single method, <xref href=\"System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\"></xref>, exposed by this class is obsolete."},{"content":"You can use a <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"&gt;&lt;/xref&gt;</ph> object to add claims to a <ph id=\"ph2\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;&lt;/xref&gt;</ph> object.","pos":[253,431],"source":" You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object."}]}],"pos":[618,1050],"yaml":true},{"content":"You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object.","nodes":[{"pos":[0,178],"content":"You can use a <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"&gt;&lt;/xref&gt;</ph> object to add claims to a <ph id=\"ph2\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;&lt;/xref&gt;</ph> object.","source":"You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object."}],"pos":[2924,3103],"yaml":true},{"content":"The claims identity to which to add the claims.","nodes":[{"pos":[0,47],"content":"The claims identity to which to add the claims.","nodes":[{"content":"The claims identity to which to add the claims.","pos":[0,47]}]}],"pos":[3518,3566],"yaml":true},{"content":"The claims to add.","nodes":[{"pos":[0,18],"content":"The claims to add.","nodes":[{"content":"The claims to add.","pos":[0,18]}]}],"pos":[3683,3702],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Claims.DynamicRoleClaimProvider\n  commentId: T:System.Security.Claims.DynamicRoleClaimProvider\n  id: DynamicRoleClaimProvider\n  children:\n  - System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  langs:\n  - csharp\n  name: DynamicRoleClaimProvider\n  nameWithType: DynamicRoleClaimProvider\n  fullName: System.Security.Claims.DynamicRoleClaimProvider\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Security.Claims\n  summary: The single method, <xref href=\"System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\"></xref>, exposed by this class is obsolete. You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object.\n  syntax:\n    content: public static class DynamicRoleClaimProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Claims/DynamicRoleClaimProvider.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  commentId: M:System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  id: AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  parent: System.Security.Claims.DynamicRoleClaimProvider\n  langs:\n  - csharp\n  name: AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n  nameWithType: DynamicRoleClaimProvider.AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n  fullName: DynamicRoleClaimProvider.AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Claims\n  summary: You can use a <xref href=\"System.Security.Claims.ClaimsAuthenticationManager\"></xref> object to add claims to a <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> object.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use ClaimsAuthenticationManager to add claims to a ClaimsIdentity\", true)]\n\n      public static void AddDynamicRoleClaims (System.Security.Claims.ClaimsIdentity claimsIdentity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);\n    parameters:\n    - id: claimsIdentity\n      type: System.Security.Claims.ClaimsIdentity\n      description: The claims identity to which to add the claims.\n    - id: claims\n      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n      description: The claims to add.\n  overload: System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Claims/DynamicRoleClaimProvider.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  parent: System.Security.Claims.DynamicRoleClaimProvider\n  isExternal: false\n  name: AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n  nameWithType: DynamicRoleClaimProvider.AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n  fullName: DynamicRoleClaimProvider.AddDynamicRoleClaims(ClaimsIdentity, IEnumerable<Claim>)\n- uid: System.Security.Claims.ClaimsIdentity\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsIdentity\n  nameWithType: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Security.Claims.Claim\n  name: Claim\n  nameWithType: Claim\n  fullName: System.Security.Claims.Claim\n- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Claim>\n  nameWithType: IEnumerable<Claim>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    nameWithType: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims*\n  parent: System.Security.Claims.DynamicRoleClaimProvider\n  isExternal: false\n  name: AddDynamicRoleClaims\n  nameWithType: DynamicRoleClaimProvider.AddDynamicRoleClaims\n  fullName: DynamicRoleClaimProvider.AddDynamicRoleClaims\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Claims/DynamicRoleClaimProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}