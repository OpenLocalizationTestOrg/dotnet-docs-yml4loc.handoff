{"nodes":[{"content":"Authenticates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.","nodes":[{"pos":[0,102],"content":"Authenticates a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> security token.","source":"Authenticates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token."}],"pos":[1012,1115],"yaml":true},{"content":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class to authenticate security tokens based on a user name and password.  \n  \n The [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \n  \n|Type|Description|  \n|----------|-----------------|  \n|<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|  \n|<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|  \n  \n Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.","nodes":[{"pos":[0,158],"content":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class to authenticate security tokens based on a user name and password.","nodes":[{"content":"Override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> class to authenticate security tokens based on a user name and password.","pos":[0,158],"source":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class to authenticate security tokens based on a user name and password."}]},{"pos":[165,363],"content":"The <ph id=\"ph1\">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> ships with the following classes that provide support for authenticating <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> security tokens.","source":"The [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens."},{"pos":[370,374],"content":"Type","nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[375,386],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[424,502],"content":"<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>","nodes":[]},{"pos":[503,737],"content":"Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.","nodes":[{"content":"Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.","pos":[0,234],"nodes":[{"content":"Allows an application to provide a custom authentication scheme for user names and passwords.","pos":[0,93]},{"content":"The authentication scheme is provided using a class deriving from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> class.","pos":[94,234],"source":" The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class."}]}]},{"pos":[742,821],"content":"<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>","nodes":[]},{"pos":[822,884],"content":"Authenticates the user name and password as a Windows account.","nodes":[{"content":"Authenticates the user name and password as a Windows account.","pos":[0,62]}]},{"pos":[892,1434],"content":"Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.","nodes":[{"content":"Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.","pos":[0,542],"nodes":[{"content":"Most custom authentication schemes can use the use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> class and implement a class that derives from the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> class.","pos":[0,254],"source":"Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class."},{"content":"However, if additional flexibility is needed, you can derive a class from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> class and override the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method.","pos":[256,542],"source":"  However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method."}]}]}],"pos":[1126,2572],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"></xref> class.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"></xref> class."}],"pos":[5086,5214],"yaml":true},{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"pos":[0,115],"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","nodes":[{"content":"Gets a value indicating whether the specified security token can be validated by this security token authenticator.","pos":[0,115]}]}],"pos":[6777,6893],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"pos":[0,276],"content":"The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","pos":[0,276],"source":"The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]}],"pos":[6904,7181],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[7405,7489],"yaml":true},{"content":"`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token; otherwise, `false`.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">`true`</ph> when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> security token; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token; otherwise, `false`."}],"pos":[7547,7692],"yaml":true},{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"pos":[0,112],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]}],"pos":[9161,9274],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password.","nodes":[{"pos":[0,298],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method to authenticate the <ph id=\"ph3\">`token`</ph> parameter using its user name and password.","source":"The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password."}],"pos":[9285,9584],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[9900,9984],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[10127,10360],"yaml":true},{"content":"When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.","nodes":[{"pos":[0,224],"content":"When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> security tokens.","source":"When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens."}],"pos":[11853,12078],"yaml":true},{"content":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \n  \n When the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method is overridden, follow these guidelines:  \n  \n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \n  \n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \n  \n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.","nodes":[{"pos":[0,214],"content":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.","nodes":[{"content":"Override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method to authenticate <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> security tokens.","pos":[0,214],"source":"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens."}]},{"pos":[221,381],"content":"When the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method is overridden, follow these guidelines:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method is overridden, follow these guidelines:","pos":[0,160],"source":"When the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method is overridden, follow these guidelines:"}]},{"pos":[391,558],"content":"When the security token passed into the <ph id=\"ph1\">`token`</ph> parameter cannot be validated, throw the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"pos":[568,782],"content":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.","nodes":[{"content":"When there are no authorization policies in effect for this application, return an empty <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.","pos":[0,214],"source":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>."}]},{"pos":[789,966],"content":"When <ph id=\"ph1\">`null`</ph> is returned by this method, <ph id=\"ph2\">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."}],"pos":[12089,13066],"yaml":true,"extradata":"MT"},{"content":"The user name associated with the security token.","nodes":[{"pos":[0,49],"content":"The user name associated with the security token.","nodes":[{"content":"The user name associated with the security token.","pos":[0,49]}]}],"pos":[13701,13751],"yaml":true},{"content":"The password associated with the security token.","nodes":[{"pos":[0,48],"content":"The password associated with the security token.","nodes":[{"content":"The password associated with the security token.","pos":[0,48]}]}],"pos":[13815,13864],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[14007,14240],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  commentId: T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  id: UserNameSecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  langs:\n  - csharp\n  name: UserNameSecurityTokenAuthenticator\n  nameWithType: UserNameSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.\n  remarks: \"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class to authenticate security tokens based on a user name and password.  \\n  \\n The [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|  \\n|<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|  \\n  \\n Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.\"\n  example:\n  - >-\n    [!code-csharp[UserNameSecurityTokenAuthenticator#0](~/samples/snippets/csharp/VS_Snippets_CFX/usernamesecuritytokenauthenticator/cs/mytokenauthenticator.cs#0)]\n     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamesecuritytokenauthenticator/vb/mytokenauthenticator.vb#0)]\n  syntax:\n    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  derivedClasses:\n  - System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  commentId: M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: UserNameSecurityTokenAuthenticator()\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  fullName: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\"></xref> class.\n  syntax:\n    content: protected UserNameSecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value indicating whether the specified security token can be validated by this security token authenticator.\n  remarks: The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: '`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password.\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  commentId: M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  id: ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateUserNamePasswordCore(String, String)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  fullName: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.\n  remarks: \"Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.  \\n  \\n When the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method is overridden, follow these guidelines:  \\n  \\n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \\n  \\n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.\"\n  example:\n  - >-\n    [!code-csharp[UserNameSecurityTokenAuthenticator#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamesecuritytokenauthenticator/cs/mytokenauthenticator.cs#1)]\n     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamesecuritytokenauthenticator/vb/mytokenauthenticator.vb#1)]\n  syntax:\n    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The user name associated with the security token.\n    - id: password\n      type: System.String\n      description: The password associated with the security token.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: UserNameSecurityTokenAuthenticator()\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n  fullName: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore(String, String)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  fullName: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: UserNameSecurityTokenAuthenticator\n  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator\n  fullName: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore\n  fullName: UserNameSecurityTokenAuthenticator.CanValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore\n  fullName: UserNameSecurityTokenAuthenticator.ValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n  fullName: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/UserNameSecurityTokenAuthenticator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n"}