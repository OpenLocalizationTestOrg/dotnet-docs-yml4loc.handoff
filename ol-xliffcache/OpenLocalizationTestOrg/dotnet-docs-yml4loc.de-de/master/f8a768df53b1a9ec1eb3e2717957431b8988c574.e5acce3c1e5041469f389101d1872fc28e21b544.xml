{"nodes":[{"content":"Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <xref href=\"System.Messaging.MessageQueue\"></xref>.","nodes":[{"pos":[0,238],"content":"Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <xref href=\"System.Messaging.MessageQueue\"></xref>.","nodes":[{"content":"Allows you to install and configure a queue that your application needs in order to run.","pos":[0,88]},{"content":"This class is called by the installation utility, for example, InstallUtil.exe, when installing a <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph>.","pos":[89,238],"source":" This class is called by the installation utility, for example, InstallUtil.exe, when installing a <xref href=\"System.Messaging.MessageQueue\"></xref>."}]}],"pos":[1812,2051],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue. For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \n  \n To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`. Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.  \n  \n When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in. Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.  \n  \n When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>. If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer. If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.  \n  \n You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer. For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception. It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility. It is not usually necessary for your code to explicitly modify the state information.","nodes":[{"pos":[0,295],"content":"The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue. For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> is used by the installation utility to write registry values that are associated with the queue.","pos":[0,146],"source":"The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue."},{"content":"For more information about installation utilities, see <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept>.","pos":[147,295],"source":" For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md)."}]},{"pos":[302,686],"content":"To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`. Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.","nodes":[{"content":"To install a queue, create a project installer class that inherits from the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph>, and set the <ph id=\"ph2\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> for the class to <ph id=\"ph3\">`true`</ph>.","pos":[0,210],"source":"To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`."},{"content":"Within your project, create a <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance for each queue in the installation and add the instance to your project installer class.","pos":[211,384],"source":" Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class."}]},{"pos":[693,1250],"content":"When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in. Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.","nodes":[{"content":"When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in. Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.","pos":[0,557],"nodes":[{"content":"When creating a <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance, you can optionally pass an existing <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> (for example, from a test server) to the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller.%23ctor%2A&gt;</ph> constructor.","pos":[0,255],"source":"When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor."},{"content":"This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.","pos":[256,387]},{"content":"Alternatively, you can manually set the properties in the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance to the states you want and call the default constructor.","pos":[388,557],"source":" Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor."}]}]},{"pos":[1257,1641],"content":"When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>. If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer. If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.","nodes":[{"content":"When the install utility is called, it looks for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph>.","pos":[0,104],"source":"When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>."},{"content":"If it is <ph id=\"ph1\">`true`</ph>, the utility installs all the queues in the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection associated with your project installer.","pos":[105,275],"source":" If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer."},{"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> is <ph id=\"ph2\">`false`</ph>, the utility ignores the project installer.","pos":[276,384],"source":" If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer."}]},{"pos":[1648,2000],"content":"You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer. For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.","nodes":[{"content":"You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer. For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.","pos":[0,352],"nodes":[{"content":"You modify other properties of a <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance either before or after adding the instance to the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection of your project installer.","pos":[0,235],"source":"You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer."},{"content":"For example, a queue's <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> must be set before the install utility executes.","pos":[236,352],"source":" For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes."}]}]},{"pos":[2007,2594],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception. It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception. It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.","pos":[0,587],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the installutil.exe installation utility.","pos":[0,190],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility."},{"content":"The utility automatically calls the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method during the installation process and calls <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> if the installation did not throw an exception.","pos":[191,436],"source":" The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception."},{"content":"It backs out failures, if necessary, by calling <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> for the object that generated the exception.","pos":[437,587],"source":" It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception."}]}]},{"pos":[2601,3062],"content":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility. It is not usually necessary for your code to explicitly modify the state information.","nodes":[{"content":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility. It is not usually necessary for your code to explicitly modify the state information.","pos":[0,461],"nodes":[{"content":"An application's install routine uses the project installer's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName&gt;</ph> to automatically maintain information about the components that have already been installed.","pos":[0,236],"source":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed."},{"content":"This state information is continuously updated as each <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance is installed by the utility.","pos":[237,375],"source":" This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility."},{"content":"It is not usually necessary for your code to explicitly modify the state information.","pos":[376,461]}]}]}],"pos":[2062,5139],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class. Does not set any instance properties.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class. Does not set any instance properties.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,100],"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class."},{"content":"Does not set any instance properties.","pos":[101,138]}]}],"pos":[8793,8932],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class, initializing the installation settings to those of an existing <xref href=\"System.Messaging.MessageQueue\"></xref> instance.","nodes":[{"pos":[0,224],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller\"&gt;&lt;/xref&gt;</ph> class, initializing the installation settings to those of an existing <ph id=\"ph2\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> instance.","source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class, initializing the installation settings to those of an existing <xref href=\"System.Messaging.MessageQueue\"></xref> instance."}],"pos":[10189,10414],"yaml":true},{"content":"The <xref href=\"System.Messaging.MessageQueue\"></xref> component whose settings determine the property settings of the new queue installed.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> component whose settings determine the property settings of the new queue installed.","source":"The <xref href=\"System.Messaging.MessageQueue\"></xref> component whose settings determine the property settings of the new queue installed."}],"pos":[10618,10758],"yaml":true},{"content":"Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.","nodes":[{"pos":[0,106],"content":"Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.","nodes":[{"content":"Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.","pos":[0,106]}]}],"pos":[11794,11901],"yaml":true},{"content":"When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected. The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message. Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.","nodes":[{"pos":[0,410],"content":"When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected. The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message. Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.","nodes":[{"content":"When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected. The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message. Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.","pos":[0,410],"nodes":[{"content":"When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.","pos":[0,118]},{"content":"The sending application can request notification of a message rejection by setting the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> for the message.","pos":[119,273],"source":" The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message."},{"content":"Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.","pos":[274,410]}]}]}],"pos":[11912,12323],"yaml":true,"extradata":"MT"},{"content":"`true` if the queue accepts only authenticated messages; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,100],"content":"`true` if the queue accepts only authenticated messages; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the queue accepts only authenticated messages; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if the queue accepts only authenticated messages; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[77,100],"source":" The default is `false`."}]}],"pos":[12443,12546],"yaml":true},{"content":"Gets or sets the base priority that is used to route a public queue's messages over the network.","nodes":[{"pos":[0,96],"content":"Gets or sets the base priority that is used to route a public queue's messages over the network.","nodes":[{"content":"Gets or sets the base priority that is used to route a public queue's messages over the network.","pos":[0,96]}]}],"pos":[13606,13703],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network. Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues. When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority. The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.  \n  \n The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name). The base priority of private queues and of directly accessed public queues is always zero.","nodes":[{"pos":[0,593],"content":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network. Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues. When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority. The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.","nodes":[{"content":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network. Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues. When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority. The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.","pos":[0,593],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.BasePriority%2A&gt;</ph> is used for routing the queue's messages over the network.","pos":[0,124],"source":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.BasePriority%2A&gt;</ph> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.","pos":[125,305],"source":" Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues."},{"content":"When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.","pos":[306,467]},{"content":"The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.","pos":[468,593]}]}]},{"pos":[600,882],"content":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name). The base priority of private queues and of directly accessed public queues is always zero.","nodes":[{"content":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name). The base priority of private queues and of directly accessed public queues is always zero.","pos":[0,282],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.BasePriority%2A&gt;</ph> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).","pos":[0,191],"source":"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name)."},{"content":"The base priority of private queues and of directly accessed public queues is always zero.","pos":[192,282]}]}]}],"pos":[13714,14601],"yaml":true,"extradata":"MT"},{"content":"The single base priority for all messages sent to the public queue. The default is zero (0).","nodes":[{"pos":[0,92],"content":"The single base priority for all messages sent to the public queue. The default is zero (0).","nodes":[{"content":"The single base priority for all messages sent to the public queue. The default is zero (0).","pos":[0,92],"nodes":[{"content":"The single base priority for all messages sent to the public queue.","pos":[0,67]},{"content":"The default is zero (0).","pos":[68,92]}]}]}],"pos":[14720,14813],"yaml":true},{"content":"Gets or sets an implementation-specific queue type.","nodes":[{"pos":[0,51],"content":"Gets or sets an implementation-specific queue type.","nodes":[{"content":"Gets or sets an implementation-specific queue type.","pos":[0,51]}]}],"pos":[15849,15901],"yaml":true},{"content":"The queue category enables an application to categorize associated queues according to the way they are used. The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference. You can also define a new category.  \n  \n The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write. You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values. However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values. For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.","nodes":[{"pos":[0,223],"content":"The queue category enables an application to categorize associated queues according to the way they are used. The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference. You can also define a new category.","nodes":[{"content":"The queue category enables an application to categorize associated queues according to the way they are used. The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference. You can also define a new category.","pos":[0,223],"nodes":[{"content":"The queue category enables an application to categorize associated queues according to the way they are used.","pos":[0,109]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> can be a null reference.","pos":[110,187],"source":" The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference."},{"content":"You can also define a new category.","pos":[188,223]}]}]},{"pos":[230,968],"content":"The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write. You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values. However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values. For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.","nodes":[{"content":"The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write. You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values. However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values. For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.","pos":[0,738],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.","pos":[0,189],"source":"The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> method to create a category value that is guaranteed to be unique across all <ph id=\"ph2\">&lt;xref:System.Guid&gt;</ph> values.","pos":[190,339],"source":" You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values."},{"content":"However, it is necessary only for the category value to be distinct from other categories, not from all other <ph id=\"ph1\">&lt;xref:System.Guid&gt;</ph> values.","pos":[340,476],"source":" However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values."},{"content":"For example, you can set the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for another group to {00000000-0000-0000-0000-000000000002}.","pos":[477,738],"source":" For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}."}]}]}],"pos":[15912,16885],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Guid\"></xref> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is `Guid.empty`.","nodes":[{"pos":[0,221],"content":"A <xref href=\"System.Guid\"></xref> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is `Guid.empty`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.","pos":[0,192],"source":"A <xref href=\"System.Guid\"></xref> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used."},{"content":"The default is <ph id=\"ph1\">`Guid.empty`</ph>.","pos":[193,221],"source":" The default is `Guid.empty`."}]}],"pos":[17097,17319],"yaml":true},{"content":"Completes the installation process by committing the <xref href=\"System.Messaging.MessageQueue\"></xref> installation information that the <xref href=\"System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\"></xref> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"pos":[0,372],"content":"Completes the installation process by committing the <xref href=\"System.Messaging.MessageQueue\"></xref> installation information that the <xref href=\"System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\"></xref> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"content":"Completes the installation process by committing the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> installation information that the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> method wrote to the registry.","pos":[0,267],"source":"Completes the installation process by committing the <xref href=\"System.Messaging.MessageQueue\"></xref> installation information that the <xref href=\"System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\"></xref> method wrote to the registry."},{"content":"This method is meant to be used by installation tools, which automatically call the appropriate methods.","pos":[268,372]}]}],"pos":[18524,18897],"yaml":true},{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \n  \n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information. When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.","nodes":[{"pos":[0,647],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.","pos":[0,647],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the installutil.exe installation utility.","pos":[0,190],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility."},{"content":"The utility automatically calls the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method during the installation process.","pos":[191,323],"source":" The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process."},{"content":"Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.","pos":[324,532]},{"content":"This is accomplished by calling each component's <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> method.","pos":[533,647],"source":" This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method."}]}]},{"pos":[654,1423],"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.","nodes":[{"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.","pos":[0,769],"nodes":[{"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.","pos":[0,169]},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> completes the installation of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> by setting the queue to the appropriate initial state.","pos":[170,351],"source":" <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state."},{"content":"If the queue specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Path%2A&gt;</ph> property already exists and contains messages, <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> clears the messages.","pos":[352,559],"source":" If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph>, rather than <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph>, clears the messages because the act of purging the messages cannot be rolled back.","pos":[560,769],"source":" <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back."}]}]},{"pos":[1430,2161],"content":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information. When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.","nodes":[{"content":"An application's install routine uses the project installer's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName&gt;</ph> to automatically maintain information about the components that have already been installed.","pos":[0,236],"source":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed."},{"content":"This state information, which is passed to <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> as the <ph id=\"ph2\">`savedState`</ph> parameter, is continuously updated as the utility commits each <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance.","pos":[237,474],"source":" This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance."},{"content":"Usually, it is not necessary for your code to explicitly modify this state information.","pos":[475,562]},{"content":"When the queue has been cleared, <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> posts a log entry to the <ph id=\"ph2\">`savedState`</ph> that is associated with the installation.","pos":[563,731],"source":" When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation."}]}],"pos":[18908,21076],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that contains the post-installation state of the computer.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer."}],"pos":[21271,21384],"yaml":true},{"content":"Copies the property values of a <xref href=\"System.Messaging.MessageQueue\"></xref> component that are required at install time for a message queue.","nodes":[{"pos":[0,147],"content":"Copies the property values of a <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> component that are required at install time for a message queue.","source":"Copies the property values of a <xref href=\"System.Messaging.MessageQueue\"></xref> component that are required at install time for a message queue."}],"pos":[22587,22735],"yaml":true},{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.  \n  \n If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (\"\"), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.","nodes":[{"pos":[0,441],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.","pos":[0,441],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the installutil.exe installation utility.","pos":[0,190],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A&gt;</ph> is used by the installation utility to set the property values for the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> to the values of an existing <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.","pos":[191,441],"source":" <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>."}]}]},{"pos":[448,709],"content":"If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (\"\"), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> that is passed in is an empty string (\"\"), you must set the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property to a non-empty value before the installer executes.","pos":[0,261],"source":"If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (\"\"), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes."}]}],"pos":[22746,23462],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.IComponent\"></xref> to use as a template for the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref>.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> to use as a template for the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.MessageQueueInstaller\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.ComponentModel.IComponent\"></xref> to use as a template for the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref>."}],"pos":[23670,23816],"yaml":true},{"content":"The component associated with this <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> is not a <xref href=\"System.Messaging.MessageQueue\"></xref>.","nodes":[{"pos":[0,155],"content":"The component associated with this <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller\"&gt;&lt;/xref&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph>.","source":"The component associated with this <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> is not a <xref href=\"System.Messaging.MessageQueue\"></xref>."}],"pos":[23994,24150],"yaml":true},{"content":"Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.","nodes":[{"pos":[0,99],"content":"Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.","nodes":[{"content":"Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.","pos":[0,99]}]}],"pos":[25147,25247],"yaml":true},{"content":"When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted. Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.","nodes":[{"pos":[0,196],"content":"When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted. Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.","nodes":[{"content":"When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted. Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.","pos":[0,196],"nodes":[{"content":"When encryption is specified, only the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> of a message is encrypted.","pos":[0,105],"source":"When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted."},{"content":"Other properties, such as the <ph id=\"ph1\">&lt;xref:System.Messaging.Message.Label%2A&gt;</ph>, are not encrypted.","pos":[106,196],"source":" Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted."}]}]}],"pos":[25258,25455],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Messaging.EncryptionRequired\"></xref> values that indicates the encryption level required on messages sent to the queue. The default is `Optional`.","nodes":[{"pos":[0,177],"content":"One of the <xref href=\"System.Messaging.EncryptionRequired\"></xref> values that indicates the encryption level required on messages sent to the queue. The default is `Optional`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Messaging.EncryptionRequired\"&gt;&lt;/xref&gt;</ph> values that indicates the encryption level required on messages sent to the queue.","pos":[0,150],"source":"One of the <xref href=\"System.Messaging.EncryptionRequired\"></xref> values that indicates the encryption level required on messages sent to the queue."},{"content":"The default is <ph id=\"ph1\">`Optional`</ph>.","pos":[151,177],"source":" The default is `Optional`."}]}],"pos":[25633,25811],"yaml":true},{"content":"Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"pos":[0,184],"content":"Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"content":"Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","pos":[0,184],"nodes":[{"content":"Performs the installation and writes message queue information to the registry.","pos":[0,79]},{"content":"This method is meant to be used by installation tools, which automatically call the appropriate methods.","pos":[80,184]}]}]}],"pos":[26980,27165],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property. If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue. <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>. If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>. If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.  \n  \n> [!CAUTION]\n>  If it is necessary to recreate the queue, messages in the queue will be lost.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \n  \n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"pos":[0,835],"content":"The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property. If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue. <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>. If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>. If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.","nodes":[{"content":"The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property. If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue. <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>. If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>. If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.","pos":[0,835],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method writes message queue information to the registry, and associates the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance with a queue that is located at the path specified by the <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller.Path%2A&gt;</ph> property.","pos":[0,304],"source":"The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property."},{"content":"If the queue does not already exist, <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> creates a transactional queue.","pos":[305,429],"source":" If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> sets the new or existing queue properties to those that you have specified in the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph>.","pos":[430,615],"source":" <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>."},{"content":"If the queue already exists, its properties are reset to those of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph>.","pos":[616,732],"source":" If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>."},{"content":"If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.","pos":[733,835]}]}]},{"pos":[843,934],"content":"[!CAUTION]\n If it is necessary to recreate the queue, messages in the queue will be lost.","leadings":["","> "],"nodes":[{"content":"If it is necessary to recreate the queue, messages in the queue will be lost.","pos":[12,89]}]},{"pos":[941,1676],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.","pos":[0,735],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the installutil.exe installation utility.","pos":[0,190],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility."},{"content":"The utility automatically calls the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method during the installation process to write registry information that is associated with the message queue being installed.","pos":[191,411],"source":" The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed."},{"content":"Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.","pos":[412,620]},{"content":"This is accomplished by calling each component's <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> method.","pos":[621,735],"source":" This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method."}]}]},{"pos":[1683,2452],"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.","nodes":[{"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.","pos":[0,769],"nodes":[{"content":"After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.","pos":[0,169]},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> completes the installation of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue&gt;</ph> by setting the queue to the appropriate initial state.","pos":[170,351],"source":" <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state."},{"content":"If the queue specified by the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Path%2A&gt;</ph> property already exists and contains messages, <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph> clears the messages.","pos":[352,559],"source":" If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Commit%2A&gt;</ph>, rather than <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph>, clears the messages because the act of purging the messages cannot be rolled back.","pos":[560,769],"source":" <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back."}]}]},{"pos":[2459,3023],"content":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"content":"An application's install routine uses the project installer's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName&gt;</ph> to automatically maintain information about the components that have already been installed.","pos":[0,236],"source":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed."},{"content":"This state information, which is passed to <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> as the <ph id=\"ph2\">`stateSaver`</ph> parameter, is continuously updated as the utility installs each <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance.","pos":[237,476],"source":" This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance."},{"content":"Usually, it is not necessary for your code to explicitly modify this state information.","pos":[477,564]}]}],"pos":[27176,30211],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> used to save information needed to perform a commit, rollback, or uninstall operation.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> used to save information needed to perform a commit, rollback, or uninstall operation.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> used to save information needed to perform a commit, rollback, or uninstall operation."}],"pos":[30407,30548],"yaml":true},{"content":"Determines whether the specified installer can handle the same kind of installation as this installer.","nodes":[{"pos":[0,102],"content":"Determines whether the specified installer can handle the same kind of installation as this installer.","nodes":[{"content":"Determines whether the specified installer can handle the same kind of installation as this installer.","pos":[0,102]}]}],"pos":[31845,31948],"yaml":true},{"content":"Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.","nodes":[{"pos":[0,212],"content":"Typically, <ph id=\"ph1\">&lt;xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph> only if this installer and the installer specified by the <ph id=\"ph3\">`otherInstaller`</ph> parameter are of the same type.","source":"Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type."}],"pos":[31959,32172],"yaml":true,"extradata":"MT"},{"content":"The installer to compare.","nodes":[{"pos":[0,25],"content":"The installer to compare.","nodes":[{"content":"The installer to compare.","pos":[0,25]}]}],"pos":[32424,32450],"yaml":true},{"content":"`true` if this installer and the installer specified by the <code>otherInstaller</code> parameter can handle the same kind of installation; otherwise, `false`.","nodes":[{"pos":[0,159],"content":"<ph id=\"ph1\">`true`</ph> if this installer and the installer specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">otherInstaller</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can handle the same kind of installation; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this installer and the installer specified by the <code>otherInstaller</code> parameter can handle the same kind of installation; otherwise, `false`."}],"pos":[32508,32670],"yaml":true},{"content":"Gets or sets a description of the queue.","nodes":[{"pos":[0,40],"content":"Gets or sets a description of the queue.","nodes":[{"content":"Gets or sets a description of the queue.","pos":[0,40]}]}],"pos":[33680,33721],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.","nodes":[{"pos":[0,100],"content":"The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property does not need to be unique across queues.","pos":[0,100],"source":"The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues."}]}],"pos":[33732,33833],"yaml":true,"extradata":"MT"},{"content":"The label that describes the message queue. The default is an empty string (\"\").","nodes":[{"pos":[0,80],"content":"The label that describes the message queue. The default is an empty string (\"\").","nodes":[{"content":"The label that describes the message queue. The default is an empty string (\"\").","pos":[0,80],"nodes":[{"content":"The label that describes the message queue.","pos":[0,43]},{"content":"The default is an empty string (\"\").","pos":[44,80]}]}]}],"pos":[33947,34028],"yaml":true},{"content":"The <xref href=\"System.Messaging.MessageQueueInstaller.Label\"></xref> is `null`.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller.Label\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.MessageQueueInstaller.Label\"></xref> is `null`."}],"pos":[34194,34275],"yaml":true},{"content":"Gets or sets the maximum size of the journal that is associated with the queue.","nodes":[{"pos":[0,79],"content":"Gets or sets the maximum size of the journal that is associated with the queue.","nodes":[{"content":"Gets or sets the maximum size of the journal that is associated with the queue.","pos":[0,79]}]}],"pos":[35289,35369],"yaml":true},{"content":"When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue. The queue journal is used to track the messages that are removed from the queue.  \n  \n Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.  \n  \n Applications cannot send messages to the journal queue. However, you must periodically clear the queue to remove the messages that are no longer needed. Messages stored in journal queues count toward the quota for the computer where the queues reside. (The computer quota is set by the administrator.)","nodes":[{"pos":[0,198],"content":"When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue. The queue journal is used to track the messages that are removed from the queue.","nodes":[{"content":"When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue. The queue journal is used to track the messages that are removed from the queue.","pos":[0,198],"nodes":[{"content":"When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.","pos":[0,117]},{"content":"The queue journal is used to track the messages that are removed from the queue.","pos":[118,198]}]}]},{"pos":[205,373],"content":"Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.","nodes":[{"content":"Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.","pos":[0,168]}]},{"pos":[380,681],"content":"Applications cannot send messages to the journal queue. However, you must periodically clear the queue to remove the messages that are no longer needed. Messages stored in journal queues count toward the quota for the computer where the queues reside. (The computer quota is set by the administrator.)","nodes":[{"content":"Applications cannot send messages to the journal queue. However, you must periodically clear the queue to remove the messages that are no longer needed. Messages stored in journal queues count toward the quota for the computer where the queues reside. (The computer quota is set by the administrator.)","pos":[0,301],"nodes":[{"content":"Applications cannot send messages to the journal queue.","pos":[0,55]},{"content":"However, you must periodically clear the queue to remove the messages that are no longer needed.","pos":[56,152]},{"content":"Messages stored in journal queues count toward the quota for the computer where the queues reside.","pos":[153,251]},{"content":"(The computer quota is set by the administrator.)","pos":[252,301]}]}]}],"pos":[35380,36068],"yaml":true,"extradata":"MT"},{"content":"The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.","nodes":[{"pos":[0,150],"content":"The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.","nodes":[{"content":"The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.","pos":[0,150],"nodes":[{"content":"The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.","pos":[0,109]},{"content":"The Message Queuing default is no limit.","pos":[110,150]}]}]}],"pos":[36192,36343],"yaml":true},{"content":"Gets or sets the maximum size of the queue.","nodes":[{"pos":[0,43],"content":"Gets or sets the maximum size of the queue.","nodes":[{"content":"Gets or sets the maximum size of the queue.","pos":[0,43]}]}],"pos":[37416,37460],"yaml":true},{"content":"The maximum queue size is typically set at the time of queue creation, although it can be reset later.","nodes":[{"pos":[0,102],"content":"The maximum queue size is typically set at the time of queue creation, although it can be reset later.","nodes":[{"content":"The maximum queue size is typically set at the time of queue creation, although it can be reset later.","pos":[0,102]}]}],"pos":[37471,37574],"yaml":true,"extradata":"MT"},{"content":"The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.","nodes":[{"pos":[0,86],"content":"The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.","nodes":[{"content":"The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.","pos":[0,86],"nodes":[{"content":"The maximum size, in kilobytes, of the queue.","pos":[0,45]},{"content":"The Message Queuing default is no limit.","pos":[46,86]}]}]}],"pos":[37696,37783],"yaml":true},{"content":"Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.","nodes":[{"pos":[0,85],"content":"Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.","nodes":[{"content":"Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.","pos":[0,85],"nodes":[{"content":"Introduced in MSMQ 3.0.","pos":[0,23]},{"content":"Gets or sets the multicast address associated with the queue.","pos":[24,85]}]}]}],"pos":[38854,38940],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains a valid multicast address (in the form shown below) or `null`, which indicates that the queue is not associated with a multicast address.  \n  \n```  \n<address>:<port>  \n```","nodes":[{"pos":[0,188],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains a valid multicast address (in the form shown below) or <ph id=\"ph2\">`null`</ph>, which indicates that the queue is not associated with a multicast address.","source":"A <xref href=\"System.String\"></xref> that contains a valid multicast address (in the form shown below) or `null`, which indicates that the queue is not associated with a multicast address."}],"pos":[39065,39296],"yaml":true},{"content":"MSMQ 3.0 is not installed.","nodes":[{"pos":[0,26],"content":"MSMQ 3.0 is not installed.","nodes":[{"content":"MSMQ 3.0 is not installed.","pos":[0,26]}]}],"pos":[39497,39524],"yaml":true},{"content":"Gets or sets the location of the queue that is referenced by this object.","nodes":[{"pos":[0,73],"content":"Gets or sets the location of the queue that is referenced by this object.","nodes":[{"content":"Gets or sets the location of the queue that is referenced by this object.","pos":[0,73]}]}],"pos":[40416,40490],"yaml":true},{"content":"The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references. The following table shows the syntax you should use for queues of various types.  \n  \n|Queue type|Syntax|  \n|----------------|------------|  \n|Public queue|`machineName`\\\\`queueName`|  \n|Private queue|`machineName`\\\\`Private$`\\\\`queueName`|  \n|Journal queue|`machineName`\\\\`queueName`\\\\`Journal$`|  \n|Machine journal queue|`machineName`\\\\`Journal$`|  \n|Machine dead-letter queue|`machineName`\\\\`Deadletter$`|  \n|Machine transactional dead-letter queue|`machineName`\\\\`XactDeadletter$`|  \n  \n Use \".\" for the local computer.  \n  \n You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path. The following table shows the proper syntax for each type of reference.  \n  \n|Reference|Syntax|  \n|---------------|------------|  \n|Format name|FormatName:[ *format name* ]|  \n|Label|Label:[ *label* ]|  \n  \n If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>. If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.","nodes":[{"pos":[0,197],"content":"The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references. The following table shows the syntax you should use for queues of various types.","nodes":[{"content":"The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references. The following table shows the syntax you should use for queues of various types.","pos":[0,197],"nodes":[{"content":"The syntax for the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property depends on the type of queue it references.","pos":[0,116],"source":"The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references."},{"content":"The following table shows the syntax you should use for queues of various types.","pos":[117,197]}]}]},{"pos":[204,214],"content":"Queue type","nodes":[{"content":"Queue type","pos":[0,10]}]},{"pos":[215,221],"content":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[260,272],"content":"Public queue","nodes":[{"content":"Public queue","pos":[0,12]}]},{"pos":[304,317],"content":"Private queue","nodes":[{"content":"Private queue","pos":[0,13]}]},{"pos":[361,374],"content":"Journal queue","nodes":[{"content":"Journal queue","pos":[0,13]}]},{"pos":[418,439],"content":"Machine journal queue","nodes":[{"content":"Machine journal queue","pos":[0,21]}]},{"pos":[470,495],"content":"Machine dead-letter queue","nodes":[{"content":"Machine dead-letter queue","pos":[0,25]}]},{"pos":[529,568],"content":"Machine transactional dead-letter queue","nodes":[{"content":"Machine transactional dead-letter queue","pos":[0,39]}]},{"pos":[609,640],"content":"Use \".\" for the local computer.","nodes":[{"content":"Use \".\" for the local computer.","pos":[0,31]}]},{"pos":[647,907],"content":"You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path. The following table shows the proper syntax for each type of reference.","nodes":[{"content":"You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path. The following table shows the proper syntax for each type of reference.","pos":[0,260],"nodes":[{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> of a Message Queuing application object to describe the queue path.","pos":[0,188],"source":"You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path."},{"content":"The following table shows the proper syntax for each type of reference.","pos":[189,260]}]}]},{"pos":[914,923],"content":"Reference","nodes":[{"content":"Reference","pos":[0,9]}]},{"pos":[924,930],"content":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[968,979],"content":"Format name","nodes":[{"content":"Format name","pos":[0,11]}]},{"pos":[980,1008],"content":"FormatName:[ <bpt id=\"p1\">*</bpt>format name<ept id=\"p1\">*</ept> ]","source":"FormatName:[ *format name* ]"},{"pos":[1013,1018],"content":"Label","nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[1019,1036],"content":"Label:[ <bpt id=\"p1\">*</bpt>label<ept id=\"p1\">*</ept> ]","source":"Label:[ *label* ]"},{"pos":[1044,1396],"content":"If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>. If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.","nodes":[{"content":"If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>. If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.","pos":[0,352],"nodes":[{"content":"If you are working offline, you must use the format name to define the queue <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.","pos":[0,122],"source":"If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>."},{"content":"If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> into the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph>.","pos":[123,352],"source":" If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>."}]}]}],"pos":[40501,41938],"yaml":true,"extradata":"MT"},{"content":"The path that represents the location of the queue in the network.","nodes":[{"pos":[0,66],"content":"The path that represents the location of the queue in the network.","nodes":[{"content":"The path that represents the location of the queue in the network.","pos":[0,66]}]}],"pos":[42237,42304],"yaml":true},{"content":"The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> was set to an invalid value, possibly because the syntax is not valid.  \n  \n -or-  \n  \n The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> is `null`.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller.Path\"&gt;&lt;/xref&gt;</ph> was set to an invalid value, possibly because the syntax is not valid.","source":"The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> was set to an invalid value, possibly because the syntax is not valid."},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,236],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Messaging.MessageQueueInstaller.Path\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> is `null`."}],"pos":[42469,42716],"yaml":true},{"content":"Gets or sets permissions associated with the queue.","nodes":[{"pos":[0,51],"content":"Gets or sets permissions associated with the queue.","nodes":[{"content":"Gets or sets permissions associated with the queue.","pos":[0,51]}]}],"pos":[43740,43792],"yaml":true},{"content":"By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue. Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action. As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.  \n  \n When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection. When you construct each access control entry, you can specify generic or standard access rights. The rights to a queue can be any combination of the following:  \n  \n-   Delete  \n  \n-   Read Security  \n  \n-   Write Security  \n  \n-   Synchronize  \n  \n-   Modify Owner  \n  \n-   Read  \n  \n-   Write  \n  \n-   Execute  \n  \n-   Required  \n  \n-   All  \n  \n-   None  \n  \n These rights are a set of bit flags that you can combine using the bitwise OR:  \n  \n-   Full Control  \n  \n-   Delete Message  \n  \n-   Receive Message  \n  \n-   Peek Message  \n  \n-   Receive Journal Message  \n  \n-   Get Queue Properties  \n  \n-   Set Queue Properties  \n  \n-   Get Permissions  \n  \n-   Set Permissions  \n  \n-   Take Queue Ownership  \n  \n-   Write Message","nodes":[{"pos":[0,455],"content":"By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue. Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action. As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.","nodes":[{"content":"By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue. Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action. As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.","pos":[0,455],"nodes":[{"content":"By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.","pos":[0,181]},{"content":"Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.","pos":[182,327]},{"content":"As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.","pos":[328,455]}]}]},{"pos":[462,834],"content":"When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection. When you construct each access control entry, you can specify generic or standard access rights. The rights to a queue can be any combination of the following:","nodes":[{"content":"When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection. When you construct each access control entry, you can specify generic or standard access rights. The rights to a queue can be any combination of the following:","pos":[0,372],"nodes":[{"content":"When you construct the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Permissions%2A&gt;</ph> property, add <ph id=\"ph2\">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instances to your <ph id=\"ph3\">&lt;xref:System.Messaging.AccessControlList&gt;</ph> collection.","pos":[0,212],"source":"When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection."},{"content":"When you construct each access control entry, you can specify generic or standard access rights.","pos":[213,309]},{"content":"The rights to a queue can be any combination of the following:","pos":[310,372]}]}]},{"pos":[844,850],"content":"Delete","nodes":[{"content":"Delete","pos":[0,6]}]},{"pos":[860,873],"content":"Read Security","nodes":[{"content":"Read Security","pos":[0,13]}]},{"pos":[883,897],"content":"Write Security","nodes":[{"content":"Write Security","pos":[0,14]}]},{"pos":[907,918],"content":"Synchronize","nodes":[{"content":"Synchronize","pos":[0,11]}]},{"pos":[928,940],"content":"Modify Owner","nodes":[{"content":"Modify Owner","pos":[0,12]}]},{"pos":[950,954],"content":"Read","nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[964,969],"content":"Write","nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[979,986],"content":"Execute","nodes":[{"content":"Execute","pos":[0,7]}]},{"pos":[996,1004],"content":"Required","nodes":[{"content":"Required","pos":[0,8]}]},{"pos":[1014,1017],"content":"All","nodes":[{"content":"All","pos":[0,3]}]},{"pos":[1027,1031],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[1038,1116],"content":"These rights are a set of bit flags that you can combine using the bitwise OR:","nodes":[{"content":"These rights are a set of bit flags that you can combine using the bitwise OR:","pos":[0,78]}]},{"pos":[1126,1138],"content":"Full Control","nodes":[{"content":"Full Control","pos":[0,12]}]},{"pos":[1148,1162],"content":"Delete Message","nodes":[{"content":"Delete Message","pos":[0,14]}]},{"pos":[1172,1187],"content":"Receive Message","nodes":[{"content":"Receive Message","pos":[0,15]}]},{"pos":[1197,1209],"content":"Peek Message","nodes":[{"content":"Peek Message","pos":[0,12]}]},{"pos":[1219,1242],"content":"Receive Journal Message","nodes":[{"content":"Receive Journal Message","pos":[0,23]}]},{"pos":[1252,1272],"content":"Get Queue Properties","nodes":[{"content":"Get Queue Properties","pos":[0,20]}]},{"pos":[1282,1302],"content":"Set Queue Properties","nodes":[{"content":"Set Queue Properties","pos":[0,20]}]},{"pos":[1312,1327],"content":"Get Permissions","nodes":[{"content":"Get Permissions","pos":[0,15]}]},{"pos":[1337,1352],"content":"Set Permissions","nodes":[{"content":"Set Permissions","pos":[0,15]}]},{"pos":[1362,1382],"content":"Take Queue Ownership","nodes":[{"content":"Take Queue Ownership","pos":[0,20]}]},{"pos":[1392,1405],"content":"Write Message","nodes":[{"content":"Write Message","pos":[0,13]}]}],"pos":[43803,45259],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Messaging.AccessControlList\"></xref> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.","nodes":[{"pos":[0,172],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Messaging.AccessControlList\"&gt;&lt;/xref&gt;</ph> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.","source":"A <xref href=\"System.Messaging.AccessControlList\"></xref> that contains one or more access control entries that specify the trustees and permissions to grant for the queue."}],"pos":[45485,45658],"yaml":true},{"content":"Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"pos":[0,267],"content":"Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","nodes":[{"content":"Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.","pos":[0,267],"nodes":[{"content":"Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.","pos":[0,162]},{"content":"This method is meant to be used by installation tools, which automatically call the appropriate methods.","pos":[163,267]}]}]}],"pos":[46874,47142],"yaml":true},{"content":"The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails. The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"pos":[0,577],"content":"The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails. The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.","nodes":[{"content":"The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails. The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.","pos":[0,577],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> method undoes the effects of the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method.","pos":[0,159],"source":"The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> is called if the installation of any component in the installation project fails.","pos":[160,299],"source":" <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Install%2A&gt;</ph> method creates or sets the properties for a queue.","pos":[300,411],"source":" The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue."},{"content":"<ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.","pos":[412,577],"source":" <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values."}]}]},{"pos":[584,973],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.","pos":[0,389],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the InstallUtil.exe installation utility.","pos":[0,190],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility."},{"content":"The utility automatically calls the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> method after an installation failure to undo any changes that the installation process has already made.","pos":[191,389],"source":" The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made."}]}]},{"pos":[980,1547],"content":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"content":"An application's install routine uses the project installer's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName&gt;</ph> to automatically maintain information about the components that have already been installed.","pos":[0,236],"source":"An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed."},{"content":"This state information, which is passed to <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Rollback%2A&gt;</ph> as the <ph id=\"ph2\">`savedState`</ph> parameter, is continuously updated as the utility rolls back each <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance.","pos":[237,479],"source":" This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance."},{"content":"Usually, it is not necessary for your code to explicitly modify this state information.","pos":[480,567]}]}],"pos":[47153,48707],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the pre-installation state of the computer.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that contains the pre-installation state of the computer.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the pre-installation state of the computer."}],"pos":[48904,49016],"yaml":true},{"content":"Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.","nodes":[{"pos":[0,106],"content":"Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.","nodes":[{"content":"Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.","pos":[0,106]}]}],"pos":[50061,50168],"yaml":true},{"content":"Messages can be retrieved from a local transaction queue with or without using a transaction. If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.","nodes":[{"pos":[0,201],"content":"Messages can be retrieved from a local transaction queue with or without using a transaction. If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.","nodes":[{"content":"Messages can be retrieved from a local transaction queue with or without using a transaction. If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.","pos":[0,201],"nodes":[{"content":"Messages can be retrieved from a local transaction queue with or without using a transaction.","pos":[0,93]},{"content":"If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.","pos":[94,201]}]}]}],"pos":[50179,50381],"yaml":true,"extradata":"MT"},{"content":"`true` if the queue can only accept messages sent as part of a transaction; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,119],"content":"`true` if the queue can only accept messages sent as part of a transaction; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the queue can only accept messages sent as part of a transaction; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,95],"source":"`true` if the queue can only accept messages sent as part of a transaction; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[96,119],"source":" The default is `false`."}]}],"pos":[50502,50624],"yaml":true},{"content":"Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.","nodes":[{"pos":[0,179],"content":"Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.","nodes":[{"content":"Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.","pos":[0,179],"nodes":[{"content":"Removes an installation by removing queue information from the registry.","pos":[0,72]},{"content":"This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.","pos":[73,179]}]}]}],"pos":[51800,51980],"yaml":true},{"content":"If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode). The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the MessageQueue being uninstalled.  \n  \n An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been uninstalled. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"pos":[0,224],"content":"If the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A&gt;</ph> is <ph id=\"ph2\">`Remove`</ph>, <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller.Uninstall%2A&gt;</ph> also deletes the queue associated with the <ph id=\"ph4\">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.","source":"If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>."},{"pos":[231,755],"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode). The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the MessageQueue being uninstalled.","nodes":[{"content":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode). The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the MessageQueue being uninstalled.","pos":[0,524],"nodes":[{"content":"Typically, you do not call the methods of the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).","pos":[0,210],"source":"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode)."},{"content":"The utility automatically calls the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Uninstall%2A&gt;</ph> method to restore the parts of the system that were affected by the installation to their pre-installation states.","pos":[211,420],"source":" The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states."},{"content":"This includes deleting registry information that is associated with the MessageQueue being uninstalled.","pos":[421,524]}]}]},{"pos":[762,1334],"content":"An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been uninstalled. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.","nodes":[{"content":"An application's uninstall routine uses the project installer's <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName&gt;</ph> to automatically maintain information about the components that have already been uninstalled.","pos":[0,240],"source":"An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been uninstalled."},{"content":"This state information, which is passed to <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller.Uninstall%2A&gt;</ph> as the <ph id=\"ph2\">`savedState`</ph> parameter, is continuously updated as the utility uninstalls each <ph id=\"ph3\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> instance.","pos":[241,484],"source":" This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance."},{"content":"Usually, it is not necessary for your code to explicitly modify this state information.","pos":[485,572]}]}],"pos":[51991,53332],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that contains the post-installation state of the computer.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer."}],"pos":[53530,53643],"yaml":true},{"content":"Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.","nodes":[{"pos":[0,190],"content":"Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.","nodes":[{"content":"Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.","pos":[0,190]}]}],"pos":[54701,54894],"yaml":true},{"content":"When you install a queue, you can optionally use an existing queue. If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored. You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.","nodes":[{"pos":[0,496],"content":"When you install a queue, you can optionally use an existing queue. If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored. You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.","nodes":[{"content":"When you install a queue, you can optionally use an existing queue. If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored. You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.","pos":[0,496],"nodes":[{"content":"When you install a queue, you can optionally use an existing queue.","pos":[0,67]},{"content":"If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.","pos":[68,211]},{"content":"If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.","pos":[212,351]},{"content":"You can reset only queue properties that are associated with the <ph id=\"ph1\">&lt;xref:System.Messaging.MessageQueueInstaller&gt;</ph> to their pre-installation values.","pos":[352,496],"source":" You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values."}]}]}],"pos":[54905,55402],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Configuration.Install.UninstallAction\"></xref> values that indicates what state to leave the queue in when the <xref href=\"System.Messaging.MessageQueue\"></xref> is uninstalled. The default is `Remove`.","nodes":[{"pos":[0,232],"content":"One of the <xref href=\"System.Configuration.Install.UninstallAction\"></xref> values that indicates what state to leave the queue in when the <xref href=\"System.Messaging.MessageQueue\"></xref> is uninstalled. The default is `Remove`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Install.UninstallAction\"&gt;&lt;/xref&gt;</ph> values that indicates what state to leave the queue in when the <ph id=\"ph2\">&lt;xref href=\"System.Messaging.MessageQueue\"&gt;&lt;/xref&gt;</ph> is uninstalled.","pos":[0,207],"source":"One of the <xref href=\"System.Configuration.Install.UninstallAction\"></xref> values that indicates what state to leave the queue in when the <xref href=\"System.Messaging.MessageQueue\"></xref> is uninstalled."},{"content":"The default is <ph id=\"ph1\">`Remove`</ph>.","pos":[208,232],"source":" The default is `Remove`."}]}],"pos":[55595,55828],"yaml":true},{"content":"Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.","nodes":[{"pos":[0,135],"content":"Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.","nodes":[{"content":"Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.","pos":[0,135]}]}],"pos":[56909,57045],"yaml":true},{"content":"A journal queue lets you keep track of messages even after they have been retrieved from the queue. However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.  \n  \n A journal queue should be cleared periodically to remove messages that are no longer needed. Messages stored in the journal queue count toward the quota for the computer on which the journal is located.","nodes":[{"pos":[0,274],"content":"A journal queue lets you keep track of messages even after they have been retrieved from the queue. However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.","nodes":[{"content":"A journal queue lets you keep track of messages even after they have been retrieved from the queue. However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.","pos":[0,274],"nodes":[{"content":"A journal queue lets you keep track of messages even after they have been retrieved from the queue.","pos":[0,99]},{"content":"However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.","pos":[100,274]}]}]},{"pos":[281,483],"content":"A journal queue should be cleared periodically to remove messages that are no longer needed. Messages stored in the journal queue count toward the quota for the computer on which the journal is located.","nodes":[{"content":"A journal queue should be cleared periodically to remove messages that are no longer needed. Messages stored in the journal queue count toward the quota for the computer on which the journal is located.","pos":[0,202],"nodes":[{"content":"A journal queue should be cleared periodically to remove messages that are no longer needed.","pos":[0,92]},{"content":"Messages stored in the journal queue count toward the quota for the computer on which the journal is located.","pos":[93,202]}]}]}],"pos":[57056,57544],"yaml":true,"extradata":"MT"},{"content":"`true` to copy messages that are retrieved from the queue to the journal queue; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,123],"content":"`true` to copy messages that are retrieved from the queue to the journal queue; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to copy messages that are retrieved from the queue to the journal queue; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,99],"source":"`true` to copy messages that are retrieved from the queue to the journal queue; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[100,123],"source":" The default is `false`."}]}],"pos":[57667,57793],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueueInstaller\n  commentId: T:System.Messaging.MessageQueueInstaller\n  id: MessageQueueInstaller\n  children:\n  - System.Messaging.MessageQueueInstaller.#ctor\n  - System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)\n  - System.Messaging.MessageQueueInstaller.Authenticate\n  - System.Messaging.MessageQueueInstaller.BasePriority\n  - System.Messaging.MessageQueueInstaller.Category\n  - System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)\n  - System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  - System.Messaging.MessageQueueInstaller.EncryptionRequired\n  - System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\n  - System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  - System.Messaging.MessageQueueInstaller.Label\n  - System.Messaging.MessageQueueInstaller.MaximumJournalSize\n  - System.Messaging.MessageQueueInstaller.MaximumQueueSize\n  - System.Messaging.MessageQueueInstaller.MulticastAddress\n  - System.Messaging.MessageQueueInstaller.Path\n  - System.Messaging.MessageQueueInstaller.Permissions\n  - System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)\n  - System.Messaging.MessageQueueInstaller.Transactional\n  - System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)\n  - System.Messaging.MessageQueueInstaller.UninstallAction\n  - System.Messaging.MessageQueueInstaller.UseJournalQueue\n  langs:\n  - csharp\n  name: MessageQueueInstaller\n  nameWithType: MessageQueueInstaller\n  fullName: System.Messaging.MessageQueueInstaller\n  type: Class\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <xref href=\"System.Messaging.MessageQueue\"></xref>.\n  remarks: \"The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue. For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \\n  \\n To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`. Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.  \\n  \\n When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in. Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.  \\n  \\n When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>. If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer. If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.  \\n  \\n You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer. For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.  \\n  \\n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception. It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.  \\n  \\n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility. It is not usually necessary for your code to explicitly modify the state information.\"\n  syntax:\n    content: 'public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Configuration.Install.Installer\n  - System.Configuration.Install.ComponentInstaller\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Configuration.Install.Installer.AfterInstall\n  - System.Configuration.Install.Installer.AfterRollback\n  - System.Configuration.Install.Installer.AfterUninstall\n  - System.Configuration.Install.Installer.BeforeInstall\n  - System.Configuration.Install.Installer.BeforeRollback\n  - System.Configuration.Install.Installer.BeforeUninstall\n  - System.Configuration.Install.Installer.Committed\n  - System.Configuration.Install.Installer.Committing\n  - System.Configuration.Install.Installer.Context\n  - System.Configuration.Install.Installer.HelpText\n  - System.Configuration.Install.Installer.Installers\n  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)\n  - System.Configuration.Install.Installer.Parent\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.#ctor\n  commentId: M:System.Messaging.MessageQueueInstaller.#ctor\n  id: '#ctor'\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: MessageQueueInstaller()\n  nameWithType: MessageQueueInstaller.MessageQueueInstaller()\n  fullName: MessageQueueInstaller.MessageQueueInstaller()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class. Does not set any instance properties.\n  syntax:\n    content: public MessageQueueInstaller ();\n    parameters: []\n  overload: System.Messaging.MessageQueueInstaller.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)\n  commentId: M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)\n  id: '#ctor(System.Messaging.MessageQueue)'\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: MessageQueueInstaller(MessageQueue)\n  nameWithType: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)\n  fullName: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> class, initializing the installation settings to those of an existing <xref href=\"System.Messaging.MessageQueue\"></xref> instance.\n  syntax:\n    content: public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);\n    parameters:\n    - id: componentToCopy\n      type: System.Messaging.MessageQueue\n      description: The <xref href=\"System.Messaging.MessageQueue\"></xref> component whose settings determine the property settings of the new queue installed.\n  overload: System.Messaging.MessageQueueInstaller.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Authenticate\n  commentId: P:System.Messaging.MessageQueueInstaller.Authenticate\n  id: Authenticate\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Authenticate\n  nameWithType: MessageQueueInstaller.Authenticate\n  fullName: MessageQueueInstaller.Authenticate\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.\n  remarks: When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected. The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message. Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.\n  syntax:\n    content: public bool Authenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the queue accepts only authenticated messages; otherwise, `false`. The default is `false`.'\n  overload: System.Messaging.MessageQueueInstaller.Authenticate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.BasePriority\n  commentId: P:System.Messaging.MessageQueueInstaller.BasePriority\n  id: BasePriority\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: BasePriority\n  nameWithType: MessageQueueInstaller.BasePriority\n  fullName: MessageQueueInstaller.BasePriority\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the base priority that is used to route a public queue's messages over the network.\n  remarks: \"The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network. Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues. When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority. The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.  \\n  \\n The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name). The base priority of private queues and of directly accessed public queues is always zero.\"\n  syntax:\n    content: public short BasePriority { get; set; }\n    return:\n      type: System.Int16\n      description: The single base priority for all messages sent to the public queue. The default is zero (0).\n  overload: System.Messaging.MessageQueueInstaller.BasePriority*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Category\n  commentId: P:System.Messaging.MessageQueueInstaller.Category\n  id: Category\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Category\n  nameWithType: MessageQueueInstaller.Category\n  fullName: MessageQueueInstaller.Category\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets an implementation-specific queue type.\n  remarks: \"The queue category enables an application to categorize associated queues according to the way they are used. The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference. You can also define a new category.  \\n  \\n The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write. You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values. However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values. For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))]\n\n      public Guid Category { get; set; }\n    return:\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is `Guid.empty`.\n  overload: System.Messaging.MessageQueueInstaller.Category*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)\n  commentId: M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)\n  id: Commit(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Commit(IDictionary)\n  nameWithType: MessageQueueInstaller.Commit(IDictionary)\n  fullName: MessageQueueInstaller.Commit(IDictionary)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Completes the installation process by committing the <xref href=\"System.Messaging.MessageQueue\"></xref> installation information that the <xref href=\"System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\"></xref> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.\n  remarks: \"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \\n  \\n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \\n  \\n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information. When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.\"\n  syntax:\n    content: public override void Commit (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer.\n  overload: System.Messaging.MessageQueueInstaller.Commit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  commentId: M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  id: CopyFromComponent(System.ComponentModel.IComponent)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: CopyFromComponent(IComponent)\n  nameWithType: MessageQueueInstaller.CopyFromComponent(IComponent)\n  fullName: MessageQueueInstaller.CopyFromComponent(IComponent)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Copies the property values of a <xref href=\"System.Messaging.MessageQueue\"></xref> component that are required at install time for a message queue.\n  remarks: \"Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.  \\n  \\n If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (\\\"\\\"), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.\"\n  syntax:\n    content: public override void CopyFromComponent (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: A <xref href=\"System.ComponentModel.IComponent\"></xref> to use as a template for the <xref href=\"System.Messaging.MessageQueueInstaller\"></xref>.\n  overload: System.Messaging.MessageQueueInstaller.CopyFromComponent*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The component associated with this <xref href=\"System.Messaging.MessageQueueInstaller\"></xref> is not a <xref href=\"System.Messaging.MessageQueue\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired\n  commentId: P:System.Messaging.MessageQueueInstaller.EncryptionRequired\n  id: EncryptionRequired\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: EncryptionRequired\n  nameWithType: MessageQueueInstaller.EncryptionRequired\n  fullName: MessageQueueInstaller.EncryptionRequired\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.\n  remarks: When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted. Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.\n  syntax:\n    content: public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }\n    return:\n      type: System.Messaging.EncryptionRequired\n      description: One of the <xref href=\"System.Messaging.EncryptionRequired\"></xref> values that indicates the encryption level required on messages sent to the queue. The default is `Optional`.\n  overload: System.Messaging.MessageQueueInstaller.EncryptionRequired*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\n  commentId: M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\n  id: Install(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Install(IDictionary)\n  nameWithType: MessageQueueInstaller.Install(IDictionary)\n  fullName: MessageQueueInstaller.Install(IDictionary)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.\n  remarks: \"The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property. If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue. <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>. If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>. If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.  \\n  \\n> [!CAUTION]\\n>  If it is necessary to recreate the queue, messages in the queue will be lost.  \\n  \\n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \\n  \\n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \\n  \\n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.\"\n  syntax:\n    content: public override void Install (System.Collections.IDictionary stateSaver);\n    parameters:\n    - id: stateSaver\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> used to save information needed to perform a commit, rollback, or uninstall operation.\n  overload: System.Messaging.MessageQueueInstaller.Install*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  commentId: M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  id: IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: IsEquivalentInstaller(ComponentInstaller)\n  nameWithType: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)\n  fullName: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Determines whether the specified installer can handle the same kind of installation as this installer.\n  remarks: Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.\n  syntax:\n    content: public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);\n    parameters:\n    - id: otherInstaller\n      type: System.Configuration.Install.ComponentInstaller\n      description: The installer to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if this installer and the installer specified by the <code>otherInstaller</code> parameter can handle the same kind of installation; otherwise, `false`.'\n  overload: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Label\n  commentId: P:System.Messaging.MessageQueueInstaller.Label\n  id: Label\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Label\n  nameWithType: MessageQueueInstaller.Label\n  fullName: MessageQueueInstaller.Label\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a description of the queue.\n  remarks: The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.\n  syntax:\n    content: public string Label { get; set; }\n    return:\n      type: System.String\n      description: The label that describes the message queue. The default is an empty string (\"\").\n  overload: System.Messaging.MessageQueueInstaller.Label*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.Messaging.MessageQueueInstaller.Label\"></xref> is `null`.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize\n  commentId: P:System.Messaging.MessageQueueInstaller.MaximumJournalSize\n  id: MaximumJournalSize\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: MaximumJournalSize\n  nameWithType: MessageQueueInstaller.MaximumJournalSize\n  fullName: MessageQueueInstaller.MaximumJournalSize\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the maximum size of the journal that is associated with the queue.\n  remarks: \"When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue. The queue journal is used to track the messages that are removed from the queue.  \\n  \\n Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.  \\n  \\n Applications cannot send messages to the journal queue. However, you must periodically clear the queue to remove the messages that are no longer needed. Messages stored in journal queues count toward the quota for the computer where the queues reside. (The computer quota is set by the administrator.)\"\n  syntax:\n    content: public long MaximumJournalSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.\n  overload: System.Messaging.MessageQueueInstaller.MaximumJournalSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize\n  commentId: P:System.Messaging.MessageQueueInstaller.MaximumQueueSize\n  id: MaximumQueueSize\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: MaximumQueueSize\n  nameWithType: MessageQueueInstaller.MaximumQueueSize\n  fullName: MessageQueueInstaller.MaximumQueueSize\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the maximum size of the queue.\n  remarks: The maximum queue size is typically set at the time of queue creation, although it can be reset later.\n  syntax:\n    content: public long MaximumQueueSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.\n  overload: System.Messaging.MessageQueueInstaller.MaximumQueueSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.MulticastAddress\n  commentId: P:System.Messaging.MessageQueueInstaller.MulticastAddress\n  id: MulticastAddress\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: MulticastAddress\n  nameWithType: MessageQueueInstaller.MulticastAddress\n  fullName: MessageQueueInstaller.MulticastAddress\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.\n  syntax:\n    content: public string MulticastAddress { get; set; }\n    return:\n      type: System.String\n      description: \"A <xref href=\\\"System.String\\\"></xref> that contains a valid multicast address (in the form shown below) or `null`, which indicates that the queue is not associated with a multicast address.  \\n  \\n```  \\n<address>:<port>  \\n```\"\n  overload: System.Messaging.MessageQueueInstaller.MulticastAddress*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: MSMQ 3.0 is not installed.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Path\n  commentId: P:System.Messaging.MessageQueueInstaller.Path\n  id: Path\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Path\n  nameWithType: MessageQueueInstaller.Path\n  fullName: MessageQueueInstaller.Path\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets the location of the queue that is referenced by this object.\n  remarks: \"The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references. The following table shows the syntax you should use for queues of various types.  \\n  \\n|Queue type|Syntax|  \\n|----------------|------------|  \\n|Public queue|`machineName`\\\\\\\\`queueName`|  \\n|Private queue|`machineName`\\\\\\\\`Private$`\\\\\\\\`queueName`|  \\n|Journal queue|`machineName`\\\\\\\\`queueName`\\\\\\\\`Journal$`|  \\n|Machine journal queue|`machineName`\\\\\\\\`Journal$`|  \\n|Machine dead-letter queue|`machineName`\\\\\\\\`Deadletter$`|  \\n|Machine transactional dead-letter queue|`machineName`\\\\\\\\`XactDeadletter$`|  \\n  \\n Use \\\".\\\" for the local computer.  \\n  \\n You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path. The following table shows the proper syntax for each type of reference.  \\n  \\n|Reference|Syntax|  \\n|---------------|------------|  \\n|Format name|FormatName:[ *format name* ]|  \\n|Label|Label:[ *label* ]|  \\n  \\n If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>. If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path that represents the location of the queue in the network.\n  overload: System.Messaging.MessageQueueInstaller.Path*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref href=\\\"System.Messaging.MessageQueueInstaller.Path\\\"></xref> was set to an invalid value, possibly because the syntax is not valid.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Messaging.MessageQueueInstaller.Path\\\"></xref> is `null`.\"\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Permissions\n  commentId: P:System.Messaging.MessageQueueInstaller.Permissions\n  id: Permissions\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Permissions\n  nameWithType: MessageQueueInstaller.Permissions\n  fullName: MessageQueueInstaller.Permissions\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets permissions associated with the queue.\n  remarks: \"By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue. Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action. As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.  \\n  \\n When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection. When you construct each access control entry, you can specify generic or standard access rights. The rights to a queue can be any combination of the following:  \\n  \\n-   Delete  \\n  \\n-   Read Security  \\n  \\n-   Write Security  \\n  \\n-   Synchronize  \\n  \\n-   Modify Owner  \\n  \\n-   Read  \\n  \\n-   Write  \\n  \\n-   Execute  \\n  \\n-   Required  \\n  \\n-   All  \\n  \\n-   None  \\n  \\n These rights are a set of bit flags that you can combine using the bitwise OR:  \\n  \\n-   Full Control  \\n  \\n-   Delete Message  \\n  \\n-   Receive Message  \\n  \\n-   Peek Message  \\n  \\n-   Receive Journal Message  \\n  \\n-   Get Queue Properties  \\n  \\n-   Set Queue Properties  \\n  \\n-   Get Permissions  \\n  \\n-   Set Permissions  \\n  \\n-   Take Queue Ownership  \\n  \\n-   Write Message\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Messaging.AccessControlList Permissions { get; set; }\n    return:\n      type: System.Messaging.AccessControlList\n      description: A <xref href=\"System.Messaging.AccessControlList\"></xref> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.\n  overload: System.Messaging.MessageQueueInstaller.Permissions*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)\n  commentId: M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)\n  id: Rollback(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Rollback(IDictionary)\n  nameWithType: MessageQueueInstaller.Rollback(IDictionary)\n  fullName: MessageQueueInstaller.Rollback(IDictionary)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.\n  remarks: \"The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails. The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.  \\n  \\n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.  \\n  \\n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.\"\n  syntax:\n    content: public override void Rollback (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> that contains the pre-installation state of the computer.\n  overload: System.Messaging.MessageQueueInstaller.Rollback*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Transactional\n  commentId: P:System.Messaging.MessageQueueInstaller.Transactional\n  id: Transactional\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Transactional\n  nameWithType: MessageQueueInstaller.Transactional\n  fullName: MessageQueueInstaller.Transactional\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.\n  remarks: Messages can be retrieved from a local transaction queue with or without using a transaction. If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.\n  syntax:\n    content: public bool Transactional { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the queue can only accept messages sent as part of a transaction; otherwise, `false`. The default is `false`.'\n  overload: System.Messaging.MessageQueueInstaller.Transactional*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)\n  commentId: M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)\n  id: Uninstall(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: Uninstall(IDictionary)\n  nameWithType: MessageQueueInstaller.Uninstall(IDictionary)\n  fullName: MessageQueueInstaller.Uninstall(IDictionary)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.\n  remarks: \"If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.  \\n  \\n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode). The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the MessageQueue being uninstalled.  \\n  \\n An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been uninstalled. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information.\"\n  syntax:\n    content: public override void Uninstall (System.Collections.IDictionary savedState);\n    parameters:\n    - id: savedState\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> that contains the post-installation state of the computer.\n  overload: System.Messaging.MessageQueueInstaller.Uninstall*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.UninstallAction\n  commentId: P:System.Messaging.MessageQueueInstaller.UninstallAction\n  id: UninstallAction\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: UninstallAction\n  nameWithType: MessageQueueInstaller.UninstallAction\n  fullName: MessageQueueInstaller.UninstallAction\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: 'Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.'\n  remarks: When you install a queue, you can optionally use an existing queue. If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored. You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.\n  syntax:\n    content: public System.Configuration.Install.UninstallAction UninstallAction { get; set; }\n    return:\n      type: System.Configuration.Install.UninstallAction\n      description: One of the <xref href=\"System.Configuration.Install.UninstallAction\"></xref> values that indicates what state to leave the queue in when the <xref href=\"System.Messaging.MessageQueue\"></xref> is uninstalled. The default is `Remove`.\n  overload: System.Messaging.MessageQueueInstaller.UninstallAction*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue\n  commentId: P:System.Messaging.MessageQueueInstaller.UseJournalQueue\n  id: UseJournalQueue\n  parent: System.Messaging.MessageQueueInstaller\n  langs:\n  - csharp\n  name: UseJournalQueue\n  nameWithType: MessageQueueInstaller.UseJournalQueue\n  fullName: MessageQueueInstaller.UseJournalQueue\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.\n  remarks: \"A journal queue lets you keep track of messages even after they have been retrieved from the queue. However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.  \\n  \\n A journal queue should be cleared periodically to remove messages that are no longer needed. Messages stored in the journal queue count toward the quota for the computer on which the journal is located.\"\n  syntax:\n    content: public bool UseJournalQueue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to copy messages that are retrieved from the queue to the journal queue; otherwise, `false`. The default is `false`.'\n  overload: System.Messaging.MessageQueueInstaller.UseJournalQueue*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\nreferences:\n- uid: System.Configuration.Install.ComponentInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: ComponentInstaller\n  nameWithType: ComponentInstaller\n  fullName: System.Configuration.Install.ComponentInstaller\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Messaging.MessageQueueInstaller.#ctor\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MessageQueueInstaller()\n  nameWithType: MessageQueueInstaller.MessageQueueInstaller()\n  fullName: MessageQueueInstaller.MessageQueueInstaller()\n- uid: System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MessageQueueInstaller(MessageQueue)\n  nameWithType: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)\n  fullName: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)\n- uid: System.Messaging.MessageQueue\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueue\n  nameWithType: MessageQueue\n  fullName: System.Messaging.MessageQueue\n- uid: System.Messaging.MessageQueueInstaller.Authenticate\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Authenticate\n  nameWithType: MessageQueueInstaller.Authenticate\n  fullName: MessageQueueInstaller.Authenticate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.MessageQueueInstaller.BasePriority\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: BasePriority\n  nameWithType: MessageQueueInstaller.BasePriority\n  fullName: MessageQueueInstaller.BasePriority\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Messaging.MessageQueueInstaller.Category\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Category\n  nameWithType: MessageQueueInstaller.Category\n  fullName: MessageQueueInstaller.Category\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Commit(IDictionary)\n  nameWithType: MessageQueueInstaller.Commit(IDictionary)\n  fullName: MessageQueueInstaller.Commit(IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: CopyFromComponent(IComponent)\n  nameWithType: MessageQueueInstaller.CopyFromComponent(IComponent)\n  fullName: MessageQueueInstaller.CopyFromComponent(IComponent)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: MessageQueueInstaller.EncryptionRequired\n  fullName: MessageQueueInstaller.EncryptionRequired\n- uid: System.Messaging.EncryptionRequired\n  parent: System.Messaging\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: EncryptionRequired\n  fullName: System.Messaging.EncryptionRequired\n- uid: System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Install(IDictionary)\n  nameWithType: MessageQueueInstaller.Install(IDictionary)\n  fullName: MessageQueueInstaller.Install(IDictionary)\n- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: IsEquivalentInstaller(ComponentInstaller)\n  nameWithType: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)\n  fullName: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)\n- uid: System.Messaging.MessageQueueInstaller.Label\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Label\n  nameWithType: MessageQueueInstaller.Label\n  fullName: MessageQueueInstaller.Label\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MaximumJournalSize\n  nameWithType: MessageQueueInstaller.MaximumJournalSize\n  fullName: MessageQueueInstaller.MaximumJournalSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MaximumQueueSize\n  nameWithType: MessageQueueInstaller.MaximumQueueSize\n  fullName: MessageQueueInstaller.MaximumQueueSize\n- uid: System.Messaging.MessageQueueInstaller.MulticastAddress\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MulticastAddress\n  nameWithType: MessageQueueInstaller.MulticastAddress\n  fullName: MessageQueueInstaller.MulticastAddress\n- uid: System.Messaging.MessageQueueInstaller.Path\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Path\n  nameWithType: MessageQueueInstaller.Path\n  fullName: MessageQueueInstaller.Path\n- uid: System.Messaging.MessageQueueInstaller.Permissions\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Permissions\n  nameWithType: MessageQueueInstaller.Permissions\n  fullName: MessageQueueInstaller.Permissions\n- uid: System.Messaging.AccessControlList\n  parent: System.Messaging\n  isExternal: false\n  name: AccessControlList\n  nameWithType: AccessControlList\n  fullName: System.Messaging.AccessControlList\n- uid: System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Rollback(IDictionary)\n  nameWithType: MessageQueueInstaller.Rollback(IDictionary)\n  fullName: MessageQueueInstaller.Rollback(IDictionary)\n- uid: System.Messaging.MessageQueueInstaller.Transactional\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Transactional\n  nameWithType: MessageQueueInstaller.Transactional\n  fullName: MessageQueueInstaller.Transactional\n- uid: System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Uninstall(IDictionary)\n  nameWithType: MessageQueueInstaller.Uninstall(IDictionary)\n  fullName: MessageQueueInstaller.Uninstall(IDictionary)\n- uid: System.Messaging.MessageQueueInstaller.UninstallAction\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: UninstallAction\n  nameWithType: MessageQueueInstaller.UninstallAction\n  fullName: MessageQueueInstaller.UninstallAction\n- uid: System.Configuration.Install.UninstallAction\n  parent: System.Configuration.Install\n  isExternal: false\n  name: UninstallAction\n  nameWithType: UninstallAction\n  fullName: System.Configuration.Install.UninstallAction\n- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: MessageQueueInstaller.UseJournalQueue\n  fullName: MessageQueueInstaller.UseJournalQueue\n- uid: System.Messaging.MessageQueueInstaller.#ctor*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MessageQueueInstaller\n  nameWithType: MessageQueueInstaller.MessageQueueInstaller\n  fullName: MessageQueueInstaller.MessageQueueInstaller\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Authenticate*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Authenticate\n  nameWithType: MessageQueueInstaller.Authenticate\n  fullName: MessageQueueInstaller.Authenticate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.BasePriority*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: BasePriority\n  nameWithType: MessageQueueInstaller.BasePriority\n  fullName: MessageQueueInstaller.BasePriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Category*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Category\n  nameWithType: MessageQueueInstaller.Category\n  fullName: MessageQueueInstaller.Category\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Commit*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Commit\n  nameWithType: MessageQueueInstaller.Commit\n  fullName: MessageQueueInstaller.Commit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: CopyFromComponent\n  nameWithType: MessageQueueInstaller.CopyFromComponent\n  fullName: MessageQueueInstaller.CopyFromComponent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: EncryptionRequired\n  nameWithType: MessageQueueInstaller.EncryptionRequired\n  fullName: MessageQueueInstaller.EncryptionRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Install*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Install\n  nameWithType: MessageQueueInstaller.Install\n  fullName: MessageQueueInstaller.Install\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: IsEquivalentInstaller\n  nameWithType: MessageQueueInstaller.IsEquivalentInstaller\n  fullName: MessageQueueInstaller.IsEquivalentInstaller\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Label*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Label\n  nameWithType: MessageQueueInstaller.Label\n  fullName: MessageQueueInstaller.Label\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MaximumJournalSize\n  nameWithType: MessageQueueInstaller.MaximumJournalSize\n  fullName: MessageQueueInstaller.MaximumJournalSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MaximumQueueSize\n  nameWithType: MessageQueueInstaller.MaximumQueueSize\n  fullName: MessageQueueInstaller.MaximumQueueSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.MulticastAddress*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: MulticastAddress\n  nameWithType: MessageQueueInstaller.MulticastAddress\n  fullName: MessageQueueInstaller.MulticastAddress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Path*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Path\n  nameWithType: MessageQueueInstaller.Path\n  fullName: MessageQueueInstaller.Path\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Permissions*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Permissions\n  nameWithType: MessageQueueInstaller.Permissions\n  fullName: MessageQueueInstaller.Permissions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Rollback*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Rollback\n  nameWithType: MessageQueueInstaller.Rollback\n  fullName: MessageQueueInstaller.Rollback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Transactional*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Transactional\n  nameWithType: MessageQueueInstaller.Transactional\n  fullName: MessageQueueInstaller.Transactional\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.Uninstall*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: Uninstall\n  nameWithType: MessageQueueInstaller.Uninstall\n  fullName: MessageQueueInstaller.Uninstall\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.UninstallAction*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: UninstallAction\n  nameWithType: MessageQueueInstaller.UninstallAction\n  fullName: MessageQueueInstaller.UninstallAction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue*\n  parent: System.Messaging.MessageQueueInstaller\n  isExternal: false\n  name: UseJournalQueue\n  nameWithType: MessageQueueInstaller.UseJournalQueue\n  fullName: MessageQueueInstaller.UseJournalQueue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Configuration.Install.Installer.AfterInstall\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: AfterInstall\n  nameWithType: Installer.AfterInstall\n  fullName: Installer.AfterInstall\n- uid: System.Configuration.Install.Installer.AfterRollback\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: AfterRollback\n  nameWithType: Installer.AfterRollback\n  fullName: Installer.AfterRollback\n- uid: System.Configuration.Install.Installer.AfterUninstall\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: AfterUninstall\n  nameWithType: Installer.AfterUninstall\n  fullName: Installer.AfterUninstall\n- uid: System.Configuration.Install.Installer.BeforeInstall\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: BeforeInstall\n  nameWithType: Installer.BeforeInstall\n  fullName: Installer.BeforeInstall\n- uid: System.Configuration.Install.Installer.BeforeRollback\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: BeforeRollback\n  nameWithType: Installer.BeforeRollback\n  fullName: Installer.BeforeRollback\n- uid: System.Configuration.Install.Installer.BeforeUninstall\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: BeforeUninstall\n  nameWithType: Installer.BeforeUninstall\n  fullName: Installer.BeforeUninstall\n- uid: System.Configuration.Install.Installer.Committed\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: Committed\n  nameWithType: Installer.Committed\n  fullName: Installer.Committed\n- uid: System.Configuration.Install.Installer.Committing\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: Committing\n  nameWithType: Installer.Committing\n  fullName: Installer.Committing\n- uid: System.Configuration.Install.Installer.Context\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: Context\n  nameWithType: Installer.Context\n  fullName: Installer.Context\n- uid: System.Configuration.Install.Installer.HelpText\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: HelpText\n  nameWithType: Installer.HelpText\n  fullName: Installer.HelpText\n- uid: System.Configuration.Install.Installer.Installers\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: Installers\n  nameWithType: Installer.Installers\n  fullName: Installer.Installers\n- uid: System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnAfterInstall(IDictionary)\n  nameWithType: Installer.OnAfterInstall(IDictionary)\n  fullName: Installer.OnAfterInstall(IDictionary)\n- uid: System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnAfterRollback(IDictionary)\n  nameWithType: Installer.OnAfterRollback(IDictionary)\n  fullName: Installer.OnAfterRollback(IDictionary)\n- uid: System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnAfterUninstall(IDictionary)\n  nameWithType: Installer.OnAfterUninstall(IDictionary)\n  fullName: Installer.OnAfterUninstall(IDictionary)\n- uid: System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnBeforeInstall(IDictionary)\n  nameWithType: Installer.OnBeforeInstall(IDictionary)\n  fullName: Installer.OnBeforeInstall(IDictionary)\n- uid: System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnBeforeRollback(IDictionary)\n  nameWithType: Installer.OnBeforeRollback(IDictionary)\n  fullName: Installer.OnBeforeRollback(IDictionary)\n- uid: System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnBeforeUninstall(IDictionary)\n  nameWithType: Installer.OnBeforeUninstall(IDictionary)\n  fullName: Installer.OnBeforeUninstall(IDictionary)\n- uid: System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnCommitted(IDictionary)\n  nameWithType: Installer.OnCommitted(IDictionary)\n  fullName: Installer.OnCommitted(IDictionary)\n- uid: System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: OnCommitting(IDictionary)\n  nameWithType: Installer.OnCommitting(IDictionary)\n  fullName: Installer.OnCommitting(IDictionary)\n- uid: System.Configuration.Install.Installer.Parent\n  parent: System.Configuration.Install.Installer\n  isExternal: false\n  name: Parent\n  nameWithType: Installer.Parent\n  fullName: Installer.Parent\n"}