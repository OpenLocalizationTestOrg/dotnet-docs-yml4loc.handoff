{"nodes":[{"content":"Decrypts Optimal Asymmetric Encryption Padding (OAEP) key exchange data.","nodes":[{"pos":[0,72],"content":"Decrypts Optimal Asymmetric Encryption Padding (OAEP) key exchange data.","nodes":[{"content":"Decrypts Optimal Asymmetric Encryption Padding (OAEP) key exchange data.","pos":[0,72]}]}],"pos":[1032,1105],"yaml":true},{"content":"Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.  \n  \n Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> to create the key exchange message with the <xref:System.Security.Cryptography.RSA> algorithm.  \n  \n> [!CAUTION]\n>  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.","nodes":[{"pos":[0,203],"content":"Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.","nodes":[{"content":"Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.","pos":[0,203]}]},{"pos":[210,372],"content":"Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> to create the key exchange message with the <xref:System.Security.Cryptography.RSA> algorithm.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter&gt;</ph> to create the key exchange message with the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> algorithm.","pos":[0,162],"source":"Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> to create the key exchange message with the <xref:System.Security.Cryptography.RSA> algorithm."}]},{"pos":[380,631],"content":"[!CAUTION]\n It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.","leadings":["","> "],"nodes":[{"content":"It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.","pos":[12,249]}]}],"pos":[1116,1755],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class."}],"pos":[4407,4528],"yaml":true},{"content":"Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A> to establish the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.","nodes":[{"pos":[0,204],"content":"Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A> to establish the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A&gt;</ph> to establish the key before calling <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A&gt;</ph>.","pos":[0,204],"source":"Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A> to establish the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>."}]}],"pos":[4539,4744],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class with the specified key.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"&gt;&lt;/xref&gt;</ph> class with the specified key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class with the specified key."}],"pos":[6488,6632],"yaml":true},{"content":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.","nodes":[{"pos":[0,111],"content":"The instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm that holds the private key.","source":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key."}],"pos":[6858,6970],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[7164,7192],"yaml":true},{"content":"Extracts secret information from the encrypted key exchange data.","nodes":[{"pos":[0,65],"content":"Extracts secret information from the encrypted key exchange data.","nodes":[{"content":"Extracts secret information from the encrypted key exchange data.","pos":[0,65]}]}],"pos":[8613,8679],"yaml":true},{"content":"You must specify a key before calling this method.","nodes":[{"pos":[0,50],"content":"You must specify a key before calling this method.","nodes":[{"content":"You must specify a key before calling this method.","pos":[0,50]}]}],"pos":[8690,8741],"yaml":true,"extradata":"MT"},{"content":"The key exchange data within which the secret information is hidden.","nodes":[{"pos":[0,68],"content":"The key exchange data within which the secret information is hidden.","nodes":[{"content":"The key exchange data within which the secret information is hidden.","pos":[0,68]}]}],"pos":[9665,9734],"yaml":true},{"content":"The secret information derived from the key exchange data.","nodes":[{"pos":[0,58],"content":"The secret information derived from the key exchange data.","nodes":[{"content":"The secret information derived from the key exchange data.","pos":[0,58]}]}],"pos":[9791,9850],"yaml":true},{"content":"The key exchange data verification has failed.","nodes":[{"pos":[0,46],"content":"The key exchange data verification has failed.","nodes":[{"content":"The key exchange data verification has failed.","pos":[0,46]}]}],"pos":[10103,10150],"yaml":true},{"content":"The key is missing.","nodes":[{"pos":[0,19],"content":"The key is missing.","nodes":[{"content":"The key is missing.","pos":[0,19]}]}],"pos":[10336,10356],"yaml":true},{"content":"Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange.","nodes":[{"pos":[0,86],"content":"Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange.","nodes":[{"content":"Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange.","pos":[0,86]}]}],"pos":[11679,11766],"yaml":true},{"content":"An XML string containing the parameters of the OAEP key exchange operation.","nodes":[{"pos":[0,75],"content":"An XML string containing the parameters of the OAEP key exchange operation.","nodes":[{"content":"An XML string containing the parameters of the OAEP key exchange operation.","pos":[0,75]}]}],"pos":[12889,12965],"yaml":true},{"content":"Sets the private key to use for decrypting the secret information.","nodes":[{"pos":[0,66],"content":"Sets the private key to use for decrypting the secret information.","nodes":[{"content":"Sets the private key to use for decrypting the secret information.","pos":[0,66]}]}],"pos":[14558,14625],"yaml":true},{"content":"You must set a key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.","nodes":[{"pos":[0,122],"content":"You must set a key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.","nodes":[{"content":"You must set a key before calling <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A&gt;</ph>.","pos":[0,122],"source":"You must set a key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>."}]}],"pos":[14636,14759],"yaml":true,"extradata":"MT"},{"content":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.","nodes":[{"pos":[0,111],"content":"The instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm that holds the private key.","source":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key."}],"pos":[14976,15088],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[15283,15311],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  commentId: T:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  id: RSAOAEPKeyExchangeDeformatter\n  children:\n  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor\n  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])\n  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters\n  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeDeformatter\n  nameWithType: RSAOAEPKeyExchangeDeformatter\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Decrypts Optimal Asymmetric Encryption Padding (OAEP) key exchange data.\n  remarks: \"Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.  \\n  \\n Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> to create the key exchange message with the <xref:System.Security.Cryptography.RSA> algorithm.  \\n  \\n> [!CAUTION]\\n>  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter> class to recreate an exchange key to be used to decrypt a message.  \\n  \\n [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/cs/program.cs#1)]\\n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/vb/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class RSAOAEPKeyExchangeDeformatter : System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor\n  commentId: M:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeDeformatter()\n  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()\n  fullName: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class.\n  remarks: Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A> to establish the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.\n  syntax:\n    content: public RSAOAEPKeyExchangeDeformatter ();\n    parameters: []\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n  fullName: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\"></xref> class with the specified key.\n  syntax:\n    content: public RSAOAEPKeyExchangeDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])\n  id: DecryptKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  langs:\n  - csharp\n  name: DecryptKeyExchange(Byte[])\n  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])\n  fullName: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Extracts secret information from the encrypted key exchange data.\n  remarks: You must specify a key before calling this method.\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A> method to recreate an exchange key from a message sender. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter> class.  \\n  \\n [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/cs/program.cs#3)]\\n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/vb/program.vb#3)]\"\n  syntax:\n    content: public override byte[] DecryptKeyExchange (byte[] rgbData);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: The key exchange data within which the secret information is hidden.\n    return:\n      type: System.Byte[]\n      description: The secret information derived from the key exchange data.\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The key exchange data verification has failed.\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The key is missing.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters\n  commentId: P:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters\n  fullName: RSAOAEPKeyExchangeDeformatter.Parameters\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters%2A> property to retrieve an XML representation of the parameters. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#12)]\\n [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#12)]\\n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#12)]\"\n  syntax:\n    content: public override string Parameters { get; set; }\n    return:\n      type: System.String\n      description: An XML string containing the parameters of the OAEP key exchange operation.\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Sets the private key to use for decrypting the secret information.\n  remarks: You must set a key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricKeyExchangeDeformatter\n  nameWithType: AsymmetricKeyExchangeDeformatter\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: RSAOAEPKeyExchangeDeformatter()\n  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()\n  fullName: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n  fullName: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: DecryptKeyExchange(Byte[])\n  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])\n  fullName: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: Parameters\n  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters\n  fullName: RSAOAEPKeyExchangeDeformatter.Parameters\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: RSAOAEPKeyExchangeDeformatter\n  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter\n  fullName: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange*\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: DecryptKeyExchange\n  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange\n  fullName: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters*\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: Parameters\n  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters\n  fullName: RSAOAEPKeyExchangeDeformatter.Parameters\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey*\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter\n  isExternal: false\n  name: SetKey\n  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey\n  fullName: RSAOAEPKeyExchangeDeformatter.SetKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAOAEPKeyExchangeDeformatter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}