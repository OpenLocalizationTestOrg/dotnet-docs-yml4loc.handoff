{"nodes":[{"content":"Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <xref href=\"System.AppDomain\"></xref> in which to run an application.","nodes":[{"pos":[0,216],"content":"Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <ph id=\"ph1\">&lt;xref href=\"System.AppDomain\"&gt;&lt;/xref&gt;</ph> in which to run an application.","source":"Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <xref href=\"System.AppDomain\"></xref> in which to run an application."}],"pos":[964,1181],"yaml":true},{"content":"For a list of initial property values for an instance of the <xref:System.Security.Policy.TrustManagerContext> class, see the <xref:System.Security.Policy.TrustManagerContext.%23ctor> constructor.","nodes":[{"pos":[0,196],"content":"For a list of initial property values for an instance of the <xref:System.Security.Policy.TrustManagerContext> class, see the <xref:System.Security.Policy.TrustManagerContext.%23ctor> constructor.","nodes":[{"content":"For a list of initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.TrustManagerContext&gt;</ph> class, see the <ph id=\"ph2\">&lt;xref:System.Security.Policy.TrustManagerContext.%23ctor&gt;</ph> constructor.","pos":[0,196],"source":"For a list of initial property values for an instance of the <xref:System.Security.Policy.TrustManagerContext> class, see the <xref:System.Security.Policy.TrustManagerContext.%23ctor> constructor."}]}],"pos":[1192,1389],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.TrustManagerContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class."}],"pos":[3101,3206],"yaml":true},{"content":"The following table shows the initial property values for a new instance of the <xref:System.Security.Policy.TrustManagerContext> class.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>|`false`|  \n|<xref:System.Security.Policy.TrustManagerContext.Persist%2A>|`true`|  \n|<xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>|`null`|  \n|<xref:System.Security.Policy.TrustManagerContext.UIContext%2A>|<xref:System.Security.Policy.TrustManagerUIContext.Run>|","nodes":[{"pos":[0,136],"content":"The following table shows the initial property values for a new instance of the <xref:System.Security.Policy.TrustManagerContext> class.","nodes":[{"content":"The following table shows the initial property values for a new instance of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.TrustManagerContext&gt;</ph> class.","pos":[0,136],"source":"The following table shows the initial property values for a new instance of the <xref:System.Security.Policy.TrustManagerContext> class."}]},{"pos":[143,151],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[152,165],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[209,285],"content":"<xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>","nodes":[]},{"pos":[298,360],"content":"<xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>","nodes":[]},{"pos":[373,434],"content":"<xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>","nodes":[]},{"pos":[447,507],"content":"<xref:System.Security.Policy.TrustManagerContext.Persist%2A>","nodes":[]},{"pos":[519,599],"content":"<xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>","nodes":[]},{"pos":[611,673],"content":"<xref:System.Security.Policy.TrustManagerContext.UIContext%2A>","nodes":[]},{"pos":[674,729],"content":"<xref:System.Security.Policy.TrustManagerUIContext.Run>","nodes":[]}],"pos":[3217,3959],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class using the specified <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> object.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.TrustManagerContext\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.TrustManagerUIContext\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class using the specified <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> object."}],"pos":[5483,5681],"yaml":true},{"content":"This constructor initializes the properties to the same settings as the default constructor, with the exception of the <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property, which is set to the value that is passed in.","nodes":[{"pos":[0,236],"content":"This constructor initializes the properties to the same settings as the default constructor, with the exception of the <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property, which is set to the value that is passed in.","nodes":[{"content":"This constructor initializes the properties to the same settings as the default constructor, with the exception of the <ph id=\"ph1\">&lt;xref:System.Security.Policy.TrustManagerContext.UIContext%2A&gt;</ph> property, which is set to the value that is passed in.","pos":[0,236],"source":"This constructor initializes the properties to the same settings as the default constructor, with the exception of the <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property, which is set to the value that is passed in."}]}],"pos":[5692,5929],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values that specifies the type of trust manager user interface to use.","nodes":[{"pos":[0,147],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.TrustManagerUIContext\"&gt;&lt;/xref&gt;</ph> values that specifies the type of trust manager user interface to use.","source":"One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values that specifies the type of trust manager user interface to use."}],"pos":[6149,6297],"yaml":true},{"content":"Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.","nodes":[{"pos":[0,138],"content":"Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.","nodes":[{"content":"Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.","pos":[0,138]}]}],"pos":[7602,7741],"yaml":true},{"content":"If `true`, the <xref:System.Security.Policy.ApplicationSecurityManager> ignores persisted decisions for the application and calls the trust manager. If `false`, the <xref:System.Security.Policy.ApplicationSecurityManager> uses cached decisions, if available.","nodes":[{"pos":[0,258],"content":"If `true`, the <xref:System.Security.Policy.ApplicationSecurityManager> ignores persisted decisions for the application and calls the trust manager. If `false`, the <xref:System.Security.Policy.ApplicationSecurityManager> uses cached decisions, if available.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> ignores persisted decisions for the application and calls the trust manager.","pos":[0,148],"source":"If `true`, the <xref:System.Security.Policy.ApplicationSecurityManager> ignores persisted decisions for the application and calls the trust manager."},{"content":"If <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> uses cached decisions, if available.","pos":[149,258],"source":" If `false`, the <xref:System.Security.Policy.ApplicationSecurityManager> uses cached decisions, if available."}]}],"pos":[7752,8011],"yaml":true,"extradata":"MT"},{"content":"`true` to call the trust manager; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> to call the trust manager; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to call the trust manager; otherwise, `false`."}],"pos":[8150,8206],"yaml":true},{"content":"Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.","nodes":[{"pos":[0,160],"content":"Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.","nodes":[{"content":"Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.","pos":[0,160]}]}],"pos":[9445,9606],"yaml":true},{"content":"This flag is set to `true` if the host might call the trust manager numerous times for trust decisions for this application. If `true`, the trust manager should cache any state that might improve the speed of future calls to the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> method. This property is set to `false` if the host does not expect to call the trust manager again for the current <xref:System.AppDomain>.","nodes":[{"pos":[0,453],"content":"This flag is set to `true` if the host might call the trust manager numerous times for trust decisions for this application. If `true`, the trust manager should cache any state that might improve the speed of future calls to the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> method. This property is set to `false` if the host does not expect to call the trust manager again for the current <xref:System.AppDomain>.","nodes":[{"content":"This flag is set to <ph id=\"ph1\">`true`</ph> if the host might call the trust manager numerous times for trust decisions for this application.","pos":[0,124],"source":"This flag is set to `true` if the host might call the trust manager numerous times for trust decisions for this application."},{"content":"If <ph id=\"ph1\">`true`</ph>, the trust manager should cache any state that might improve the speed of future calls to the <ph id=\"ph2\">&lt;xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A&gt;</ph> method.","pos":[125,320],"source":" If `true`, the trust manager should cache any state that might improve the speed of future calls to the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> method."},{"content":"This property is set to <ph id=\"ph1\">`false`</ph> if the host does not expect to call the trust manager again for the current <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[321,453],"source":" This property is set to `false` if the host does not expect to call the trust manager again for the current <xref:System.AppDomain>."}]}],"pos":[9617,10071],"yaml":true,"extradata":"MT"},{"content":"`true` to cache state data; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,71],"content":"`true` to cache state data; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to cache state data; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,47],"source":"`true` to cache state data; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[48,71],"source":" The default is `false`."}]}],"pos":[10196,10270],"yaml":true},{"content":"Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.","nodes":[{"pos":[0,101],"content":"Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.","nodes":[{"content":"Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.","pos":[0,101]}]}],"pos":[11489,11591],"yaml":true},{"content":"If `false`, the trust manager determines the appropriate user dialog to obtain a trust decision.","nodes":[{"pos":[0,96],"content":"If <ph id=\"ph1\">`false`</ph>, the trust manager determines the appropriate user dialog to obtain a trust decision.","source":"If `false`, the trust manager determines the appropriate user dialog to obtain a trust decision."}],"pos":[11602,11699],"yaml":true,"extradata":"MT"},{"content":"`true` to not prompt the user; `false` to prompt the user. The default is `false`.","nodes":[{"pos":[0,82],"content":"`true` to not prompt the user; `false` to prompt the user. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to not prompt the user; <ph id=\"ph2\">`false`</ph> to prompt the user.","pos":[0,58],"source":"`true` to not prompt the user; `false` to prompt the user."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[59,82],"source":" The default is `false`."}]}],"pos":[11823,11908],"yaml":true},{"content":"Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.","nodes":[{"pos":[0,102],"content":"Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.","nodes":[{"content":"Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.","pos":[0,102]}]}],"pos":[13120,13223],"yaml":true},{"content":"This property is `true` if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request. This property is `false` if the user’s response should not be persisted.","nodes":[{"pos":[0,231],"content":"This property is `true` if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request. This property is `false` if the user’s response should not be persisted.","nodes":[{"content":"This property is <ph id=\"ph1\">`true`</ph> if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request.","pos":[0,158],"source":"This property is `true` if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request."},{"content":"This property is <ph id=\"ph1\">`false`</ph> if the user’s response should not be persisted.","pos":[159,231],"source":" This property is `false` if the user’s response should not be persisted."}]}],"pos":[13234,13466],"yaml":true,"extradata":"MT"},{"content":"`true` to cache state data; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,70],"content":"`true` to cache state data; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to cache state data; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,47],"source":"`true` to cache state data; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[48,70],"source":" The default is `true`."}]}],"pos":[13589,13662],"yaml":true},{"content":"Gets or sets the identity of the previous application identity.","nodes":[{"pos":[0,63],"content":"Gets or sets the identity of the previous application identity.","nodes":[{"content":"Gets or sets the identity of the previous application identity.","pos":[0,63]}]}],"pos":[14993,15057],"yaml":true},{"content":"An <xref href=\"System.ApplicationIdentity\"></xref> object representing the previous <xref href=\"System.ApplicationIdentity\"></xref>.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ApplicationIdentity\"&gt;&lt;/xref&gt;</ph> object representing the previous <ph id=\"ph2\">&lt;xref href=\"System.ApplicationIdentity\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.ApplicationIdentity\"></xref> object representing the previous <xref href=\"System.ApplicationIdentity\"></xref>."}],"pos":[15227,15360],"yaml":true},{"content":"Gets or sets the type of user interface the trust manager should display.","nodes":[{"pos":[0,73],"content":"Gets or sets the type of user interface the trust manager should display.","nodes":[{"content":"Gets or sets the type of user interface the trust manager should display.","pos":[0,73]}]}],"pos":[16603,16677],"yaml":true},{"content":"The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision. A trust manager can decide to use a different interface.","nodes":[{"pos":[0,233],"content":"The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision. A trust manager can decide to use a different interface.","nodes":[{"content":"The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision. A trust manager can decide to use a different interface.","pos":[0,233],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.TrustManagerContext.UIContext%2A&gt;</ph> property is intended to recommend the user interface the trust manager should provide for the trust decision.","pos":[0,176],"source":"The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision."},{"content":"A trust manager can decide to use a different interface.","pos":[177,233]}]}]}],"pos":[16688,16922],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values. The default is <xref href=\"System.Security.Policy.TrustManagerUIContext.Run\"></xref>.","nodes":[{"pos":[0,170],"content":"One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values. The default is <xref href=\"System.Security.Policy.TrustManagerUIContext.Run\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.TrustManagerUIContext\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,84],"source":"One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.TrustManagerUIContext.Run\"&gt;&lt;/xref&gt;</ph>.","pos":[85,170],"source":" The default is <xref href=\"System.Security.Policy.TrustManagerUIContext.Run\"></xref>."}]}],"pos":[17117,17288],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.TrustManagerContext\n  commentId: T:System.Security.Policy.TrustManagerContext\n  id: TrustManagerContext\n  children:\n  - System.Security.Policy.TrustManagerContext.#ctor\n  - System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)\n  - System.Security.Policy.TrustManagerContext.IgnorePersistedDecision\n  - System.Security.Policy.TrustManagerContext.KeepAlive\n  - System.Security.Policy.TrustManagerContext.NoPrompt\n  - System.Security.Policy.TrustManagerContext.Persist\n  - System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity\n  - System.Security.Policy.TrustManagerContext.UIContext\n  langs:\n  - csharp\n  name: TrustManagerContext\n  nameWithType: TrustManagerContext\n  fullName: System.Security.Policy.TrustManagerContext\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <xref href=\"System.AppDomain\"></xref> in which to run an application.\n  remarks: For a list of initial property values for an instance of the <xref:System.Security.Policy.TrustManagerContext> class, see the <xref:System.Security.Policy.TrustManagerContext.%23ctor> constructor.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class TrustManagerContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.#ctor\n  commentId: M:System.Security.Policy.TrustManagerContext.#ctor\n  id: '#ctor'\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: TrustManagerContext()\n  nameWithType: TrustManagerContext.TrustManagerContext()\n  fullName: TrustManagerContext.TrustManagerContext()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class.\n  remarks: \"The following table shows the initial property values for a new instance of the <xref:System.Security.Policy.TrustManagerContext> class.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>|`false`|  \\n|<xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>|`false`|  \\n|<xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>|`false`|  \\n|<xref:System.Security.Policy.TrustManagerContext.Persist%2A>|`true`|  \\n|<xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>|`null`|  \\n|<xref:System.Security.Policy.TrustManagerContext.UIContext%2A>|<xref:System.Security.Policy.TrustManagerUIContext.Run>|\"\n  syntax:\n    content: public TrustManagerContext ();\n    parameters: []\n  overload: System.Security.Policy.TrustManagerContext.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)\n  commentId: M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)\n  id: '#ctor(System.Security.Policy.TrustManagerUIContext)'\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: TrustManagerContext(TrustManagerUIContext)\n  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)\n  fullName: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.TrustManagerContext\"></xref> class using the specified <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> object.\n  remarks: This constructor initializes the properties to the same settings as the default constructor, with the exception of the <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property, which is set to the value that is passed in.\n  syntax:\n    content: public TrustManagerContext (System.Security.Policy.TrustManagerUIContext uiContext);\n    parameters:\n    - id: uiContext\n      type: System.Security.Policy.TrustManagerUIContext\n      description: One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values that specifies the type of trust manager user interface to use.\n  overload: System.Security.Policy.TrustManagerContext.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision\n  commentId: P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision\n  id: IgnorePersistedDecision\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: IgnorePersistedDecision\n  nameWithType: TrustManagerContext.IgnorePersistedDecision\n  fullName: TrustManagerContext.IgnorePersistedDecision\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.\n  remarks: If `true`, the <xref:System.Security.Policy.ApplicationSecurityManager> ignores persisted decisions for the application and calls the trust manager. If `false`, the <xref:System.Security.Policy.ApplicationSecurityManager> uses cached decisions, if available.\n  syntax:\n    content: public virtual bool IgnorePersistedDecision { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to call the trust manager; otherwise, `false`.'\n  overload: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.KeepAlive\n  commentId: P:System.Security.Policy.TrustManagerContext.KeepAlive\n  id: KeepAlive\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: KeepAlive\n  nameWithType: TrustManagerContext.KeepAlive\n  fullName: TrustManagerContext.KeepAlive\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.\n  remarks: This flag is set to `true` if the host might call the trust manager numerous times for trust decisions for this application. If `true`, the trust manager should cache any state that might improve the speed of future calls to the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> method. This property is set to `false` if the host does not expect to call the trust manager again for the current <xref:System.AppDomain>.\n  syntax:\n    content: public virtual bool KeepAlive { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to cache state data; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Policy.TrustManagerContext.KeepAlive*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.NoPrompt\n  commentId: P:System.Security.Policy.TrustManagerContext.NoPrompt\n  id: NoPrompt\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: NoPrompt\n  nameWithType: TrustManagerContext.NoPrompt\n  fullName: TrustManagerContext.NoPrompt\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.\n  remarks: If `false`, the trust manager determines the appropriate user dialog to obtain a trust decision.\n  syntax:\n    content: public virtual bool NoPrompt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to not prompt the user; `false` to prompt the user. The default is `false`.'\n  overload: System.Security.Policy.TrustManagerContext.NoPrompt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.Persist\n  commentId: P:System.Security.Policy.TrustManagerContext.Persist\n  id: Persist\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: Persist\n  nameWithType: TrustManagerContext.Persist\n  fullName: TrustManagerContext.Persist\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.\n  remarks: This property is `true` if the user’s response to the consent dialog should be persisted to avoid further prompting the user with each new activation request. This property is `false` if the user’s response should not be persisted.\n  syntax:\n    content: public virtual bool Persist { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to cache state data; otherwise, `false`. The default is `true`.'\n  overload: System.Security.Policy.TrustManagerContext.Persist*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity\n  commentId: P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity\n  id: PreviousApplicationIdentity\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: PreviousApplicationIdentity\n  nameWithType: TrustManagerContext.PreviousApplicationIdentity\n  fullName: TrustManagerContext.PreviousApplicationIdentity\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets the identity of the previous application identity.\n  syntax:\n    content: public virtual ApplicationIdentity PreviousApplicationIdentity { get; set; }\n    return:\n      type: System.ApplicationIdentity\n      description: An <xref href=\"System.ApplicationIdentity\"></xref> object representing the previous <xref href=\"System.ApplicationIdentity\"></xref>.\n  overload: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.TrustManagerContext.UIContext\n  commentId: P:System.Security.Policy.TrustManagerContext.UIContext\n  id: UIContext\n  parent: System.Security.Policy.TrustManagerContext\n  langs:\n  - csharp\n  name: UIContext\n  nameWithType: TrustManagerContext.UIContext\n  fullName: TrustManagerContext.UIContext\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets or sets the type of user interface the trust manager should display.\n  remarks: The <xref:System.Security.Policy.TrustManagerContext.UIContext%2A> property is intended to recommend the user interface the trust manager should provide for the trust decision. A trust manager can decide to use a different interface.\n  syntax:\n    content: public virtual System.Security.Policy.TrustManagerUIContext UIContext { get; set; }\n    return:\n      type: System.Security.Policy.TrustManagerUIContext\n      description: One of the <xref href=\"System.Security.Policy.TrustManagerUIContext\"></xref> values. The default is <xref href=\"System.Security.Policy.TrustManagerUIContext.Run\"></xref>.\n  overload: System.Security.Policy.TrustManagerContext.UIContext*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.TrustManagerContext.#ctor\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: TrustManagerContext()\n  nameWithType: TrustManagerContext.TrustManagerContext()\n  fullName: TrustManagerContext.TrustManagerContext()\n- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: TrustManagerContext(TrustManagerUIContext)\n  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)\n  fullName: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)\n- uid: System.Security.Policy.TrustManagerUIContext\n  parent: System.Security.Policy\n  isExternal: false\n  name: TrustManagerUIContext\n  nameWithType: TrustManagerUIContext\n  fullName: System.Security.Policy.TrustManagerUIContext\n- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: IgnorePersistedDecision\n  nameWithType: TrustManagerContext.IgnorePersistedDecision\n  fullName: TrustManagerContext.IgnorePersistedDecision\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.TrustManagerContext.KeepAlive\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: KeepAlive\n  nameWithType: TrustManagerContext.KeepAlive\n  fullName: TrustManagerContext.KeepAlive\n- uid: System.Security.Policy.TrustManagerContext.NoPrompt\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: NoPrompt\n  nameWithType: TrustManagerContext.NoPrompt\n  fullName: TrustManagerContext.NoPrompt\n- uid: System.Security.Policy.TrustManagerContext.Persist\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: Persist\n  nameWithType: TrustManagerContext.Persist\n  fullName: TrustManagerContext.Persist\n- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: PreviousApplicationIdentity\n  nameWithType: TrustManagerContext.PreviousApplicationIdentity\n  fullName: TrustManagerContext.PreviousApplicationIdentity\n- uid: System.ApplicationIdentity\n  parent: System\n  isExternal: false\n  name: ApplicationIdentity\n  nameWithType: ApplicationIdentity\n  fullName: System.ApplicationIdentity\n- uid: System.Security.Policy.TrustManagerContext.UIContext\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: UIContext\n  nameWithType: TrustManagerContext.UIContext\n  fullName: TrustManagerContext.UIContext\n- uid: System.Security.Policy.TrustManagerContext.#ctor*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: TrustManagerContext\n  nameWithType: TrustManagerContext.TrustManagerContext\n  fullName: TrustManagerContext.TrustManagerContext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: IgnorePersistedDecision\n  nameWithType: TrustManagerContext.IgnorePersistedDecision\n  fullName: TrustManagerContext.IgnorePersistedDecision\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.KeepAlive*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: KeepAlive\n  nameWithType: TrustManagerContext.KeepAlive\n  fullName: TrustManagerContext.KeepAlive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.NoPrompt*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: NoPrompt\n  nameWithType: TrustManagerContext.NoPrompt\n  fullName: TrustManagerContext.NoPrompt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.Persist*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: Persist\n  nameWithType: TrustManagerContext.Persist\n  fullName: TrustManagerContext.Persist\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: PreviousApplicationIdentity\n  nameWithType: TrustManagerContext.PreviousApplicationIdentity\n  fullName: TrustManagerContext.PreviousApplicationIdentity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Security.Policy.TrustManagerContext.UIContext*\n  parent: System.Security.Policy.TrustManagerContext\n  isExternal: false\n  name: UIContext\n  nameWithType: TrustManagerContext.UIContext\n  fullName: TrustManagerContext.UIContext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/TrustManagerContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}