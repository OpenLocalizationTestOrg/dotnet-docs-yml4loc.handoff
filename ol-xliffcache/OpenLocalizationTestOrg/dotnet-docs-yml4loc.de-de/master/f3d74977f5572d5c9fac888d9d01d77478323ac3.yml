### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedViewStream
  id: MemoryMappedViewStream
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  langs:
  - csharp
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  type: Class
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  summary: Represents a view of a memory-mapped file as a sequentially accessed stream.
  remarks: Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.
  example:
  - "The following example obtains a <xref:System.IO.MemoryMappedFiles.MemoryMappedViewStream> of a memory-mapped file and writes a value to the stream for inter-process communication.  \n  \n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=fullName> method.  \n  \n [!code-csharp[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]\n [!code-vb[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]"
  syntax:
    content: 'public sealed class MemoryMappedViewStream : System.IO.UnmanagedMemoryStream'
  inheritance:
  - System.Object
  - System.IO.Stream
  - System.IO.UnmanagedMemoryStream
  implements: []
  inheritedMembers:
  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.EndRead(System.IAsyncResult)
  - System.IO.Stream.EndWrite(System.IAsyncResult)
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteTimeout
  - System.IO.UnmanagedMemoryStream.CanRead
  - System.IO.UnmanagedMemoryStream.CanSeek
  - System.IO.UnmanagedMemoryStream.CanWrite
  - System.IO.UnmanagedMemoryStream.Capacity
  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.Length
  - System.IO.UnmanagedMemoryStream.Position
  - System.IO.UnmanagedMemoryStream.PositionPointer
  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.ReadByte
  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewStream.Dispose(Boolean)
  fullName: MemoryMappedViewStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: Flush()
  nameWithType: MemoryMappedViewStream.Flush()
  fullName: MemoryMappedViewStream.Flush()
  type: Method
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  summary: Clears all buffers for this stream and causes any buffered data to be written to the underlying file.
  remarks: "If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:  \n  \n-   Any data that precedes the view up until the latest file offset.  \n  \n-   Any data that follows the view up until the earliest file offset."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void Flush ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
  fullName: MemoryMappedViewStream.PointerOffset
  type: Property
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  summary: "[Supported in the .NET Framework 4.5.1 and later versions]  \n  \n Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file."
  syntax:
    content: public long PointerOffset { get; }
    return:
      type: System.Int64
      description: The number of bytes between the starting position of this view and the beginning of the memory-mapped file.
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The object from which this instance was created is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  type: Property
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  summary: Gets a handle to the view of a memory-mapped file.
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: A wrapper for the operating system's handle to the view of the file.
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: MemoryMappedViewStream.SetLength(Int64)
  fullName: MemoryMappedViewStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.IO.MemoryMappedFiles
  - System.Core
  - netstandard
  namespace: System.IO.MemoryMappedFiles
  summary: Sets the length of the current stream.
  remarks: This method is internal only, because a stream that represents a view is not considered to have a length.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.UnmanagedMemoryStream
  parent: System.IO
  isExternal: false
  name: UnmanagedMemoryStream
  nameWithType: UnmanagedMemoryStream
  fullName: System.IO.UnmanagedMemoryStream
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewStream.Dispose(Boolean)
  fullName: MemoryMappedViewStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Flush()
  nameWithType: MemoryMappedViewStream.Flush()
  fullName: MemoryMappedViewStream.Flush()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
  fullName: MemoryMappedViewStream.PointerOffset
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: MemoryMappedViewStream.SetLength(Int64)
  fullName: MemoryMappedViewStream.SetLength(Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedViewStream.Dispose
  fullName: MemoryMappedViewStream.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: Flush
  nameWithType: MemoryMappedViewStream.Flush
  fullName: MemoryMappedViewStream.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: PointerOffset
  nameWithType: MemoryMappedViewStream.PointerOffset
  fullName: MemoryMappedViewStream.PointerOffset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  fullName: MemoryMappedViewStream.SafeMemoryMappedViewHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  isExternal: false
  name: SetLength
  nameWithType: MemoryMappedViewStream.SetLength
  fullName: MemoryMappedViewStream.SetLength
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.MemoryMappedFiles/MemoryMappedViewStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.UnmanagedMemoryStream.CanRead
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: CanRead
  nameWithType: UnmanagedMemoryStream.CanRead
  fullName: UnmanagedMemoryStream.CanRead
- uid: System.IO.UnmanagedMemoryStream.CanSeek
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: CanSeek
  nameWithType: UnmanagedMemoryStream.CanSeek
  fullName: UnmanagedMemoryStream.CanSeek
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: Stream.CanTimeout
- uid: System.IO.UnmanagedMemoryStream.CanWrite
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: CanWrite
  nameWithType: UnmanagedMemoryStream.CanWrite
  fullName: UnmanagedMemoryStream.CanWrite
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: Stream.EndRead(IAsyncResult)
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: Stream.EndWrite(IAsyncResult)
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: UnmanagedMemoryStream.FlushAsync(CancellationToken)
  fullName: UnmanagedMemoryStream.FlushAsync(CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.Length
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Length
  nameWithType: UnmanagedMemoryStream.Length
  fullName: UnmanagedMemoryStream.Length
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.UnmanagedMemoryStream.Position
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Position
  nameWithType: UnmanagedMemoryStream.Position
  fullName: UnmanagedMemoryStream.Position
- uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)
  fullName: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.ReadByte
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: ReadByte()
  nameWithType: UnmanagedMemoryStream.ReadByte()
  fullName: UnmanagedMemoryStream.ReadByte()
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: Stream.ReadTimeout
- uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)
  fullName: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)
  fullName: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: UnmanagedMemoryStream.WriteByte(Byte)
  fullName: UnmanagedMemoryStream.WriteByte(Byte)
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: Stream.WriteTimeout
- uid: System.IO.UnmanagedMemoryStream.Capacity
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Capacity
  nameWithType: UnmanagedMemoryStream.Capacity
  fullName: UnmanagedMemoryStream.Capacity
- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)
  nameWithType: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)
  fullName: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)
- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: Initialize(Byte*, Int64, Int64, FileAccess)
  nameWithType: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)
  fullName: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)
- uid: System.IO.UnmanagedMemoryStream.PositionPointer
  parent: System.IO.UnmanagedMemoryStream
  isExternal: false
  name: PositionPointer
  nameWithType: UnmanagedMemoryStream.PositionPointer
  fullName: UnmanagedMemoryStream.PositionPointer
