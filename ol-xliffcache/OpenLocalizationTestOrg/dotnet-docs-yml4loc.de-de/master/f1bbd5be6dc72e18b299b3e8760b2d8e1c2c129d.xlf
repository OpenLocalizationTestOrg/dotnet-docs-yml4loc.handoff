<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1bbd5be6dc72e18b299b3e8760b2d8e1c2c129d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Linq.Expressions.MethodCallExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60fd7f2900a161e8544287fb279307ce40799920</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ff1e9c81c44638aaeb6dadbb4b3da488b1f0cce</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a call to either static or an instance method.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Call%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph> factory method to create a <ph id="ph4">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> object is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.Call&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Dispatches to the specific visit method for this node type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">&lt;xref href="System.Linq.Expressions.MethodCallExpression"&gt;&lt;/xref&gt;</ph> calls the <ph id="ph2">&lt;xref href="System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This default implementation for <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph> nodes calls <ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to call into a more specific method on a derived visitor class of the <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it should still support unknown visitors by calling <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The visitor to visit this node with.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The result of visiting this node.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets a collection of expressions that represent arguments of the called method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> objects which represent the arguments to the called method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> for the method to be called.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> that represents the called method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the node type of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.ExpressionType"&gt;&lt;/xref&gt;</ph> that represents this expression.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> that represents the instance for instance method calls or null for static method calls.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> object's <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression.Method%2A&gt;</ph> property represents a <ph id="ph3">`static`</ph> (<ph id="ph4">`Shared`</ph> in Visual Basic) method, the <ph id="ph5">&lt;xref:System.Linq.Expressions.MethodCallExpression.Object%2A&gt;</ph> property is <ph id="ph6">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> that represents the receiving object of the method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.MethodCallExpression.Type"&gt;&lt;/xref&gt;</ph> that represents the static type of the expression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If all of the children are the same, it will return this expression.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.MethodCallExpression.Object"&gt;&lt;/xref&gt;</ph> property of the result.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.MethodCallExpression.Arguments"&gt;&lt;/xref&gt;</ph> property of the result.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This expression if no children are changed or an expression with the updated children.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the number of arguments to the expression tree node.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You should not use this member.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The number of arguments to the expression tree node as  <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the argument at index, throwing if index is out of bounds.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You should not use this member.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The index of the argument.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>