{"nodes":[{"content":"Contains the values of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> property.","nodes":[{"pos":[0,93],"content":"Contains the values of a <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.SearchResult\"&gt;&lt;/xref&gt;</ph> property.","source":"Contains the values of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> property."}],"pos":[832,926],"yaml":true},{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","nodes":[{"pos":[0,705],"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","nodes":[{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","pos":[0,705],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> instances are similar to <ph id=\"ph2\">&lt;xref:System.DirectoryServices.DirectoryEntry&gt;</ph> instances.","pos":[0,127],"source":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances."},{"content":"The notable difference is that the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.DirectoryEntry&gt;</ph> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> is already available in the <ph id=\"ph3\">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> that a <ph id=\"ph4\">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> query returns.","pos":[128,548],"source":" The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns."},{"content":"If you try to get a <ph id=\"ph1\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> property that your query did not specify for retrieval, the property will not be available.","pos":[549,705],"source":" If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available."}]}]}],"pos":[937,1643],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\"></xref> method determines whether a specified property value is in this collection.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\"&gt;&lt;/xref&gt;</ph> method determines whether a specified property value is in this collection.","source":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\"></xref> method determines whether a specified property value is in this collection."}],"pos":[4011,4191],"yaml":true},{"content":"The property value to find.","nodes":[{"pos":[0,27],"content":"The property value to find.","nodes":[{"content":"The property value to find.","pos":[0,27]}]}],"pos":[4328,4356],"yaml":true},{"content":"The return value is `true` if the specified property belongs to this collection; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"The return value is <ph id=\"ph1\">`true`</ph> if the specified property belongs to this collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"The return value is `true` if the specified property belongs to this collection; otherwise, `false`."}],"pos":[4414,4515],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\"></xref> method copies the property values from this collection to an array, starting at a particular index of the array.","nodes":[{"pos":[0,229],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method copies the property values from this collection to an array, starting at a particular index of the array.","source":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\"></xref> method copies the property values from this collection to an array, starting at a particular index of the array."}],"pos":[5774,6004],"yaml":true},{"content":"An array of type <xref href=\"System.Object\"></xref> that receives this collection's property values.","nodes":[{"pos":[0,100],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that receives this collection's property values.","source":"An array of type <xref href=\"System.Object\"></xref> that receives this collection's property values."}],"pos":[6156,6257],"yaml":true},{"content":"The zero-based array index at which to begin copying the property values.","nodes":[{"pos":[0,73],"content":"The zero-based array index at which to begin copying the property values.","nodes":[{"content":"The zero-based array index at which to begin copying the property values.","pos":[0,73]}]}],"pos":[6317,6391],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\"></xref> method retrieves the index of a specified property value in this collection.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\"&gt;&lt;/xref&gt;</ph> method retrieves the index of a specified property value in this collection.","source":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\"></xref> method retrieves the index of a specified property value in this collection."}],"pos":[7582,7762],"yaml":true},{"content":"The property value to find.","nodes":[{"pos":[0,27],"content":"The property value to find.","nodes":[{"content":"The property value to find.","pos":[0,27]}]}],"pos":[7897,7925],"yaml":true},{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","nodes":[{"pos":[0,105],"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","nodes":[{"content":"The zero-based index of the specified property value. If the object is not found, the return value is -1.","pos":[0,105],"nodes":[{"content":"The zero-based index of the specified property value.","pos":[0,53]},{"content":"If the object is not found, the return value is -1.","pos":[54,105]}]}]}],"pos":[7981,8087],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\"></xref> property gets the property value that is located at a specified index.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\"&gt;&lt;/xref&gt;</ph> property gets the property value that is located at a specified index.","source":"The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\"></xref> property gets the property value that is located at a specified index."}],"pos":[9257,9427],"yaml":true},{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \n  \n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.","nodes":[{"pos":[0,112],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.","nodes":[{"content":"In C#, this property is the indexer for the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ResultPropertyValueCollection&gt;</ph> class.","pos":[0,112],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class."}]},{"pos":[119,403],"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.","nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.","pos":[0,284],"nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[0,116]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>.","pos":[117,284],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>."}]}]}],"pos":[9438,9846],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the property value to retrieve.","nodes":[{"pos":[0,55],"content":"The zero-based index of the property value to retrieve.","nodes":[{"content":"The zero-based index of the property value to retrieve.","pos":[0,55]}]}],"pos":[9984,10040],"yaml":true},{"content":"The property value that is located at the specified index.","nodes":[{"pos":[0,58],"content":"The property value that is located at the specified index.","nodes":[{"content":"The property value that is located at the specified index.","pos":[0,58]}]}],"pos":[10097,10156],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ResultPropertyValueCollection\n  commentId: T:System.DirectoryServices.ResultPropertyValueCollection\n  id: ResultPropertyValueCollection\n  children:\n  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: ResultPropertyValueCollection\n  nameWithType: ResultPropertyValueCollection\n  fullName: System.DirectoryServices.ResultPropertyValueCollection\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Contains the values of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> property.\n  remarks: <xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.\n  syntax:\n    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  commentId: M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: ResultPropertyValueCollection.Contains(Object)\n  fullName: ResultPropertyValueCollection.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\"></xref> method determines whether a specified property value is in this collection.\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Boolean\n      description: The return value is `true` if the specified property belongs to this collection; otherwise, `false`.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  commentId: M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  id: CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: CopyTo(Object[], Int32)\n  nameWithType: ResultPropertyValueCollection.CopyTo(Object[], Int32)\n  fullName: ResultPropertyValueCollection.CopyTo(Object[], Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\"></xref> method copies the property values from this collection to an array, starting at a particular index of the array.\n  syntax:\n    content: public void CopyTo (object[] values, int index);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of type <xref href=\"System.Object\"></xref> that receives this collection's property values.\n    - id: index\n      type: System.Int32\n      description: The zero-based array index at which to begin copying the property values.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  commentId: M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: ResultPropertyValueCollection.IndexOf(Object)\n  fullName: ResultPropertyValueCollection.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\"></xref> method retrieves the index of a specified property value in this collection.\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The property value to find.\n    return:\n      type: System.Int32\n      description: The zero-based index of the specified property value. If the object is not found, the return value is -1.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  commentId: P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ResultPropertyValueCollection.Item(Int32)\n  fullName: ResultPropertyValueCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: The <xref href=\"System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\"></xref> property gets the property value that is located at a specified index.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.\"\n  syntax:\n    content: public object this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the property value to retrieve.\n    return:\n      type: System.Object\n      description: The property value that is located at the specified index.\n  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  parent: System.Collections\n  isExternal: false\n  name: ReadOnlyCollectionBase\n  nameWithType: ReadOnlyCollectionBase\n  fullName: System.Collections.ReadOnlyCollectionBase\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: ResultPropertyValueCollection.Contains(Object)\n  fullName: ResultPropertyValueCollection.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: CopyTo(Object[], Int32)\n  nameWithType: ResultPropertyValueCollection.CopyTo(Object[], Int32)\n  fullName: ResultPropertyValueCollection.CopyTo(Object[], Int32)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: ResultPropertyValueCollection.IndexOf(Object)\n  fullName: ResultPropertyValueCollection.IndexOf(Object)\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ResultPropertyValueCollection.Item(Int32)\n  fullName: ResultPropertyValueCollection.Item(Int32)\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ResultPropertyValueCollection.Contains\n  fullName: ResultPropertyValueCollection.Contains\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ResultPropertyValueCollection.CopyTo\n  fullName: ResultPropertyValueCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ResultPropertyValueCollection.IndexOf\n  fullName: ResultPropertyValueCollection.IndexOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*\n  parent: System.DirectoryServices.ResultPropertyValueCollection\n  isExternal: false\n  name: Item\n  nameWithType: ResultPropertyValueCollection.Item\n  fullName: ResultPropertyValueCollection.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyValueCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.ReadOnlyCollectionBase.Count\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyCollectionBase.Count\n  fullName: ReadOnlyCollectionBase.Count\n- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollectionBase.GetEnumerator()\n  fullName: ReadOnlyCollectionBase.GetEnumerator()\n- uid: System.Collections.ReadOnlyCollectionBase.InnerList\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: InnerList\n  nameWithType: ReadOnlyCollectionBase.InnerList\n  fullName: ReadOnlyCollectionBase.InnerList\n- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ReadOnlyCollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: ReadOnlyCollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollectionBase.ICollection.IsSynchronized\n  fullName: ReadOnlyCollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: ReadOnlyCollectionBase.ICollection.SyncRoot\n  fullName: ReadOnlyCollectionBase.ICollection.SyncRoot\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}