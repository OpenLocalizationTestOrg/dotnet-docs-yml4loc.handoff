{"nodes":[{"content":"Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class. This class cannot be inherited.","nodes":[{"pos":[0,147],"content":"Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class. This class cannot be inherited.","nodes":[{"content":"Provides access to the request and response objects used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,115],"source":"Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class."},{"content":"This class cannot be inherited.","pos":[116,147]}]}],"pos":[921,1069],"yaml":true},{"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.  \n  \n The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.  \n  \n Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>. Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>. After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.","nodes":[{"pos":[0,275],"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.","nodes":[{"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.","pos":[0,275],"nodes":[{"content":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> object.","pos":[0,161],"source":"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object."},{"content":"This class also has methods that allow an <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> object to accept a WebSocket connection.","pos":[162,275],"source":" This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection."}]}]},{"pos":[282,997],"content":"The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.","nodes":[{"content":"The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.","pos":[0,715],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method returns instances of the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> class.","pos":[0,125],"source":"The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class."},{"content":"To get the object that represents the client request, use the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext.Request%2A&gt;</ph> property.","pos":[126,246],"source":" To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property."},{"content":"To get the object that represents the response that will be sent to the client by the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> property.","pos":[247,432],"source":" To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property."},{"content":"To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <ph id=\"ph1\">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph> property.","pos":[433,715],"source":" To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property."}]}]},{"pos":[1004,1574],"content":"Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>. Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>. After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.","nodes":[{"content":"Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>. Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>. After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.","pos":[0,570],"nodes":[{"content":"Closing an <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object sends the response to the client and frees any resources used by the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerContext&gt;</ph>.","pos":[0,163],"source":"Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>."},{"content":"Aborting an <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object discards the response to the client if it has not already been sent, and frees any resources used by the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerContext&gt;</ph>.","pos":[164,364],"source":" Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>."},{"content":"After closing or aborting an <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object, you cannot reference its methods or properties.","pos":[365,487],"source":" After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties."},{"content":"If you do so, you will receive an <ph id=\"ph1\">&lt;xref:System.ObjectDisposedException&gt;</ph> exception.","pos":[488,570],"source":" If you do so, you will receive an <xref:System.ObjectDisposedException> exception."}]}]}],"pos":[1080,2661],"yaml":true,"extradata":"MT"},{"content":"Accept a WebSocket connection as an asynchronous operation.","nodes":[{"pos":[0,59],"content":"Accept a WebSocket connection as an asynchronous operation.","nodes":[{"content":"Accept a WebSocket connection as an asynchronous operation.","pos":[0,59]}]}],"pos":[4497,4557],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \n  \n The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","nodes":[{"pos":[0,153],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","pos":[0,153],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."}]}]},{"pos":[160,293],"content":"The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","nodes":[{"content":"The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","pos":[0,133],"nodes":[{"content":"The size of the receive buffer is 16,385 bytes.","pos":[0,47]},{"content":"The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).","pos":[48,133]}]}]}],"pos":[4568,4866],"yaml":true,"extradata":"MT"},{"content":"The supported WebSocket sub-protocol.","nodes":[{"pos":[0,37],"content":"The supported WebSocket sub-protocol.","nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]}],"pos":[5136,5174],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,303],"content":"The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1.Result\"&gt;&lt;/xref&gt;</ph> property on the task object returns an <ph id=\"ph2\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;&lt;/xref&gt;</ph> object.","pos":[57,237],"source":" The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]}],"pos":[5297,5611],"yaml":true},{"content":"<code>subProtocol</code> is an empty string  \n  \n -or-  \n  \n <code>subProtocol</code> contains illegal characters.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string","source":"<code>subProtocol</code> is an empty string"},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,114],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","source":"<code>subProtocol</code> contains illegal characters."}],"pos":[5784,5905],"yaml":true},{"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"pos":[0,80],"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]}],"pos":[6031,6112],"yaml":true},{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.","nodes":[{"pos":[0,142],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.","nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.","pos":[0,142]}]}],"pos":[7438,7581],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \n  \n The size of the receive buffer is 16,385 bytes.","nodes":[{"pos":[0,153],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","pos":[0,153],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."}]}]},{"pos":[160,207],"content":"The size of the receive buffer is 16,385 bytes.","nodes":[{"content":"The size of the receive buffer is 16,385 bytes.","pos":[0,47]}]}],"pos":[7592,7804],"yaml":true,"extradata":"MT"},{"content":"The supported WebSocket sub-protocol.","nodes":[{"pos":[0,37],"content":"The supported WebSocket sub-protocol.","nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]}],"pos":[8102,8140],"yaml":true},{"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"pos":[0,59],"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]}],"pos":[8215,8275],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,303],"content":"The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1.Result\"&gt;&lt;/xref&gt;</ph> property on the task object returns an <ph id=\"ph2\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;&lt;/xref&gt;</ph> object.","pos":[57,237],"source":" The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]}],"pos":[8398,8712],"yaml":true},{"content":"<code>subProtocol</code> is an empty string  \n  \n -or-  \n  \n <code>subProtocol</code> contains illegal characters.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string","source":"<code>subProtocol</code> is an empty string"},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,114],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","source":"<code>subProtocol</code> contains illegal characters."}],"pos":[8885,9006],"yaml":true},{"content":"<code>keepAliveInterval</code> is too small.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","source":"<code>keepAliveInterval</code> is too small."}],"pos":[9120,9165],"yaml":true},{"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"pos":[0,80],"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]}],"pos":[9291,9372],"yaml":true},{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.","nodes":[{"pos":[0,163],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.","nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.","pos":[0,163]}]}],"pos":[10758,10922],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.","nodes":[{"pos":[0,155],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.","pos":[0,155],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> &gt; object will complete after the WebSocket connection has been accepted.","pos":[31,155],"source":" The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted."}]}]}],"pos":[10933,11089],"yaml":true,"extradata":"MT"},{"content":"The supported WebSocket sub-protocol.","nodes":[{"pos":[0,37],"content":"The supported WebSocket sub-protocol.","nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]}],"pos":[11410,11448],"yaml":true},{"content":"The receive buffer size in bytes.","nodes":[{"pos":[0,33],"content":"The receive buffer size in bytes.","nodes":[{"content":"The receive buffer size in bytes.","pos":[0,33]}]}],"pos":[11520,11554],"yaml":true},{"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"pos":[0,59],"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]}],"pos":[11629,11689],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,303],"content":"The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1.Result\"&gt;&lt;/xref&gt;</ph> property on the task object returns an <ph id=\"ph2\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;&lt;/xref&gt;</ph> object.","pos":[57,237],"source":" The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]}],"pos":[11812,12126],"yaml":true},{"content":"<code>subProtocol</code> is an empty string  \n  \n -or-  \n  \n <code>subProtocol</code> contains illegal characters.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string","source":"<code>subProtocol</code> is an empty string"},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,114],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","source":"<code>subProtocol</code> contains illegal characters."}],"pos":[12299,12420],"yaml":true},{"content":"<code>keepAliveInterval</code> is too small.  \n  \n -or-  \n  \n <code>receiveBufferSize</code> is less than 16 bytes  \n  \n -or-  \n  \n <code>receiveBufferSize</code> is greater than 64K bytes.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","source":"<code>keepAliveInterval</code> is too small."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,114],"content":"<ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is less than 16 bytes","source":"<code>receiveBufferSize</code> is less than 16 bytes"},{"pos":[121,125],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[132,189],"content":"<ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is greater than 64K bytes.","source":"<code>receiveBufferSize</code> is greater than 64K bytes."}],"pos":[12534,12734],"yaml":true},{"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"pos":[0,80],"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]}],"pos":[12860,12941],"yaml":true},{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.","nodes":[{"pos":[0,184],"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.","nodes":[{"content":"Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.","pos":[0,184]}]}],"pos":[14486,14671],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","nodes":[{"pos":[0,153],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.","pos":[0,153],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the WebSocket connection has been accepted.","pos":[31,153],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted."}]}]}],"pos":[14682,14836],"yaml":true,"extradata":"MT"},{"content":"The supported WebSocket sub-protocol.","nodes":[{"pos":[0,37],"content":"The supported WebSocket sub-protocol.","nodes":[{"content":"The supported WebSocket sub-protocol.","pos":[0,37]}]}],"pos":[15192,15230],"yaml":true},{"content":"The receive buffer size in bytes.","nodes":[{"pos":[0,33],"content":"The receive buffer size in bytes.","nodes":[{"content":"The receive buffer size in bytes.","pos":[0,33]}]}],"pos":[15302,15336],"yaml":true},{"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"pos":[0,59],"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]}],"pos":[15411,15471],"yaml":true},{"content":"An internal buffer to use for this operation.","nodes":[{"pos":[0,45],"content":"An internal buffer to use for this operation.","nodes":[{"content":"An internal buffer to use for this operation.","pos":[0,45]}]}],"pos":[15560,15606],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,303],"content":"The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1.Result\"&gt;&lt;/xref&gt;</ph> property on the task object returns an <ph id=\"ph2\">&lt;xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"&gt;&lt;/xref&gt;</ph> object.","pos":[57,237],"source":" The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns an <xref href=\"System.Net.WebSockets.HttpListenerWebSocketContext\"></xref> object."}]}],"pos":[15729,16043],"yaml":true},{"content":"<code>subProtocol</code> is an empty string  \n  \n -or-  \n  \n <code>subProtocol</code> contains illegal characters.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> is an empty string","source":"<code>subProtocol</code> is an empty string"},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,114],"content":"<ph id=\"ph1\">&lt;code&gt;subProtocol&lt;/code&gt;</ph> contains illegal characters.","source":"<code>subProtocol</code> contains illegal characters."}],"pos":[16216,16337],"yaml":true},{"content":"<code>keepAliveInterval</code> is too small.  \n  \n -or-  \n  \n <code>receiveBufferSize</code> is less than 16 bytes  \n  \n -or-  \n  \n <code>receiveBufferSize</code> is greater than 64K bytes.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;keepAliveInterval&lt;/code&gt;</ph> is too small.","source":"<code>keepAliveInterval</code> is too small."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,114],"content":"<ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is less than 16 bytes","source":"<code>receiveBufferSize</code> is less than 16 bytes"},{"pos":[121,125],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[132,189],"content":"<ph id=\"ph1\">&lt;code&gt;receiveBufferSize&lt;/code&gt;</ph> is greater than 64K bytes.","source":"<code>receiveBufferSize</code> is greater than 64K bytes."}],"pos":[16451,16651],"yaml":true},{"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"pos":[0,80],"content":"An error occurred when sending the response to complete the WebSocket handshake.","nodes":[{"content":"An error occurred when sending the response to complete the WebSocket handshake.","pos":[0,80]}]}],"pos":[16777,16858],"yaml":true},{"content":"Gets the <xref href=\"System.Net.HttpListenerRequest\"></xref> that represents a client's request for a resource.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerRequest\"&gt;&lt;/xref&gt;</ph> that represents a client's request for a resource.","source":"Gets the <xref href=\"System.Net.HttpListenerRequest\"></xref> that represents a client's request for a resource."}],"pos":[17961,18073],"yaml":true},{"content":"If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.","nodes":[{"pos":[0,260],"content":"If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.","nodes":[{"content":"If you close this <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph>, it will send the response to the client, close the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> that contains the response, and close the <ph id=\"ph3\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object returned by this property.","pos":[0,260],"source":"If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property."}]}],"pos":[18084,18345],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.HttpListenerRequest\"></xref> object that represents the client request.","nodes":[{"pos":[0,97],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerRequest\"&gt;&lt;/xref&gt;</ph> object that represents the client request.","source":"An <xref href=\"System.Net.HttpListenerRequest\"></xref> object that represents the client request."}],"pos":[18772,18870],"yaml":true},{"content":"Gets the <xref href=\"System.Net.HttpListenerResponse\"></xref> object that will be sent to the client in response to the client's request.","nodes":[{"pos":[0,137],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;&lt;/xref&gt;</ph> object that will be sent to the client in response to the client's request.","source":"Gets the <xref href=\"System.Net.HttpListenerResponse\"></xref> object that will be sent to the client in response to the client's request."}],"pos":[20008,20146],"yaml":true},{"content":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.","nodes":[{"pos":[0,290],"content":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.","nodes":[{"content":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.","pos":[0,290],"nodes":[{"content":"Your application configures the response by setting properties in the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> object returned by this property.","pos":[0,142],"source":"Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property."},{"content":"After configuring the response, you send it to the client by closing the response, or by closing this <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object.","pos":[143,290],"source":" After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object."}]}]}],"pos":[20157,20448],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.HttpListenerResponse\"></xref> object used to send a response back to the client.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerResponse\"&gt;&lt;/xref&gt;</ph> object used to send a response back to the client.","source":"An <xref href=\"System.Net.HttpListenerResponse\"></xref> object used to send a response back to the client."}],"pos":[20858,20965],"yaml":true},{"content":"Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <xref href=\"System.Net.HttpListenerContext\"></xref> object.","nodes":[{"pos":[0,198],"content":"Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerContext\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <xref href=\"System.Net.HttpListenerContext\"></xref> object."}],"pos":[22080,22279],"yaml":true},{"content":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.  \n  \n To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.","nodes":[{"pos":[0,317],"content":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> indicates that it requires authentication using the <ph id=\"ph2\">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property or by specifying an <ph id=\"ph3\">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate using the <ph id=\"ph4\">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property.","pos":[0,317],"source":"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property."}]},{"pos":[324,533],"content":"To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.","nodes":[{"content":"To determine the client's login name and authentication information, check the <ph id=\"ph1\">&lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName&gt;</ph> property in the object returned by this property.","pos":[0,209],"source":"To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property."}]}],"pos":[22290,22828],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that describes the client, or `null` if the <xref href=\"System.Net.HttpListener\"></xref> that supplied this <xref href=\"System.Net.HttpListenerContext\"></xref> does not require authentication.","nodes":[{"pos":[0,260],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IPrincipal\"&gt;&lt;/xref&gt;</ph> object that describes the client, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> that supplied this <ph id=\"ph4\">&lt;xref href=\"System.Net.HttpListenerContext\"&gt;&lt;/xref&gt;</ph> does not require authentication.","source":"An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that describes the client, or `null` if the <xref href=\"System.Net.HttpListener\"></xref> that supplied this <xref href=\"System.Net.HttpListenerContext\"></xref> does not require authentication."}],"pos":[23287,23548],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.HttpListenerContext\n  commentId: T:System.Net.HttpListenerContext\n  id: HttpListenerContext\n  children:\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  - System.Net.HttpListenerContext.Request\n  - System.Net.HttpListenerContext.Response\n  - System.Net.HttpListenerContext.User\n  langs:\n  - csharp\n  name: HttpListenerContext\n  nameWithType: HttpListenerContext\n  fullName: System.Net.HttpListenerContext\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Provides access to the request and response objects used by the <xref href=\"System.Net.HttpListener\"></xref> class. This class cannot be inherited.\n  remarks: \"This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object. This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.  \\n  \\n The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class. To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property. To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property. To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.  \\n  \\n Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>. Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>. After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties. If you do so, you will receive an <xref:System.ObjectDisposedException> exception.\"\n  example:\n  - \"The following code example displays the user information for a client request.  \\n  \\n [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]\"\n  syntax:\n    content: public sealed class HttpListenerContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  commentId: M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  id: AcceptWebSocketAsync(System.String)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Accept a WebSocket connection as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \\n  \\n The size of the receive buffer is 16,385 bytes. The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\"></xref> property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  commentId: M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  id: AcceptWebSocketAsync(System.String,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String, TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, TimeSpan)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, TimeSpan)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.  \\n  \\n The size of the receive buffer is 16,385 bytes.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\"></xref> property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>keepAliveInterval</code> is too small.\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  commentId: M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String, Int32, TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The receive buffer size in bytes.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\"></xref> property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>keepAliveInterval</code> is too small.  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is less than 16 bytes  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is greater than 64K bytes.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  commentId: M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment<byte> internalBuffer);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The supported WebSocket sub-protocol.\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The receive buffer size in bytes.\n    - id: keepAliveInterval\n      type: System.TimeSpan\n      description: The WebSocket protocol keep-alive interval in milliseconds.\n    - id: internalBuffer\n      type: System.ArraySegment{System.Byte}\n      description: An internal buffer to use for this operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\"></xref> property on the task object returns an <xref href=\\\"System.Net.WebSockets.HttpListenerWebSocketContext\\\"></xref> object.\"\n  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>subProtocol</code> is an empty string  \\n  \\n -or-  \\n  \\n <code>subProtocol</code> contains illegal characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>keepAliveInterval</code> is too small.  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is less than 16 bytes  \\n  \\n -or-  \\n  \\n <code>receiveBufferSize</code> is greater than 64K bytes.\"\n  - type: System.Net.WebSockets.WebSocketException\n    commentId: T:System.Net.WebSockets.WebSocketException\n    description: An error occurred when sending the response to complete the WebSocket handshake.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.Request\n  commentId: P:System.Net.HttpListenerContext.Request\n  id: Request\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: Request\n  nameWithType: HttpListenerContext.Request\n  fullName: HttpListenerContext.Request\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.HttpListenerRequest\"></xref> that represents a client's request for a resource.\n  remarks: If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.\n  example:\n  - \"The following code example demonstrates calling this method. The `listener` variable holds an <xref:System.Net.HttpListener> object.  \\n  \\n [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]\"\n  syntax:\n    content: public System.Net.HttpListenerRequest Request { get; }\n    return:\n      type: System.Net.HttpListenerRequest\n      description: An <xref href=\"System.Net.HttpListenerRequest\"></xref> object that represents the client request.\n  overload: System.Net.HttpListenerContext.Request*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.Response\n  commentId: P:System.Net.HttpListenerContext.Response\n  id: Response\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: Response\n  nameWithType: HttpListenerContext.Response\n  fullName: HttpListenerContext.Response\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.HttpListenerResponse\"></xref> object that will be sent to the client in response to the client's request.\n  remarks: Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property. After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.\n  example:\n  - \"The following code example demonstrates getting the response to a client's request and adding the response body.  \\n  \\n [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]\"\n  syntax:\n    content: public System.Net.HttpListenerResponse Response { get; }\n    return:\n      type: System.Net.HttpListenerResponse\n      description: An <xref href=\"System.Net.HttpListenerResponse\"></xref> object used to send a response back to the client.\n  overload: System.Net.HttpListenerContext.Response*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerContext.User\n  commentId: P:System.Net.HttpListenerContext.User\n  id: User\n  parent: System.Net.HttpListenerContext\n  langs:\n  - csharp\n  name: User\n  nameWithType: HttpListenerContext.User\n  fullName: HttpListenerContext.User\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <xref href=\"System.Net.HttpListenerContext\"></xref> object.\n  remarks: \"An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.  \\n  \\n To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName> property in the object returned by this property.\"\n  example:\n  - \"The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.  \\n  \\n [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]\"\n  syntax:\n    content: public System.Security.Principal.IPrincipal User { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: An <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that describes the client, or `null` if the <xref href=\"System.Net.HttpListener\"></xref> that supplied this <xref href=\"System.Net.HttpListenerContext\"></xref> does not require authentication.\n  overload: System.Net.HttpListenerContext.User*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Net.WebSockets.WebSocketException\n  parent: System.Net.WebSockets\n  isExternal: false\n  name: WebSocketException\n  nameWithType: WebSocketException\n  fullName: System.Net.WebSockets.WebSocketException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Net.WebSockets.HttpListenerWebSocketContext\n  name: HttpListenerWebSocketContext\n  nameWithType: HttpListenerWebSocketContext\n  fullName: System.Net.WebSockets.HttpListenerWebSocketContext\n- uid: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<HttpListenerWebSocketContext>\n  nameWithType: Task<HttpListenerWebSocketContext>\n  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.WebSockets.HttpListenerWebSocketContext\n    name: HttpListenerWebSocketContext\n    nameWithType: HttpListenerWebSocketContext\n    fullName: System.Net.WebSockets.HttpListenerWebSocketContext\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String, TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, TimeSpan)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String, Int32, TimeSpan)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n  fullName: HttpListenerContext.AcceptWebSocketAsync(String, Int32, TimeSpan, ArraySegment<Byte>)\n- uid: System.ArraySegment`1\n  name: ArraySegment<T>\n  nameWithType: ArraySegment<T>\n  fullName: System.ArraySegment<T>\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  isExternal: false\n  name: ArraySegment<Byte>\n  nameWithType: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    nameWithType: ArraySegment\n    fullName: System.ArraySegment\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.HttpListenerContext.Request\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Request\n  nameWithType: HttpListenerContext.Request\n  fullName: HttpListenerContext.Request\n- uid: System.Net.HttpListenerRequest\n  parent: System.Net\n  isExternal: false\n  name: HttpListenerRequest\n  nameWithType: HttpListenerRequest\n  fullName: System.Net.HttpListenerRequest\n- uid: System.Net.HttpListenerContext.Response\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Response\n  nameWithType: HttpListenerContext.Response\n  fullName: HttpListenerContext.Response\n- uid: System.Net.HttpListenerResponse\n  parent: System.Net\n  isExternal: false\n  name: HttpListenerResponse\n  nameWithType: HttpListenerResponse\n  fullName: System.Net.HttpListenerResponse\n- uid: System.Net.HttpListenerContext.User\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: User\n  nameWithType: HttpListenerContext.User\n  fullName: HttpListenerContext.User\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: AcceptWebSocketAsync\n  nameWithType: HttpListenerContext.AcceptWebSocketAsync\n  fullName: HttpListenerContext.AcceptWebSocketAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n- uid: System.Net.HttpListenerContext.Request*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Request\n  nameWithType: HttpListenerContext.Request\n  fullName: HttpListenerContext.Request\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n- uid: System.Net.HttpListenerContext.Response*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: Response\n  nameWithType: HttpListenerContext.Response\n  fullName: HttpListenerContext.Response\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n- uid: System.Net.HttpListenerContext.User*\n  parent: System.Net.HttpListenerContext\n  isExternal: false\n  name: User\n  nameWithType: HttpListenerContext.User\n  fullName: HttpListenerContext.User\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}