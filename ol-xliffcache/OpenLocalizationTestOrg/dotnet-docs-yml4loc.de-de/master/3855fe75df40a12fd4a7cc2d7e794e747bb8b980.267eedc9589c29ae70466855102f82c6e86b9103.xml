{"nodes":[{"content":"Defines the mapping to be used for translating exceptions to fault.","nodes":[{"pos":[0,67],"content":"Defines the mapping to be used for translating exceptions to fault.","nodes":[{"content":"Defines the mapping to be used for translating exceptions to fault.","pos":[0,67]}]}],"pos":[699,767],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ExceptionMapper\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ExceptionMapper\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ExceptionMapper\"></xref> class."}],"pos":[2104,2202],"yaml":true},{"content":"Translates the input exception to a fault.","nodes":[{"pos":[0,42],"content":"Translates the input exception to a fault.","nodes":[{"content":"Translates the input exception to a fault.","pos":[0,42]}]}],"pos":[3376,3419],"yaml":true},{"content":"The exception to be mapped to a fault.","nodes":[{"pos":[0,38],"content":"The exception to be mapped to a fault.","nodes":[{"content":"The exception to be mapped to a fault.","pos":[0,38]}]}],"pos":[3599,3638],"yaml":true},{"content":"The fault corresponding to the input exception.","nodes":[{"pos":[0,47],"content":"The fault corresponding to the input exception.","nodes":[{"content":"The fault corresponding to the input exception.","pos":[0,47]}]}],"pos":[3716,3764],"yaml":true},{"content":"Translates the input exception to a fault.","nodes":[{"pos":[0,42],"content":"Translates the input exception to a fault.","nodes":[{"content":"Translates the input exception to a fault.","pos":[0,42]}]}],"pos":[5009,5052],"yaml":true},{"content":"The exception to be mapped to a fault.","nodes":[{"pos":[0,38],"content":"The exception to be mapped to a fault.","nodes":[{"content":"The exception to be mapped to a fault.","pos":[0,38]}]}],"pos":[5277,5316],"yaml":true},{"content":"The SOAP Namespace to be used when generating the mapped fault.","nodes":[{"pos":[0,63],"content":"The SOAP Namespace to be used when generating the mapped fault.","nodes":[{"content":"The SOAP Namespace to be used when generating the mapped fault.","pos":[0,63]}]}],"pos":[5385,5449],"yaml":true},{"content":"The WS-Trust Namespace to be used when generating the mapped fault.","nodes":[{"pos":[0,67],"content":"The WS-Trust Namespace to be used when generating the mapped fault.","nodes":[{"content":"The WS-Trust Namespace to be used when generating the mapped fault.","pos":[0,67]}]}],"pos":[5519,5587],"yaml":true},{"content":"The fault corresponding to the input exception.","nodes":[{"pos":[0,47],"content":"The fault corresponding to the input exception.","nodes":[{"content":"The fault corresponding to the input exception.","pos":[0,47]}]}],"pos":[5665,5713],"yaml":true},{"content":"Determines whether an exception that occurred during the processing of a security token should be handled.","nodes":[{"pos":[0,106],"content":"Determines whether an exception that occurred during the processing of a security token should be handled.","nodes":[{"content":"Determines whether an exception that occurred during the processing of a security token should be handled.","pos":[0,106]}]}],"pos":[6976,7083],"yaml":true},{"content":"The input exception.","nodes":[{"pos":[0,20],"content":"The input exception.","nodes":[{"content":"The input exception.","pos":[0,20]}]}],"pos":[7258,7279],"yaml":true},{"content":"`True` if the exception should be handled; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`True`</ph> if the exception should be handled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the exception should be handled; otherwise, `false`."}],"pos":[7337,7402],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ExceptionMapper\n  commentId: T:System.ServiceModel.ExceptionMapper\n  id: ExceptionMapper\n  children:\n  - System.ServiceModel.ExceptionMapper.#ctor\n  - System.ServiceModel.ExceptionMapper.FromException(System.Exception)\n  - System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)\n  - System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)\n  langs:\n  - csharp\n  name: ExceptionMapper\n  nameWithType: ExceptionMapper\n  fullName: System.ServiceModel.ExceptionMapper\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Defines the mapping to be used for translating exceptions to fault.\n  syntax:\n    content: public class ExceptionMapper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ExceptionMapper.#ctor\n  commentId: M:System.ServiceModel.ExceptionMapper.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.ExceptionMapper\n  langs:\n  - csharp\n  name: ExceptionMapper()\n  nameWithType: ExceptionMapper.ExceptionMapper()\n  fullName: ExceptionMapper.ExceptionMapper()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ExceptionMapper\"></xref> class.\n  syntax:\n    content: public ExceptionMapper ();\n    parameters: []\n  overload: System.ServiceModel.ExceptionMapper.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception)\n  commentId: M:System.ServiceModel.ExceptionMapper.FromException(System.Exception)\n  id: FromException(System.Exception)\n  parent: System.ServiceModel.ExceptionMapper\n  langs:\n  - csharp\n  name: FromException(Exception)\n  nameWithType: ExceptionMapper.FromException(Exception)\n  fullName: ExceptionMapper.FromException(Exception)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Translates the input exception to a fault.\n  syntax:\n    content: public virtual System.ServiceModel.FaultException FromException (Exception ex);\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: The exception to be mapped to a fault.\n    return:\n      type: System.ServiceModel.FaultException\n      description: The fault corresponding to the input exception.\n  overload: System.ServiceModel.ExceptionMapper.FromException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)\n  commentId: M:System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)\n  id: FromException(System.Exception,System.String,System.String)\n  parent: System.ServiceModel.ExceptionMapper\n  langs:\n  - csharp\n  name: FromException(Exception, String, String)\n  nameWithType: ExceptionMapper.FromException(Exception, String, String)\n  fullName: ExceptionMapper.FromException(Exception, String, String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Translates the input exception to a fault.\n  syntax:\n    content: public virtual System.ServiceModel.FaultException FromException (Exception ex, string soapNamespace, string trustNamespace);\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: The exception to be mapped to a fault.\n    - id: soapNamespace\n      type: System.String\n      description: The SOAP Namespace to be used when generating the mapped fault.\n    - id: trustNamespace\n      type: System.String\n      description: The WS-Trust Namespace to be used when generating the mapped fault.\n    return:\n      type: System.ServiceModel.FaultException\n      description: The fault corresponding to the input exception.\n  overload: System.ServiceModel.ExceptionMapper.FromException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)\n  commentId: M:System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)\n  id: HandleSecurityTokenProcessingException(System.Exception)\n  parent: System.ServiceModel.ExceptionMapper\n  langs:\n  - csharp\n  name: HandleSecurityTokenProcessingException(Exception)\n  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)\n  fullName: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Determines whether an exception that occurred during the processing of a security token should be handled.\n  syntax:\n    content: public virtual bool HandleSecurityTokenProcessingException (Exception ex);\n    parameters:\n    - id: ex\n      type: System.Exception\n      description: The input exception.\n    return:\n      type: System.Boolean\n      description: '`True` if the exception should be handled; otherwise, `false`.'\n  overload: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.ExceptionMapper.#ctor\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: ExceptionMapper()\n  nameWithType: ExceptionMapper.ExceptionMapper()\n  fullName: ExceptionMapper.ExceptionMapper()\n- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception)\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: FromException(Exception)\n  nameWithType: ExceptionMapper.FromException(Exception)\n  fullName: ExceptionMapper.FromException(Exception)\n- uid: System.ServiceModel.FaultException\n  parent: System.ServiceModel\n  isExternal: false\n  name: FaultException\n  nameWithType: FaultException\n  fullName: System.ServiceModel.FaultException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: FromException(Exception, String, String)\n  nameWithType: ExceptionMapper.FromException(Exception, String, String)\n  fullName: ExceptionMapper.FromException(Exception, String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: HandleSecurityTokenProcessingException(Exception)\n  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)\n  fullName: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ExceptionMapper.#ctor*\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: ExceptionMapper\n  nameWithType: ExceptionMapper.ExceptionMapper\n  fullName: ExceptionMapper.ExceptionMapper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n- uid: System.ServiceModel.ExceptionMapper.FromException*\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: FromException\n  nameWithType: ExceptionMapper.FromException\n  fullName: ExceptionMapper.FromException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException*\n  parent: System.ServiceModel.ExceptionMapper\n  isExternal: false\n  name: HandleSecurityTokenProcessingException\n  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException\n  fullName: ExceptionMapper.HandleSecurityTokenProcessingException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ExceptionMapper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}