{"nodes":[{"content":"Implements a server channel for remote calls that uses the IPC system to transmit messages.","nodes":[{"pos":[0,91],"content":"Implements a server channel for remote calls that uses the IPC system to transmit messages.","nodes":[{"content":"Implements a server channel for remote calls that uses the IPC system to transmit messages.","pos":[0,91]}]}],"pos":[1864,1956],"yaml":true},{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \n  \n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer. When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.  \n  \n To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.  \n  \n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.  \n  \n A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","nodes":[{"pos":[0,391],"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.","nodes":[{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.","pos":[0,391],"nodes":[{"content":"Channels are used by the .NET Framework remoting infrastructure to transport remote calls.","pos":[0,90]},{"content":"When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.","pos":[91,232]},{"content":"After the message is received, it is deserialized and processed.","pos":[233,297]},{"content":"Any returned values are transmitted by the server channel and received by the client channel.","pos":[298,391]}]}]},{"pos":[398,728],"content":"The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer. When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer. When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.","pos":[0,330],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.","pos":[0,199],"source":"The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer."},{"content":"When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.","pos":[200,330]}]}]},{"pos":[735,1035],"content":"To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.","nodes":[{"content":"To perform additional processing of messages on the server side, specify an implementation of the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider&gt;</ph> interface through which all messages processed by the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> instance are passed.","pos":[0,300],"source":"To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed."}]},{"pos":[1042,1176],"content":"The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> instance accepts messages serialized in either binary or SOAP format.","pos":[0,134],"source":"The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format."}]},{"pos":[1183,1812],"content":"A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.","nodes":[{"content":"A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.","pos":[0,629],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName&gt;</ph> method) or programmatically (by passing an <ph id=\"ph3\">&lt;xref:System.Collections.IDictionary&gt;</ph> collection to the <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A&gt;</ph> constructor).","pos":[0,468],"source":"A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor)."},{"content":"For a list of these configuration properties, see the documentation for the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A&gt;</ph> constructor.","pos":[469,629],"source":" For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor."}]}]},{"pos":[1820,2170],"content":"[!CAUTION]\n When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","leadings":["","> "],"nodes":[{"content":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","pos":[11,348],"nodes":[{"content":"When setting the <ph id=\"ph1\">`exclusiveAddressUse`</ph> property to <ph id=\"ph2\">`false`</ph> in the <ph id=\"ph3\">`properties`</ph> argument, several <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> objects can be registered for the same named pipe.","pos":[1,209],"source":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe."},{"content":"In such a case requests can go to any of the channels registered.","pos":[210,275]},{"content":"This setting is considered secure only if ALCs are also used.","pos":[276,337]}]}]}],"pos":[1967,4151],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified IPC port name.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified IPC port name.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified IPC port name."}],"pos":[6613,6762],"yaml":true},{"content":"The name of the IPC port to be used by the channel.","nodes":[{"pos":[0,51],"content":"The name of the IPC port to be used by the channel.","nodes":[{"content":"The name of the IPC port to be used by the channel.","pos":[0,51]}]}],"pos":[7225,7277],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties and sink.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel properties and sink.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties and sink."}],"pos":[8762,8925],"yaml":true},{"content":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","nodes":[{"pos":[0,184],"content":"For more information about channel configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","source":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"pos":[191,276],"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","source":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`."},{"pos":[284,634],"content":"[!CAUTION]\n When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","leadings":["","> "],"nodes":[{"content":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","pos":[11,348],"nodes":[{"content":"When setting the <ph id=\"ph1\">`exclusiveAddressUse`</ph> property to <ph id=\"ph2\">`false`</ph> in the <ph id=\"ph3\">`properties`</ph> argument, several <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> objects can be registered for the same named pipe.","pos":[1,209],"source":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe."},{"content":"In such a case requests can go to any of the channels registered.","pos":[210,275]},{"content":"This setting is considered secure only if ALCs are also used.","pos":[276,337]}]}]}],"pos":[8936,9578],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> collection that specifies values for configuration properties to be used by the channel.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel."}],"pos":[10312,10455],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[10569,10696],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name and IPC port name.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel name and IPC port name.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name and IPC port name."}],"pos":[11917,12083],"yaml":true},{"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.","nodes":[{"pos":[0,226],"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.","nodes":[{"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A&gt;</ph> property by using the <ph id=\"ph2\">`name`</ph> parameter.","pos":[0,141],"source":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter."},{"content":"If you want to register more than one channel, each channel must have a unique name.","pos":[142,226]}]}],"pos":[12094,12321],"yaml":true,"extradata":"MT"},{"content":"The name of the channel.","nodes":[{"pos":[0,24],"content":"The name of the channel.","nodes":[{"content":"The name of the channel.","pos":[0,24]}]}],"pos":[12945,12970],"yaml":true},{"content":"The name of the IPC port to be used by the channel.","nodes":[{"pos":[0,51],"content":"The name of the IPC port to be used by the channel.","nodes":[{"content":"The name of the IPC port to be used by the channel.","pos":[0,51]}]}],"pos":[13034,13086],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties, sink, and security descriptor.","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel properties, sink, and security descriptor.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties, sink, and security descriptor."}],"pos":[14814,14999],"yaml":true},{"content":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`. If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","nodes":[{"pos":[0,184],"content":"For more information about channel configuration properties, see <bpt id=\"p1\">[</bpt>Channel and Formatter Configuration Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","source":"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."},{"pos":[191,371],"content":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`. If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.","nodes":[{"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[0,85],"source":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`."},{"content":"If you do not require a security descriptor, set the <ph id=\"ph1\">`securityDescriptor`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","pos":[86,180],"source":" If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`."}]},{"pos":[379,729],"content":"[!CAUTION]\n When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","leadings":["","> "],"nodes":[{"content":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.","pos":[11,348],"nodes":[{"content":"When setting the <ph id=\"ph1\">`exclusiveAddressUse`</ph> property to <ph id=\"ph2\">`false`</ph> in the <ph id=\"ph3\">`properties`</ph> argument, several <ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> objects can be registered for the same named pipe.","pos":[1,209],"source":" When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe."},{"content":"In such a case requests can go to any of the channels registered.","pos":[210,275]},{"content":"This setting is considered secure only if ALCs are also used.","pos":[276,337]}]}]}],"pos":[15010,15747],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> collection that specifies values for configuration properties to be used by the channel.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel."}],"pos":[16087,16230],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[16344,16471],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> to be used by the channel.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;&lt;/xref&gt;</ph> to be used by the channel.","source":"A <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> to be used by the channel."}],"pos":[16586,16691],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name, IPC port name, and sink.","nodes":[{"pos":[0,172],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"&gt;&lt;/xref&gt;</ph> class with the specified channel name, IPC port name, and sink.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name, IPC port name, and sink."}],"pos":[18176,18349],"yaml":true},{"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.","nodes":[{"pos":[0,226],"content":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.","nodes":[{"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A&gt;</ph> property by using the <ph id=\"ph2\">`name`</ph> parameter.","pos":[0,141],"source":"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter."},{"content":"If you want to register more than one channel, each channel must have a unique name.","pos":[142,226]}]},{"pos":[233,318],"content":"If you do not require sink functionality, set the <ph id=\"ph1\">`sinkProvider`</ph> parameter to <ph id=\"ph2\">`null`</ph>.","source":"If you do not require sink functionality, set the `sinkProvider` parameter to `null`."}],"pos":[18360,18683],"yaml":true,"extradata":"MT"},{"content":"The name of the channel.","nodes":[{"pos":[0,24],"content":"The name of the channel.","nodes":[{"content":"The name of the channel.","pos":[0,24]}]}],"pos":[19381,19406],"yaml":true},{"content":"The name of the IPC port to be used by the channel.","nodes":[{"pos":[0,51],"content":"The name of the IPC port to be used by the channel.","nodes":[{"content":"The name of the IPC port to be used by the channel.","pos":[0,51]}]}],"pos":[19470,19522],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"&gt;&lt;/xref&gt;</ph> implementation to be used by the channel.","source":"The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel."}],"pos":[19636,19763],"yaml":true},{"content":"Gets channel-specific data.","nodes":[{"pos":[0,27],"content":"Gets channel-specific data.","nodes":[{"content":"Gets channel-specific data.","pos":[0,27]}]}],"pos":[20847,20875],"yaml":true},{"content":"Although returned as an instance of the <xref:System.Object?displayProperty=fullName> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.","nodes":[{"pos":[0,323],"content":"Although returned as an instance of the <xref:System.Object?displayProperty=fullName> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.","nodes":[{"content":"Although returned as an instance of the <ph id=\"ph1\">&lt;xref:System.Object?displayProperty=fullName&gt;</ph> class, the value of this property can be cast to an instance of <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.ChannelDataStore&gt;</ph> that describes the channel to which the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&gt;</ph> object listens.","pos":[0,323],"source":"Although returned as an instance of the <xref:System.Object?displayProperty=fullName> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens."}]}],"pos":[20886,21210],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance that contains channel-specific data.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"&gt;&lt;/xref&gt;</ph> instance that contains channel-specific data.","source":"A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance that contains channel-specific data."}],"pos":[21864,21983],"yaml":true},{"content":"Gets the name of the current channel.","nodes":[{"pos":[0,37],"content":"Gets the name of the current channel.","nodes":[{"content":"Gets the name of the current channel.","pos":[0,37]}]}],"pos":[23073,23111],"yaml":true},{"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method. The default name is \"ipc server\".","nodes":[{"pos":[0,220],"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method. The default name is \"ipc server\".","nodes":[{"content":"Every registered channel has a unique name. The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method. The default name is \"ipc server\".","pos":[0,220],"nodes":[{"content":"Every registered channel has a unique name.","pos":[0,43]},{"content":"The name is used to retrieve a specific channel when calling the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A&gt;</ph> method.","pos":[44,186],"source":" The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method."},{"content":"The default name is \"ipc server\".","pos":[187,220]}]}]}],"pos":[23122,23343],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> instance that contains the name of the channel.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that contains the name of the channel.","source":"A <xref href=\"System.String\"></xref> instance that contains the name of the channel."}],"pos":[23997,24082],"yaml":true},{"content":"Gets the priority of the current channel.","nodes":[{"pos":[0,41],"content":"Gets the priority of the current channel.","nodes":[{"content":"Gets the priority of the current channel.","pos":[0,41]}]}],"pos":[25196,25238],"yaml":true},{"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 20; negative priorities are allowed.","nodes":[{"pos":[0,374],"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 20; negative priorities are allowed.","nodes":[{"content":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 20; negative priorities are allowed.","pos":[0,374],"nodes":[{"content":"The priority controls the order in which channel data appears in a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance; higher priority channels appear before lower priority channels.","pos":[0,178],"source":"The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels."},{"content":"Clients try to connect to the server channels in the order that they are listed in the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance.","pos":[179,313],"source":" Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance."},{"content":"The default priority is 20; negative priorities are allowed.","pos":[314,374]}]}]}],"pos":[25249,25624],"yaml":true,"extradata":"MT"},{"content":"An integer that indicates the priority assigned to the channel.","nodes":[{"pos":[0,63],"content":"An integer that indicates the priority assigned to the channel.","nodes":[{"content":"An integer that indicates the priority assigned to the channel.","pos":[0,63]}]}],"pos":[26282,26346],"yaml":true},{"content":"Returns the URI of the current channel.","nodes":[{"pos":[0,39],"content":"Returns the URI of the current channel.","nodes":[{"content":"Returns the URI of the current channel.","pos":[0,39]}]}],"pos":[27456,27496],"yaml":true},{"content":"The channel URI is used by the client to specify a remote server channel.","nodes":[{"pos":[0,73],"content":"The channel URI is used by the client to specify a remote server channel.","nodes":[{"content":"The channel URI is used by the client to specify a remote server channel.","pos":[0,73]}]}],"pos":[27507,27581],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the URI of the channel.","nodes":[{"pos":[0,74],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the URI of the channel.","source":"A <xref href=\"System.String\"></xref> that contains the URI of the channel."}],"pos":[28093,28168],"yaml":true},{"content":"Returns an array of all the URLs for the object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcChannel\"></xref> instance.","nodes":[{"pos":[0,172],"content":"Returns an array of all the URLs for the object with the specified URI, hosted on the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcChannel\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an array of all the URLs for the object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcChannel\"></xref> instance."}],"pos":[29339,29512],"yaml":true},{"content":"This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,135],"content":"This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method.","nodes":[{"content":"This method is used by the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,135],"source":"This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method."}]}],"pos":[29523,29659],"yaml":true,"extradata":"MT"},{"content":"The URI of the object for which URLs are required.","nodes":[{"pos":[0,50],"content":"The URI of the object for which URLs are required.","nodes":[{"content":"The URI of the object for which URLs are required.","pos":[0,50]}]}],"pos":[30360,30411],"yaml":true},{"content":"An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.","nodes":[{"pos":[0,159],"content":"An array of the URLs for an object with the specified URI, hosted on the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"&gt;&lt;/xref&gt;</ph> instance.","source":"An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance."}],"pos":[30470,30630],"yaml":true},{"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","nodes":[{"pos":[0,82],"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","nodes":[{"content":"Gets or sets a Boolean value that indicates whether the current channel is secure.","pos":[0,82]}]}],"pos":[31710,31793],"yaml":true},{"content":"A Boolean value that indicates whether the current instance is secure.","nodes":[{"pos":[0,70],"content":"A Boolean value that indicates whether the current instance is secure.","nodes":[{"content":"A Boolean value that indicates whether the current instance is secure.","pos":[0,70]}]}],"pos":[31910,31981],"yaml":true},{"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","nodes":[{"pos":[0,85],"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","nodes":[{"content":"Extracts the channel URI and the remote well-known object URI from the specified URL.","pos":[0,85]}]}],"pos":[33169,33255],"yaml":true},{"content":"The URI of an object is a value that uniquely identifies a specific object instance.","nodes":[{"pos":[0,84],"content":"The URI of an object is a value that uniquely identifies a specific object instance.","nodes":[{"content":"The URI of an object is a value that uniquely identifies a specific object instance.","pos":[0,84]}]}],"pos":[33266,33351],"yaml":true,"extradata":"MT"},{"content":"The URL from which to extract the URI of the remote well-known object.","nodes":[{"pos":[0,70],"content":"The URL from which to extract the URI of the remote well-known object.","nodes":[{"content":"The URL from which to extract the URI of the remote well-known object.","pos":[0,70]}]}],"pos":[34036,34107],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object.","nodes":[{"pos":[0,132],"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that holds the URI of the remote well-known object.","source":"When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object."}],"pos":[34172,34305],"yaml":true},{"content":"The URI of the current channel.","nodes":[{"pos":[0,31],"content":"The URI of the current channel.","nodes":[{"content":"The URI of the current channel.","pos":[0,31]}]}],"pos":[34362,34394],"yaml":true},{"content":"Instructs the current channel to start listening for requests.","nodes":[{"pos":[0,62],"content":"Instructs the current channel to start listening for requests.","nodes":[{"content":"Instructs the current channel to start listening for requests.","pos":[0,62]}]}],"pos":[35563,35626],"yaml":true},{"content":"It is not necessary to call this method to begin listening on a newly initialized channel.  \n  \n Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.","nodes":[{"pos":[0,90],"content":"It is not necessary to call this method to begin listening on a newly initialized channel.","nodes":[{"content":"It is not necessary to call this method to begin listening on a newly initialized channel.","pos":[0,90]}]},{"pos":[97,291],"content":"Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.","nodes":[{"content":"Use this method to restart listening on a channel after the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A&gt;</ph> method has been called to stop listening on the channel.","pos":[0,194],"source":"Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel."}]},{"pos":[298,484],"content":"The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.","nodes":[{"content":"The data object can be used to pass a specific initialization state to the channel.","pos":[0,83]},{"content":"If you do not want to pass a specific state to the channel, pass <ph id=\"ph1\">`null`</ph> as the <ph id=\"ph2\">`data`</ph> parameter value.","pos":[84,186],"source":" If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value."}]}],"pos":[35637,36128],"yaml":true,"extradata":"MT"},{"content":"An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.","nodes":[{"pos":[0,120],"content":"An object that specifies an initialization state, or <ph id=\"ph1\">`null`</ph>, if you do not want to pass a specific state to the channel.","source":"An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel."}],"pos":[36269,36390],"yaml":true},{"content":"The specified listening port is not available.","nodes":[{"pos":[0,46],"content":"The specified listening port is not available.","nodes":[{"content":"The specified listening port is not available.","pos":[0,46]}]}],"pos":[36564,36611],"yaml":true},{"content":"Instructs the current channel to stop listening for requests.","nodes":[{"pos":[0,61],"content":"Instructs the current channel to stop listening for requests.","nodes":[{"content":"Instructs the current channel to stop listening for requests.","pos":[0,61]}]}],"pos":[37684,37746],"yaml":true},{"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.","nodes":[{"pos":[0,164],"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.","nodes":[{"content":"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.","pos":[0,164],"nodes":[{"content":"Use this method to stop listening on a channel.","pos":[0,47]},{"content":"To restart listening, use the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A&gt;</ph> method.","pos":[48,164],"source":" To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method."}]}]},{"pos":[171,357],"content":"The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.","nodes":[{"content":"The data object can be used to pass a specific initialization state to the channel.","pos":[0,83]},{"content":"If you do not want to pass a specific state to the channel, pass <ph id=\"ph1\">`null`</ph> as the <ph id=\"ph2\">`data`</ph> parameter value.","pos":[84,186],"source":" If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value."}]}],"pos":[37757,38119],"yaml":true,"extradata":"MT"},{"content":"An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.","nodes":[{"pos":[0,120],"content":"An object that specifies an initialization state, or <ph id=\"ph1\">`null`</ph>, if you do not want to pass a specific state to the channel.","source":"An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel."}],"pos":[38259,38380],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  commentId: T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  id: IpcServerChannel\n  children:\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)\n  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)\n  langs:\n  - csharp\n  name: IpcServerChannel\n  nameWithType: IpcServerChannel\n  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  type: Class\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Implements a server channel for remote calls that uses the IPC system to transmit messages.\n  remarks: \"Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \\n  \\n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer. When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.  \\n  \\n To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.  \\n  \\n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.  \\n  \\n A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.  \\n  \\n> [!CAUTION]\\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.\"\n  example:\n  - \"The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.  \\n  \\n [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]\\n [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  \\n  \\n The preceding code is used to expose the following remote object.  \\n  \\n [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]\\n [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  \\n  \\n For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.\"\n  syntax:\n    content: 'public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IChannelReceiver\n  - System.Runtime.Remoting.Channels.ISecurableChannel\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IpcServerChannel(String)\n  nameWithType: IpcServerChannel.IpcServerChannel(String)\n  fullName: IpcServerChannel.IpcServerChannel(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified IPC port name.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use this constructor.  \\n  \\n [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]\\n [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]\"\n  syntax:\n    content: public IpcServerChannel (string portName);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The name of the IPC port to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties and sink.\n  remarks: \"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.  \\n  \\n> [!CAUTION]\\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.\"\n  example:\n  - \"The following code example shows how to use this constructor.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]\"\n  syntax:\n    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IpcServerChannel(String, String)\n  nameWithType: IpcServerChannel.IpcServerChannel(String, String)\n  fullName: IpcServerChannel.IpcServerChannel(String, String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name and IPC port name.\n  remarks: This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.\n  example:\n  - \"The following code example shows how to use this constructor.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]\"\n  syntax:\n    content: public IpcServerChannel (string name, string portName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the channel.\n    - id: portName\n      type: System.String\n      description: The name of the IPC port to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel properties, sink, and security descriptor.\n  remarks: \"For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`. If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.  \\n  \\n> [!CAUTION]\\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used.\"\n  syntax:\n    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> collection that specifies values for configuration properties to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: A <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  id: '#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IpcServerChannel(String, String, IServerChannelSinkProvider)\n  nameWithType: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)\n  fullName: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\"></xref> class with the specified channel name, IPC port name, and sink.\n  remarks: \"This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \\n  \\n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.\"\n  example:\n  - \"The following code example shows how to use this constructor.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]\"\n  syntax:\n    content: public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the channel.\n    - id: portName\n      type: System.String\n      description: The name of the IPC port to be used by the channel.\n    - id: sinkProvider\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n      description: The <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSinkProvider\"></xref> implementation to be used by the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData\n  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData\n  id: ChannelData\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: ChannelData\n  nameWithType: IpcServerChannel.ChannelData\n  fullName: IpcServerChannel.ChannelData\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Gets channel-specific data.\n  remarks: Although returned as an instance of the <xref:System.Object?displayProperty=fullName> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> property.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]\"\n  syntax:\n    content: public object ChannelData { get; }\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Runtime.Remoting.Channels.ChannelDataStore\"></xref> instance that contains channel-specific data.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName\n  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName\n  id: ChannelName\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: ChannelName\n  nameWithType: IpcServerChannel.ChannelName\n  fullName: IpcServerChannel.ChannelName\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Gets the name of the current channel.\n  remarks: Every registered channel has a unique name. The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method. The default name is \"ipc server\".\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]\"\n  syntax:\n    content: public string ChannelName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> instance that contains the name of the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority\n  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority\n  id: ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: ChannelPriority\n  nameWithType: IpcServerChannel.ChannelPriority\n  fullName: IpcServerChannel.ChannelPriority\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Gets the priority of the current channel.\n  remarks: The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 20; negative priorities are allowed.\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> property.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]\"\n  syntax:\n    content: public int ChannelPriority { get; }\n    return:\n      type: System.Int32\n      description: An integer that indicates the priority assigned to the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri\n  id: GetChannelUri\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: GetChannelUri()\n  nameWithType: IpcServerChannel.GetChannelUri()\n  fullName: IpcServerChannel.GetChannelUri()\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Returns the URI of the current channel.\n  remarks: The channel URI is used by the client to specify a remote server channel.\n  example:\n  - \"The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> method.  \\n  \\n [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]\\n [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]\"\n  syntax:\n    content: public string GetChannelUri ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the URI of the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)\n  id: GetUrlsForUri(System.String)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: GetUrlsForUri(String)\n  nameWithType: IpcServerChannel.GetUrlsForUri(String)\n  fullName: IpcServerChannel.GetUrlsForUri(String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Returns an array of all the URLs for the object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Ipc.IpcChannel\"></xref> instance.\n  remarks: This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method.\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> method.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]\"\n  syntax:\n    content: public virtual string[] GetUrlsForUri (string objectUri);\n    parameters:\n    - id: objectUri\n      type: System.String\n      description: The URI of the object for which URLs are required.\n    return:\n      type: System.String[]\n      description: An array of the URLs for an object with the specified URI, hosted on the current <xref href=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel\"></xref> instance.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured\n  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured\n  id: IsSecured\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: IsSecured\n  nameWithType: IpcServerChannel.IsSecured\n  fullName: IpcServerChannel.IsSecured\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Gets or sets a Boolean value that indicates whether the current channel is secure.\n  syntax:\n    content: public bool IsSecured { get; set; }\n    return:\n      type: System.Boolean\n      description: A Boolean value that indicates whether the current instance is secure.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)\n  id: Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: Parse(String, String)\n  nameWithType: IpcServerChannel.Parse(String, String)\n  fullName: IpcServerChannel.Parse(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Extracts the channel URI and the remote well-known object URI from the specified URL.\n  remarks: The URI of an object is a value that uniquely identifies a specific object instance.\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> method.  \\n  \\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]\\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]\"\n  syntax:\n    content: public string Parse (string url, out string objectURI);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL from which to extract the URI of the remote well-known object.\n    - id: objectURI\n      type: System.String\n      description: When this method returns, contains a <xref href=\"System.String\"></xref> instance that holds the URI of the remote well-known object.\n    return:\n      type: System.String\n      description: The URI of the current channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: IpcServerChannel.StartListening(Object)\n  fullName: IpcServerChannel.StartListening(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Instructs the current channel to start listening for requests.\n  remarks: \"It is not necessary to call this method to begin listening on a newly initialized channel.  \\n  \\n Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.  \\n  \\n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.\"\n  syntax:\n    content: public void StartListening (object data);\n    parameters:\n    - id: data\n      type: System.Object\n      description: An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The specified listening port is not available.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: IpcServerChannel.StopListening(Object)\n  fullName: IpcServerChannel.StopListening(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels.Ipc\n  summary: Instructs the current channel to stop listening for requests.\n  remarks: \"Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.  \\n  \\n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value.\"\n  syntax:\n    content: public void StopListening (object data);\n    parameters:\n    - id: data\n      type: System.Object\n      description: An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.\n  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel(String)\n  nameWithType: IpcServerChannel.IpcServerChannel(String)\n  fullName: IpcServerChannel.IpcServerChannel(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkProvider\n  nameWithType: IServerChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel(String, String)\n  nameWithType: IpcServerChannel.IpcServerChannel(String, String)\n  fullName: IpcServerChannel.IpcServerChannel(String, String)\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel(String, String, IServerChannelSinkProvider)\n  nameWithType: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)\n  fullName: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelData\n  nameWithType: IpcServerChannel.ChannelData\n  fullName: IpcServerChannel.ChannelData\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: IpcServerChannel.ChannelName\n  fullName: IpcServerChannel.ChannelName\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: IpcServerChannel.ChannelPriority\n  fullName: IpcServerChannel.ChannelPriority\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: GetChannelUri()\n  nameWithType: IpcServerChannel.GetChannelUri()\n  fullName: IpcServerChannel.GetChannelUri()\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: GetUrlsForUri(String)\n  nameWithType: IpcServerChannel.GetUrlsForUri(String)\n  fullName: IpcServerChannel.GetUrlsForUri(String)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: IpcServerChannel.IsSecured\n  fullName: IpcServerChannel.IsSecured\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: Parse(String, String)\n  nameWithType: IpcServerChannel.Parse(String, String)\n  fullName: IpcServerChannel.Parse(String, String)\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: IpcServerChannel.StartListening(Object)\n  fullName: IpcServerChannel.StartListening(Object)\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: IpcServerChannel.StopListening(Object)\n  fullName: IpcServerChannel.StopListening(Object)\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IpcServerChannel\n  nameWithType: IpcServerChannel.IpcServerChannel\n  fullName: IpcServerChannel.IpcServerChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelData\n  nameWithType: IpcServerChannel.ChannelData\n  fullName: IpcServerChannel.ChannelData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: IpcServerChannel.ChannelName\n  fullName: IpcServerChannel.ChannelName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: IpcServerChannel.ChannelPriority\n  fullName: IpcServerChannel.ChannelPriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: GetChannelUri\n  nameWithType: IpcServerChannel.GetChannelUri\n  fullName: IpcServerChannel.GetChannelUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: GetUrlsForUri\n  nameWithType: IpcServerChannel.GetUrlsForUri\n  fullName: IpcServerChannel.GetUrlsForUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: IsSecured\n  nameWithType: IpcServerChannel.IsSecured\n  fullName: IpcServerChannel.IsSecured\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: Parse\n  nameWithType: IpcServerChannel.Parse\n  fullName: IpcServerChannel.Parse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: StartListening\n  nameWithType: IpcServerChannel.StartListening\n  fullName: IpcServerChannel.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*\n  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel\n  isExternal: false\n  name: StopListening\n  nameWithType: IpcServerChannel.StopListening\n  fullName: IpcServerChannel.StopListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Remoting.Channels.IChannelReceiver\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelReceiver\n  nameWithType: IChannelReceiver\n  fullName: System.Runtime.Remoting.Channels.IChannelReceiver\n- uid: System.Runtime.Remoting.Channels.ISecurableChannel\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ISecurableChannel\n  nameWithType: ISecurableChannel\n  fullName: System.Runtime.Remoting.Channels.ISecurableChannel\n"}