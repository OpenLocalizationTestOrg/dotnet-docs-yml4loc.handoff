{"nodes":[{"content":"When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output. The caller does not guarantee that the contents are initialized, and the called method should not read the contents.","nodes":[{"pos":[0,282],"content":"When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output. The caller does not guarantee that the contents are initialized, and the called method should not read the contents.","nodes":[{"content":"When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output. The caller does not guarantee that the contents are initialized, and the called method should not read the contents.","pos":[0,282],"nodes":[{"content":"When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output.","pos":[0,165]},{"content":"The caller does not guarantee that the contents are initialized, and the called method should not read the contents.","pos":[166,282]}]}]}],"pos":[655,938],"yaml":true},{"content":"If an array parameter in your [!INCLUDE[wrt](~/includes/wrt-md.md)] component is passed by value (`ByVal` in Visual Basic), you must apply one of the following attributes to it:  \n  \n-   Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute> attribute if you intend the contents of the array to be used for input only.  \n  \n-   Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).  \n  \n Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see [Passing arrays to a Windows Runtime component](http://go.microsoft.com/fwlink/?LinkId=251026) in the Windows Dev Center.  \n  \n> [!IMPORTANT]\n>  Parameters that have the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or [!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]), the called method can't make any assumptions about the contents of the original array. For example, the array the method receives might not be initialized, or might contain default values. The method is expected to set the values of all the elements in the array.  \n>   \n>  If the caller is managed code, the caller's original array is passed to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in managed code, so the method can selectively read and change those values. This is important to remember because it affects unit tests written for a [!INCLUDE[wrt](~/includes/wrt-md.md)] component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing, and the results are likely to be different if the method is called from native code later.  \n  \n Applying this attribute to an `out` parameter or to a parameter that has the <xref:System.Runtime.InteropServices.InAttribute> attribute causes an error when the module is exported. Applying the attribute to a parameter that has the <xref:System.Runtime.InteropServices.OutAttribute> attribute causes an error unless the parameter also has the Visual Basic `ByRef` modifier. In that case, the attribute is redundant but allowed.","nodes":[{"pos":[0,177],"content":"If an array parameter in your <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component is passed by value (<ph id=\"ph2\">`ByVal`</ph> in Visual Basic), you must apply one of the following attributes to it:","source":"If an array parameter in your [!INCLUDE[wrt](~/includes/wrt-md.md)] component is passed by value (`ByVal` in Visual Basic), you must apply one of the following attributes to it:"},{"pos":[187,349],"content":"Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute> attribute if you intend the contents of the array to be used for input only.","nodes":[{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for input only.","pos":[0,162],"source":"Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute> attribute if you intend the contents of the array to be used for input only."}]},{"pos":[359,599],"content":"Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).","nodes":[{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).","pos":[0,240],"source":"Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them)."}]},{"pos":[606,873],"content":"Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see [Passing arrays to a Windows Runtime component](http://go.microsoft.com/fwlink/?LinkId=251026) in the Windows Dev Center.","nodes":[{"content":"Applying both attributes to a parameter causes an error.","pos":[0,56]},{"content":"For more information, including the standard pattern for making changes to an array, see <bpt id=\"p1\">[</bpt>Passing arrays to a Windows Runtime component<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=251026)</ept> in the Windows Dev Center.","pos":[57,267],"source":" For more information, including the standard pattern for making changes to an array, see [Passing arrays to a Windows Runtime component](http://go.microsoft.com/fwlink/?LinkId=251026) in the Windows Dev Center."}]},{"pos":[881,1456],"content":"[!IMPORTANT]\n Parameters that have the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or [!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]), the called method can't make any assumptions about the contents of the original array. For example, the array the method receives might not be initialized, or might contain default values. The method is expected to set the values of all the elements in the array.","leadings":["","> "],"nodes":[{"content":" Parameters that have the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or [!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]), the called method can't make any assumptions about the contents of the original array. For example, the array the method receives might not be initialized, or might contain default values. The method is expected to set the values of all the elements in the array.","pos":[13,573],"nodes":[{"content":"Parameters that have the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute&gt;</ph> attribute behave differently depending on whether the caller is written in native code or managed code.","pos":[1,206],"source":" Parameters that have the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute behave differently depending on whether the caller is written in native code or managed code."},{"content":"If the caller is native code (JavaScript or <ph id=\"ph1\">[!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]</ph>), the called method can't make any assumptions about the contents of the original array.","pos":[207,383],"source":" If the caller is native code (JavaScript or [!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]), the called method can't make any assumptions about the contents of the original array."},{"content":"For example, the array the method receives might not be initialized, or might contain default values.","pos":[384,485]},{"content":"The method is expected to set the values of all the elements in the array.","pos":[486,560]}]}]},{"pos":[1467,2041],"content":"If the caller is managed code, the caller's original array is passed to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in managed code, so the method can selectively read and change those values. This is important to remember because it affects unit tests written for a [!INCLUDE[wrt](~/includes/wrt-md.md)] component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing, and the results are likely to be different if the method is called from native code later.","nodes":[{"content":"If the caller is managed code, the caller's original array is passed to the called method, as it would be in any method call in the .NET Framework.","pos":[0,147]},{"content":"Array contents are mutable in managed code, so the method can selectively read and change those values.","pos":[148,251]},{"content":"This is important to remember because it affects unit tests written for a <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component.","pos":[252,374],"source":" This is important to remember because it affects unit tests written for a [!INCLUDE[wrt](~/includes/wrt-md.md)] component."},{"content":"If the tests are written in managed code, the contents of an array will appear to be mutable during testing, and the results are likely to be different if the method is called from native code later.","pos":[375,574]}]},{"pos":[2048,2476],"content":"Applying this attribute to an `out` parameter or to a parameter that has the <xref:System.Runtime.InteropServices.InAttribute> attribute causes an error when the module is exported. Applying the attribute to a parameter that has the <xref:System.Runtime.InteropServices.OutAttribute> attribute causes an error unless the parameter also has the Visual Basic `ByRef` modifier. In that case, the attribute is redundant but allowed.","nodes":[{"content":"Applying this attribute to an <ph id=\"ph1\">`out`</ph> parameter or to a parameter that has the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> attribute causes an error when the module is exported.","pos":[0,181],"source":"Applying this attribute to an `out` parameter or to a parameter that has the <xref:System.Runtime.InteropServices.InAttribute> attribute causes an error when the module is exported."},{"content":"Applying the attribute to a parameter that has the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> attribute causes an error unless the parameter also has the Visual Basic <ph id=\"ph2\">`ByRef`</ph> modifier.","pos":[182,374],"source":" Applying the attribute to a parameter that has the <xref:System.Runtime.InteropServices.OutAttribute> attribute causes an error unless the parameter also has the Visual Basic `ByRef` modifier."},{"content":"In that case, the attribute is redundant but allowed.","pos":[375,428]}]}],"pos":[949,3441],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\"></xref> class.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\"></xref> class."}],"pos":[8806,8938],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  id: WriteOnlyArrayAttribute\n  children:\n  - System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor\n  langs:\n  - csharp\n  name: WriteOnlyArrayAttribute\n  nameWithType: WriteOnlyArrayAttribute\n  fullName: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices.WindowsRuntime\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output. The caller does not guarantee that the contents are initialized, and the called method should not read the contents.\n  remarks: \"If an array parameter in your [!INCLUDE[wrt](~/includes/wrt-md.md)] component is passed by value (`ByVal` in Visual Basic), you must apply one of the following attributes to it:  \\n  \\n-   Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute> attribute if you intend the contents of the array to be used for input only.  \\n  \\n-   Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).  \\n  \\n Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see [Passing arrays to a Windows Runtime component](http://go.microsoft.com/fwlink/?LinkId=251026) in the Windows Dev Center.  \\n  \\n> [!IMPORTANT]\\n>  Parameters that have the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or [!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]), the called method can't make any assumptions about the contents of the original array. For example, the array the method receives might not be initialized, or might contain default values. The method is expected to set the values of all the elements in the array.  \\n>   \\n>  If the caller is managed code, the caller's original array is passed to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in managed code, so the method can selectively read and change those values. This is important to remember because it affects unit tests written for a [!INCLUDE[wrt](~/includes/wrt-md.md)] component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing, and the results are likely to be different if the method is called from native code later.  \\n  \\n Applying this attribute to an `out` parameter or to a parameter that has the <xref:System.Runtime.InteropServices.InAttribute> attribute causes an error when the module is exported. Applying the attribute to a parameter that has the <xref:System.Runtime.InteropServices.OutAttribute> attribute causes an error unless the parameter also has the Visual Basic `ByRef` modifier. In that case, the attribute is redundant but allowed.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]\n\n      public sealed class WriteOnlyArrayAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WriteOnlyArrayAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor\n  id: '#ctor'\n  parent: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  langs:\n  - csharp\n  name: WriteOnlyArrayAttribute()\n  nameWithType: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute()\n  fullName: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute()\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices.WindowsRuntime\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\"></xref> class.\n  syntax:\n    content: public WriteOnlyArrayAttribute ();\n    parameters: []\n  overload: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WriteOnlyArrayAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor\n  parent: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  isExternal: false\n  name: WriteOnlyArrayAttribute()\n  nameWithType: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute()\n  fullName: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute()\n- uid: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor*\n  parent: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\n  isExternal: false\n  name: WriteOnlyArrayAttribute\n  nameWithType: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute\n  fullName: WriteOnlyArrayAttribute.WriteOnlyArrayAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WriteOnlyArrayAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}