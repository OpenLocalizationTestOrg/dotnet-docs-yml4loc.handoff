{"nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.","nodes":[{"pos":[0,113],"content":"Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.","nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.","pos":[0,113]}]}],"pos":[1310,1424],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with an ephemeral key.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> class with an ephemeral key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with an ephemeral key."}],"pos":[4191,4311],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> class with the specified key name, which represents an existing persisted AES key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key."}],"pos":[5456,5630],"yaml":true},{"content":"This constructor uses a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> and <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> as the default key storage provider (KSP) to open the key.","nodes":[{"pos":[0,303],"content":"This constructor uses a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> and <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> as the default key storage provider (KSP) to open the key.","nodes":[{"content":"This constructor uses a default <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions.None&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph> as the default key storage provider (KSP) to open the key.","pos":[0,303],"source":"This constructor uses a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> and <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> as the default key storage provider (KSP) to open the key."}]}],"pos":[5641,5945],"yaml":true,"extradata":"MT"},{"content":"The name of the key.","nodes":[{"pos":[0,20],"content":"The name of the key.","nodes":[{"content":"The name of the key.","pos":[0,20]}]}],"pos":[6079,6100],"yaml":true},{"content":"<code>keyName</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;keyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyName</code> is `null`."}],"pos":[6271,6303],"yaml":true},{"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"pos":[0,67],"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"content":"Cryptography Next Generation (CNG) is not supported on this system.","pos":[0,67]}]}],"pos":[6421,6489],"yaml":true},{"content":"All other errors.","nodes":[{"pos":[0,17],"content":"All other errors.","nodes":[{"content":"All other errors.","pos":[0,17]}]}],"pos":[6637,6655],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP).","nodes":[{"pos":[0,219],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP).","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP)."}],"pos":[7830,8050],"yaml":true},{"content":"A default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is used to open the key.","nodes":[{"pos":[0,156],"content":"A default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is used to open the key.","nodes":[{"content":"A default <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions&gt;</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions.None&gt;</ph> is used to open the key.","pos":[0,156],"source":"A default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is used to open the key."}]}],"pos":[8061,8218],"yaml":true,"extradata":"MT"},{"content":"The name of the key.","nodes":[{"pos":[0,20],"content":"The name of the key.","nodes":[{"content":"The name of the key.","pos":[0,20]}]}],"pos":[8403,8424],"yaml":true},{"content":"The KSP that contains the key.","nodes":[{"pos":[0,30],"content":"The KSP that contains the key.","nodes":[{"content":"The KSP that contains the key.","pos":[0,30]}]}],"pos":[8515,8546],"yaml":true},{"content":"<code>keyName</code> is `null`.  \n  \n -or-  \n  \n <code>provider</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;keyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyName</code> is `null`."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,81],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>provider</code> is `null`."}],"pos":[8717,8805],"yaml":true},{"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"pos":[0,67],"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"content":"Cryptography Next Generation (CNG) is not supported on this system.","pos":[0,67]}]}],"pos":[8923,8991],"yaml":true},{"content":"All other errors.","nodes":[{"pos":[0,17],"content":"All other errors.","nodes":[{"content":"All other errors.","pos":[0,17]}]}],"pos":[9139,9157],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options.","nodes":[{"pos":[0,237],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options."}],"pos":[10530,10768],"yaml":true},{"content":"The name of the key.","nodes":[{"pos":[0,20],"content":"The name of the key.","nodes":[{"content":"The name of the key.","pos":[0,20]}]}],"pos":[11013,11034],"yaml":true},{"content":"The KSP that contains the key.","nodes":[{"pos":[0,30],"content":"The KSP that contains the key.","nodes":[{"content":"The KSP that contains the key.","pos":[0,30]}]}],"pos":[11125,11156],"yaml":true},{"content":"A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.","nodes":[{"pos":[0,190],"content":"A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.","nodes":[{"content":"A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.","pos":[0,190]}]}],"pos":[11256,11447],"yaml":true},{"content":"<code>keyName</code> is `null`.  \n  \n -or-  \n  \n <code>provider</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;keyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyName</code> is `null`."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,81],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>provider</code> is `null`."}],"pos":[11618,11706],"yaml":true},{"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"pos":[0,67],"content":"Cryptography Next Generation (CNG) is not supported on this system.","nodes":[{"content":"Cryptography Next Generation (CNG) is not supported on this system.","pos":[0,67]}]}],"pos":[11824,11892],"yaml":true},{"content":"All other errors.","nodes":[{"pos":[0,17],"content":"All other errors.","nodes":[{"content":"All other errors.","pos":[0,17]}]}],"pos":[12040,12058],"yaml":true},{"content":"Creates a symmetric AES decryptor object with the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,162],"content":"Creates a symmetric AES decryptor object with the current key and initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric AES decryptor object with the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[13058,13221],"yaml":true},{"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload with the same signature.","nodes":[{"pos":[0,152],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload with the same signature.","nodes":[{"content":"This method decrypts an encrypted message created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng.CreateEncryptor&gt;</ph> overload with the same signature.","pos":[0,152],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload with the same signature."}]}],"pos":[13232,13385],"yaml":true,"extradata":"MT"},{"content":"A symmetric AES decryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES decryptor object.","nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]}],"pos":[13598,13632],"yaml":true},{"content":"Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).","nodes":[{"pos":[0,95],"content":"Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).","pos":[0,95]}]}],"pos":[14843,14939],"yaml":true},{"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29> overload with the same signature.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.","nodes":[{"pos":[0,195],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29> overload with the same signature.","nodes":[{"content":"This method decrypts an encrypted message created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29&gt;</ph> overload with the same signature.","pos":[0,195],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29> overload with the same signature."}]},{"pos":[203,681],"content":"[!NOTE]\n If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.","leadings":["","> "],"nodes":[{"content":"If you've created the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> property and then call the  parameterless <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.AesCng.CreateDecryptor&gt;</ph> overload instead; otherwise, using this method will create an ephemeral key as specified by the <ph id=\"ph4\">`rgbKey`</ph> parameter.","pos":[9,476],"source":" If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."}]}],"pos":[14950,15637],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,88],"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,88],"nodes":[{"content":"The secret key to use for the AES algorithm.","pos":[0,44]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[45,88]}]}]}],"pos":[15847,15936],"yaml":true},{"content":"The initialization vector to use for the AES algorithm.","nodes":[{"pos":[0,55],"content":"The initialization vector to use for the AES algorithm.","nodes":[{"content":"The initialization vector to use for the AES algorithm.","pos":[0,55]}]}],"pos":[15997,16053],"yaml":true},{"content":"A symmetric AES decryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES decryptor object.","nodes":[{"content":"A symmetric AES decryptor object.","pos":[0,33]}]}],"pos":[16142,16176],"yaml":true},{"content":"<code>rgbKey</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbKey</code> is `null`."}],"pos":[16357,16388],"yaml":true},{"content":"<code>rgbKey</code> is not a valid size for this algorithm.  \n  \n -or-  \n  \n <code>rgbIV</code> size does not match the block size for this algorithm.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is not a valid size for this algorithm.","source":"<code>rgbKey</code> is not a valid size for this algorithm."},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,150],"content":"<ph id=\"ph1\">&lt;code&gt;rgbIV&lt;/code&gt;</ph> size does not match the block size for this algorithm.","source":"<code>rgbIV</code> size does not match the block size for this algorithm."}],"pos":[16482,16639],"yaml":true},{"content":"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \n  \n -or-  \n  \n <code>rgbIV</code> is `null`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is a known weak key for this algorithm and cannot be used.","source":"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,125],"content":"<ph id=\"ph1\">&lt;code&gt;rgbIV&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbIV</code> is `null`."}],"pos":[16787,16919],"yaml":true},{"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,163],"content":"Creates a symmetric AES encryptor object using the current key and initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric AES encryptor object using the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[17919,18083],"yaml":true},{"content":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.","nodes":[{"pos":[0,187],"content":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.","nodes":[{"content":"Use this method to encrypt a message and then use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A&gt;</ph> overload with the same signature to decrypt the  result of this method.","pos":[0,187],"source":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method."}]}],"pos":[18094,18282],"yaml":true,"extradata":"MT"},{"content":"A symmetric AES encryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES encryptor object.","nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]}],"pos":[18495,18529],"yaml":true},{"content":"Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).","nodes":[{"pos":[0,95],"content":"Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).","pos":[0,95]}]}],"pos":[19740,19836],"yaml":true},{"content":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.","nodes":[{"pos":[0,187],"content":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.","nodes":[{"content":"Use this method to encrypt a message and then use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A&gt;</ph> overload with the same signature to decrypt the  result of this method.","pos":[0,187],"source":"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method."}]},{"pos":[195,673],"content":"[!NOTE]\n If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.","leadings":["","> "],"nodes":[{"content":"If you've created the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> property and then call the  parameterless <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.AesCng.CreateEncryptor&gt;</ph> overload instead; otherwise, using this method will create an ephemeral key as specified by the <ph id=\"ph4\">`rgbKey`</ph> parameter.","pos":[9,476],"source":" If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."}]}],"pos":[19847,20526],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,88],"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"content":"The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,88],"nodes":[{"content":"The secret key to use for the AES algorithm.","pos":[0,44]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[45,88]}]}]}],"pos":[20736,20825],"yaml":true},{"content":"The initialization vector to use for the AES algorithm.","nodes":[{"pos":[0,55],"content":"The initialization vector to use for the AES algorithm.","nodes":[{"content":"The initialization vector to use for the AES algorithm.","pos":[0,55]}]}],"pos":[20886,20942],"yaml":true},{"content":"A symmetric AES encryptor object.","nodes":[{"pos":[0,33],"content":"A symmetric AES encryptor object.","nodes":[{"content":"A symmetric AES encryptor object.","pos":[0,33]}]}],"pos":[21031,21065],"yaml":true},{"content":"<code>rgbKey</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbKey</code> is `null`."}],"pos":[21246,21277],"yaml":true},{"content":"<code>rgbKey</code> is not a valid size for this algorithm.  \n  \n -or-  \n  \n <code>rgbIV</code> size does not match the block size for this algorithm.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is not a valid size for this algorithm.","source":"<code>rgbKey</code> is not a valid size for this algorithm."},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,150],"content":"<ph id=\"ph1\">&lt;code&gt;rgbIV&lt;/code&gt;</ph> size does not match the block size for this algorithm.","source":"<code>rgbIV</code> size does not match the block size for this algorithm."}],"pos":[21371,21528],"yaml":true},{"content":"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \n  \n -or-  \n  \n <code>rgbIV</code> is `null`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;rgbKey&lt;/code&gt;</ph> is a known weak key for this algorithm and cannot be used.","source":"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used."},{"pos":[85,89],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[96,125],"content":"<ph id=\"ph1\">&lt;code&gt;rgbIV&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbIV</code> is `null`."}],"pos":[21676,21808],"yaml":true},{"content":"Generates a random initialization vector (IV) to use for the AES algorithm.","nodes":[{"pos":[0,75],"content":"Generates a random initialization vector (IV) to use for the AES algorithm.","nodes":[{"content":"Generates a random initialization vector (IV) to use for the AES algorithm.","pos":[0,75]}]}],"pos":[23926,24002],"yaml":true},{"content":"Generates a random key to use for the AES algorithm.","nodes":[{"pos":[0,52],"content":"Generates a random key to use for the AES algorithm.","nodes":[{"content":"Generates a random key to use for the AES algorithm.","pos":[0,52]}]}],"pos":[25133,25186],"yaml":true},{"content":"Gets or sets the key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.","nodes":[{"pos":[0,96],"content":"Gets or sets the key for the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"Gets or sets the key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm."}],"pos":[26267,26364],"yaml":true},{"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made. In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown.  \n  \n In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","nodes":[{"pos":[0,359],"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made. In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown.","nodes":[{"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made. In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown.","pos":[0,359],"nodes":[{"content":"If you've created the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> object using an existing persisted key, when you read the value of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.AesCng.Key%2A&gt;</ph> property, an attempt to export the key will be made.","pos":[0,238],"source":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made."},{"content":"In this case, if the key is not exportable, a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> will be thrown.","pos":[239,359],"source":" In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown."}]}]},{"pos":[366,690],"content":"In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","nodes":[{"content":"In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","pos":[0,324],"nodes":[{"content":"In addition to that, if you set the value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng.Key%2A&gt;</ph> property,  the persisted key will no longer be used and a temporary key will be used instead.","pos":[0,192],"source":"In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead."},{"content":"If you need to use the persisted key again, a new instance of <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> class needs to be created.","pos":[193,324],"source":" If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created."}]}]}],"pos":[26375,27070],"yaml":true,"extradata":"MT"},{"content":"The key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.","nodes":[{"pos":[0,83],"content":"The key for the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm."}],"pos":[27191,27275],"yaml":true},{"content":"Gets or sets the size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.","nodes":[{"pos":[0,129],"content":"Gets or sets the size, in bits, of the secret key used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"Gets or sets the size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm."}],"pos":[28293,28423],"yaml":true},{"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","nodes":[{"pos":[0,413],"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","nodes":[{"content":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.","pos":[0,413],"nodes":[{"content":"If you've created the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> object using an existing persisted key and you set the value of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.AesCng.KeySize%2A&gt;</ph> property,  the persisted key will no longer be used and an ephemeral key will be used instead.","pos":[0,281],"source":"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead."},{"content":"If you need to use the persisted key again, a new instance of <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCng&gt;</ph> class needs to be created.","pos":[282,413],"source":" If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created."}]}]}],"pos":[28434,28848],"yaml":true,"extradata":"MT"},{"content":"The size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.","nodes":[{"pos":[0,116],"content":"The size, in bits, of the secret key used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesCng\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm."}],"pos":[28969,29086],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AesCng\n  commentId: T:System.Security.Cryptography.AesCng\n  id: AesCng\n  children:\n  - System.Security.Cryptography.AesCng.#ctor\n  - System.Security.Cryptography.AesCng.#ctor(System.String)\n  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  - System.Security.Cryptography.AesCng.CreateDecryptor\n  - System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCng.CreateEncryptor\n  - System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesCng.Dispose(System.Boolean)\n  - System.Security.Cryptography.AesCng.GenerateIV\n  - System.Security.Cryptography.AesCng.GenerateKey\n  - System.Security.Cryptography.AesCng.Key\n  - System.Security.Cryptography.AesCng.KeySize\n  langs:\n  - csharp\n  name: AesCng\n  nameWithType: AesCng\n  fullName: System.Security.Cryptography.AesCng\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.\n  syntax:\n    content: 'public sealed class AesCng : System.Security.Cryptography.Aes'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.Aes\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Aes.Create\n  - System.Security.Cryptography.Aes.Create(System.String)\n  - System.Security.Cryptography.Aes.LegalBlockSizes\n  - System.Security.Cryptography.Aes.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.#ctor\n  commentId: M:System.Security.Cryptography.AesCng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: AesCng()\n  nameWithType: AesCng.AesCng()\n  fullName: AesCng.AesCng()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with an ephemeral key.\n  syntax:\n    content: public AesCng ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCng.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: AesCng(String)\n  nameWithType: AesCng.AesCng(String)\n  fullName: AesCng.AesCng(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key.\n  remarks: This constructor uses a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> and <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> as the default key storage provider (KSP) to open the key.\n  syntax:\n    content: public AesCng (string keyName);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The name of the key.\n  overload: System.Security.Cryptography.AesCng.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyName</code> is `null`.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: Cryptography Next Generation (CNG) is not supported on this system.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: All other errors.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: AesCng(String, CngProvider)\n  nameWithType: AesCng.AesCng(String, CngProvider)\n  fullName: AesCng.AesCng(String, CngProvider)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP).\n  remarks: A default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is used to open the key.\n  syntax:\n    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The name of the key.\n    - id: provider\n      type: System.Security.Cryptography.CngProvider\n      description: The KSP that contains the key.\n  overload: System.Security.Cryptography.AesCng.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>keyName</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>provider</code> is `null`.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: Cryptography Next Generation (CNG) is not supported on this system.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: All other errors.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: AesCng(String, CngProvider, CngKeyOpenOptions)\n  nameWithType: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)\n  fullName: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\"></xref> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options.\n  syntax:\n    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: The name of the key.\n    - id: provider\n      type: System.Security.Cryptography.CngProvider\n      description: The KSP that contains the key.\n    - id: openOptions\n      type: System.Security.Cryptography.CngKeyOpenOptions\n      description: A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.\n  overload: System.Security.Cryptography.AesCng.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>keyName</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>provider</code> is `null`.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: Cryptography Next Generation (CNG) is not supported on this system.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: All other errors.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.CreateDecryptor\n  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: AesCng.CreateDecryptor()\n  fullName: AesCng.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object with the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload with the same signature.\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCng.CreateDecryptor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesCng.CreateDecryptor(Byte[], Byte[])\n  fullName: AesCng.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).\n  remarks: \"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29> overload with the same signature.  \\n  \\n> [!NOTE]\\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the AES algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES decryptor object.\n  overload: System.Security.Cryptography.AesCng.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rgbKey</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>rgbKey</code> is not a valid size for this algorithm.  \\n  \\n -or-  \\n  \\n <code>rgbIV</code> size does not match the block size for this algorithm.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \\n  \\n -or-  \\n  \\n <code>rgbIV</code> is `null`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.CreateEncryptor\n  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: AesCng.CreateEncryptor()\n  fullName: AesCng.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES encryptor object using the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCng.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesCng.CreateEncryptor(Byte[], Byte[])\n  fullName: AesCng.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).\n  remarks: \"Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.  \\n  \\n> [!NOTE]\\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter.\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the AES algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric AES encryptor object.\n  overload: System.Security.Cryptography.AesCng.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rgbKey</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>rgbKey</code> is not a valid size for this algorithm.  \\n  \\n -or-  \\n  \\n <code>rgbIV</code> size does not match the block size for this algorithm.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \\n  \\n -or-  \\n  \\n <code>rgbIV</code> is `null`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.AesCng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AesCng.Dispose(Boolean)\n  fullName: AesCng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.AesCng.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.GenerateIV\n  commentId: M:System.Security.Cryptography.AesCng.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: AesCng.GenerateIV()\n  fullName: AesCng.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (IV) to use for the AES algorithm.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCng.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.GenerateKey\n  commentId: M:System.Security.Cryptography.AesCng.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: AesCng.GenerateKey()\n  fullName: AesCng.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Generates a random key to use for the AES algorithm.\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.AesCng.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.Key\n  commentId: P:System.Security.Cryptography.AesCng.Key\n  id: Key\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AesCng.Key\n  fullName: AesCng.Key\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.\n  remarks: \"If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made. In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown.  \\n  \\n In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.\"\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The key for the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.\n  overload: System.Security.Cryptography.AesCng.Key*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesCng.KeySize\n  commentId: P:System.Security.Cryptography.AesCng.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AesCng\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AesCng.KeySize\n  fullName: AesCng.KeySize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.\n  remarks: If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\"></xref> algorithm.\n  overload: System.Security.Cryptography.AesCng.KeySize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.Aes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Aes\n  nameWithType: Aes\n  fullName: System.Security.Cryptography.Aes\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.AesCng.#ctor\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: AesCng()\n  nameWithType: AesCng.AesCng()\n  fullName: AesCng.AesCng()\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String)\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: AesCng(String)\n  nameWithType: AesCng.AesCng(String)\n  fullName: AesCng.AesCng(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: AesCng(String, CngProvider)\n  nameWithType: AesCng.AesCng(String, CngProvider)\n  fullName: AesCng.AesCng(String, CngProvider)\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: AesCng(String, CngProvider, CngKeyOpenOptions)\n  nameWithType: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)\n  fullName: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)\n- uid: System.Security.Cryptography.CngKeyOpenOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyOpenOptions\n  nameWithType: CngKeyOpenOptions\n  fullName: System.Security.Cryptography.CngKeyOpenOptions\n- uid: System.Security.Cryptography.AesCng.CreateDecryptor\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: AesCng.CreateDecryptor()\n  fullName: AesCng.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesCng.CreateDecryptor(Byte[], Byte[])\n  fullName: AesCng.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesCng.CreateEncryptor\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: AesCng.CreateEncryptor()\n  fullName: AesCng.CreateEncryptor()\n- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesCng.CreateEncryptor(Byte[], Byte[])\n  fullName: AesCng.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AesCng.Dispose(Boolean)\n  fullName: AesCng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AesCng.GenerateIV\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: AesCng.GenerateIV()\n  fullName: AesCng.GenerateIV()\n- uid: System.Security.Cryptography.AesCng.GenerateKey\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: AesCng.GenerateKey()\n  fullName: AesCng.GenerateKey()\n- uid: System.Security.Cryptography.AesCng.Key\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: Key\n  nameWithType: AesCng.Key\n  fullName: AesCng.Key\n- uid: System.Security.Cryptography.AesCng.KeySize\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCng.KeySize\n  fullName: AesCng.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AesCng.#ctor*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: AesCng\n  nameWithType: AesCng.AesCng\n  fullName: AesCng.AesCng\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.CreateDecryptor*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: AesCng.CreateDecryptor\n  fullName: AesCng.CreateDecryptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.CreateEncryptor*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: AesCng.CreateEncryptor\n  fullName: AesCng.CreateEncryptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.Dispose*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: Dispose\n  nameWithType: AesCng.Dispose\n  fullName: AesCng.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.GenerateIV*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: GenerateIV\n  nameWithType: AesCng.GenerateIV\n  fullName: AesCng.GenerateIV\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.GenerateKey*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: GenerateKey\n  nameWithType: AesCng.GenerateKey\n  fullName: AesCng.GenerateKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.Key*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: Key\n  nameWithType: AesCng.Key\n  fullName: AesCng.Key\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Security.Cryptography.AesCng.KeySize*\n  parent: System.Security.Cryptography.AesCng\n  isExternal: false\n  name: KeySize\n  nameWithType: AesCng.KeySize\n  fullName: AesCng.KeySize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSize\n  nameWithType: SymmetricAlgorithm.BlockSize\n  fullName: SymmetricAlgorithm.BlockSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.Aes.Create\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create()\n  nameWithType: Aes.Create()\n  fullName: Aes.Create()\n- uid: System.Security.Cryptography.Aes.Create(System.String)\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create(String)\n  nameWithType: Aes.Create(String)\n  fullName: Aes.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IV\n  nameWithType: SymmetricAlgorithm.IV\n  fullName: SymmetricAlgorithm.IV\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.Aes.LegalBlockSizes\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: Aes.LegalBlockSizes\n  fullName: Aes.LegalBlockSizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.Aes.LegalKeySizes\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: Aes.LegalKeySizes\n  fullName: Aes.LegalKeySizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Mode\n  nameWithType: SymmetricAlgorithm.Mode\n  fullName: SymmetricAlgorithm.Mode\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Padding\n  nameWithType: SymmetricAlgorithm.Padding\n  fullName: SymmetricAlgorithm.Padding\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}