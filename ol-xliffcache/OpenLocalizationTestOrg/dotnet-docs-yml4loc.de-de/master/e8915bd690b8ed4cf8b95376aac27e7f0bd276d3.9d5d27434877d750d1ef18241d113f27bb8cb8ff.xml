{"nodes":[{"content":"Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.","nodes":[{"pos":[0,125],"content":"Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.","nodes":[{"content":"Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.","pos":[0,125]}]}],"pos":[1448,1574],"yaml":true},{"content":"The channel listeners on a service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, they can communicate by exchanging messages","nodes":[{"pos":[0,223],"content":"The channel listeners on a service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, they can communicate by exchanging messages","nodes":[{"content":"The channel listeners on a service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, they can communicate by exchanging messages","pos":[0,223],"nodes":[{"content":"The channel listeners on a service wait for and then accept the channels created by factories on the client.","pos":[0,108]},{"content":"Once the channel connection is established between client and service, they can communicate by exchanging messages","pos":[109,223]}]}]}],"pos":[1585,1809],"yaml":true,"extradata":"MT"},{"content":"The type of channel the channel listeners accept.","nodes":[{"pos":[0,49],"content":"The type of channel the channel listeners accept.","nodes":[{"content":"The type of channel the channel listeners accept.","pos":[0,49]}]}],"pos":[2085,2135],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class."}],"pos":[7970,8083],"yaml":true},{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"pos":[0,420],"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","pos":[0,420],"nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages.","pos":[0,118]},{"content":"The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.","pos":[119,227]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify other values for these operation timeouts.","pos":[228,420],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts."}]}]}],"pos":[8094,8515],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class with specified default communication timeouts.","nodes":[{"pos":[0,158],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"&gt;&lt;/xref&gt;</ph> class with specified default communication timeouts.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class with specified default communication timeouts."}],"pos":[9998,10157],"yaml":true},{"content":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"pos":[0,307],"content":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","pos":[0,307],"source":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values."}]}],"pos":[10168,10476],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"&gt;&lt;/xref&gt;</ph> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","source":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages."}],"pos":[10707,10888],"yaml":true},{"content":"Accepts a channel of the type specified by the current channel listener.","nodes":[{"pos":[0,72],"content":"Accepts a channel of the type specified by the current channel listener.","nodes":[{"content":"Accepts a channel of the type specified by the current channel listener.","pos":[0,72]}]}],"pos":[12024,12097],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> accepted by the listener.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener."}],"pos":[12225,12314],"yaml":true},{"content":"Accepts a channel of the type specified by the current channel listener within a specified interval of time.","nodes":[{"pos":[0,108],"content":"Accepts a channel of the type specified by the current channel listener within a specified interval of time.","nodes":[{"content":"Accepts a channel of the type specified by the current channel listener within a specified interval of time.","pos":[0,108]}]}],"pos":[13533,13642],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the accept channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out."}],"pos":[13796,13925],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> accepted by the listener.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener."}],"pos":[13977,14066],"yaml":true},{"content":"Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.","nodes":[{"pos":[0,107],"content":"Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.","nodes":[{"content":"Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.","pos":[0,107]}]}],"pos":[15411,15519],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the accept channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out."}],"pos":[15708,15837],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the accept channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation."}],"pos":[15898,16048],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous accept channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation."}],"pos":[16111,16215],"yaml":true},{"content":"When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.","nodes":[{"pos":[0,180],"content":"When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.","nodes":[{"content":"When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.","pos":[0,180]}]}],"pos":[17643,17824],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the accept channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out."}],"pos":[18025,18154],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the accept channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation."}],"pos":[18225,18375],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","nodes":[{"pos":[0,131],"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","pos":[0,131]}]}],"pos":[18436,18568],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous accept channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation."}],"pos":[18631,18735],"yaml":true},{"content":"When implemented in a derived class, completes an asynchronous operation to accept a channel.","nodes":[{"pos":[0,93],"content":"When implemented in a derived class, completes an asynchronous operation to accept a channel.","nodes":[{"content":"When implemented in a derived class, completes an asynchronous operation to accept a channel.","pos":[0,93]}]}],"pos":[20001,20095],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\"></xref> method.","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\"></xref> method."}],"pos":[20258,20429],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> accepted by the listener.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener."}],"pos":[20481,20570],"yaml":true},{"content":"When implemented in a derived class, provides an extensibility point when accepting a channel.","nodes":[{"pos":[0,94],"content":"When implemented in a derived class, provides an extensibility point when accepting a channel.","nodes":[{"content":"When implemented in a derived class, provides an extensibility point when accepting a channel.","pos":[0,94]}]}],"pos":[21804,21899],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the accept channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out."}],"pos":[22067,22196],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> accepted.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted."}],"pos":[22248,22321],"yaml":true},{"content":"When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.","nodes":[{"pos":[0,117],"content":"When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.","nodes":[{"content":"When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.","pos":[0,117]}]}],"pos":[23758,23876],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the accept channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out."}],"pos":[24091,24220],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the accept channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation."}],"pos":[24291,24441],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","nodes":[{"pos":[0,131],"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.","pos":[0,131]}]}],"pos":[24502,24634],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous accept channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation."}],"pos":[24697,24801],"yaml":true},{"content":"When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.","nodes":[{"pos":[0,123],"content":"When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.","nodes":[{"content":"When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.","pos":[0,123]}]}],"pos":[26081,26205],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,223],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[26382,26606],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> accepted by the listener.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener."}],"pos":[26658,26747],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1\n  commentId: T:System.ServiceModel.Channels.ChannelListenerBase`1\n  id: ChannelListenerBase`1\n  children:\n  - System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  - System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  - System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  langs:\n  - csharp\n  name: ChannelListenerBase<TChannel>\n  nameWithType: ChannelListenerBase<TChannel>\n  fullName: System.ServiceModel.Channels.ChannelListenerBase<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.\n  remarks: The channel listeners on a service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, they can communicate by exchanging messages\n  syntax:\n    content: 'public abstract class ChannelListenerBase<TChannel> : System.ServiceModel.Channels.ChannelListenerBase, System.ServiceModel.Channels.IChannelListener<TChannel> where TChannel : class, IChannel'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel listeners accept.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Channels.ChannelManagerBase\n  - System.ServiceModel.Channels.ChannelListenerBase\n  implements:\n  - System.ServiceModel.Channels.IChannelListener{TChannel}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase.Uri\n  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: ChannelListenerBase<TChannel>()\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>()\n  fullName: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class.\n  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.\n  syntax:\n    content: protected ChannelListenerBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n  fullName: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> class with specified default communication timeouts.\n  remarks: Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.\n  syntax:\n    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  id: AcceptChannel\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: AcceptChannel()\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel()\n  fullName: ChannelListenerBase<TChannel>.AcceptChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Accepts a channel of the type specified by the current channel listener.\n  syntax:\n    content: public TChannel AcceptChannel ();\n    parameters: []\n    return:\n      type: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  id: AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: AcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  fullName: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Accepts a channel of the type specified by the current channel listener within a specified interval of time.\n  syntax:\n    content: public TChannel AcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.\n    return:\n      type: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.\n    - id: state\n      type: System.Object\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  id: EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, completes an asynchronous operation to accept a channel.\n  syntax:\n    content: public TChannel EndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\"></xref> method.\n    return:\n      type: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  id: OnAcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnAcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  fullName: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides an extensibility point when accepting a channel.\n  syntax:\n    content: protected abstract TChannel OnAcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.\n    return:\n      type: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the accept channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous accept channel operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  id: OnEndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  langs:\n  - csharp\n  name: OnEndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  fullName: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.\n  syntax:\n    content: protected abstract TChannel OnEndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.\n    return:\n      type: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> accepted by the listener.\n  overload: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.ChannelListenerBase\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelListenerBase\n  nameWithType: ChannelListenerBase\n  fullName: System.ServiceModel.Channels.ChannelListenerBase\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase<TChannel>()\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>()\n  fullName: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>()\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n  fullName: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel()\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel()\n  fullName: ChannelListenerBase<TChannel>.AcceptChannel()\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n  fullName: ChannelListenerBase<TChannel>.AcceptChannel(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel(AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: ChannelListenerBase<TChannel>.EndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnAcceptChannel(TimeSpan)\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n  fullName: ChannelListenerBase<TChannel>.OnAcceptChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase<TChannel>.OnBeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnEndAcceptChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n  fullName: ChannelListenerBase<TChannel>.OnEndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.#ctor*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: ChannelListenerBase<TChannel>\n  nameWithType: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>\n  fullName: ChannelListenerBase<TChannel>.ChannelListenerBase<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: AcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.AcceptChannel\n  fullName: ChannelListenerBase<TChannel>.AcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: BeginAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.BeginAcceptChannel\n  fullName: ChannelListenerBase<TChannel>.BeginAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: EndAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.EndAcceptChannel\n  fullName: ChannelListenerBase<TChannel>.EndAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnAcceptChannel\n  fullName: ChannelListenerBase<TChannel>.OnAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnBeginAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnBeginAcceptChannel\n  fullName: ChannelListenerBase<TChannel>.OnBeginAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase`1\n  isExternal: false\n  name: OnEndAcceptChannel\n  nameWithType: ChannelListenerBase<TChannel>.OnEndAcceptChannel\n  fullName: ChannelListenerBase<TChannel>.OnEndAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: ChannelListenerBase.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: ChannelListenerBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: ChannelListenerBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: ChannelListenerBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelListenerBase.GetProperty<T>()\n  fullName: ChannelListenerBase.GetProperty<T>()\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnEndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnWaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: ChannelListenerBase.Uri\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: WaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.WaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n"}