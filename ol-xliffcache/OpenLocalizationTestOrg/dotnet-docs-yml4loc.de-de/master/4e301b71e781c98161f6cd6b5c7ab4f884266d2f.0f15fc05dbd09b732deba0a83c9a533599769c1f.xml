{"nodes":[{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> class represents a signer associated with a <xref href=\"System.Security.Cryptography.Pkcs.SignedCms\"></xref> object that represents a CMS/PKCS #7 message.","nodes":[{"pos":[0,224],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"&gt;&lt;/xref&gt;</ph> class represents a signer associated with a <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignedCms\"&gt;&lt;/xref&gt;</ph> object that represents a CMS/PKCS #7 message.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> class represents a signer associated with a <xref href=\"System.Security.Cryptography.Pkcs.SignedCms\"></xref> object that represents a CMS/PKCS #7 message."}],"pos":[1544,1771],"yaml":true},{"content":"The signatures represented by the <xref:System.Security.Cryptography.Pkcs.SignerInfo> class can be either over message content or a signature. The latter kind of signature is referred to as a *countersignature*.  \n  \n This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \n  \n This class does not have a public constructor; therefore, it cannot be publicly instantiated. It is a read-only class accessible from the <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,211],"content":"The signatures represented by the <xref:System.Security.Cryptography.Pkcs.SignerInfo> class can be either over message content or a signature. The latter kind of signature is referred to as a *countersignature*.","nodes":[{"content":"The signatures represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo&gt;</ph> class can be either over message content or a signature.","pos":[0,142],"source":"The signatures represented by the <xref:System.Security.Cryptography.Pkcs.SignerInfo> class can be either over message content or a signature."},{"content":"The latter kind of signature is referred to as a <bpt id=\"p1\">*</bpt>countersignature<ept id=\"p1\">*</ept>.","pos":[143,211],"source":" The latter kind of signature is referred to as a *countersignature*."}]},{"pos":[218,416],"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[0,198],"nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.","pos":[0,79]},{"content":"That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[81,198]}]}]},{"pos":[423,661],"content":"This class does not have a public constructor; therefore, it cannot be publicly instantiated. It is a read-only class accessible from the <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName> property.","nodes":[{"content":"This class does not have a public constructor; therefore, it cannot be publicly instantiated. It is a read-only class accessible from the <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName> property.","pos":[0,238],"nodes":[{"content":"This class does not have a public constructor; therefore, it cannot be publicly instantiated.","pos":[0,93]},{"content":"It is a read-only class accessible from the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName&gt;</ph> property.","pos":[94,238],"source":" It is a read-only class accessible from the <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName> property."}]}]}],"pos":[1782,2450],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Certificate\"></xref> property retrieves the signing certificate associated with the signer information.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Certificate\"&gt;&lt;/xref&gt;</ph> property retrieves the signing certificate associated with the signer information.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Certificate\"></xref> property retrieves the signing certificate associated with the signer information."}],"pos":[3860,4025],"yaml":true},{"content":"If the signing certificate is not included at signing time by using the <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName> property, then the certificate will not be returned.","nodes":[{"pos":[0,217],"content":"If the signing certificate is not included at signing time by using the <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName> property, then the certificate will not be returned.","nodes":[{"content":"If the signing certificate is not included at signing time by using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName&gt;</ph> property, then the certificate will not be returned.","pos":[0,217],"source":"If the signing certificate is not included at signing time by using the <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName> property, then the certificate will not be returned."}]}],"pos":[4036,4254],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object that represents the signing certificate.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> object that represents the signing certificate.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object that represents the signing certificate."}],"pos":[4474,4609],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> method verifies the data integrity of the CMS/PKCS #7 message signer information. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> is a specialized method used in specific security infrastructure applications in which the subject uses the **HashOnly** member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\"></xref> enumeration when setting up a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> or <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> methods.","nodes":[{"pos":[0,1156],"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> method verifies the data integrity of the CMS/PKCS #7 message signer information. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> is a specialized method used in specific security infrastructure applications in which the subject uses the **HashOnly** member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\"></xref> enumeration when setting up a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> or <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"&gt;&lt;/xref&gt;</ph> method verifies the data integrity of the CMS/PKCS #7 message signer information.","pos":[0,161],"source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> method verifies the data integrity of the CMS/PKCS #7 message signer information."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"&gt;&lt;/xref&gt;</ph> is a specialized method used in specific security infrastructure applications in which the subject uses the <bpt id=\"p1\">**</bpt>HashOnly<ept id=\"p1\">**</ept> member of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\"&gt;&lt;/xref&gt;</ph> enumeration when setting up a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"&gt;&lt;/xref&gt;</ph> object.","pos":[162,552],"source":"<xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> is a specialized method used in specific security infrastructure applications in which the subject uses the **HashOnly** member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\"></xref> enumeration when setting up a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"&gt;&lt;/xref&gt;</ph> does not authenticate the signer information because this method does not involve verifying a digital signature.","pos":[553,741],"source":"<xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> does not authenticate the signer information because this method does not involve verifying a digital signature."},{"content":"For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"&gt;&lt;/xref&gt;</ph> methods.","pos":[742,1156],"source":" For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> or <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> methods."}]}],"pos":[5700,6859],"yaml":true},{"content":"This method does not provide authentication of the CMS/PKCS #7 message signer information.","nodes":[{"pos":[0,90],"content":"This method does not provide authentication of the CMS/PKCS #7 message signer information.","nodes":[{"content":"This method does not provide authentication of the CMS/PKCS #7 message signer information.","pos":[0,90]}]}],"pos":[6870,6963],"yaml":true,"extradata":"MT"},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[7261,7311],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> method verifies the digital signature of the message and, optionally, validates the certificate.","nodes":[{"pos":[0,197],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method verifies the digital signature of the message and, optionally, validates the certificate.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> method verifies the digital signature of the message and, optionally, validates the certificate."}],"pos":[8414,8612],"yaml":true},{"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.  \n  \n If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.","nodes":[{"pos":[0,126],"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.","nodes":[{"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.","pos":[0,126]}]},{"pos":[133,347],"content":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.","nodes":[{"content":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Chain&gt;</ph> object to perform custom validation.","pos":[0,214],"source":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation."}]}],"pos":[8623,8975],"yaml":true,"extradata":"MT"},{"content":"A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","nodes":[{"pos":[0,480],"content":"A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","nodes":[{"content":"A bool value that specifies whether only the digital signature is verified.","pos":[0,75]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">verifySignatureOnly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>, only the signature is verified.","pos":[76,154],"source":" If <code>verifySignatureOnly</code> is `true`, only the signature is verified."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">verifySignatureOnly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated.","pos":[155,325],"source":" If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated."},{"content":"The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","pos":[326,480]}]}],"pos":[9145,9626],"yaml":true},{"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"pos":[0,84],"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"content":"A null reference was passed to a method that does not accept it as a valid argument.","pos":[0,84]}]}],"pos":[9815,9900],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[10048,10098],"yaml":true},{"content":"A method call was invalid for the object's current state.","nodes":[{"pos":[0,57],"content":"A method call was invalid for the object's current state.","nodes":[{"content":"A method call was invalid for the object's current state.","pos":[0,57]}]}],"pos":[10208,10266],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.","nodes":[{"pos":[0,320],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate."}],"pos":[11672,11993],"yaml":true},{"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.  \n  \n If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.","nodes":[{"pos":[0,126],"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.","nodes":[{"content":"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.","pos":[0,126]}]},{"pos":[133,347],"content":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.","nodes":[{"content":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Chain&gt;</ph> object to perform custom validation.","pos":[0,214],"source":"If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation."}]}],"pos":[12004,12356],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\"></xref> object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> instead of <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref>.","nodes":[{"pos":[0,494],"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\"></xref> object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> instead of <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\"&gt;&lt;/xref&gt;</ph> object that can be used to validate the chain.","pos":[0,143],"source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\"></xref> object that can be used to validate the chain."},{"content":"If no additional certificates are to be used to validate the chain, use <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"&gt;&lt;/xref&gt;</ph> instead of <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"&gt;&lt;/xref&gt;</ph>.","pos":[144,494],"source":" If no additional certificates are to be used to validate the chain, use <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> instead of <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref>."}]}],"pos":[12660,13155],"yaml":true},{"content":"A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","nodes":[{"pos":[0,480],"content":"A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","nodes":[{"content":"A bool value that specifies whether only the digital signature is verified.","pos":[0,75]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">verifySignatureOnly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>, only the signature is verified.","pos":[76,154],"source":" If <code>verifySignatureOnly</code> is `true`, only the signature is verified."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">verifySignatureOnly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated.","pos":[155,325],"source":" If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated."},{"content":"The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.","pos":[326,480]}]}],"pos":[13231,13712],"yaml":true},{"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"pos":[0,84],"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"content":"A null reference was passed to a method that does not accept it as a valid argument.","pos":[0,84]}]}],"pos":[13901,13986],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[14134,14184],"yaml":true},{"content":"A method call was invalid for the object's current state.","nodes":[{"pos":[0,57],"content":"A method call was invalid for the object's current state.","nodes":[{"content":"A method call was invalid for the object's current state.","pos":[0,57]}]}],"pos":[14294,14352],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\"></xref> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.","nodes":[{"pos":[0,276],"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\"></xref> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\"&gt;&lt;/xref&gt;</ph> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message.","pos":[0,229],"source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\"></xref> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message."},{"content":"Countersignatures are restricted to one level.","pos":[230,276]}]}],"pos":[15440,15719],"yaml":true},{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \n  \n This method displays a user interface in which you choose signers for this message. This requires that the current process is running in *user interactive mode*, meaning that the <xref:System.Environment.UserInteractive%2A?displayProperty=fullName> property is set to `true`. A process is normally in user interactive mode unless it is a service process or running inside a Web application.  \n  \n Signers whose certificates meet the following conditions will be displayed in the list:  \n  \n-   The certificate has an associated private key.  \n  \n-   The certificate is within its validity period.  \n  \n-   The certificate has no key usage or a key usage that supports digital signatures or nonrepudiation.  \n  \n Signer certificates are chosen from the My store.  \n  \n## .NET Framework Security  \n The following permissions are required to display the user interface:  \n  \n-   <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>  \n  \n The following permissions are required to access the signature key:  \n  \n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>  \n  \n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[{"pos":[0,198],"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[0,198],"nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.","pos":[0,79]},{"content":"That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[81,198]}]}]},{"pos":[205,595],"content":"This method displays a user interface in which you choose signers for this message. This requires that the current process is running in *user interactive mode*, meaning that the <xref:System.Environment.UserInteractive%2A?displayProperty=fullName> property is set to `true`. A process is normally in user interactive mode unless it is a service process or running inside a Web application.","nodes":[{"content":"This method displays a user interface in which you choose signers for this message.","pos":[0,83]},{"content":"This requires that the current process is running in <bpt id=\"p1\">*</bpt>user interactive mode<ept id=\"p1\">*</ept>, meaning that the <ph id=\"ph1\">&lt;xref:System.Environment.UserInteractive%2A?displayProperty=fullName&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>.","pos":[84,275],"source":" This requires that the current process is running in *user interactive mode*, meaning that the <xref:System.Environment.UserInteractive%2A?displayProperty=fullName> property is set to `true`."},{"content":"A process is normally in user interactive mode unless it is a service process or running inside a Web application.","pos":[276,390]}]},{"pos":[602,689],"content":"Signers whose certificates meet the following conditions will be displayed in the list:","nodes":[{"content":"Signers whose certificates meet the following conditions will be displayed in the list:","pos":[0,87]}]},{"pos":[699,745],"content":"The certificate has an associated private key.","nodes":[{"content":"The certificate has an associated private key.","pos":[0,46]}]},{"pos":[755,801],"content":"The certificate is within its validity period.","nodes":[{"content":"The certificate is within its validity period.","pos":[0,46]}]},{"pos":[811,910],"content":"The certificate has no key usage or a key usage that supports digital signatures or nonrepudiation.","nodes":[{"content":"The certificate has no key usage or a key usage that supports digital signatures or nonrepudiation.","pos":[0,99]}]},{"pos":[917,966],"content":"Signer certificates are chosen from the My store.","nodes":[{"content":"Signer certificates are chosen from the My store.","pos":[0,49]}]},{"pos":[975,998],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[1002,1071],"content":"The following permissions are required to display the user interface:","nodes":[{"content":"The following permissions are required to display the user interface:","pos":[0,69]}]},{"pos":[1081,1159],"content":"<xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>","nodes":[]},{"pos":[1166,1233],"content":"The following permissions are required to access the signature key:","nodes":[{"content":"The following permissions are required to access the signature key:","pos":[0,67]}]},{"pos":[1243,1330],"content":"<xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[]},{"pos":[1340,1427],"content":"<xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[]}],"pos":[15730,17183],"yaml":true,"extradata":"MT"},{"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"pos":[0,84],"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"content":"A null reference was passed to a method that does not accept it as a valid argument.","pos":[0,84]}]}],"pos":[17463,17548],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[17696,17746],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\"></xref> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.","nodes":[{"pos":[0,300],"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\"></xref> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\"&gt;&lt;/xref&gt;</ph> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message.","pos":[0,253],"source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\"></xref> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message."},{"content":"Countersignatures are restricted to one level.","pos":[254,300]}]}],"pos":[18996,19299],"yaml":true},{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \n  \n## .NET Framework Security  \n The following permissions are required to access the signature key:  \n  \n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>  \n  \n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[{"pos":[0,198],"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[0,198],"nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.","pos":[0,79]},{"content":"That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[81,198]}]}]},{"pos":[207,230],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[234,301],"content":"The following permissions are required to access the signature key:","nodes":[{"content":"The following permissions are required to access the signature key:","pos":[0,67]}]},{"pos":[311,398],"content":"<xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[]},{"pos":[408,495],"content":"<xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>","nodes":[]}],"pos":[19310,19815],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object that represents the counter signer.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"&gt;&lt;/xref&gt;</ph> object that represents the counter signer.","source":"A <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object that represents the counter signer."}],"pos":[20036,20146],"yaml":true},{"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"pos":[0,84],"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"content":"A null reference was passed to a method that does not accept it as a valid argument.","pos":[0,84]}]}],"pos":[20344,20429],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[20577,20627],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> property retrieves the set of counter signers associated with the signer information.","nodes":[{"pos":[0,174],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"&gt;&lt;/xref&gt;</ph> property retrieves the set of counter signers associated with the signer information.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> property retrieves the set of counter signers associated with the signer information."}],"pos":[21681,21856],"yaml":true},{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature. That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","nodes":[{"pos":[0,197],"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature. That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature. That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[0,197],"nodes":[{"content":"This implementation of CMS/PKCS #7 supports only one level of countersignature.","pos":[0,79]},{"content":"That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.","pos":[80,197]}]}]}],"pos":[21867,22067],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfoCollection\"></xref> collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.","nodes":[{"pos":[0,222],"content":"A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfoCollection\"></xref> collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfoCollection\"&gt;&lt;/xref&gt;</ph> collection that represents the counter signers for the signer information.","pos":[0,152],"source":"A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfoCollection\"></xref> collection that represents the counter signers for the signer information."},{"content":"If there are no counter signers, the property is an empty collection.","pos":[153,222]}]}],"pos":[22278,22501],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used in the computation of the signatures.","nodes":[{"pos":[0,247],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\"&gt;&lt;/xref&gt;</ph> property retrieves the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Oid\"&gt;&lt;/xref&gt;</ph> object that represents the hash algorithm used in the computation of the signatures.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used in the computation of the signatures."}],"pos":[23631,23879],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used with the signature.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Oid\"&gt;&lt;/xref&gt;</ph> object that represents the hash algorithm used with the signature.","source":"An <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used with the signature."}],"pos":[24043,24167],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\"></xref> method removes the countersignature at the specified index of the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> collection.","nodes":[{"pos":[0,269],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\"&gt;&lt;/xref&gt;</ph> method removes the countersignature at the specified index of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"&gt;&lt;/xref&gt;</ph> collection.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\"></xref> method removes the countersignature at the specified index of the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> collection."}],"pos":[25397,25667],"yaml":true},{"content":"The zero-based index of the countersignature to remove.","nodes":[{"pos":[0,55],"content":"The zero-based index of the countersignature to remove.","nodes":[{"content":"The zero-based index of the countersignature to remove.","pos":[0,55]}]}],"pos":[25814,25870],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[26113,26163],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\"></xref> method removes the countersignature for the specified <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object.","nodes":[{"pos":[0,266],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\"&gt;&lt;/xref&gt;</ph> method removes the countersignature for the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\"></xref> method removes the countersignature for the specified <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object."}],"pos":[27413,27680],"yaml":true},{"content":"A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object that represents the countersignature being removed.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"&gt;&lt;/xref&gt;</ph> object that represents the countersignature being removed.","source":"A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object that represents the countersignature being removed."}],"pos":[27924,28051],"yaml":true},{"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"pos":[0,84],"content":"A null reference was passed to a method that does not accept it as a valid argument.","nodes":[{"content":"A null reference was passed to a method that does not accept it as a valid argument.","pos":[0,84]}]}],"pos":[28248,28333],"yaml":true},{"content":"The value of an argument was outside the allowable range of values as defined by the called method.","nodes":[{"pos":[0,99],"content":"The value of an argument was outside the allowable range of values as defined by the called method.","nodes":[{"content":"The value of an argument was outside the allowable range of values as defined by the called method.","pos":[0,99]}]}],"pos":[28447,28547],"yaml":true},{"content":"A cryptographic operation could not be completed.","nodes":[{"pos":[0,49],"content":"A cryptographic operation could not be completed.","nodes":[{"content":"A cryptographic operation could not be completed.","pos":[0,49]}]}],"pos":[28695,28745],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.","nodes":[{"pos":[0,351],"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\"&gt;&lt;/xref&gt;</ph> property retrieves the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"&gt;&lt;/xref&gt;</ph> collection of signed attributes that is associated with the signer information.","pos":[0,278],"source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of signed attributes that is associated with the signer information."},{"content":"Signed attributes are signed along with the rest of the message content.","pos":[279,351]}]}],"pos":[29787,30139],"yaml":true},{"content":"An example of a signed attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property is the <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> signing time attribute.  \n  \n Signed attributes are signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. This means that a party that successfully verifies the signature can have confidence that the contents of these attributes are authentic and have not been altered.  \n  \n A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType> object and a <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> object will be automatically generated and placed in the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property whenever the <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> property for the corresponding signer is not empty.","nodes":[{"pos":[0,335],"content":"An example of a signed attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property is the <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> signing time attribute.","nodes":[{"content":"An example of a signed attribute that might be included in the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicAttributeObjectCollection&gt;</ph> collection retrieved by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A&gt;</ph> property is the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&gt;</ph> signing time attribute.","pos":[0,335],"source":"An example of a signed attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property is the <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> signing time attribute."}]},{"pos":[342,629],"content":"Signed attributes are signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. This means that a party that successfully verifies the signature can have confidence that the contents of these attributes are authentic and have not been altered.","nodes":[{"content":"Signed attributes are signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. This means that a party that successfully verifies the signature can have confidence that the contents of these attributes are authentic and have not been altered.","pos":[0,287],"nodes":[{"content":"Signed attributes are signed along with the rest of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.SignedCms&gt;</ph> message content.","pos":[0,123],"source":"Signed attributes are signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content."},{"content":"This means that a party that successfully verifies the signature can have confidence that the contents of these attributes are authentic and have not been altered.","pos":[124,287]}]}]},{"pos":[636,1067],"content":"A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType> object and a <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> object will be automatically generated and placed in the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property whenever the <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> property for the corresponding signer is not empty.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType&gt;</ph> object and a <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest&gt;</ph> object will be automatically generated and placed in the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A&gt;</ph> property whenever the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName&gt;</ph> property for the corresponding signer is not empty.","pos":[0,431],"source":"A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType> object and a <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> object will be automatically generated and placed in the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property whenever the <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> property for the corresponding signer is not empty."}]}],"pos":[30150,31224],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.","nodes":[{"pos":[0,212],"content":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"&gt;&lt;/xref&gt;</ph> collection that represents the signed attributes.","pos":[0,140],"source":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the signed attributes."},{"content":"If there are no signed attributes, the property is an empty collection.","pos":[141,212]}]}],"pos":[31459,31672],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\"></xref> property retrieves the certificate identifier of the signer associated with the signer information.","nodes":[{"pos":[0,186],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\"&gt;&lt;/xref&gt;</ph> property retrieves the certificate identifier of the signer associated with the signer information.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\"></xref> property retrieves the certificate identifier of the signer associated with the signer information."}],"pos":[32806,32993],"yaml":true},{"content":"A <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier\"></xref> object that uniquely identifies the certificate associated with the signer information.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier\"&gt;&lt;/xref&gt;</ph> object that uniquely identifies the certificate associated with the signer information.","source":"A <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier\"></xref> object that uniquely identifies the certificate associated with the signer information."}],"pos":[33196,33359],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of unsigned attributes that is associated with the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> content. Unsigned attributes can be modified without invalidating the signature.","nodes":[{"pos":[0,409],"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of unsigned attributes that is associated with the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> content. Unsigned attributes can be modified without invalidating the signature.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\"&gt;&lt;/xref&gt;</ph> property retrieves the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"&gt;&lt;/xref&gt;</ph> collection of unsigned attributes that is associated with the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"&gt;&lt;/xref&gt;</ph> content.","pos":[0,337],"source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of unsigned attributes that is associated with the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> content."},{"content":"Unsigned attributes can be modified without invalidating the signature.","pos":[338,409]}]}],"pos":[34505,34915],"yaml":true},{"content":"Unsigned attributes are not signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. Even though a party successfully verifies the signature, the unsigned attributes may have been altered and should not be considered to have authenticity or integrity.  \n  \n An example of an unsigned attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A> property is a countersignature.","nodes":[{"pos":[0,296],"content":"Unsigned attributes are not signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. Even though a party successfully verifies the signature, the unsigned attributes may have been altered and should not be considered to have authenticity or integrity.","nodes":[{"content":"Unsigned attributes are not signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. Even though a party successfully verifies the signature, the unsigned attributes may have been altered and should not be considered to have authenticity or integrity.","pos":[0,296],"nodes":[{"content":"Unsigned attributes are not signed along with the rest of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Pkcs.SignedCms&gt;</ph> message content.","pos":[0,129],"source":"Unsigned attributes are not signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content."},{"content":"Even though a party successfully verifies the signature, the unsigned attributes may have been altered and should not be considered to have authenticity or integrity.","pos":[130,296]}]}]},{"pos":[303,577],"content":"An example of an unsigned attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A> property is a countersignature.","nodes":[{"content":"An example of an unsigned attribute that might be included in the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicAttributeObjectCollection&gt;</ph> collection retrieved by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A&gt;</ph> property is a countersignature.","pos":[0,274],"source":"An example of an unsigned attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A> property is a countersignature."}]}],"pos":[34926,35508],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.","nodes":[{"pos":[0,216],"content":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"&gt;&lt;/xref&gt;</ph> collection that represents the unsigned attributes.","pos":[0,142],"source":"A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the unsigned attributes."},{"content":"If there are no unsigned attributes, the property is an empty collection.","pos":[143,216]}]}],"pos":[35745,35962],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Version\"></xref> property retrieves the signer information version.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Version\"&gt;&lt;/xref&gt;</ph> property retrieves the signer information version.","source":"The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Version\"></xref> property retrieves the signer information version."}],"pos":[37044,37173],"yaml":true},{"content":"The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message. CMS is a newer superset of PKCS #7.","nodes":[{"pos":[0,148],"content":"The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message. CMS is a newer superset of PKCS #7.","nodes":[{"content":"The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message. CMS is a newer superset of PKCS #7.","pos":[0,148],"nodes":[{"content":"The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message.","pos":[0,112]},{"content":"CMS is a newer superset of PKCS #7.","pos":[113,148]}]}]}],"pos":[37184,37335],"yaml":true,"extradata":"MT"},{"content":"An int value that specifies the signer information version.","nodes":[{"pos":[0,59],"content":"An int value that specifies the signer information version.","nodes":[{"content":"An int value that specifies the signer information version.","pos":[0,59]}]}],"pos":[37442,37502],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Pkcs.SignerInfo\n  commentId: T:System.Security.Cryptography.Pkcs.SignerInfo\n  id: SignerInfo\n  children:\n  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate\n  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\n  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\n  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\n  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\n  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\n  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\n  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\n  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\n  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\n  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\n  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\n  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\n  - System.Security.Cryptography.Pkcs.SignerInfo.Version\n  langs:\n  - csharp\n  name: SignerInfo\n  nameWithType: SignerInfo\n  fullName: System.Security.Cryptography.Pkcs.SignerInfo\n  type: Class\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: 'The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> class represents a signer associated with a <xref href=\"System.Security.Cryptography.Pkcs.SignedCms\"></xref> object that represents a CMS/PKCS #7 message.'\n  remarks: \"The signatures represented by the <xref:System.Security.Cryptography.Pkcs.SignerInfo> class can be either over message content or a signature. The latter kind of signature is referred to as a *countersignature*.  \\n  \\n This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \\n  \\n This class does not have a public constructor; therefore, it cannot be publicly instantiated. It is a read-only class accessible from the <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public sealed class SignerInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate\n  id: Certificate\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: SignerInfo.Certificate\n  fullName: SignerInfo.Certificate\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Certificate\"></xref> property retrieves the signing certificate associated with the signer information.\n  remarks: If the signing certificate is not included at signing time by using the <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName> property, then the certificate will not be returned.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object that represents the signing certificate.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\n  id: CheckHash\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: CheckHash()\n  nameWithType: SignerInfo.CheckHash()\n  fullName: SignerInfo.CheckHash()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: 'The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> method verifies the data integrity of the CMS/PKCS #7 message signer information. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> is a specialized method used in specific security infrastructure applications in which the subject uses the **HashOnly** member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\"></xref> enumeration when setting up a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object. <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\"></xref> does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> or <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> methods.'\n  remarks: 'This method does not provide authentication of the CMS/PKCS #7 message signer information.'\n  syntax:\n    content: public void CheckHash ();\n    parameters: []\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\n  id: CheckSignature(System.Boolean)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: CheckSignature(Boolean)\n  nameWithType: SignerInfo.CheckSignature(Boolean)\n  fullName: SignerInfo.CheckSignature(Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> method verifies the digital signature of the message and, optionally, validates the certificate.\n  remarks: \"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.  \\n  \\n If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.\"\n  syntax:\n    content: public void CheckSignature (bool verifySignatureOnly);\n    parameters:\n    - id: verifySignatureOnly\n      type: System.Boolean\n      description: A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A null reference was passed to a method that does not accept it as a valid argument.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A method call was invalid for the object's current state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\n  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: CheckSignature(X509Certificate2Collection, Boolean)\n  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection, Boolean)\n  fullName: SignerInfo.CheckSignature(X509Certificate2Collection, Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref> method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.\n  remarks: \"This method throws an exception if the verification of the digital signature fails or any validation requirements are not met.  \\n  \\n If more complex validation is required, the caller can specify that only the signature is verified and then use an <xref:System.Security.Cryptography.X509Certificates.X509Chain> object to perform custom validation.\"\n  syntax:\n    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);\n    parameters:\n    - id: extraStore\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\"></xref> object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\"></xref> instead of <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\"></xref>.\n    - id: verifySignatureOnly\n      type: System.Boolean\n      description: A bool value that specifies whether only the digital signature is verified. If <code>verifySignatureOnly</code> is `true`, only the signature is verified. If <code>verifySignatureOnly</code> is `false`, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A null reference was passed to a method that does not accept it as a valid argument.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A method call was invalid for the object's current state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\n  id: ComputeCounterSignature\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: ComputeCounterSignature()\n  nameWithType: SignerInfo.ComputeCounterSignature()\n  fullName: SignerInfo.ComputeCounterSignature()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: 'The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\"></xref> method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.'\n  remarks: \"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \\n  \\n This method displays a user interface in which you choose signers for this message. This requires that the current process is running in *user interactive mode*, meaning that the <xref:System.Environment.UserInteractive%2A?displayProperty=fullName> property is set to `true`. A process is normally in user interactive mode unless it is a service process or running inside a Web application.  \\n  \\n Signers whose certificates meet the following conditions will be displayed in the list:  \\n  \\n-   The certificate has an associated private key.  \\n  \\n-   The certificate is within its validity period.  \\n  \\n-   The certificate has no key usage or a key usage that supports digital signatures or nonrepudiation.  \\n  \\n Signer certificates are chosen from the My store.  \\n  \\n## .NET Framework Security  \\n The following permissions are required to display the user interface:  \\n  \\n-   <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>  \\n  \\n The following permissions are required to access the signature key:  \\n  \\n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>  \\n  \\n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>\"\n  syntax:\n    content: public void ComputeCounterSignature ();\n    parameters: []\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A null reference was passed to a method that does not accept it as a valid argument.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\n  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: ComputeCounterSignature(CmsSigner)\n  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)\n  fullName: SignerInfo.ComputeCounterSignature(CmsSigner)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: 'The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\"></xref> method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.'\n  remarks: \"This implementation of CMS/PKCS #7 supports only one level of countersignature.  That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.  \\n  \\n## .NET Framework Security  \\n The following permissions are required to access the signature key:  \\n  \\n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>  \\n  \\n-   <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>\"\n  syntax:\n    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);\n    parameters:\n    - id: signer\n      type: System.Security.Cryptography.Pkcs.CmsSigner\n      description: A <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\"></xref> object that represents the counter signer.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A null reference was passed to a method that does not accept it as a valid argument.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\n  id: CounterSignerInfos\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: CounterSignerInfos\n  nameWithType: SignerInfo.CounterSignerInfos\n  fullName: SignerInfo.CounterSignerInfos\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> property retrieves the set of counter signers associated with the signer information.\n  remarks: 'This implementation of CMS/PKCS #7 supports only one level of countersignature. That is, a signature can be signed, which forms a countersignature, but that countersignature cannot be signed again.'\n  syntax:\n    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }\n    return:\n      type: System.Security.Cryptography.Pkcs.SignerInfoCollection\n      description: A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfoCollection\"></xref> collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\n  id: DigestAlgorithm\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: DigestAlgorithm\n  nameWithType: SignerInfo.DigestAlgorithm\n  fullName: SignerInfo.DigestAlgorithm\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used in the computation of the signatures.\n  syntax:\n    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }\n    return:\n      type: System.Security.Cryptography.Oid\n      description: An <xref href=\"System.Security.Cryptography.Oid\"></xref> object that represents the hash algorithm used with the signature.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\n  id: RemoveCounterSignature(System.Int32)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: RemoveCounterSignature(Int32)\n  nameWithType: SignerInfo.RemoveCounterSignature(Int32)\n  fullName: SignerInfo.RemoveCounterSignature(Int32)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\"></xref> method removes the countersignature at the specified index of the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\"></xref> collection.\n  syntax:\n    content: public void RemoveCounterSignature (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the countersignature to remove.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\n  commentId: M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\n  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: RemoveCounterSignature(SignerInfo)\n  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)\n  fullName: SignerInfo.RemoveCounterSignature(SignerInfo)\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\"></xref> method removes the countersignature for the specified <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object.\n  syntax:\n    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);\n    parameters:\n    - id: counterSignerInfo\n      type: System.Security.Cryptography.Pkcs.SignerInfo\n      description: A <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> object that represents the countersignature being removed.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A null reference was passed to a method that does not accept it as a valid argument.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of an argument was outside the allowable range of values as defined by the called method.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A cryptographic operation could not be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\n  id: SignedAttributes\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: SignedAttributes\n  nameWithType: SignerInfo.SignedAttributes\n  fullName: SignerInfo.SignedAttributes\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.\n  remarks: \"An example of a signed attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property is the <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> signing time attribute.  \\n  \\n Signed attributes are signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. This means that a party that successfully verifies the signature can have confidence that the contents of these attributes are authentic and have not been altered.  \\n  \\n A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType> object and a <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> object will be automatically generated and placed in the <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> property whenever the <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> property for the corresponding signer is not empty.\"\n  syntax:\n    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }\n    return:\n      type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n      description: A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\n  id: SignerIdentifier\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: SignerIdentifier\n  nameWithType: SignerInfo.SignerIdentifier\n  fullName: SignerInfo.SignerIdentifier\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\"></xref> property retrieves the certificate identifier of the signer associated with the signer information.\n  syntax:\n    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifier\n      description: A <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier\"></xref> object that uniquely identifies the certificate associated with the signer information.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\n  id: UnsignedAttributes\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: UnsignedAttributes\n  nameWithType: SignerInfo.UnsignedAttributes\n  fullName: SignerInfo.UnsignedAttributes\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection of unsigned attributes that is associated with the <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo\"></xref> content. Unsigned attributes can be modified without invalidating the signature.\n  remarks: \"Unsigned attributes are not signed along with the rest of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message content. Even though a party successfully verifies the signature, the unsigned attributes may have been altered and should not be considered to have authenticity or integrity.  \\n  \\n An example of an unsigned attribute that might be included in the <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> collection retrieved by the <xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A> property is a countersignature.\"\n  syntax:\n    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }\n    return:\n      type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n      description: A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\"></xref> collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version\n  commentId: P:System.Security.Cryptography.Pkcs.SignerInfo.Version\n  id: Version\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  langs:\n  - csharp\n  name: Version\n  nameWithType: SignerInfo.Version\n  fullName: SignerInfo.Version\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Pkcs\n  summary: The <xref href=\"System.Security.Cryptography.Pkcs.SignerInfo.Version\"></xref> property retrieves the signer information version.\n  remarks: 'The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message. CMS is a newer superset of PKCS #7.'\n  syntax:\n    content: public int Version { get; }\n    return:\n      type: System.Int32\n      description: An int value that specifies the signer information version.\n  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: Certificate\n  nameWithType: SignerInfo.Certificate\n  fullName: SignerInfo.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CheckHash()\n  nameWithType: SignerInfo.CheckHash()\n  fullName: SignerInfo.CheckHash()\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CheckSignature(Boolean)\n  nameWithType: SignerInfo.CheckSignature(Boolean)\n  fullName: SignerInfo.CheckSignature(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CheckSignature(X509Certificate2Collection, Boolean)\n  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection, Boolean)\n  fullName: SignerInfo.CheckSignature(X509Certificate2Collection, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: ComputeCounterSignature()\n  nameWithType: SignerInfo.ComputeCounterSignature()\n  fullName: SignerInfo.ComputeCounterSignature()\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: ComputeCounterSignature(CmsSigner)\n  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)\n  fullName: SignerInfo.ComputeCounterSignature(CmsSigner)\n- uid: System.Security.Cryptography.Pkcs.CmsSigner\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: CmsSigner\n  nameWithType: CmsSigner\n  fullName: System.Security.Cryptography.Pkcs.CmsSigner\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CounterSignerInfos\n  nameWithType: SignerInfo.CounterSignerInfos\n  fullName: SignerInfo.CounterSignerInfos\n- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SignerInfoCollection\n  nameWithType: SignerInfoCollection\n  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SignerInfo.DigestAlgorithm\n  fullName: SignerInfo.DigestAlgorithm\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Oid\n  nameWithType: Oid\n  fullName: System.Security.Cryptography.Oid\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: RemoveCounterSignature(Int32)\n  nameWithType: SignerInfo.RemoveCounterSignature(Int32)\n  fullName: SignerInfo.RemoveCounterSignature(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: RemoveCounterSignature(SignerInfo)\n  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)\n  fullName: SignerInfo.RemoveCounterSignature(SignerInfo)\n- uid: System.Security.Cryptography.Pkcs.SignerInfo\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SignerInfo\n  nameWithType: SignerInfo\n  fullName: System.Security.Cryptography.Pkcs.SignerInfo\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: SignedAttributes\n  nameWithType: SignerInfo.SignedAttributes\n  fullName: SignerInfo.SignedAttributes\n- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicAttributeObjectCollection\n  nameWithType: CryptographicAttributeObjectCollection\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: SignerIdentifier\n  nameWithType: SignerInfo.SignerIdentifier\n  fullName: SignerInfo.SignerIdentifier\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifier\n  nameWithType: SubjectIdentifier\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: UnsignedAttributes\n  nameWithType: SignerInfo.UnsignedAttributes\n  fullName: SignerInfo.UnsignedAttributes\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: Version\n  nameWithType: SignerInfo.Version\n  fullName: SignerInfo.Version\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: Certificate\n  nameWithType: SignerInfo.Certificate\n  fullName: SignerInfo.Certificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CheckHash\n  nameWithType: SignerInfo.CheckHash\n  fullName: SignerInfo.CheckHash\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CheckSignature\n  nameWithType: SignerInfo.CheckSignature\n  fullName: SignerInfo.CheckSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: ComputeCounterSignature\n  nameWithType: SignerInfo.ComputeCounterSignature\n  fullName: SignerInfo.ComputeCounterSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: CounterSignerInfos\n  nameWithType: SignerInfo.CounterSignerInfos\n  fullName: SignerInfo.CounterSignerInfos\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SignerInfo.DigestAlgorithm\n  fullName: SignerInfo.DigestAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: RemoveCounterSignature\n  nameWithType: SignerInfo.RemoveCounterSignature\n  fullName: SignerInfo.RemoveCounterSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: SignedAttributes\n  nameWithType: SignerInfo.SignedAttributes\n  fullName: SignerInfo.SignedAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: SignerIdentifier\n  nameWithType: SignerInfo.SignerIdentifier\n  fullName: SignerInfo.SignerIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: UnsignedAttributes\n  nameWithType: SignerInfo.UnsignedAttributes\n  fullName: SignerInfo.UnsignedAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*\n  parent: System.Security.Cryptography.Pkcs.SignerInfo\n  isExternal: false\n  name: Version\n  nameWithType: SignerInfo.Version\n  fullName: SignerInfo.Version\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Pkcs/SignerInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}