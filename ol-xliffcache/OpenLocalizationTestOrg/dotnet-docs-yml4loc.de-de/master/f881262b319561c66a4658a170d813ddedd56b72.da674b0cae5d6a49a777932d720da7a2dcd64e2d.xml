{"nodes":[{"content":"Supports the creation and execution of an auxiliary debugging thread, or island, on a dedicated worker thread. This type is a utility class used by the framework and is not intended for public use.","nodes":[{"pos":[0,197],"content":"Supports the creation and execution of an auxiliary debugging thread, or island, on a dedicated worker thread. This type is a utility class used by the framework and is not intended for public use.","nodes":[{"content":"Supports the creation and execution of an auxiliary debugging thread, or island, on a dedicated worker thread. This type is a utility class used by the framework and is not intended for public use.","pos":[0,197],"nodes":[{"content":"Supports the creation and execution of an auxiliary debugging thread, or island, on a dedicated worker thread.","pos":[0,110]},{"content":"This type is a utility class used by the framework and is not intended for public use.","pos":[111,197]}]}]}],"pos":[630,828],"yaml":true},{"content":"This worker thread is needed to enable simulation of multithread-like execution of parallel activities.","nodes":[{"pos":[0,103],"content":"This worker thread is needed to enable simulation of multithread-like execution of parallel activities.","nodes":[{"content":"This worker thread is needed to enable simulation of multithread-like execution of parallel activities.","pos":[0,103]}]}],"pos":[839,943],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Debugger.ThreadWorkerController\"></xref> class.","nodes":[{"pos":[0,107],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Debugger.ThreadWorkerController\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Debugger.ThreadWorkerController\"></xref> class."}],"pos":[2400,2508],"yaml":true},{"content":"Directs execution to a particular auxiliary debugger thread.","nodes":[{"pos":[0,60],"content":"Directs execution to a particular auxiliary debugger thread.","nodes":[{"content":"Directs execution to a particular auxiliary debugger thread.","pos":[0,60]}]}],"pos":[3910,3971],"yaml":true},{"content":"This is a static function.","nodes":[{"pos":[0,26],"content":"This is a static function.","nodes":[{"content":"This is a static function.","pos":[0,26]}]}],"pos":[3982,4009],"yaml":true,"extradata":"MT"},{"content":"The auxiliary debugger thread to execute.","nodes":[{"pos":[0,41],"content":"The auxiliary debugger thread to execute.","nodes":[{"content":"The auxiliary debugger thread to execute.","pos":[0,41]}]}],"pos":[4246,4288],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Debugger.ThreadWorkerController\n  commentId: T:System.Activities.Debugger.ThreadWorkerController\n  id: ThreadWorkerController\n  children:\n  - System.Activities.Debugger.ThreadWorkerController.#ctor\n  - System.Activities.Debugger.ThreadWorkerController.IslandWorker(System.Activities.Debugger.ThreadWorkerController)\n  langs:\n  - csharp\n  name: ThreadWorkerController\n  nameWithType: ThreadWorkerController\n  fullName: System.Activities.Debugger.ThreadWorkerController\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Supports the creation and execution of an auxiliary debugging thread, or island, on a dedicated worker thread. This type is a utility class used by the framework and is not intended for public use.\n  remarks: This worker thread is needed to enable simulation of multithread-like execution of parallel activities.\n  syntax:\n    content: public class ThreadWorkerController\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/ThreadWorkerController.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Debugger.ThreadWorkerController.#ctor\n  commentId: M:System.Activities.Debugger.ThreadWorkerController.#ctor\n  id: '#ctor'\n  parent: System.Activities.Debugger.ThreadWorkerController\n  langs:\n  - csharp\n  name: ThreadWorkerController()\n  nameWithType: ThreadWorkerController.ThreadWorkerController()\n  fullName: ThreadWorkerController.ThreadWorkerController()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Creates a new instance of the <xref href=\"System.Activities.Debugger.ThreadWorkerController\"></xref> class.\n  syntax:\n    content: public ThreadWorkerController ();\n    parameters: []\n  overload: System.Activities.Debugger.ThreadWorkerController.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/ThreadWorkerController.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Debugger.ThreadWorkerController.IslandWorker(System.Activities.Debugger.ThreadWorkerController)\n  commentId: M:System.Activities.Debugger.ThreadWorkerController.IslandWorker(System.Activities.Debugger.ThreadWorkerController)\n  id: IslandWorker(System.Activities.Debugger.ThreadWorkerController)\n  parent: System.Activities.Debugger.ThreadWorkerController\n  langs:\n  - csharp\n  name: IslandWorker(ThreadWorkerController)\n  nameWithType: ThreadWorkerController.IslandWorker(ThreadWorkerController)\n  fullName: ThreadWorkerController.IslandWorker(ThreadWorkerController)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Directs execution to a particular auxiliary debugger thread.\n  remarks: This is a static function.\n  syntax:\n    content: public static void IslandWorker (System.Activities.Debugger.ThreadWorkerController controller);\n    parameters:\n    - id: controller\n      type: System.Activities.Debugger.ThreadWorkerController\n      description: The auxiliary debugger thread to execute.\n  overload: System.Activities.Debugger.ThreadWorkerController.IslandWorker*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/ThreadWorkerController.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Debugger.ThreadWorkerController.#ctor\n  parent: System.Activities.Debugger.ThreadWorkerController\n  isExternal: false\n  name: ThreadWorkerController()\n  nameWithType: ThreadWorkerController.ThreadWorkerController()\n  fullName: ThreadWorkerController.ThreadWorkerController()\n- uid: System.Activities.Debugger.ThreadWorkerController.IslandWorker(System.Activities.Debugger.ThreadWorkerController)\n  parent: System.Activities.Debugger.ThreadWorkerController\n  isExternal: false\n  name: IslandWorker(ThreadWorkerController)\n  nameWithType: ThreadWorkerController.IslandWorker(ThreadWorkerController)\n  fullName: ThreadWorkerController.IslandWorker(ThreadWorkerController)\n- uid: System.Activities.Debugger.ThreadWorkerController\n  parent: System.Activities.Debugger\n  isExternal: false\n  name: ThreadWorkerController\n  nameWithType: ThreadWorkerController\n  fullName: System.Activities.Debugger.ThreadWorkerController\n- uid: System.Activities.Debugger.ThreadWorkerController.#ctor*\n  parent: System.Activities.Debugger.ThreadWorkerController\n  isExternal: false\n  name: ThreadWorkerController\n  nameWithType: ThreadWorkerController.ThreadWorkerController\n  fullName: ThreadWorkerController.ThreadWorkerController\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/ThreadWorkerController.xml\n- uid: System.Activities.Debugger.ThreadWorkerController.IslandWorker*\n  parent: System.Activities.Debugger.ThreadWorkerController\n  isExternal: false\n  name: IslandWorker\n  nameWithType: ThreadWorkerController.IslandWorker\n  fullName: ThreadWorkerController.IslandWorker\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/ThreadWorkerController.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}