### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.TypeExtension
  commentId: T:System.Windows.Markup.TypeExtension
  id: TypeExtension
  children:
  - System.Windows.Markup.TypeExtension.#ctor
  - System.Windows.Markup.TypeExtension.#ctor(System.String)
  - System.Windows.Markup.TypeExtension.#ctor(System.Type)
  - System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)
  - System.Windows.Markup.TypeExtension.Type
  - System.Windows.Markup.TypeExtension.TypeName
  langs:
  - csharp
  name: TypeExtension
  nameWithType: TypeExtension
  fullName: System.Windows.Markup.TypeExtension
  type: Class
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Implements a markup extension that returns a <xref href="System.Type"></xref> based on a string input.
  remarks: "For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, see [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).  \n  \n> [!NOTE]\n>  The `{x:Type}` functionality is generally for user code invocation from markup. For code that is implementing XAML support, type resolution services come from <xref:System.Windows.Markup.IXamlTypeResolver> and are related to the implementation of the acting XAML schema context. Do not attempt to reference <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> as a substitute for a <xref:System.Windows.Markup.IXamlTypeResolver> service provider; the context you pass in might not be valid for a type resolution, and attempts to call without valid services will fail.  \n  \n## WPF Usage Notes  \n Type references are commonly used for style, template, and databinding feature areas in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], when these features are referenced by XAML.  \n  \n<a name=\"xamlTextUsage_TypeExtension\"></a>   \n## XAML Text Usage"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))]

      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))]

      public class TypeExtension : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  - type: System.Windows.Markup.MarkupExtensionReturnTypeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.#ctor
  commentId: M:System.Windows.Markup.TypeExtension.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: TypeExtension()
  nameWithType: TypeExtension.TypeExtension()
  fullName: TypeExtension.TypeExtension()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.TypeExtension"></xref> class.
  syntax:
    content: public TypeExtension ();
    parameters: []
  overload: System.Windows.Markup.TypeExtension.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.#ctor(System.String)
  commentId: M:System.Windows.Markup.TypeExtension.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: TypeExtension(String)
  nameWithType: TypeExtension.TypeExtension(String)
  fullName: TypeExtension.TypeExtension(String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.TypeExtension"></xref> class, initializing the <xref href="System.Windows.Markup.TypeExtension.TypeName"></xref> value based on the provided <code>typeName</code> string.
  remarks: This value is not evaluated when you set it in the constructor. If the value is not `null`, the value will be initially accepted. The actual parsing and evaluation of the value is deferred until <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> is called on this extension, when XAML is parsed and with available service contexts active. At this time the `typeName` is expected to be resolvable as a type within a XAML schema context, and that type is returned.
  syntax:
    content: public TypeExtension (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: A string that identifies the type to make a reference to. This string uses the format <code>prefix:className</code>. <code>prefix</code> is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.
  overload: System.Windows.Markup.TypeExtension.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Attempted to specify <code>typeName</code> as `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.#ctor(System.Type)
  commentId: M:System.Windows.Markup.TypeExtension.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: TypeExtension(Type)
  nameWithType: TypeExtension.TypeExtension(Type)
  fullName: TypeExtension.TypeExtension(Type)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.TypeExtension"></xref> class, declaring the type directly.
  remarks: This is a helper method for run time code usages of <xref:System.Windows.Markup.TypeExtension> and is not part of the normal implementation pattern for a markup extension.
  syntax:
    content: public TypeExtension (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type to be represented by this <xref href="System.Windows.Markup.TypeExtension"></xref>.
  overload: System.Windows.Markup.TypeExtension.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> is `null`
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: TypeExtension.ProvideValue(IServiceProvider)
  fullName: TypeExtension.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Returns an object that should be set on the property where this extension is applied. For <xref href="System.Windows.Markup.TypeExtension"></xref> , this is the <xref href="System.Type"></xref> value as evaluated for the requested type name.
  remarks: You can pass `null` for `serviceProvider`, but only if this <xref:System.Windows.Markup.TypeExtension> instance was established with an initial true type in the constructor rather than a `typeName`. Otherwise, this markup extension implementation relies on services based on the passed `serviceProvider`. It must not be `null`. The `serviceProvider` is expected to provide a service for <xref:System.Windows.Markup.IXamlTypeResolver>.
  syntax:
    content: public override object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: Object that can provide services for the markup extension. The provider is expected to provide a service for <xref href="System.Windows.Markup.IXamlTypeResolver"></xref>.
    return:
      type: System.Object
      description: The <xref href="System.Type"></xref> to set on the property where the extension is applied.
  overload: System.Windows.Markup.TypeExtension.ProvideValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>member</code> value for the extension is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Some part of the <code>typeName</code> string did not parse properly.  \n  \n -or-  \n  \n <code>serviceProvider</code> did not provide a service for <xref href=\"System.Windows.Markup.IXamlTypeResolver\"></xref>  \n  \n -or-  \n  \n <code>typeName</code> value did not resolve to a type."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceProvider</code> is `null`
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.Type
  commentId: P:System.Windows.Markup.TypeExtension.Type
  id: Type
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: Type
  nameWithType: TypeExtension.Type
  fullName: TypeExtension.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Gets or sets the type information for this extension.
  remarks: "Unless this instance was deliberately instantiated with the <xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29> signature constructor, this value will be `null`. This property will not be reset when <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> is called. If you want the true type represented you should always call <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> rather than check this property.  \n  \n This property is settable per usual rules regarding markup extension usage. However, if you are setting with a <xref:System.Type>, then the purpose of this markup extension is irrelevant, because the same <xref:System.Type> is returned from a <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> call.  \n  \n<a name=\"xamlTextUsage_Type\"></a>   \n## XAML Text Usage"
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: The established type. For runtime purposes, this may be `null` for get access, but cannot be set to `null`.
  overload: System.Windows.Markup.TypeExtension.Type*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Attempted to set to `null`.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.TypeExtension.TypeName
  commentId: P:System.Windows.Markup.TypeExtension.TypeName
  id: TypeName
  parent: System.Windows.Markup.TypeExtension
  langs:
  - csharp
  name: TypeName
  nameWithType: TypeExtension.TypeName
  fullName: TypeExtension.TypeName
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Gets or sets the type name represented by this markup extension.
  remarks: "<a name=\"xamlTextUsage_TypeName\"></a>   \n## XAML Text Usage"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: A string that identifies the type. This string uses the format *prefix*<code>:</code>*className*. (*prefix* is the mapping prefix for an XML namespace, and is only required to reference types that are not mapped to the default XML namespace for WPF ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]).
  overload: System.Windows.Markup.TypeExtension.TypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Attempted to set to `null`.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
references:
- uid: System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  isExternal: false
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Windows.Markup.TypeExtension.#ctor
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeExtension()
  nameWithType: TypeExtension.TypeExtension()
  fullName: TypeExtension.TypeExtension()
- uid: System.Windows.Markup.TypeExtension.#ctor(System.String)
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeExtension(String)
  nameWithType: TypeExtension.TypeExtension(String)
  fullName: TypeExtension.TypeExtension(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.TypeExtension.#ctor(System.Type)
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeExtension(Type)
  nameWithType: TypeExtension.TypeExtension(Type)
  fullName: TypeExtension.TypeExtension(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: TypeExtension.ProvideValue(IServiceProvider)
  fullName: TypeExtension.ProvideValue(IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.TypeExtension.Type
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: Type
  nameWithType: TypeExtension.Type
  fullName: TypeExtension.Type
- uid: System.Windows.Markup.TypeExtension.TypeName
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeName
  nameWithType: TypeExtension.TypeName
  fullName: TypeExtension.TypeName
- uid: System.Windows.Markup.TypeExtension.#ctor*
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeExtension
  nameWithType: TypeExtension.TypeExtension
  fullName: TypeExtension.TypeExtension
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
- uid: System.Windows.Markup.TypeExtension.ProvideValue*
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: ProvideValue
  nameWithType: TypeExtension.ProvideValue
  fullName: TypeExtension.ProvideValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
- uid: System.Windows.Markup.TypeExtension.Type*
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: Type
  nameWithType: TypeExtension.Type
  fullName: TypeExtension.Type
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
- uid: System.Windows.Markup.TypeExtension.TypeName*
  parent: System.Windows.Markup.TypeExtension
  isExternal: false
  name: TypeName
  nameWithType: TypeExtension.TypeName
  fullName: TypeExtension.TypeName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/TypeExtension.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
