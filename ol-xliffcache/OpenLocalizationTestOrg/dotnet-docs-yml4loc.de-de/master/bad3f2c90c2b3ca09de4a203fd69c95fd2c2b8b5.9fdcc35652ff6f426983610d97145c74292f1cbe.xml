{"nodes":[{"content":"Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.","nodes":[{"pos":[0,127],"content":"Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.","nodes":[{"content":"Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.","pos":[0,127],"nodes":[{"content":"Represents the version number of an assembly, operating system, or the common language runtime.","pos":[0,95]},{"content":"This class cannot be inherited.","pos":[96,127]}]}]}],"pos":[1591,1719],"yaml":true},{"content":"Version numbers consist of two to four components: major, minor, build, and revision. The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined. All defined components must be integers greater than or equal to 0. The format of the version number is as follows (optional components are shown in square brackets ([ and ]):  \n  \n *major*.*minor*[.*build*[.*revision*]]  \n  \n The components are used by convention as follows:  \n  \n-   *Major*: Assemblies with the same name but different major versions are not interchangeable. A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.  \n  \n-   *Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility. This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.  \n  \n-   *Build*: A difference in build number represents a recompilation of the same source. Different build numbers might be used when the processor, platform, or compiler changes.  \n  \n-   *Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable. A higher revision number might be used in a build that fixes a security hole in a previously released assembly.  \n  \n Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.  \n  \n> [!IMPORTANT]\n>  The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).  \n  \n Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.  Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.  \n  \n## Assigning Version Information to Assemblies  \n Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly. Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.  \n  \n## Retrieving Version Information  \n <xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly. The following examples illustrate some of the most common scenarios:  \n  \n-   Retrieving the operating system version. The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=fullName> property to retrieve the version number of the operating system.  \n  \n     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]\n     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  \n  \n-   Retrieving the version of the common language runtime. The following example uses the <xref:System.Environment.Version%2A?displayProperty=fullName> property to retrieve version information about the common language runtime.  \n  \n     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]\n     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  \n  \n-   Retrieving the current application's assembly version. The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.  \n  \n     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]\n     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  \n  \n-   Retrieving the current assembly's assembly version. The following example uses the <xref:System.Type.Assembly%2A?displayProperty=fullName> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.  \n  \n     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]\n     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  \n  \n-   Retrieving the version of a specific assembly. The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information. Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.  \n  \n     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]\n     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  \n  \n-   Retrieving the Publish Version of a ClickOnce application. The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName> property to display an application's Publish Version. Note that its successful execution requires the example's application identity to be set. This is handled automatically by the Visual Studio Publish Wizard.  \n  \n     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]\n     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  \n  \n    > [!IMPORTANT]\n    >  The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.  \n  \n## Comparing Version Objects  \n You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object. The following example indicates that Version 2.1 is later than Version 2.0.  \n  \n [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]\n [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  \n  \n For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object. If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero. The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.  \n  \n [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]\n [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]","nodes":[{"pos":[0,428],"content":"Version numbers consist of two to four components: major, minor, build, and revision. The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined. All defined components must be integers greater than or equal to 0. The format of the version number is as follows (optional components are shown in square brackets ([ and ]):","nodes":[{"content":"Version numbers consist of two to four components: major, minor, build, and revision. The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined. All defined components must be integers greater than or equal to 0. The format of the version number is as follows (optional components are shown in square brackets ([ and ]):","pos":[0,428],"nodes":[{"content":"Version numbers consist of two to four components: major, minor, build, and revision.","pos":[0,85]},{"content":"The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.","pos":[86,252]},{"content":"All defined components must be integers greater than or equal to 0.","pos":[253,320]},{"content":"The format of the version number is as follows (optional components are shown in square brackets ([ and ]):","pos":[321,428]}]}]},{"pos":[435,473],"content":"<bpt id=\"p1\">*</bpt>major<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>minor<ept id=\"p2\">*</ept>[.<bpt id=\"p3\">*</bpt>build<ept id=\"p3\">*</ept>[.<bpt id=\"p4\">*</bpt>revision<ept id=\"p4\">*</ept>]]","source":"*major*.*minor*[.*build*[.*revision*]]"},{"pos":[480,529],"content":"The components are used by convention as follows:","nodes":[{"content":"The components are used by convention as follows:","pos":[0,49]}]},{"pos":[539,747],"content":"*Major*: Assemblies with the same name but different major versions are not interchangeable. A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>Major<ept id=\"p1\">*</ept>: Assemblies with the same name but different major versions are not interchangeable.","pos":[0,92],"source":"*Major*: Assemblies with the same name but different major versions are not interchangeable."},{"content":"A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.","pos":[93,208]}]},{"pos":[757,1096],"content":"*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility. This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>Minor<ept id=\"p1\">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.","pos":[0,205],"source":"*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility."},{"content":"This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.","pos":[206,339]}]},{"pos":[1106,1279],"content":"*Build*: A difference in build number represents a recompilation of the same source. Different build numbers might be used when the processor, platform, or compiler changes.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>Build<ept id=\"p1\">*</ept>: A difference in build number represents a recompilation of the same source.","pos":[0,84],"source":"*Build*: A difference in build number represents a recompilation of the same source."},{"content":"Different build numbers might be used when the processor, platform, or compiler changes.","pos":[85,173]}]},{"pos":[1289,1542],"content":"*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable. A higher revision number might be used in a build that fixes a security hole in a previously released assembly.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>Revision<ept id=\"p1\">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.","pos":[0,141],"source":"*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable."},{"content":"A higher revision number might be used in a build that fixes a security hole in a previously released assembly.","pos":[142,253]}]},{"pos":[1549,1687],"content":"Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.","nodes":[{"content":"Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.","pos":[0,138]}]},{"pos":[1695,1822],"content":"[!IMPORTANT]\n The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).","leadings":["","> "],"nodes":[{"content":"The value of <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).","pos":[14,125],"source":" The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1)."}]},{"pos":[1829,2242],"content":"Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.  Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.","nodes":[{"content":"Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.  Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.","pos":[0,413],"nodes":[{"content":"Starting with .NET Framework 2.0, the <ph id=\"ph1\">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.","pos":[0,275],"source":"Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution."},{"content":"Furthermore, the Windows NT operating system uses the <ph id=\"ph1\">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.","pos":[277,413],"source":"  Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number."}]}]},{"pos":[2251,2294],"content":"Assigning Version Information to Assemblies","linkify":"Assigning Version Information to Assemblies","nodes":[{"content":"Assigning Version Information to Assemblies","pos":[0,43]}]},{"pos":[2298,2551],"content":"Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly. Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.","nodes":[{"content":"Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly. Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.","pos":[0,253],"nodes":[{"content":"Ordinarily, the <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.","pos":[0,98],"source":"Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly."},{"content":"Instead, the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.","pos":[99,253],"source":" Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic."}]}]},{"pos":[2560,2590],"content":"Retrieving Version Information","linkify":"Retrieving Version Information","nodes":[{"content":"Retrieving Version Information","pos":[0,30]}]},{"pos":[2594,2914],"content":"<xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly. The following examples illustrate some of the most common scenarios:","nodes":[{"content":"<xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly. The following examples illustrate some of the most common scenarios:","pos":[0,320],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.","pos":[0,251],"source":"<xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly."},{"content":"The following examples illustrate some of the most common scenarios:","pos":[252,320]}]}]},{"pos":[2924,3126],"content":"Retrieving the operating system version. The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=fullName> property to retrieve the version number of the operating system.","nodes":[{"content":"Retrieving the operating system version. The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=fullName> property to retrieve the version number of the operating system.","pos":[0,202],"nodes":[{"content":"Retrieving the operating system version.","pos":[0,40]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=fullName&gt;</ph> property to retrieve the version number of the operating system.","pos":[41,202],"source":" The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=fullName> property to retrieve the version number of the operating system."}]}]},{"pos":[3137,3412],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]\n [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]"},{"pos":[3422,3645],"content":"Retrieving the version of the common language runtime. The following example uses the <xref:System.Environment.Version%2A?displayProperty=fullName> property to retrieve version information about the common language runtime.","nodes":[{"content":"Retrieving the version of the common language runtime. The following example uses the <xref:System.Environment.Version%2A?displayProperty=fullName> property to retrieve version information about the common language runtime.","pos":[0,223],"nodes":[{"content":"Retrieving the version of the common language runtime.","pos":[0,54]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Environment.Version%2A?displayProperty=fullName&gt;</ph> property to retrieve version information about the common language runtime.","pos":[55,223],"source":" The following example uses the <xref:System.Environment.Version%2A?displayProperty=fullName> property to retrieve version information about the common language runtime."}]}]},{"pos":[3656,3931],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]\n [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]"},{"pos":[3941,4272],"content":"Retrieving the current application's assembly version. The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.","nodes":[{"content":"Retrieving the current application's assembly version. The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.","pos":[0,331],"nodes":[{"content":"Retrieving the current application's assembly version.","pos":[0,54]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName&gt;</ph> method to obtain a reference to an <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.","pos":[55,331],"source":" The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number."}]}]},{"pos":[4283,4546],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]\n [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]"},{"pos":[4556,4888],"content":"Retrieving the current assembly's assembly version. The following example uses the <xref:System.Type.Assembly%2A?displayProperty=fullName> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.","nodes":[{"content":"Retrieving the current assembly's assembly version. The following example uses the <xref:System.Type.Assembly%2A?displayProperty=fullName> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.","pos":[0,332],"nodes":[{"content":"Retrieving the current assembly's assembly version.","pos":[0,51]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt;</ph> property to obtain a reference to an <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.","pos":[52,332],"source":" The following example uses the <xref:System.Type.Assembly%2A?displayProperty=fullName> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information."}]}]},{"pos":[4899,5166],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]\n [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]"},{"pos":[5176,5625],"content":"Retrieving the version of a specific assembly. The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information. Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.","nodes":[{"content":"Retrieving the version of a specific assembly. The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information. Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.","pos":[0,449],"nodes":[{"content":"Retrieving the version of a specific assembly.","pos":[0,46]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName&gt;</ph> method to obtain a reference to an <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.","pos":[47,315],"source":" The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information."},{"content":"Note that several other methods also exist to instantiate an <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.","pos":[316,449],"source":" Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name."}]}]},{"pos":[5636,5905],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]\n [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]"},{"pos":[5915,6317],"content":"Retrieving the Publish Version of a ClickOnce application. The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName> property to display an application's Publish Version. Note that its successful execution requires the example's application identity to be set. This is handled automatically by the Visual Studio Publish Wizard.","nodes":[{"content":"Retrieving the Publish Version of a ClickOnce application. The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName> property to display an application's Publish Version. Note that its successful execution requires the example's application identity to be set. This is handled automatically by the Visual Studio Publish Wizard.","pos":[0,402],"nodes":[{"content":"Retrieving the Publish Version of a ClickOnce application.","pos":[0,58]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName&gt;</ph> property to display an application's Publish Version.","pos":[59,245],"source":" The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName> property to display an application's Publish Version."},{"content":"Note that its successful execution requires the example's application identity to be set.","pos":[246,335]},{"content":"This is handled automatically by the Visual Studio Publish Wizard.","pos":[336,402]}]}]},{"pos":[6328,6589],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class#7<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class#7<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]\n [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]"},{"pos":[6601,6734],"content":"[!IMPORTANT]\nThe Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.","leadings":["","    >  "],"nodes":[{"content":"The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.","pos":[13,126]}]},{"pos":[6743,6768],"content":"Comparing Version Objects","linkify":"Comparing Version Objects","nodes":[{"content":"Comparing Version Objects","pos":[0,25]}]},{"pos":[6772,7042],"content":"You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object. The following example indicates that Version 2.1 is later than Version 2.0.","nodes":[{"content":"You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object. The following example indicates that Version 2.1 is later than Version 2.0.","pos":[0,270],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id=\"ph2\">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id=\"ph3\">&lt;xref:System.Version&gt;</ph> object.","pos":[0,194],"source":"You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object."},{"content":"The following example indicates that Version 2.1 is later than Version 2.0.","pos":[195,270]}]}]},{"pos":[7049,7352],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class.Comparing#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class.Comparing#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]\n [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]"},{"pos":[7359,7902],"content":"For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object. If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero. The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.","nodes":[{"content":"For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object. If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero. The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.","pos":[0,543],"nodes":[{"content":"For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id=\"ph2\">&lt;xref:System.Version&gt;</ph> object.","pos":[0,188],"source":"For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object."},{"content":"If the build or revision number of a <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id=\"ph2\">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id=\"ph3\">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.","pos":[189,415],"source":" If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero."},{"content":"The following example illustrates this by comparing three <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.","pos":[416,543],"source":" The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components."}]}]},{"pos":[7909,8212],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Version.Class.Comparing#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Version.Class.Comparing#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]\n [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]"}],"pos":[1730,10014],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class.","nodes":[{"pos":[0,76],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class."}],"pos":[12972,13049],"yaml":true},{"content":"This constructor creates a <xref:System.Version> object with the following property values.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Version.Major%2A>|0|  \n|<xref:System.Version.Minor%2A>|0|  \n|<xref:System.Version.Build%2A>|undefined (-1)|  \n|<xref:System.Version.Revision%2A>|undefined (-1)|","nodes":[{"pos":[0,91],"content":"This constructor creates a <xref:System.Version> object with the following property values.","nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object with the following property values.","pos":[0,91],"source":"This constructor creates a <xref:System.Version> object with the following property values."}]},{"pos":[98,106],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[107,112],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[148,178],"content":"<xref:System.Version.Major%2A>","nodes":[]},{"pos":[179,180],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[185,215],"content":"<xref:System.Version.Minor%2A>","nodes":[]},{"pos":[216,217],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[222,252],"content":"<xref:System.Version.Build%2A>","nodes":[]},{"pos":[253,267],"content":"undefined (-1)","nodes":[{"content":"undefined (-1)","pos":[0,14]}]},{"pos":[272,305],"content":"<xref:System.Version.Revision%2A>","nodes":[]},{"pos":[306,320],"content":"undefined (-1)","nodes":[{"content":"undefined (-1)","pos":[0,14]}]}],"pos":[13060,13391],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified string.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> class using the specified string.","source":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified string."}],"pos":[14595,14699],"yaml":true},{"content":"The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods. There must be at least two components, and at most four. The first two components are assumed to be major and minor. The value of unspecified components is undefined.  \n  \n The format of the version number is as follows. Optional components are shown in square brackets ('[' and ']'):  \n  \n major.minor[.build[.revision]]  \n  \n All defined components must be integers greater than or equal to 0. For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be \"6.2.1.3\".","nodes":[{"pos":[0,302],"content":"The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods. There must be at least two components, and at most four. The first two components are assumed to be major and minor. The value of unspecified components is undefined.","nodes":[{"content":"The <ph id=\"ph1\">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.","pos":[0,135],"source":"The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods."},{"content":"There must be at least two components, and at most four.","pos":[136,192]},{"content":"The first two components are assumed to be major and minor.","pos":[193,252]},{"content":"The value of unspecified components is undefined.","pos":[253,302]}]},{"pos":[309,420],"content":"The format of the version number is as follows. Optional components are shown in square brackets ('[' and ']'):","nodes":[{"content":"The format of the version number is as follows. Optional components are shown in square brackets ('[' and ']'):","pos":[0,111],"nodes":[{"content":"The format of the version number is as follows.","pos":[0,47]},{"content":"Optional components are shown in square brackets ('[' and ']'):","pos":[48,111]}]}]},{"pos":[427,457],"content":"major.minor[.build[.revision]]","nodes":[{"content":"major.minor[.build[.revision]]","pos":[0,30]}]},{"pos":[464,682],"content":"All defined components must be integers greater than or equal to 0. For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be \"6.2.1.3\".","nodes":[{"content":"All defined components must be integers greater than or equal to 0.","pos":[0,67]},{"content":"For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id=\"ph1\">`version`</ph> should be \"6.2.1.3\".","pos":[68,218],"source":" For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be \"6.2.1.3\"."}]}],"pos":[14710,15403],"yaml":true,"extradata":"MT"},{"content":"A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').","nodes":[{"pos":[0,128],"content":"A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').","nodes":[{"content":"A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').","pos":[0,128]}]}],"pos":[15538,15667],"yaml":true},{"content":"<code>version</code> has fewer than two components or more than four components.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;version&lt;/code&gt;</ph> has fewer than two components or more than four components.","source":"<code>version</code> has fewer than two components or more than four components."}],"pos":[15809,15890],"yaml":true},{"content":"<code>version</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>version</code> is `null`."}],"pos":[15992,16024],"yaml":true},{"content":"A major, minor, build, or revision component is less than zero.","nodes":[{"pos":[0,63],"content":"A major, minor, build, or revision component is less than zero.","nodes":[{"content":"A major, minor, build, or revision component is less than zero.","pos":[0,63]}]}],"pos":[16138,16202],"yaml":true},{"content":"At least one component of <code>version</code> does not parse to an integer.","nodes":[{"pos":[0,76],"content":"At least one component of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">version</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not parse to an integer.","source":"At least one component of <code>version</code> does not parse to an integer."}],"pos":[16292,16369],"yaml":true},{"content":"At least one component of <code>version</code> represents a number greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,123],"content":"At least one component of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">version</ph><ept id=\"p1\">&lt;/code&gt;</ept> represents a number greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"At least one component of <code>version</code> represents a number greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[16463,16587],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major and minor values.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> class using the specified major and minor values.","source":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major and minor values."}],"pos":[18077,18197],"yaml":true},{"content":"This constructor creates a <xref:System.Version> object with the following property values.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Version.Major%2A>|`major`|  \n|<xref:System.Version.Minor%2A>|`minor`|  \n|<xref:System.Version.Build%2A>|undefined (-1)|  \n|<xref:System.Version.Revision%2A>|undefined (-1)|","nodes":[{"pos":[0,91],"content":"This constructor creates a <xref:System.Version> object with the following property values.","nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object with the following property values.","pos":[0,91],"source":"This constructor creates a <xref:System.Version> object with the following property values."}]},{"pos":[98,106],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[107,112],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[148,178],"content":"<xref:System.Version.Major%2A>","nodes":[]},{"pos":[191,221],"content":"<xref:System.Version.Minor%2A>","nodes":[]},{"pos":[234,264],"content":"<xref:System.Version.Build%2A>","nodes":[]},{"pos":[265,279],"content":"undefined (-1)","nodes":[{"content":"undefined (-1)","pos":[0,14]}]},{"pos":[284,317],"content":"<xref:System.Version.Revision%2A>","nodes":[]},{"pos":[318,332],"content":"undefined (-1)","nodes":[{"content":"undefined (-1)","pos":[0,14]}]}],"pos":[18208,18551],"yaml":true,"extradata":"MT"},{"content":"The major version number.","nodes":[{"pos":[0,25],"content":"The major version number.","nodes":[{"content":"The major version number.","pos":[0,25]}]}],"pos":[18689,18715],"yaml":true},{"content":"The minor version number.","nodes":[{"pos":[0,25],"content":"The minor version number.","nodes":[{"content":"The minor version number.","pos":[0,25]}]}],"pos":[18775,18801],"yaml":true},{"content":"<code>major</code> or <code>minor</code> is less than zero.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;major&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;minor&lt;/code&gt;</ph> is less than zero.","source":"<code>major</code> or <code>minor</code> is less than zero."}],"pos":[18963,19023],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major, minor, and build values.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> class using the specified major, minor, and build values.","source":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major, minor, and build values."}],"pos":[20573,20701],"yaml":true},{"content":"This constructor creates a <xref:System.Version> object with the following property values.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Version.Major%2A>|`major`|  \n|<xref:System.Version.Minor%2A>|`minor`|  \n|<xref:System.Version.Build%2A>|`build`|  \n|<xref:System.Version.Revision%2A>|undefined (-1)|","nodes":[{"pos":[0,91],"content":"This constructor creates a <xref:System.Version> object with the following property values.","nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object with the following property values.","pos":[0,91],"source":"This constructor creates a <xref:System.Version> object with the following property values."}]},{"pos":[98,106],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[107,112],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[148,178],"content":"<xref:System.Version.Major%2A>","nodes":[]},{"pos":[191,221],"content":"<xref:System.Version.Minor%2A>","nodes":[]},{"pos":[234,264],"content":"<xref:System.Version.Build%2A>","nodes":[]},{"pos":[277,310],"content":"<xref:System.Version.Revision%2A>","nodes":[]},{"pos":[311,325],"content":"undefined (-1)","nodes":[{"content":"undefined (-1)","pos":[0,14]}]}],"pos":[20712,21048],"yaml":true,"extradata":"MT"},{"content":"The major version number.","nodes":[{"pos":[0,25],"content":"The major version number.","nodes":[{"content":"The major version number.","pos":[0,25]}]}],"pos":[21197,21223],"yaml":true},{"content":"The minor version number.","nodes":[{"pos":[0,25],"content":"The minor version number.","nodes":[{"content":"The minor version number.","pos":[0,25]}]}],"pos":[21283,21309],"yaml":true},{"content":"The build number.","nodes":[{"pos":[0,17],"content":"The build number.","nodes":[{"content":"The build number.","pos":[0,17]}]}],"pos":[21369,21387],"yaml":true},{"content":"<code>major</code>, <code>minor</code>, or <code>build</code> is less than zero.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;major&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;minor&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;build&lt;/code&gt;</ph> is less than zero.","source":"<code>major</code>, <code>minor</code>, or <code>build</code> is less than zero."}],"pos":[21549,21630],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class with the specified major, minor, build, and revision numbers.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> class with the specified major, minor, build, and revision numbers.","source":"Initializes a new instance of the <xref href=\"System.Version\"></xref> class with the specified major, minor, build, and revision numbers."}],"pos":[23240,23378],"yaml":true},{"content":"This constructor creates a <xref:System.Version> object with the following property values.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Version.Major%2A>|`major`|  \n|<xref:System.Version.Minor%2A>|`minor`|  \n|<xref:System.Version.Build%2A>|`build`|  \n|<xref:System.Version.Revision%2A>|`revision`|","nodes":[{"pos":[0,91],"content":"This constructor creates a <xref:System.Version> object with the following property values.","nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> object with the following property values.","pos":[0,91],"source":"This constructor creates a <xref:System.Version> object with the following property values."}]},{"pos":[98,106],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[107,112],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[148,178],"content":"<xref:System.Version.Major%2A>","nodes":[]},{"pos":[191,221],"content":"<xref:System.Version.Minor%2A>","nodes":[]},{"pos":[234,264],"content":"<xref:System.Version.Build%2A>","nodes":[]},{"pos":[277,310],"content":"<xref:System.Version.Revision%2A>","nodes":[]}],"pos":[23389,23721],"yaml":true,"extradata":"MT"},{"content":"The major version number.","nodes":[{"pos":[0,25],"content":"The major version number.","nodes":[{"content":"The major version number.","pos":[0,25]}]}],"pos":[24614,24640],"yaml":true},{"content":"The minor version number.","nodes":[{"pos":[0,25],"content":"The minor version number.","nodes":[{"content":"The minor version number.","pos":[0,25]}]}],"pos":[24700,24726],"yaml":true},{"content":"The build number.","nodes":[{"pos":[0,17],"content":"The build number.","nodes":[{"content":"The build number.","pos":[0,17]}]}],"pos":[24786,24804],"yaml":true},{"content":"The revision number.","nodes":[{"pos":[0,20],"content":"The revision number.","nodes":[{"content":"The revision number.","pos":[0,20]}]}],"pos":[24867,24888],"yaml":true},{"content":"<code>major</code>, <code>minor</code>, <code>build</code>, or <code>revision</code> is less than zero.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">&lt;code&gt;major&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;minor&lt;/code&gt;</ph>, <ph id=\"ph3\">&lt;code&gt;build&lt;/code&gt;</ph>, or <ph id=\"ph4\">&lt;code&gt;revision&lt;/code&gt;</ph> is less than zero.","source":"<code>major</code>, <code>minor</code>, <code>build</code>, or <code>revision</code> is less than zero."}],"pos":[25050,25154],"yaml":true},{"content":"Gets the value of the build component of the version number for the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,119],"content":"Gets the value of the build component of the version number for the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the build component of the version number for the current <xref href=\"System.Version\"></xref> object."}],"pos":[26510,26630],"yaml":true},{"content":"For example, if the version number is 6.2.1.3, the build number is 1. If the version number is 6.2, the build number is undefined.","nodes":[{"pos":[0,130],"content":"For example, if the version number is 6.2.1.3, the build number is 1. If the version number is 6.2, the build number is undefined.","nodes":[{"content":"For example, if the version number is 6.2.1.3, the build number is 1. If the version number is 6.2, the build number is undefined.","pos":[0,130],"nodes":[{"content":"For example, if the version number is 6.2.1.3, the build number is 1.","pos":[0,69]},{"content":"If the version number is 6.2, the build number is undefined.","pos":[70,130]}]}]}],"pos":[26641,26772],"yaml":true,"extradata":"MT"},{"content":"The build number, or -1 if the build number is undefined.","nodes":[{"pos":[0,57],"content":"The build number, or -1 if the build number is undefined.","nodes":[{"content":"The build number, or -1 if the build number is undefined.","pos":[0,57]}]}],"pos":[27607,27665],"yaml":true},{"content":"Returns a new <xref href=\"System.Version\"></xref> object whose value is the same as the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,139],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object whose value is the same as the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a new <xref href=\"System.Version\"></xref> object whose value is the same as the current <xref href=\"System.Version\"></xref> object."}],"pos":[29076,29216],"yaml":true},{"content":"If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.","nodes":[{"pos":[0,151],"content":"If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.","nodes":[{"content":"If the type of the return value is important, cast the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id=\"ph2\">&lt;xref:System.Version&gt;</ph> object.","pos":[0,151],"source":"If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object."}]}],"pos":[29227,29379],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Object\"></xref> whose values are a copy of the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,123],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> whose values are a copy of the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"A new <xref href=\"System.Object\"></xref> whose values are a copy of the current <xref href=\"System.Version\"></xref> object."}],"pos":[29502,29626],"yaml":true},{"content":"Compares the current <xref href=\"System.Version\"></xref> object to a specified object and returns an indication of their relative values.","nodes":[{"pos":[0,137],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to a specified object and returns an indication of their relative values.","source":"Compares the current <xref href=\"System.Version\"></xref> object to a specified object and returns an indication of their relative values."}],"pos":[30780,30918],"yaml":true},{"content":"The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component.  \n  \n For example:  \n  \n-   Version 1.1 is older than version 1.1.0  \n  \n-   Version 1.1 is older than version 1.1.1  \n  \n-   Version 1.1 is older than version 1.1.2.3  \n  \n-   Version 1.1.2 is older than version 1.1.2.4  \n  \n-   Version 1.2.5 is newer than version 1.2.3.4","nodes":[{"pos":[0,171],"content":"The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component.","nodes":[{"content":"The components of <ph id=\"ph1\">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.","pos":[0,101],"source":"The components of `Version` in decreasing order of importance are: major, minor, build, and revision."},{"content":"An unknown component is assumed to be older than any known component.","pos":[102,171]}]},{"pos":[178,190],"content":"For example:","nodes":[{"content":"For example:","pos":[0,12]}]},{"pos":[200,239],"content":"Version 1.1 is older than version 1.1.0","nodes":[{"content":"Version 1.1 is older than version 1.1.0","pos":[0,39]}]},{"pos":[249,288],"content":"Version 1.1 is older than version 1.1.1","nodes":[{"content":"Version 1.1 is older than version 1.1.1","pos":[0,39]}]},{"pos":[298,339],"content":"Version 1.1 is older than version 1.1.2.3","nodes":[{"content":"Version 1.1 is older than version 1.1.2.3","pos":[0,41]}]},{"pos":[349,392],"content":"Version 1.1.2 is older than version 1.1.2.4","nodes":[{"content":"Version 1.1.2 is older than version 1.1.2.4","pos":[0,43]}]},{"pos":[402,445],"content":"Version 1.2.5 is newer than version 1.2.3.4","nodes":[{"content":"Version 1.2.5 is newer than version 1.2.3.4","pos":[0,43]}]}],"pos":[30929,31389],"yaml":true,"extradata":"MT"},{"content":"An object to compare, or `null`.","nodes":[{"pos":[0,32],"content":"An object to compare, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare, or `null`."}],"pos":[31530,31563],"yaml":true},{"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version before <code>version</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is the same version as <code>version</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>version</code>.  \n  \n -or-  \n  \n <code>version</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,104],"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.","nodes":[{"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.","pos":[0,104]}]},{"pos":[111,647],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version before <code>version</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is the same version as <code>version</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>version</code>.","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":" The current <xref href=\"System.Version\"></xref> object is a version before <code>version</code>.  \n  \n ","pos":[130,234],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is a version before <ph id=\"ph2\">&lt;code&gt;version&lt;/code&gt;</ph>.","pos":[1,97],"source":" The current <xref href=\"System.Version\"></xref> object is a version before <code>version</code>."}]},{"content":"Zero","pos":[253,262],"source":" Zero  \n  \n "},{"content":" The current <xref href=\"System.Version\"></xref> object is the same version as <code>version</code>.  \n  \n ","pos":[273,380],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is the same version as <ph id=\"ph2\">&lt;code&gt;version&lt;/code&gt;</ph>.","pos":[1,100],"source":" The current <xref href=\"System.Version\"></xref> object is the same version as <code>version</code>."}]},{"content":"Greater than zero","pos":[399,421],"source":" Greater than zero  \n  \n "},{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is a version subsequent to <ph id=\"ph2\">&lt;code&gt;version&lt;/code&gt;</ph>.","pos":[433,536],"source":" The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>version</code>."}]},{"pos":[654,658],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[665,730],"content":"<code>version</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>version</code> is `null`.  \n  \n ","pos":[0,38],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,31],"source":"<code>version</code> is `null`."}]}]}],"pos":[31619,32379],"yaml":true},{"content":"<code>version</code> is not of type <xref href=\"System.Version\"></xref>.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">&lt;code&gt;version&lt;/code&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph>.","source":"<code>version</code> is not of type <xref href=\"System.Version\"></xref>."}],"pos":[32525,32598],"yaml":true},{"content":"Compares the current <xref href=\"System.Version\"></xref> object to a specified <xref href=\"System.Version\"></xref> object and returns an indication of their relative values.","nodes":[{"pos":[0,173],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to a specified <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object and returns an indication of their relative values.","source":"Compares the current <xref href=\"System.Version\"></xref> object to a specified <xref href=\"System.Version\"></xref> object and returns an indication of their relative values."}],"pos":[33707,33881],"yaml":true},{"content":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.  \n  \n The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component. For example:  \n  \n-   Version 1.1 is older than version 1.1.0.  \n  \n-   Version 1.1 is older than version 1.1.1.  \n  \n-   Version 1.1 is older than version 1.1.2.3.  \n  \n-   Version 1.1.2 is older than version 1.1.2.4.  \n  \n-   Version 1.2.5 is newer than version 1.2.3.4.","nodes":[{"pos":[0,229],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id=\"ph3\">`value`</ph> parameter.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter."},{"pos":[236,420],"content":"The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component. For example:","nodes":[{"content":"The components of <ph id=\"ph1\">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.","pos":[0,101],"source":"The components of `Version` in decreasing order of importance are: major, minor, build, and revision."},{"content":"An unknown component is assumed to be older than any known component.","pos":[102,171]},{"content":"For example:","pos":[172,184]}]},{"pos":[430,470],"content":"Version 1.1 is older than version 1.1.0.","nodes":[{"content":"Version 1.1 is older than version 1.1.0.","pos":[0,40]}]},{"pos":[480,520],"content":"Version 1.1 is older than version 1.1.1.","nodes":[{"content":"Version 1.1 is older than version 1.1.1.","pos":[0,40]}]},{"pos":[530,572],"content":"Version 1.1 is older than version 1.1.2.3.","nodes":[{"content":"Version 1.1 is older than version 1.1.2.3.","pos":[0,42]}]},{"pos":[582,626],"content":"Version 1.1.2 is older than version 1.1.2.4.","nodes":[{"content":"Version 1.1.2 is older than version 1.1.2.4.","pos":[0,44]}]},{"pos":[636,680],"content":"Version 1.2.5 is newer than version 1.2.3.4.","nodes":[{"content":"Version 1.2.5 is newer than version 1.2.3.4.","pos":[0,44]}]}],"pos":[33892,34587],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`."}],"pos":[35180,35306],"yaml":true},{"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version before <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is the same version as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>value</code>.  \n  \n -or-  \n  \n <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,104],"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.","nodes":[{"content":"A signed integer that indicates the relative values of the two objects, as shown in the following table.","pos":[0,104]}]},{"pos":[111,641],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version before <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is the same version as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>value</code>.","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":" The current <xref href=\"System.Version\"></xref> object is a version before <code>value</code>.  \n  \n ","pos":[130,232],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is a version before <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,95],"source":" The current <xref href=\"System.Version\"></xref> object is a version before <code>value</code>."}]},{"content":"Zero","pos":[251,260],"source":" Zero  \n  \n "},{"content":" The current <xref href=\"System.Version\"></xref> object is the same version as <code>value</code>.  \n  \n ","pos":[271,376],"nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is the same version as <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,98],"source":" The current <xref href=\"System.Version\"></xref> object is the same version as <code>value</code>."}]},{"content":"Greater than zero","pos":[395,417],"source":" Greater than zero  \n  \n "},{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is a version subsequent to <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[429,530],"source":" The current <xref href=\"System.Version\"></xref> object is a version subsequent to <code>value</code>."}]},{"pos":[648,652],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[659,722],"content":"<code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>value</code> is `null`.  \n  \n ","pos":[0,36],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,29],"source":"<code>value</code> is `null`."}]}]}],"pos":[35362,36114],"yaml":true},{"content":"Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object is equal to a specified object.","nodes":[{"pos":[0,121],"content":"Returns a value indicating whether the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.","source":"Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object is equal to a specified object."}],"pos":[37598,37720],"yaml":true},{"content":"An object to compare with the current <xref href=\"System.Version\"></xref> object, or `null`.","nodes":[{"pos":[0,92],"content":"An object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph2\">`null`</ph>.","source":"An object to compare with the current <xref href=\"System.Version\"></xref> object, or `null`."}],"pos":[37860,37953],"yaml":true},{"content":"`true` if the current <xref href=\"System.Version\"></xref> object and <code>obj</code> are both <xref href=\"System.Version\"></xref> objects, and every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of <code>obj</code>; otherwise, `false`.","nodes":[{"pos":[0,294],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> are both <ph id=\"ph4\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> objects, and every component of the current <ph id=\"ph5\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object matches the corresponding component of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph6\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph7\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Version\"></xref> object and <code>obj</code> are both <xref href=\"System.Version\"></xref> objects, and every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of <code>obj</code>; otherwise, `false`."}],"pos":[38011,38308],"yaml":true},{"content":"Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object and a specified <xref href=\"System.Version\"></xref> object represent the same value.","nodes":[{"pos":[0,174],"content":"Returns a value indicating whether the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object and a specified <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object represent the same value.","source":"Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object and a specified <xref href=\"System.Version\"></xref> object represent the same value."}],"pos":[39795,39970],"yaml":true},{"content":"This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.","nodes":[{"pos":[0,198],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id=\"ph3\">`obj`</ph> parameter.","source":"This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter."}],"pos":[39981,40180],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`."}],"pos":[40313,40439],"yaml":true},{"content":"`true` if every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of the <code>obj</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,174],"content":"<ph id=\"ph1\">`true`</ph> if every component of the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object matches the corresponding component of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of the <code>obj</code> parameter; otherwise, `false`."}],"pos":[40497,40674],"yaml":true},{"content":"Returns a hash code for the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,79],"content":"Returns a hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a hash code for the current <xref href=\"System.Version\"></xref> object."}],"pos":[42122,42202],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[43080,43115],"yaml":true},{"content":"Gets the value of the major component of the version number for the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,119],"content":"Gets the value of the major component of the version number for the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the major component of the version number for the current <xref href=\"System.Version\"></xref> object."}],"pos":[44528,44648],"yaml":true},{"content":"For example, if the version number is 6.2, the major version is 6.","nodes":[{"pos":[0,66],"content":"For example, if the version number is 6.2, the major version is 6.","nodes":[{"content":"For example, if the version number is 6.2, the major version is 6.","pos":[0,66]}]}],"pos":[44659,44726],"yaml":true,"extradata":"MT"},{"content":"The major version number.","nodes":[{"pos":[0,25],"content":"The major version number.","nodes":[{"content":"The major version number.","pos":[0,25]}]}],"pos":[44831,44857],"yaml":true},{"content":"Gets the high 16 bits of the revision number.","nodes":[{"pos":[0,45],"content":"Gets the high 16 bits of the revision number.","nodes":[{"content":"Gets the high 16 bits of the revision number.","pos":[0,45]}]}],"pos":[46312,46358],"yaml":true},{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.  \n  \n Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.","nodes":[{"pos":[0,634],"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.","nodes":[{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.","pos":[0,634],"nodes":[{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.","pos":[0,135]},{"content":"The temporary version does not warrant a new revision number, but it does need to be identified as a different version.","pos":[136,255]},{"content":"In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.","pos":[256,374]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id=\"ph2\">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id=\"ph3\">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.","pos":[375,634],"source":" Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits."}]}]},{"pos":[641,808],"content":"Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.","nodes":[{"content":"Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id=\"ph1\">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.","pos":[0,167],"source":"Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number."}]}],"pos":[46369,47182],"yaml":true,"extradata":"MT"},{"content":"A 16-bit signed integer.","nodes":[{"pos":[0,24],"content":"A 16-bit signed integer.","nodes":[{"content":"A 16-bit signed integer.","pos":[0,24]}]}],"pos":[48031,48056],"yaml":true},{"content":"Gets the value of the minor component of the version number for the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,119],"content":"Gets the value of the minor component of the version number for the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the minor component of the version number for the current <xref href=\"System.Version\"></xref> object."}],"pos":[49471,49591],"yaml":true},{"content":"For example, if the version number is 6.2, the minor version is 2.","nodes":[{"pos":[0,66],"content":"For example, if the version number is 6.2, the minor version is 2.","nodes":[{"content":"For example, if the version number is 6.2, the minor version is 2.","pos":[0,66]}]}],"pos":[49602,49669],"yaml":true,"extradata":"MT"},{"content":"The minor version number.","nodes":[{"pos":[0,25],"content":"The minor version number.","nodes":[{"content":"The minor version number.","pos":[0,25]}]}],"pos":[50504,50530],"yaml":true},{"content":"Gets the low 16 bits of the revision number.","nodes":[{"pos":[0,44],"content":"Gets the low 16 bits of the revision number.","nodes":[{"content":"Gets the low 16 bits of the revision number.","pos":[0,44]}]}],"pos":[51985,52030],"yaml":true},{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.","nodes":[{"pos":[0,634],"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.","nodes":[{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.","pos":[0,634],"nodes":[{"content":"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.","pos":[0,135]},{"content":"The temporary version does not warrant a new revision number, but it does need to be identified as a different version.","pos":[136,255]},{"content":"In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.","pos":[256,374]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id=\"ph2\">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id=\"ph3\">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.","pos":[375,634],"source":" Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits."}]}]}],"pos":[52041,52676],"yaml":true,"extradata":"MT"},{"content":"A 16-bit signed integer.","nodes":[{"pos":[0,24],"content":"A 16-bit signed integer.","nodes":[{"content":"A 16-bit signed integer.","pos":[0,24]}]}],"pos":[53525,53550],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Version\"></xref> objects are equal.","nodes":[{"pos":[0,87],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Determines whether two specified <xref href=\"System.Version\"></xref> objects are equal."}],"pos":[55148,55236],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[55247,55363],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[55518,55572],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[55631,55686],"yaml":true},{"content":"`true` if <code>v1</code> equals <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> equals <code>v2</code>; otherwise, `false`."}],"pos":[55744,55816],"yaml":true},{"content":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than the second specified <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,162],"content":"Determines whether the first specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is greater than the second specified <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than the second specified <xref href=\"System.Version\"></xref> object."}],"pos":[57430,57593],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,118],"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,118],"source":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>"}]}],"pos":[57604,57723],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[57881,57935],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[57994,58049],"yaml":true},{"content":"`true` if <code>v1</code> is greater than <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> is greater than <code>v2</code>; otherwise, `false`."}],"pos":[58107,58188],"yaml":true},{"content":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than or equal to the second specified <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,174],"content":"Determines whether the first specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is greater than or equal to the second specified <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than or equal to the second specified <xref href=\"System.Version\"></xref> object."}],"pos":[59847,60022],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,118],"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,118],"source":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>"}]}],"pos":[60033,60152],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[60317,60371],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[60430,60485],"yaml":true},{"content":"`true` if <code>v1</code> is greater than or equal to <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> is greater than or equal to <code>v2</code>; otherwise, `false`."}],"pos":[60543,60636],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Version\"></xref> objects are not equal.","nodes":[{"pos":[0,91],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> objects are not equal.","source":"Determines whether two specified <xref href=\"System.Version\"></xref> objects are not equal."}],"pos":[62254,62346],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[62357,62473],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[62630,62684],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[62743,62798],"yaml":true},{"content":"`true` if <code>v1</code> does not equal <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> does not equal <code>v2</code>; otherwise, `false`."}],"pos":[62856,62936],"yaml":true},{"content":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than the second specified <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,159],"content":"Determines whether the first specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is less than the second specified <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than the second specified <xref href=\"System.Version\"></xref> object."}],"pos":[64534,64694],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,118],"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,118],"source":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>"}]}],"pos":[64705,64824],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[64979,65033],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[65092,65147],"yaml":true},{"content":"`true` if <code>v1</code> is less than <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> is less than <code>v2</code>; otherwise, `false`."}],"pos":[65205,65283],"yaml":true},{"content":"<code>v1</code> is `null`.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;v1&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>v1</code> is `null`."}],"pos":[65439,65466],"yaml":true},{"content":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than or equal to the second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,161],"content":"Determines whether the first specified <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object is less than or equal to the second <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than or equal to the second <xref href=\"System.Version\"></xref> object."}],"pos":[67047,67209],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,118],"content":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,118],"source":"The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>"}]}],"pos":[67220,67339],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,53],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The first <xref href=\"System.Version\"></xref> object."}],"pos":[67501,67555],"yaml":true},{"content":"The second <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,54],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"The second <xref href=\"System.Version\"></xref> object."}],"pos":[67614,67669],"yaml":true},{"content":"`true` if <code>v1</code> is less than or equal to <code>v2</code>; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">v1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than or equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">v2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>v1</code> is less than or equal to <code>v2</code>; otherwise, `false`."}],"pos":[67727,67817],"yaml":true},{"content":"<code>v1</code> is `null`.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;v1&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>v1</code> is `null`."}],"pos":[67980,68007],"yaml":true},{"content":"Converts the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,115],"content":"Converts the string representation of a version number to an equivalent <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Converts the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object."}],"pos":[69430,69546],"yaml":true},{"content":"The `input` parameter must have the following format:  \n  \n```  \n  \nmajor.minor[.build[.revision]]  \n```  \n  \n where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in the specified order, and must be separated by periods.  \n  \n> [!IMPORTANT]\n>  Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input. Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.  \n  \n The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.","nodes":[{"pos":[0,53],"content":"The <ph id=\"ph1\">`input`</ph> parameter must have the following format:","source":"The `input` parameter must have the following format:"},{"pos":[111,454],"content":"where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in the specified order, and must be separated by periods.","nodes":[{"content":"where <bpt id=\"p1\">*</bpt>major<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>minor<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>build<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>revision<ept id=\"p4\">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.","pos":[0,198],"source":"where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number."},{"content":"Optional components are shown in square brackets ([ and ]).","pos":[199,258]},{"content":"The components must appear in the specified order, and must be separated by periods.","pos":[259,343]}]},{"pos":[462,896],"content":"[!IMPORTANT]\n Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input. Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.","leadings":["","> "],"nodes":[{"content":" Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input. Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.","pos":[13,432],"nodes":[{"content":"Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id=\"ph1\">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.","pos":[1,218],"source":" Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input."},{"content":"Alternatively, you can call the <ph id=\"ph1\">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.","pos":[219,419],"source":" Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded."}]}]},{"pos":[903,1063],"content":"The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id=\"ph2\">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.","pos":[0,160],"source":"The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor."}]}],"pos":[69557,70635],"yaml":true,"extradata":"MT"},{"content":"A string that contains a version number to convert.","nodes":[{"pos":[0,51],"content":"A string that contains a version number to convert.","nodes":[{"content":"A string that contains a version number to convert.","pos":[0,51]}]}],"pos":[71189,71241],"yaml":true},{"content":"An object that is equivalent to the version number specified in the <code>input</code> parameter.","nodes":[{"pos":[0,97],"content":"An object that is equivalent to the version number specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An object that is equivalent to the version number specified in the <code>input</code> parameter."}],"pos":[71299,71397],"yaml":true},{"content":"<code>input</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>input</code> is `null`."}],"pos":[71547,71577],"yaml":true},{"content":"<code>input</code> has fewer than two or more than four version components.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> has fewer than two or more than four version components.","source":"<code>input</code> has fewer than two or more than four version components."}],"pos":[71671,71747],"yaml":true},{"content":"At least one component in <code>input</code> is less than zero.","nodes":[{"pos":[0,63],"content":"At least one component in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than zero.","source":"At least one component in <code>input</code> is less than zero."}],"pos":[71861,71925],"yaml":true},{"content":"At least one component in <code>input</code> is not an integer.","nodes":[{"pos":[0,63],"content":"At least one component in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not an integer.","source":"At least one component in <code>input</code> is not an integer."}],"pos":[72015,72079],"yaml":true},{"content":"At least one component in <code>input</code> represents a number that is greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,129],"content":"At least one component in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> represents a number that is greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"At least one component in <code>input</code> represents a number that is greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[72173,72303],"yaml":true},{"content":"Gets the value of the revision component of the version number for the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,122],"content":"Gets the value of the revision component of the version number for the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the revision component of the version number for the current <xref href=\"System.Version\"></xref> object."}],"pos":[73677,73800],"yaml":true},{"content":"For example, if the version number is 6.2.1.3, the revision number is 3. If the version number is 6.2, the revision number is undefined.","nodes":[{"pos":[0,136],"content":"For example, if the version number is 6.2.1.3, the revision number is 3. If the version number is 6.2, the revision number is undefined.","nodes":[{"content":"For example, if the version number is 6.2.1.3, the revision number is 3. If the version number is 6.2, the revision number is undefined.","pos":[0,136],"nodes":[{"content":"For example, if the version number is 6.2.1.3, the revision number is 3.","pos":[0,72]},{"content":"If the version number is 6.2, the revision number is undefined.","pos":[73,136]}]}]}],"pos":[73811,73948],"yaml":true,"extradata":"MT"},{"content":"The revision number, or -1 if the revision number is undefined.","nodes":[{"pos":[0,63],"content":"The revision number, or -1 if the revision number is undefined.","nodes":[{"content":"The revision number, or -1 if the revision number is undefined.","pos":[0,63]}]}],"pos":[74786,74850],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation.","nodes":[{"pos":[0,145],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to its equivalent <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation.","source":"Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation."}],"pos":[76282,76428],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, as depicted in the following format. Each component is separated by a period character ('.'). Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:  \n  \n major.minor[.build[.revision]]  \n  \n For example, if you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,1)</code>, the returned string is \"1.1\". If you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,3,4,2)</code>, the returned string is \"1.3.4.2\".","nodes":[{"pos":[0,397],"content":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, as depicted in the following format. Each component is separated by a period character ('.'). Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, as depicted in the following format.","pos":[0,215],"source":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, as depicted in the following format."},{"content":"Each component is separated by a period character ('.').","pos":[216,272]},{"content":"Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:","pos":[273,397]}]},{"pos":[404,434],"content":"major.minor[.build[.revision]]","nodes":[{"content":"major.minor[.build[.revision]]","pos":[0,30]}]},{"pos":[441,737],"content":"For example, if you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,1)</code>, the returned string is \"1.1\". If you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,3,4,2)</code>, the returned string is \"1.3.4.2\".","nodes":[{"content":"For example, if you create a <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Version(1,1)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the returned string is \"1.1\".","pos":[0,150],"source":"For example, if you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,1)</code>, the returned string is \"1.1\"."},{"content":"If you create a <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Version(1,3,4,2)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the returned string is \"1.3.4.2\".","pos":[151,296],"source":" If you create a <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,3,4,2)</code>, the returned string is \"1.3.4.2\"."}]}],"pos":[76563,77319],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation. A specified count indicates the number of components to return.","nodes":[{"pos":[0,209],"content":"Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation. A specified count indicates the number of components to return.","nodes":[{"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object to its equivalent <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation.","pos":[0,145],"source":"Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation."},{"content":"A specified count indicates the number of components to return.","pos":[146,209]}]}],"pos":[78808,79018],"yaml":true},{"content":"The number of components to return. The <code>fieldCount</code> ranges from 0 to 4.","nodes":[{"pos":[0,83],"content":"The number of components to return. The <code>fieldCount</code> ranges from 0 to 4.","nodes":[{"content":"The number of components to return.","pos":[0,35]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fieldCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> ranges from 0 to 4.","pos":[36,83],"source":" The <code>fieldCount</code> ranges from 0 to 4."}]}],"pos":[79163,79247],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, each separated by a period character ('.'). The <code>fieldCount</code> parameter determines how many components are returned.  \n  \n <table><thead><tr><th> fieldCount  \n  \n </th><th> Return Value  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> An empty string (\"\").  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> major  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> major.minor  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> major.minor.build  \n  \n </td></tr><tr><td> 4  \n  \n </td><td> major.minor.build.revision  \n  \n </td></tr></tbody></table>  \n  \n For example, if you create <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,3,5)</code>, <code>ToString(2)</code> returns \"1.3\" and <code>ToString(4)</code> throws an exception.","nodes":[{"pos":[0,305],"content":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, each separated by a period character ('.'). The <code>fieldCount</code> parameter determines how many components are returned.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, each separated by a period character ('.').","pos":[0,222],"source":"The <xref href=\"System.String\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\"System.Version\"></xref> object, each separated by a period character ('.')."},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fieldCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter determines how many components are returned.","pos":[223,305],"source":" The <code>fieldCount</code> parameter determines how many components are returned."}]},{"pos":[312,722],"content":"<table><thead><tr><th> fieldCount  \n  \n </th><th> Return Value  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> An empty string (\"\").  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> major  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> major.minor  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> major.minor.build  \n  \n </td></tr><tr><td> 4  \n  \n </td><td> major.minor.build.revision  \n  \n </td></tr></tbody></table>","nodes":[{"content":"fieldCount","pos":[23,38],"source":" fieldCount  \n  \n "},{"content":"Return Value","pos":[50,67],"source":" Return Value  \n  \n "},{"content":"0","pos":[103,109],"source":" 0  \n  \n "},{"content":" An empty string (\"\").  \n  \n ","pos":[120,149],"nodes":[{"content":"An empty string (\"\").","pos":[1,22]}]},{"content":"1","pos":[168,174],"source":" 1  \n  \n "},{"content":"major","pos":[186,196],"source":" major  \n  \n "},{"content":"2","pos":[217,223],"source":" 2  \n  \n "},{"content":"major.minor","pos":[235,251],"source":" major.minor  \n  \n "},{"content":"3","pos":[272,278],"source":" 3  \n  \n "},{"content":"major.minor.build","pos":[290,312],"source":" major.minor.build  \n  \n "},{"content":"4","pos":[333,339],"source":" 4  \n  \n "},{"content":"major.minor.build.revision","pos":[351,382],"source":" major.minor.build.revision  \n  \n "}]},{"pos":[729,938],"content":"For example, if you create <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Version(1,3,5)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">ToString(2)</ph><ept id=\"p2\">&lt;/code&gt;</ept> returns \"1.3\" and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">ToString(4)</ph><ept id=\"p3\">&lt;/code&gt;</ept> throws an exception.","source":"For example, if you create <xref href=\"System.Version\"></xref> object using the constructor <code>Version(1,3,5)</code>, <code>ToString(2)</code> returns \"1.3\" and <code>ToString(4)</code> throws an exception."}],"pos":[79304,80283],"yaml":true},{"content":"<code>fieldCount</code> is less than 0, or more than 4.  \n  \n -or-  \n  \n <code>fieldCount</code> is more than the number of components defined in the current <xref href=\"System.Version\"></xref> object.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;fieldCount&lt;/code&gt;</ph> is less than 0, or more than 4.","source":"<code>fieldCount</code> is less than 0, or more than 4."},{"pos":[62,66],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[73,201],"content":"<ph id=\"ph1\">&lt;code&gt;fieldCount&lt;/code&gt;</ph> is more than the number of components defined in the current <ph id=\"ph2\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>fieldCount</code> is more than the number of components defined in the current <xref href=\"System.Version\"></xref> object."}],"pos":[80428,80638],"yaml":true},{"content":"Tries to convert the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object, and returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,192],"content":"Tries to convert the string representation of a version number to an equivalent <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.","source":"Tries to convert the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object, and returns a value that indicates whether the conversion succeeded."}],"pos":[82154,82347],"yaml":true},{"content":"The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails. Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=fullName>.  \n  \n For the parse operation to succeed, the `input` parameter must be in the following format:  \n  \n```  \n  \nmajor.minor[.build[.revision]]  \n```  \n  \n where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in order, and must be separated by periods.","nodes":[{"pos":[0,474],"content":"The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails. Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id=\"ph2\">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.","pos":[0,169],"source":"The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails."},{"content":"Instead, it returns <ph id=\"ph1\">`false`</ph> if <ph id=\"ph2\">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id=\"ph3\">&lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;</ph>.","pos":[170,474],"source":" Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=fullName>."}]},{"pos":[481,571],"content":"For the parse operation to succeed, the <ph id=\"ph1\">`input`</ph> parameter must be in the following format:","source":"For the parse operation to succeed, the `input` parameter must be in the following format:"},{"pos":[629,958],"content":"where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in order, and must be separated by periods.","nodes":[{"content":"where <bpt id=\"p1\">*</bpt>major<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>minor<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>build<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>revision<ept id=\"p4\">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.","pos":[0,198],"source":"where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number."},{"content":"Optional components are shown in square brackets ([ and ]).","pos":[199,258]},{"content":"The components must appear in order, and must be separated by periods.","pos":[259,329]}]}],"pos":[82358,83328],"yaml":true,"extradata":"MT"},{"content":"A string that contains a version number to convert.","nodes":[{"pos":[0,51],"content":"A string that contains a version number to convert.","nodes":[{"content":"A string that contains a version number to convert.","pos":[0,51]}]}],"pos":[83923,83975],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.Version\"></xref> equivalent of the number that is contained in <code>input</code>, if the conversion succeeded, or a <xref href=\"System.Version\"></xref> object whose major and minor version numbers are 0 if the conversion failed. If <code>input</code> is `null` or <xref href=\"System.String.Empty\"></xref>, <code>result</code> is `null` when the method returns.","nodes":[{"pos":[0,419],"content":"When this method returns, contains the <xref href=\"System.Version\"></xref> equivalent of the number that is contained in <code>input</code>, if the conversion succeeded, or a <xref href=\"System.Version\"></xref> object whose major and minor version numbers are 0 if the conversion failed. If <code>input</code> is `null` or <xref href=\"System.String.Empty\"></xref>, <code>result</code> is `null` when the method returns.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> equivalent of the number that is contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or a <ph id=\"ph3\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object whose major and minor version numbers are 0 if the conversion failed.","pos":[0,287],"source":"When this method returns, contains the <xref href=\"System.Version\"></xref> equivalent of the number that is contained in <code>input</code>, if the conversion succeeded, or a <xref href=\"System.Version\"></xref> object whose major and minor version numbers are 0 if the conversion failed."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">result</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph5\">`null`</ph> when the method returns.","pos":[288,419],"source":" If <code>input</code> is `null` or <xref href=\"System.String.Empty\"></xref>, <code>result</code> is `null` when the method returns."}]}],"pos":[84038,84458],"yaml":true},{"content":"`true` if the <code>input</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>input</code> parameter was converted successfully; otherwise, `false`."}],"pos":[84516,84609],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Version\n  commentId: T:System.Version\n  id: Version\n  children:\n  - System.Version.#ctor\n  - System.Version.#ctor(System.String)\n  - System.Version.#ctor(System.Int32,System.Int32)\n  - System.Version.#ctor(System.Int32,System.Int32,System.Int32)\n  - System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Version.Build\n  - System.Version.Clone\n  - System.Version.CompareTo(System.Object)\n  - System.Version.CompareTo(System.Version)\n  - System.Version.Equals(System.Object)\n  - System.Version.Equals(System.Version)\n  - System.Version.GetHashCode\n  - System.Version.Major\n  - System.Version.MajorRevision\n  - System.Version.Minor\n  - System.Version.MinorRevision\n  - System.Version.op_Equality(System.Version,System.Version)\n  - System.Version.op_GreaterThan(System.Version,System.Version)\n  - System.Version.op_GreaterThanOrEqual(System.Version,System.Version)\n  - System.Version.op_Inequality(System.Version,System.Version)\n  - System.Version.op_LessThan(System.Version,System.Version)\n  - System.Version.op_LessThanOrEqual(System.Version,System.Version)\n  - System.Version.Parse(System.String)\n  - System.Version.Revision\n  - System.Version.ToString\n  - System.Version.ToString(System.Int32)\n  - System.Version.TryParse(System.String,System.Version@)\n  - System.Version.System#IComparable#CompareTo(System.Object)\n  langs:\n  - csharp\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.\n  remarks: \"Version numbers consist of two to four components: major, minor, build, and revision. The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined. All defined components must be integers greater than or equal to 0. The format of the version number is as follows (optional components are shown in square brackets ([ and ]):  \\n  \\n *major*.*minor*[.*build*[.*revision*]]  \\n  \\n The components are used by convention as follows:  \\n  \\n-   *Major*: Assemblies with the same name but different major versions are not interchangeable. A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.  \\n  \\n-   *Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility. This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.  \\n  \\n-   *Build*: A difference in build number represents a recompilation of the same source. Different build numbers might be used when the processor, platform, or compiler changes.  \\n  \\n-   *Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable. A higher revision number might be used in a build that fixes a security hole in a previously released assembly.  \\n  \\n Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.  \\n  \\n> [!IMPORTANT]\\n>  The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).  \\n  \\n Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.  Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.  \\n  \\n## Assigning Version Information to Assemblies  \\n Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly. Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.  \\n  \\n## Retrieving Version Information  \\n <xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly. The following examples illustrate some of the most common scenarios:  \\n  \\n-   Retrieving the operating system version. The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=fullName> property to retrieve the version number of the operating system.  \\n  \\n     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]\\n     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  \\n  \\n-   Retrieving the version of the common language runtime. The following example uses the <xref:System.Environment.Version%2A?displayProperty=fullName> property to retrieve version information about the common language runtime.  \\n  \\n     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]\\n     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  \\n  \\n-   Retrieving the current application's assembly version. The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.  \\n  \\n     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]\\n     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  \\n  \\n-   Retrieving the current assembly's assembly version. The following example uses the <xref:System.Type.Assembly%2A?displayProperty=fullName> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.  \\n  \\n     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]\\n     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  \\n  \\n-   Retrieving the version of a specific assembly. The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information. Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.  \\n  \\n     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]\\n     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  \\n  \\n-   Retrieving the Publish Version of a ClickOnce application. The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName> property to display an application's Publish Version. Note that its successful execution requires the example's application identity to be set. This is handled automatically by the Visual Studio Publish Wizard.  \\n  \\n     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]\\n     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  \\n  \\n    > [!IMPORTANT]\\n    >  The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.  \\n  \\n## Comparing Version Objects  \\n You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object. The following example indicates that Version 2.1 is later than Version 2.0.  \\n  \\n [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]\\n [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  \\n  \\n For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object. If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero. The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.  \\n  \\n [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]\\n [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]\"\n  example:\n  - \"The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly. At compile time, this version information is stored with the assembly's metadata. At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=fullName> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> method.  \\n  \\n [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]\\n [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Version : ICloneable, IComparable, IComparable<Version>, IEquatable<Version>\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.IComparable\n  - System.IComparable{System.Version}\n  - System.IEquatable{System.Version}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.#ctor\n  commentId: M:System.Version.#ctor\n  id: '#ctor'\n  parent: System.Version\n  langs:\n  - csharp\n  name: Version()\n  nameWithType: Version.Version()\n  fullName: Version.Version()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Version\"></xref> class.\n  remarks: \"This constructor creates a <xref:System.Version> object with the following property values.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Version.Major%2A>|0|  \\n|<xref:System.Version.Minor%2A>|0|  \\n|<xref:System.Version.Build%2A>|undefined (-1)|  \\n|<xref:System.Version.Revision%2A>|undefined (-1)|\"\n  syntax:\n    content: public Version ();\n    parameters: []\n  overload: System.Version.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.#ctor(System.String)\n  commentId: M:System.Version.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Version\n  langs:\n  - csharp\n  name: Version(String)\n  nameWithType: Version.Version(String)\n  fullName: Version.Version(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified string.\n  remarks: \"The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods. There must be at least two components, and at most four. The first two components are assumed to be major and minor. The value of unspecified components is undefined.  \\n  \\n The format of the version number is as follows. Optional components are shown in square brackets ('[' and ']'):  \\n  \\n major.minor[.build[.revision]]  \\n  \\n All defined components must be integers greater than or equal to 0. For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be \\\"6.2.1.3\\\".\"\n  syntax:\n    content: public Version (string version);\n    parameters:\n    - id: version\n      type: System.String\n      description: A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').\n  overload: System.Version.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>version</code> has fewer than two components or more than four components.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>version</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: A major, minor, build, or revision component is less than zero.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: At least one component of <code>version</code> does not parse to an integer.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: At least one component of <code>version</code> represents a number greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Version.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Version\n  langs:\n  - csharp\n  name: Version(Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32)\n  fullName: Version.Version(Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major and minor values.\n  remarks: \"This constructor creates a <xref:System.Version> object with the following property values.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Version.Major%2A>|`major`|  \\n|<xref:System.Version.Minor%2A>|`minor`|  \\n|<xref:System.Version.Build%2A>|undefined (-1)|  \\n|<xref:System.Version.Revision%2A>|undefined (-1)|\"\n  syntax:\n    content: public Version (int major, int minor);\n    parameters:\n    - id: major\n      type: System.Int32\n      description: The major version number.\n    - id: minor\n      type: System.Int32\n      description: The minor version number.\n  overload: System.Version.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>major</code> or <code>minor</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32)'\n  parent: System.Version\n  langs:\n  - csharp\n  name: Version(Int32, Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32, Int32)\n  fullName: Version.Version(Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Version\"></xref> class using the specified major, minor, and build values.\n  remarks: \"This constructor creates a <xref:System.Version> object with the following property values.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Version.Major%2A>|`major`|  \\n|<xref:System.Version.Minor%2A>|`minor`|  \\n|<xref:System.Version.Build%2A>|`build`|  \\n|<xref:System.Version.Revision%2A>|undefined (-1)|\"\n  syntax:\n    content: public Version (int major, int minor, int build);\n    parameters:\n    - id: major\n      type: System.Int32\n      description: The major version number.\n    - id: minor\n      type: System.Int32\n      description: The minor version number.\n    - id: build\n      type: System.Int32\n      description: The build number.\n  overload: System.Version.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>major</code>, <code>minor</code>, or <code>build</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Version\n  langs:\n  - csharp\n  name: Version(Int32, Int32, Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32, Int32, Int32)\n  fullName: Version.Version(Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Version\"></xref> class with the specified major, minor, build, and revision numbers.\n  remarks: \"This constructor creates a <xref:System.Version> object with the following property values.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Version.Major%2A>|`major`|  \\n|<xref:System.Version.Minor%2A>|`minor`|  \\n|<xref:System.Version.Build%2A>|`build`|  \\n|<xref:System.Version.Revision%2A>|`revision`|\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public Version (int major, int minor, int build, int revision);\n    parameters:\n    - id: major\n      type: System.Int32\n      description: The major version number.\n    - id: minor\n      type: System.Int32\n      description: The minor version number.\n    - id: build\n      type: System.Int32\n      description: The build number.\n    - id: revision\n      type: System.Int32\n      description: The revision number.\n  overload: System.Version.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>major</code>, <code>minor</code>, <code>build</code>, or <code>revision</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Build\n  commentId: P:System.Version.Build\n  id: Build\n  parent: System.Version\n  langs:\n  - csharp\n  name: Build\n  nameWithType: Version.Build\n  fullName: Version.Build\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the build component of the version number for the current <xref href=\"System.Version\"></xref> object.\n  remarks: For example, if the version number is 6.2.1.3, the build number is 1. If the version number is 6.2, the build number is undefined.\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public int Build { get; }\n    return:\n      type: System.Int32\n      description: The build number, or -1 if the build number is undefined.\n  overload: System.Version.Build*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Clone\n  commentId: M:System.Version.Clone\n  id: Clone\n  parent: System.Version\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Version.Clone()\n  fullName: Version.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a new <xref href=\"System.Version\"></xref> object whose value is the same as the current <xref href=\"System.Version\"></xref> object.\n  remarks: If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Object\"></xref> whose values are a copy of the current <xref href=\"System.Version\"></xref> object.\n  overload: System.Version.Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.CompareTo(System.Object)\n  commentId: M:System.Version.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Version\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Version.CompareTo(Object)\n  fullName: Version.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.Version\"></xref> object to a specified object and returns an indication of their relative values.\n  remarks: \"The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component.  \\n  \\n For example:  \\n  \\n-   Version 1.1 is older than version 1.1.0  \\n  \\n-   Version 1.1 is older than version 1.1.1  \\n  \\n-   Version 1.1 is older than version 1.1.2.3  \\n  \\n-   Version 1.1.2 is older than version 1.1.2.4  \\n  \\n-   Version 1.2.5 is newer than version 1.2.3.4\"\n  syntax:\n    content: public int CompareTo (object version);\n    parameters:\n    - id: version\n      type: System.Object\n      description: An object to compare, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative values of the two objects, as shown in the following table.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is a version before <code>version</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is the same version as <code>version</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is a version subsequent to <code>version</code>.  \\n  \\n -or-  \\n  \\n <code>version</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Version.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>version</code> is not of type <xref href=\"System.Version\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.CompareTo(System.Version)\n  commentId: M:System.Version.CompareTo(System.Version)\n  id: CompareTo(System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: CompareTo(Version)\n  nameWithType: Version.CompareTo(Version)\n  fullName: Version.CompareTo(Version)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.Version\"></xref> object to a specified <xref href=\"System.Version\"></xref> object and returns an indication of their relative values.\n  remarks: \"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.  \\n  \\n The components of `Version` in decreasing order of importance are: major, minor, build, and revision. An unknown component is assumed to be older than any known component. For example:  \\n  \\n-   Version 1.1 is older than version 1.1.0.  \\n  \\n-   Version 1.1 is older than version 1.1.1.  \\n  \\n-   Version 1.1 is older than version 1.1.2.3.  \\n  \\n-   Version 1.1.2 is older than version 1.1.2.4.  \\n  \\n-   Version 1.2.5 is newer than version 1.2.3.4.\"\n  example:\n  - \"The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.  \\n  \\n [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]\\n [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]\\n [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]\"\n  syntax:\n    content: public int CompareTo (Version value);\n    parameters:\n    - id: value\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative values of the two objects, as shown in the following table.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is a version before <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is the same version as <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> The current <xref href=\\\"System.Version\\\"></xref> object is a version subsequent to <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Version.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Equals(System.Object)\n  commentId: M:System.Version.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Version\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Version.Equals(Object)\n  fullName: Version.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with the current <xref href=\"System.Version\"></xref> object, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Version\"></xref> object and <code>obj</code> are both <xref href=\"System.Version\"></xref> objects, and every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of <code>obj</code>; otherwise, `false`.'\n  overload: System.Version.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Equals(System.Version)\n  commentId: M:System.Version.Equals(System.Version)\n  id: Equals(System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: Equals(Version)\n  nameWithType: Version.Equals(Version)\n  fullName: Version.Equals(Version)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether the current <xref href=\"System.Version\"></xref> object and a specified <xref href=\"System.Version\"></xref> object represent the same value.\n  remarks: This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.\n  syntax:\n    content: public bool Equals (Version obj);\n    parameters:\n    - id: obj\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> object to compare to the current <xref href=\"System.Version\"></xref> object, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if every component of the current <xref href=\"System.Version\"></xref> object matches the corresponding component of the <code>obj</code> parameter; otherwise, `false`.'\n  overload: System.Version.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.GetHashCode\n  commentId: M:System.Version.GetHashCode\n  id: GetHashCode\n  parent: System.Version\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Version.GetHashCode()\n  fullName: Version.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a hash code for the current <xref href=\"System.Version\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Version.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Major\n  commentId: P:System.Version.Major\n  id: Major\n  parent: System.Version\n  langs:\n  - csharp\n  name: Major\n  nameWithType: Version.Major\n  fullName: Version.Major\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the major component of the version number for the current <xref href=\"System.Version\"></xref> object.\n  remarks: For example, if the version number is 6.2, the major version is 6.\n  syntax:\n    content: public int Major { get; }\n    return:\n      type: System.Int32\n      description: The major version number.\n  overload: System.Version.Major*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.MajorRevision\n  commentId: P:System.Version.MajorRevision\n  id: MajorRevision\n  parent: System.Version\n  langs:\n  - csharp\n  name: MajorRevision\n  nameWithType: Version.MajorRevision\n  fullName: Version.MajorRevision\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the high 16 bits of the revision number.\n  remarks: \"Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.  \\n  \\n Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public short MajorRevision { get; }\n    return:\n      type: System.Int16\n      description: A 16-bit signed integer.\n  overload: System.Version.MajorRevision*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Minor\n  commentId: P:System.Version.Minor\n  id: Minor\n  parent: System.Version\n  langs:\n  - csharp\n  name: Minor\n  nameWithType: Version.Minor\n  fullName: Version.Minor\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the minor component of the version number for the current <xref href=\"System.Version\"></xref> object.\n  remarks: For example, if the version number is 6.2, the minor version is 2.\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public int Minor { get; }\n    return:\n      type: System.Int32\n      description: The minor version number.\n  overload: System.Version.Minor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.MinorRevision\n  commentId: P:System.Version.MinorRevision\n  id: MinorRevision\n  parent: System.Version\n  langs:\n  - csharp\n  name: MinorRevision\n  nameWithType: Version.MinorRevision\n  fullName: Version.MinorRevision\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the low 16 bits of the revision number.\n  remarks: Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution. The temporary version does not warrant a new revision number, but it does need to be identified as a different version. In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number. Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public short MinorRevision { get; }\n    return:\n      type: System.Int16\n      description: A 16-bit signed integer.\n  overload: System.Version.MinorRevision*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_Equality(System.Version,System.Version)\n  commentId: M:System.Version.op_Equality(System.Version,System.Version)\n  id: op_Equality(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_Equality(Version, Version)\n  nameWithType: Version.op_Equality(Version, Version)\n  fullName: Version.op_Equality(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified <xref href=\"System.Version\"></xref> objects are equal.\n  remarks: The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> equals <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_GreaterThan(System.Version,System.Version)\n  commentId: M:System.Version.op_GreaterThan(System.Version,System.Version)\n  id: op_GreaterThan(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_GreaterThan(Version, Version)\n  nameWithType: Version.op_GreaterThan(Version, Version)\n  fullName: Version.op_GreaterThan(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than the second specified <xref href=\"System.Version\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_GreaterThan (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> is greater than <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_GreaterThan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_GreaterThanOrEqual(System.Version,System.Version)\n  commentId: M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)\n  id: op_GreaterThanOrEqual(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(Version, Version)\n  nameWithType: Version.op_GreaterThanOrEqual(Version, Version)\n  fullName: Version.op_GreaterThanOrEqual(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the first specified <xref href=\"System.Version\"></xref> object is greater than or equal to the second specified <xref href=\"System.Version\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> is greater than or equal to <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_GreaterThanOrEqual*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_Inequality(System.Version,System.Version)\n  commentId: M:System.Version.op_Inequality(System.Version,System.Version)\n  id: op_Inequality(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_Inequality(Version, Version)\n  nameWithType: Version.op_Inequality(Version, Version)\n  fullName: Version.op_Inequality(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified <xref href=\"System.Version\"></xref> objects are not equal.\n  remarks: The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> does not equal <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_LessThan(System.Version,System.Version)\n  commentId: M:System.Version.op_LessThan(System.Version,System.Version)\n  id: op_LessThan(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_LessThan(Version, Version)\n  nameWithType: Version.op_LessThan(Version, Version)\n  fullName: Version.op_LessThan(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than the second specified <xref href=\"System.Version\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_LessThan (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> is less than <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_LessThan*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>v1</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.op_LessThanOrEqual(System.Version,System.Version)\n  commentId: M:System.Version.op_LessThanOrEqual(System.Version,System.Version)\n  id: op_LessThanOrEqual(System.Version,System.Version)\n  parent: System.Version\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(Version, Version)\n  nameWithType: Version.op_LessThanOrEqual(Version, Version)\n  fullName: Version.op_LessThanOrEqual(Version, Version)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the first specified <xref href=\"System.Version\"></xref> object is less than or equal to the second <xref href=\"System.Version\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_LessThanOrEqual (Version v1, Version v2);\n    parameters:\n    - id: v1\n      type: System.Version\n      description: The first <xref href=\"System.Version\"></xref> object.\n    - id: v2\n      type: System.Version\n      description: The second <xref href=\"System.Version\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>v1</code> is less than or equal to <code>v2</code>; otherwise, `false`.'\n  overload: System.Version.op_LessThanOrEqual*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>v1</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Parse(System.String)\n  commentId: M:System.Version.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Version\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Version.Parse(String)\n  fullName: Version.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object.\n  remarks: \"The `input` parameter must have the following format:  \\n  \\n```  \\n  \\nmajor.minor[.build[.revision]]  \\n```  \\n  \\n where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in the specified order, and must be separated by periods.  \\n  \\n> [!IMPORTANT]\\n>  Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input. Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.  \\n  \\n The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.\"\n  example:\n  - \"The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.  \\n  \\n [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]\\n [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]\"\n  syntax:\n    content: public static Version Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a version number to convert.\n    return:\n      type: System.Version\n      description: An object that is equivalent to the version number specified in the <code>input</code> parameter.\n  overload: System.Version.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>input</code> has fewer than two or more than four version components.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: At least one component in <code>input</code> is less than zero.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: At least one component in <code>input</code> is not an integer.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: At least one component in <code>input</code> represents a number that is greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.Revision\n  commentId: P:System.Version.Revision\n  id: Revision\n  parent: System.Version\n  langs:\n  - csharp\n  name: Revision\n  nameWithType: Version.Revision\n  fullName: Version.Revision\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the revision component of the version number for the current <xref href=\"System.Version\"></xref> object.\n  remarks: For example, if the version number is 6.2.1.3, the revision number is 3. If the version number is 6.2, the revision number is undefined.\n  example:\n  - \"The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.  \\n  \\n [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]\\n [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]\\n [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]\"\n  syntax:\n    content: public int Revision { get; }\n    return:\n      type: System.Int32\n      description: The revision number, or -1 if the revision number is undefined.\n  overload: System.Version.Revision*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.ToString\n  commentId: M:System.Version.ToString\n  id: ToString\n  parent: System.Version\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Version.ToString()\n  fullName: Version.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: \"The <xref href=\\\"System.String\\\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\\\"System.Version\\\"></xref> object, as depicted in the following format. Each component is separated by a period character ('.'). Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:  \\n  \\n major.minor[.build[.revision]]  \\n  \\n For example, if you create a <xref href=\\\"System.Version\\\"></xref> object using the constructor <code>Version(1,1)</code>, the returned string is \\\"1.1\\\". If you create a <xref href=\\\"System.Version\\\"></xref> object using the constructor <code>Version(1,3,4,2)</code>, the returned string is \\\"1.3.4.2\\\".\"\n  overload: System.Version.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.ToString(System.Int32)\n  commentId: M:System.Version.ToString(System.Int32)\n  id: ToString(System.Int32)\n  parent: System.Version\n  langs:\n  - csharp\n  name: ToString(Int32)\n  nameWithType: Version.ToString(Int32)\n  fullName: Version.ToString(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.Version\"></xref> object to its equivalent <xref href=\"System.String\"></xref> representation. A specified count indicates the number of components to return.\n  syntax:\n    content: public string ToString (int fieldCount);\n    parameters:\n    - id: fieldCount\n      type: System.Int32\n      description: The number of components to return. The <code>fieldCount</code> ranges from 0 to 4.\n    return:\n      type: System.String\n      description: \"The <xref href=\\\"System.String\\\"></xref> representation of the values of the major, minor, build, and revision components of the current <xref href=\\\"System.Version\\\"></xref> object, each separated by a period character ('.'). The <code>fieldCount</code> parameter determines how many components are returned.  \\n  \\n <table><thead><tr><th> fieldCount  \\n  \\n </th><th> Return Value  \\n  \\n </th></tr></thead><tbody><tr><td> 0  \\n  \\n </td><td> An empty string (\\\"\\\").  \\n  \\n </td></tr><tr><td> 1  \\n  \\n </td><td> major  \\n  \\n </td></tr><tr><td> 2  \\n  \\n </td><td> major.minor  \\n  \\n </td></tr><tr><td> 3  \\n  \\n </td><td> major.minor.build  \\n  \\n </td></tr><tr><td> 4  \\n  \\n </td><td> major.minor.build.revision  \\n  \\n </td></tr></tbody></table>  \\n  \\n For example, if you create <xref href=\\\"System.Version\\\"></xref> object using the constructor <code>Version(1,3,5)</code>, <code>ToString(2)</code> returns \\\"1.3\\\" and <code>ToString(4)</code> throws an exception.\"\n  overload: System.Version.ToString*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>fieldCount</code> is less than 0, or more than 4.  \\n  \\n -or-  \\n  \\n <code>fieldCount</code> is more than the number of components defined in the current <xref href=\\\"System.Version\\\"></xref> object.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.TryParse(System.String,System.Version@)\n  commentId: M:System.Version.TryParse(System.String,System.Version@)\n  id: TryParse(System.String,System.Version@)\n  parent: System.Version\n  langs:\n  - csharp\n  name: TryParse(String, Version)\n  nameWithType: Version.TryParse(String, Version)\n  fullName: Version.TryParse(String, Version)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Tries to convert the string representation of a version number to an equivalent <xref href=\"System.Version\"></xref> object, and returns a value that indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails. Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=fullName>.  \\n  \\n For the parse operation to succeed, the `input` parameter must be in the following format:  \\n  \\n```  \\n  \\nmajor.minor[.build[.revision]]  \\n```  \\n  \\n where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number. Optional components are shown in square brackets ([ and ]). The components must appear in order, and must be separated by periods.\"\n  example:\n  - \"The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.  \\n  \\n [!code-csharp[System.Version.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs#1)]\\n [!code-vb[System.Version.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string input, out Version result);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that contains a version number to convert.\n    - id: result\n      type: System.Version\n      description: When this method returns, contains the <xref href=\"System.Version\"></xref> equivalent of the number that is contained in <code>input</code>, if the conversion succeeded, or a <xref href=\"System.Version\"></xref> object whose major and minor version numbers are 0 if the conversion failed. If <code>input</code> is `null` or <xref href=\"System.String.Empty\"></xref>, <code>result</code> is `null` when the method returns.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>input</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.Version.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Version.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Version.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Version\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Version.IComparable.CompareTo(Object)\n  fullName: Version.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object version);\n    parameters:\n    - id: version\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Version.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.Version.#ctor\n  parent: System.Version\n  isExternal: false\n  name: Version()\n  nameWithType: Version.Version()\n  fullName: Version.Version()\n- uid: System.Version.#ctor(System.String)\n  parent: System.Version\n  isExternal: false\n  name: Version(String)\n  nameWithType: Version.Version(String)\n  fullName: Version.Version(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Version.#ctor(System.Int32,System.Int32)\n  parent: System.Version\n  isExternal: false\n  name: Version(Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32)\n  fullName: Version.Version(Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32)\n  parent: System.Version\n  isExternal: false\n  name: Version(Int32, Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32, Int32)\n  fullName: Version.Version(Int32, Int32, Int32)\n- uid: System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Version\n  isExternal: false\n  name: Version(Int32, Int32, Int32, Int32)\n  nameWithType: Version.Version(Int32, Int32, Int32, Int32)\n  fullName: Version.Version(Int32, Int32, Int32, Int32)\n- uid: System.Version.Build\n  parent: System.Version\n  isExternal: false\n  name: Build\n  nameWithType: Version.Build\n  fullName: Version.Build\n- uid: System.Version.Clone\n  parent: System.Version\n  isExternal: false\n  name: Clone()\n  nameWithType: Version.Clone()\n  fullName: Version.Clone()\n- uid: System.Version.CompareTo(System.Object)\n  parent: System.Version\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Version.CompareTo(Object)\n  fullName: Version.CompareTo(Object)\n- uid: System.Version.CompareTo(System.Version)\n  parent: System.Version\n  isExternal: false\n  name: CompareTo(Version)\n  nameWithType: Version.CompareTo(Version)\n  fullName: Version.CompareTo(Version)\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Version.Equals(System.Object)\n  parent: System.Version\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Version.Equals(Object)\n  fullName: Version.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Version.Equals(System.Version)\n  parent: System.Version\n  isExternal: false\n  name: Equals(Version)\n  nameWithType: Version.Equals(Version)\n  fullName: Version.Equals(Version)\n- uid: System.Version.GetHashCode\n  parent: System.Version\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Version.GetHashCode()\n  fullName: Version.GetHashCode()\n- uid: System.Version.Major\n  parent: System.Version\n  isExternal: false\n  name: Major\n  nameWithType: Version.Major\n  fullName: Version.Major\n- uid: System.Version.MajorRevision\n  parent: System.Version\n  isExternal: false\n  name: MajorRevision\n  nameWithType: Version.MajorRevision\n  fullName: Version.MajorRevision\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Version.Minor\n  parent: System.Version\n  isExternal: false\n  name: Minor\n  nameWithType: Version.Minor\n  fullName: Version.Minor\n- uid: System.Version.MinorRevision\n  parent: System.Version\n  isExternal: false\n  name: MinorRevision\n  nameWithType: Version.MinorRevision\n  fullName: Version.MinorRevision\n- uid: System.Version.op_Equality(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_Equality(Version, Version)\n  nameWithType: Version.op_Equality(Version, Version)\n  fullName: Version.op_Equality(Version, Version)\n- uid: System.Version.op_GreaterThan(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_GreaterThan(Version, Version)\n  nameWithType: Version.op_GreaterThan(Version, Version)\n  fullName: Version.op_GreaterThan(Version, Version)\n- uid: System.Version.op_GreaterThanOrEqual(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_GreaterThanOrEqual(Version, Version)\n  nameWithType: Version.op_GreaterThanOrEqual(Version, Version)\n  fullName: Version.op_GreaterThanOrEqual(Version, Version)\n- uid: System.Version.op_Inequality(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_Inequality(Version, Version)\n  nameWithType: Version.op_Inequality(Version, Version)\n  fullName: Version.op_Inequality(Version, Version)\n- uid: System.Version.op_LessThan(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_LessThan(Version, Version)\n  nameWithType: Version.op_LessThan(Version, Version)\n  fullName: Version.op_LessThan(Version, Version)\n- uid: System.Version.op_LessThanOrEqual(System.Version,System.Version)\n  parent: System.Version\n  isExternal: false\n  name: op_LessThanOrEqual(Version, Version)\n  nameWithType: Version.op_LessThanOrEqual(Version, Version)\n  fullName: Version.op_LessThanOrEqual(Version, Version)\n- uid: System.Version.Parse(System.String)\n  parent: System.Version\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Version.Parse(String)\n  fullName: Version.Parse(String)\n- uid: System.Version.Revision\n  parent: System.Version\n  isExternal: false\n  name: Revision\n  nameWithType: Version.Revision\n  fullName: Version.Revision\n- uid: System.Version.ToString\n  parent: System.Version\n  isExternal: false\n  name: ToString()\n  nameWithType: Version.ToString()\n  fullName: Version.ToString()\n- uid: System.Version.ToString(System.Int32)\n  parent: System.Version\n  isExternal: false\n  name: ToString(Int32)\n  nameWithType: Version.ToString(Int32)\n  fullName: Version.ToString(Int32)\n- uid: System.Version.TryParse(System.String,System.Version@)\n  parent: System.Version\n  isExternal: false\n  name: TryParse(String, Version)\n  nameWithType: Version.TryParse(String, Version)\n  fullName: Version.TryParse(String, Version)\n- uid: System.Version.System#IComparable#CompareTo(System.Object)\n  parent: System.Version\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Version.IComparable.CompareTo(Object)\n  fullName: Version.IComparable.CompareTo(Object)\n- uid: System.Version.#ctor*\n  parent: System.Version\n  isExternal: false\n  name: Version\n  nameWithType: Version.Version\n  fullName: Version.Version\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Build*\n  parent: System.Version\n  isExternal: false\n  name: Build\n  nameWithType: Version.Build\n  fullName: Version.Build\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Clone*\n  parent: System.Version\n  isExternal: false\n  name: Clone\n  nameWithType: Version.Clone\n  fullName: Version.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.CompareTo*\n  parent: System.Version\n  isExternal: false\n  name: CompareTo\n  nameWithType: Version.CompareTo\n  fullName: Version.CompareTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Equals*\n  parent: System.Version\n  isExternal: false\n  name: Equals\n  nameWithType: Version.Equals\n  fullName: Version.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.GetHashCode*\n  parent: System.Version\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Version.GetHashCode\n  fullName: Version.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Major*\n  parent: System.Version\n  isExternal: false\n  name: Major\n  nameWithType: Version.Major\n  fullName: Version.Major\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.MajorRevision*\n  parent: System.Version\n  isExternal: false\n  name: MajorRevision\n  nameWithType: Version.MajorRevision\n  fullName: Version.MajorRevision\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Minor*\n  parent: System.Version\n  isExternal: false\n  name: Minor\n  nameWithType: Version.Minor\n  fullName: Version.Minor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.MinorRevision*\n  parent: System.Version\n  isExternal: false\n  name: MinorRevision\n  nameWithType: Version.MinorRevision\n  fullName: Version.MinorRevision\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_Equality*\n  parent: System.Version\n  isExternal: false\n  name: op_Equality\n  nameWithType: Version.op_Equality\n  fullName: Version.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_GreaterThan*\n  parent: System.Version\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: Version.op_GreaterThan\n  fullName: Version.op_GreaterThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_GreaterThanOrEqual*\n  parent: System.Version\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: Version.op_GreaterThanOrEqual\n  fullName: Version.op_GreaterThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_Inequality*\n  parent: System.Version\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Version.op_Inequality\n  fullName: Version.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_LessThan*\n  parent: System.Version\n  isExternal: false\n  name: op_LessThan\n  nameWithType: Version.op_LessThan\n  fullName: Version.op_LessThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.op_LessThanOrEqual*\n  parent: System.Version\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: Version.op_LessThanOrEqual\n  fullName: Version.op_LessThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Parse*\n  parent: System.Version\n  isExternal: false\n  name: Parse\n  nameWithType: Version.Parse\n  fullName: Version.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.Revision*\n  parent: System.Version\n  isExternal: false\n  name: Revision\n  nameWithType: Version.Revision\n  fullName: Version.Revision\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.ToString*\n  parent: System.Version\n  isExternal: false\n  name: ToString\n  nameWithType: Version.ToString\n  fullName: Version.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.TryParse*\n  parent: System.Version\n  isExternal: false\n  name: TryParse\n  nameWithType: Version.TryParse\n  fullName: Version.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Version.System#IComparable#CompareTo*\n  parent: System.Version\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Version.System.IComparable.CompareTo\n  fullName: Version.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Version.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.Version}\n  parent: System\n  isExternal: false\n  name: IComparable<Version>\n  nameWithType: IComparable<Version>\n  fullName: System.IComparable<System.Version>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Version\n    name: Version\n    nameWithType: Version\n    fullName: System.Version\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Version}\n  parent: System\n  isExternal: false\n  name: IEquatable<Version>\n  nameWithType: IEquatable<Version>\n  fullName: System.IEquatable<System.Version>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Version\n    name: Version\n    nameWithType: Version\n    fullName: System.Version\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}