{"nodes":[{"content":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> events.","nodes":[{"pos":[0,288],"content":"Provides a <ph id=\"ph1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;&lt;/xref&gt;</ph> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <ph id=\"ph2\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> events.","source":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> events."}],"pos":[1120,1409],"yaml":true},{"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.  \n  \n [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets.","nodes":[{"pos":[0,237],"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.","nodes":[{"content":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.","pos":[0,237],"nodes":[{"content":"In order to be listeners in this pattern, your listener objects must implement <ph id=\"ph1\">&lt;xref:System.Windows.IWeakEventListener&gt;</ph>.","pos":[0,120],"source":"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>."},{"content":"You do not need to implement <ph id=\"ph1\">&lt;xref:System.Windows.IWeakEventListener&gt;</ph> on the class that is the source of the events.","pos":[121,237],"source":" You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events."}]}]},{"pos":[244,818],"content":"[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding uses this <ph id=\"ph2\">&lt;xref:System.Windows.WeakEventManager&gt;</ph> so that internal classes that update bindings can attach listeners for a <ph id=\"ph3\">&lt;xref:System.Windows.UIElement.LostFocus?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName&gt;</ph> event on an object that is the target of a binding.","pos":[0,400],"source":"[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding."},{"content":"This supports notification for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph> mode of data binding, without creating strong references to data binding targets.","pos":[401,574],"source":" This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets."}]}],"pos":[1420,2243],"yaml":true,"extradata":"MT"},{"content":"Adds the specified event handler, which is called when specified source raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,209],"content":"Adds the specified event handler, which is called when specified source raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds the specified event handler, which is called when specified source raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[5393,5603],"yaml":true},{"content":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.","nodes":[{"pos":[0,361],"content":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.","nodes":[{"content":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.","pos":[0,361],"nodes":[{"content":"Use this method to specify the event handler you want to use to subscribe to the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.LostFocus?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName&gt;</ph> event..","pos":[0,230],"source":"Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.."},{"content":"When you use this method, your listener object does not need to implement the <ph id=\"ph1\">&lt;xref:System.Windows.IWeakEventListener&gt;</ph> interface.","pos":[232,361],"source":"  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface."}]}]}],"pos":[5614,5976],"yaml":true,"extradata":"MT"},{"content":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,164],"content":"The source object that the raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[6221,6386],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,156],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[6487,6644],"yaml":true},{"content":"<code>handler</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[6821,6853],"yaml":true},{"content":"Adds the provided listener to the list of listeners on the provided source.","nodes":[{"pos":[0,75],"content":"Adds the provided listener to the list of listeners on the provided source.","nodes":[{"content":"Adds the provided listener to the list of listeners on the provided source.","pos":[0,75]}]}],"pos":[8092,8168],"yaml":true},{"content":"The object with the event.","nodes":[{"pos":[0,26],"content":"The object with the event.","nodes":[{"content":"The object with the event.","pos":[0,26]}]}],"pos":[8404,8431],"yaml":true},{"content":"The object to add as a listener.","nodes":[{"pos":[0,32],"content":"The object to add as a listener.","nodes":[{"content":"The object to add as a listener.","pos":[0,32]}]}],"pos":[8515,8548],"yaml":true},{"content":"Returns a new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,175],"content":"Returns a new object to contain listeners to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"Returns a new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[9581,9757],"yaml":true},{"content":"A new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,167],"content":"A new object to contain listeners to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"A new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[9971,10139],"yaml":true},{"content":"Removes the specified event handler from the specified source.","nodes":[{"pos":[0,62],"content":"Removes the specified event handler from the specified source.","nodes":[{"content":"Removes the specified event handler from the specified source.","pos":[0,62]}]}],"pos":[11560,11623],"yaml":true},{"content":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,164],"content":"The source object that the raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[11871,12036],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,156],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event."}],"pos":[12137,12294],"yaml":true},{"content":"<code>handler</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[12474,12506],"yaml":true},{"content":"Removes the specified listener from the list of listeners on the provided source.","nodes":[{"pos":[0,81],"content":"Removes the specified listener from the list of listeners on the provided source.","nodes":[{"content":"Removes the specified listener from the list of listeners on the provided source.","pos":[0,81]}]}],"pos":[13763,13845],"yaml":true},{"content":"The object to remove the listener from.","nodes":[{"pos":[0,39],"content":"The object to remove the listener from.","nodes":[{"content":"The object to remove the listener from.","pos":[0,39]}]}],"pos":[14084,14124],"yaml":true},{"content":"The listener to remove.","nodes":[{"pos":[0,23],"content":"The listener to remove.","nodes":[{"content":"The listener to remove.","pos":[0,23]}]}],"pos":[14208,14232],"yaml":true},{"content":"Begins listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source, attaching an internal class handler to that source.","nodes":[{"pos":[0,159],"content":"Begins listening for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event on the given source, attaching an internal class handler to that source.","source":"Begins listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source, attaching an internal class handler to that source."}],"pos":[15347,15507],"yaml":true},{"content":"The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.","nodes":[{"pos":[0,203],"content":"The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.","nodes":[{"content":"The provided source is checked for type to see if it is <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.ContentElement&gt;</ph> , and then adds the class handler for the appropriate event to that source.","pos":[0,203],"source":"The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source."}]}],"pos":[15518,15722],"yaml":true,"extradata":"MT"},{"content":"The object on which to start listening for the pertinent <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event.","nodes":[{"pos":[0,119],"content":"The object on which to start listening for the pertinent <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"The object on which to start listening for the pertinent <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event."}],"pos":[15879,15999],"yaml":true},{"content":"Stops listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source.","nodes":[{"pos":[0,106],"content":"Stops listening for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph> event on the given source.","source":"Stops listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source."}],"pos":[17108,17215],"yaml":true},{"content":"The source object on which to stop listening for <xref href=\"System.Windows.UIElement.LostFocus\"></xref>.","nodes":[{"pos":[0,105],"content":"The source object on which to stop listening for <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.LostFocus\"&gt;&lt;/xref&gt;</ph>.","source":"The source object on which to stop listening for <xref href=\"System.Windows.UIElement.LostFocus\"></xref>."}],"pos":[17371,17477],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.LostFocusEventManager\n  commentId: T:System.Windows.LostFocusEventManager\n  id: LostFocusEventManager\n  children:\n  - System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  - System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  - System.Windows.LostFocusEventManager.NewListenerList\n  - System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  - System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  - System.Windows.LostFocusEventManager.StartListening(System.Object)\n  - System.Windows.LostFocusEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: LostFocusEventManager\n  nameWithType: LostFocusEventManager\n  fullName: System.Windows.LostFocusEventManager\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the \"weak event listener\" pattern to attach listeners for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> events.\n  remarks: \"In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.  \\n  \\n [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets.\"\n  syntax:\n    content: 'public class LostFocusEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  commentId: M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  id: AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  fullName: LostFocusEventManager.AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the specified event handler, which is called when specified source raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  remarks: Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.\n  syntax:\n    content: public static void AddHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.Windows.RoutedEventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.AddHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  commentId: M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  id: AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: AddListener(DependencyObject, IWeakEventListener)\n  nameWithType: LostFocusEventManager.AddListener(DependencyObject, IWeakEventListener)\n  fullName: LostFocusEventManager.AddListener(DependencyObject, IWeakEventListener)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the provided listener to the list of listeners on the provided source.\n  syntax:\n    content: public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The object with the event.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The object to add as a listener.\n  overload: System.Windows.LostFocusEventManager.AddListener*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LostFocusEventManager.NewListenerList\n  commentId: M:System.Windows.LostFocusEventManager.NewListenerList\n  id: NewListenerList\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: LostFocusEventManager.NewListenerList()\n  fullName: LostFocusEventManager.NewListenerList()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager+ListenerList\n      description: A new object to contain listeners to the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.NewListenerList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  commentId: M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  id: RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  fullName: LostFocusEventManager.RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes the specified event handler from the specified source.\n  syntax:\n    content: public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The source object that the raises the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.Windows.RoutedEventArgs}\n      description: The delegate that handles the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> or <xref href=\"System.Windows.ContentElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.RemoveHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  commentId: M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  id: RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: RemoveListener(DependencyObject, IWeakEventListener)\n  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject, IWeakEventListener)\n  fullName: LostFocusEventManager.RemoveListener(DependencyObject, IWeakEventListener)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes the specified listener from the list of listeners on the provided source.\n  syntax:\n    content: public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: The object to remove the listener from.\n    - id: listener\n      type: System.Windows.IWeakEventListener\n      description: The listener to remove.\n  overload: System.Windows.LostFocusEventManager.RemoveListener*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)\n  commentId: M:System.Windows.LostFocusEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: LostFocusEventManager.StartListening(Object)\n  fullName: LostFocusEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Begins listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source, attaching an internal class handler to that source.\n  remarks: The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The object on which to start listening for the pertinent <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event.\n  overload: System.Windows.LostFocusEventManager.StartListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)\n  commentId: M:System.Windows.LostFocusEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: LostFocusEventManager.StopListening(Object)\n  fullName: LostFocusEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Stops listening for the <xref href=\"System.Windows.UIElement.LostFocus\"></xref> event on the given source.\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source object on which to stop listening for <xref href=\"System.Windows.UIElement.LostFocus\"></xref>.\n  overload: System.Windows.LostFocusEventManager.StopListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.WeakEventManager\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager\n  nameWithType: WeakEventManager\n  fullName: System.Windows.WeakEventManager\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  fullName: LostFocusEventManager.AddHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Windows.RoutedEventArgs\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.EventHandler{System.Windows.RoutedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<RoutedEventArgs>\n  nameWithType: EventHandler<RoutedEventArgs>\n  fullName: System.EventHandler<System.Windows.RoutedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.RoutedEventArgs\n    name: RoutedEventArgs\n    nameWithType: RoutedEventArgs\n    fullName: System.Windows.RoutedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddListener(DependencyObject, IWeakEventListener)\n  nameWithType: LostFocusEventManager.AddListener(DependencyObject, IWeakEventListener)\n  fullName: LostFocusEventManager.AddListener(DependencyObject, IWeakEventListener)\n- uid: System.Windows.IWeakEventListener\n  parent: System.Windows\n  isExternal: false\n  name: IWeakEventListener\n  nameWithType: IWeakEventListener\n  fullName: System.Windows.IWeakEventListener\n- uid: System.Windows.LostFocusEventManager.NewListenerList\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: LostFocusEventManager.NewListenerList()\n  fullName: LostFocusEventManager.NewListenerList()\n- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n  fullName: LostFocusEventManager.RemoveHandler(DependencyObject, EventHandler<RoutedEventArgs>)\n- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveListener(DependencyObject, IWeakEventListener)\n  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject, IWeakEventListener)\n  fullName: LostFocusEventManager.RemoveListener(DependencyObject, IWeakEventListener)\n- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: LostFocusEventManager.StartListening(Object)\n  fullName: LostFocusEventManager.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: LostFocusEventManager.StopListening(Object)\n  fullName: LostFocusEventManager.StopListening(Object)\n- uid: System.Windows.LostFocusEventManager.AddHandler*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddHandler\n  nameWithType: LostFocusEventManager.AddHandler\n  fullName: LostFocusEventManager.AddHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.AddListener*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: AddListener\n  nameWithType: LostFocusEventManager.AddListener\n  fullName: LostFocusEventManager.AddListener\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.NewListenerList*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: NewListenerList\n  nameWithType: LostFocusEventManager.NewListenerList\n  fullName: LostFocusEventManager.NewListenerList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.RemoveHandler*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: LostFocusEventManager.RemoveHandler\n  fullName: LostFocusEventManager.RemoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.RemoveListener*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: RemoveListener\n  nameWithType: LostFocusEventManager.RemoveListener\n  fullName: LostFocusEventManager.RemoveListener\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.StartListening*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StartListening\n  nameWithType: LostFocusEventManager.StartListening\n  fullName: LostFocusEventManager.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Windows.LostFocusEventManager.StopListening*\n  parent: System.Windows.LostFocusEventManager\n  isExternal: false\n  name: StopListening\n  nameWithType: LostFocusEventManager.StopListening\n  fullName: LostFocusEventManager.StopListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LostFocusEventManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEvent(Object, EventArgs)\n  nameWithType: WeakEventManager.DeliverEvent(Object, EventArgs)\n  fullName: WeakEventManager.DeliverEvent(Object, EventArgs)\n- uid: System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  nameWithType: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  fullName: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n- uid: System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: GetCurrentManager(Type)\n  nameWithType: WeakEventManager.GetCurrentManager(Type)\n  fullName: WeakEventManager.GetCurrentManager(Type)\n- uid: System.Windows.WeakEventManager.Item(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Item(Object)\n  nameWithType: WeakEventManager.Item(Object)\n  fullName: WeakEventManager.Item(Object)\n- uid: System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Purge(Object, Object, Boolean)\n  nameWithType: WeakEventManager.Purge(Object, Object, Boolean)\n  fullName: WeakEventManager.Purge(Object, Object, Boolean)\n- uid: System.Windows.WeakEventManager.ReadLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ReadLock\n  nameWithType: WeakEventManager.ReadLock\n  fullName: WeakEventManager.ReadLock\n- uid: System.Windows.WeakEventManager.Remove(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: WeakEventManager.Remove(Object)\n  fullName: WeakEventManager.Remove(Object)\n- uid: System.Windows.WeakEventManager.ScheduleCleanup\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ScheduleCleanup()\n  nameWithType: WeakEventManager.ScheduleCleanup()\n  fullName: WeakEventManager.ScheduleCleanup()\n- uid: System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: SetCurrentManager(Type, WeakEventManager)\n  nameWithType: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n  fullName: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n- uid: System.Windows.WeakEventManager.WriteLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: WriteLock\n  nameWithType: WeakEventManager.WriteLock\n  fullName: WeakEventManager.WriteLock\n"}