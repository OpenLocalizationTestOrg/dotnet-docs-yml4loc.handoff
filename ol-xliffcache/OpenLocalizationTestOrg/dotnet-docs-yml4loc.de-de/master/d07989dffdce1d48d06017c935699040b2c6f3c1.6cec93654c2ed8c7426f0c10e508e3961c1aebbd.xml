{"nodes":[{"content":"Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","nodes":[{"pos":[0,115],"content":"Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","nodes":[{"content":"Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","pos":[0,115]}]}],"pos":[555,671],"yaml":true},{"content":"Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.  \n  \n [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.","nodes":[{"pos":[0,481],"content":"Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.","nodes":[{"content":"Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.","pos":[0,481],"nodes":[{"content":"Controls support <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> if the same behavior is not exposed through another control pattern.","pos":[0,132],"source":"Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method on a control performs the same action as the <ph id=\"ph2\">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> method, the control will not support <ph id=\"ph4\">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>.","pos":[133,481],"source":" For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>."}]}]},{"pos":[488,782],"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <ph id=\"ph2\">&lt;xref:System.Windows.Automation.TogglePattern&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Automation.SelectionItemPattern&gt;</ph>.","source":"[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>."}],"pos":[682,1469],"yaml":true,"extradata":"MT"},{"content":"Sends a request to activate a control and initiate its single, unambiguous action.","nodes":[{"pos":[0,82],"content":"Sends a request to activate a control and initiate its single, unambiguous action.","nodes":[{"content":"Sends a request to activate a control and initiate its single, unambiguous action.","pos":[0,82]}]}],"pos":[2871,2954],"yaml":true},{"content":"Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking. However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation. In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.","nodes":[{"pos":[0,456],"content":"Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking. However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation. In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.","nodes":[{"content":"Calls to <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> should return immediately without blocking.","pos":[0,109],"source":"Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking."},{"content":"However, this behavior is entirely dependent on the <ph id=\"ph1\">[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]</ph> provider implementation.","pos":[110,262],"source":" However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation."},{"content":"In scenarios where calling <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.","pos":[263,456],"source":" In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method."}]}],"pos":[2965,3422],"yaml":true,"extradata":"MT"},{"content":"The element does not support the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern or is hidden or blocked.","nodes":[{"pos":[0,134],"content":"The element does not support the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Automation.InvokePattern\"&gt;&lt;/xref&gt;</ph> control pattern or is hidden or blocked.","source":"The element does not support the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern or is hidden or blocked."}],"pos":[4198,4333],"yaml":true},{"content":"The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref href=\"System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled\"></xref> property.","nodes":[{"pos":[0,225],"content":"The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref href=\"System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled\"></xref> property.","nodes":[{"content":"The element is not enabled.","pos":[0,27]},{"content":"Can be raised when a UI Automation provider has implemented its own handling of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled\"&gt;&lt;/xref&gt;</ph> property.","pos":[28,225],"source":" Can be raised when a UI Automation provider has implemented its own handling of the <xref href=\"System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled\"></xref> property."}]}],"pos":[4483,4709],"yaml":true},{"content":"Identifies the event raised when a control is invoked or activated.","nodes":[{"pos":[0,67],"content":"Identifies the event raised when a control is invoked or activated.","nodes":[{"content":"Identifies the event raised when a control is invoked or activated.","pos":[0,67]}]}],"pos":[5662,5730],"yaml":true},{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \n  \n The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.","nodes":[{"pos":[0,179],"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.","nodes":[{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.","pos":[0,179],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"UI Automation providers should use the equivalent field in <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>.","pos":[62,179],"source":" UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>."}]}]},{"pos":[186,362],"content":"The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern.InvokedEvent&gt;</ph> identifier is passed as a parameter to <ph id=\"ph2\">&lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;</ph>.","pos":[0,176],"source":"The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>."}]}],"pos":[5741,6108],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern.","nodes":[{"pos":[0,92],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Automation.InvokePattern\"&gt;&lt;/xref&gt;</ph> control pattern.","source":"Identifies the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern."}],"pos":[7783,7876],"yaml":true},{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \n  \n The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","nodes":[{"pos":[0,179],"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.","nodes":[{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.","pos":[0,179],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"UI Automation providers should use the equivalent field in <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>.","pos":[62,179],"source":" UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>."}]}]},{"pos":[186,424],"content":"The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","nodes":[{"content":"The pattern identifier is passed to methods such as <ph id=\"ph1\">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> to retrieve the control pattern of interest from the specified <ph id=\"ph2\">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.","pos":[0,238],"source":"The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>."}]}],"pos":[7887,8316],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.InvokePattern\n  commentId: T:System.Windows.Automation.InvokePattern\n  id: InvokePattern\n  children:\n  - System.Windows.Automation.InvokePattern.Invoke\n  - System.Windows.Automation.InvokePattern.InvokedEvent\n  - System.Windows.Automation.InvokePattern.Pattern\n  langs:\n  - csharp\n  name: InvokePattern\n  nameWithType: InvokePattern\n  fullName: System.Windows.Automation.InvokePattern\n  type: Class\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.\n  remarks: \"Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.  \\n  \\n [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.\"\n  syntax:\n    content: 'public class InvokePattern : System.Windows.Automation.BasePattern'\n  inheritance:\n  - System.Object\n  - System.Windows.Automation.BasePattern\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation/InvokePattern.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: ghogen\n- uid: System.Windows.Automation.InvokePattern.Invoke\n  commentId: M:System.Windows.Automation.InvokePattern.Invoke\n  id: Invoke\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: Invoke()\n  nameWithType: InvokePattern.Invoke()\n  fullName: InvokePattern.Invoke()\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Sends a request to activate a control and initiate its single, unambiguous action.\n  remarks: Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking. However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation. In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.\n  example:\n  - \"In the following example an <xref:System.Windows.Automation.InvokePattern>control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \\n  \\n [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]\\n [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]\"\n  syntax:\n    content: public void Invoke ();\n    parameters: []\n  overload: System.Windows.Automation.InvokePattern.Invoke*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The element does not support the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern or is hidden or blocked.\n  - type: System.Windows.Automation.ElementNotEnabledException\n    commentId: T:System.Windows.Automation.ElementNotEnabledException\n    description: The element is not enabled. Can be raised when a UI Automation provider has implemented its own handling of the <xref href=\"System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled\"></xref> property.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation/InvokePattern.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: ghogen\n- uid: System.Windows.Automation.InvokePattern.InvokedEvent\n  commentId: F:System.Windows.Automation.InvokePattern.InvokedEvent\n  id: InvokedEvent\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: InvokedEvent\n  nameWithType: InvokePattern.InvokedEvent\n  fullName: InvokePattern.InvokedEvent\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the event raised when a control is invoked or activated.\n  remarks: \"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \\n  \\n The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.\"\n  example:\n  - \"In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier field.  \\n  \\n [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]\\n [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]\"\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;\n    return:\n      type: System.Windows.Automation.AutomationEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation/InvokePattern.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: ghogen\n- uid: System.Windows.Automation.InvokePattern.Pattern\n  commentId: F:System.Windows.Automation.InvokePattern.Pattern\n  id: Pattern\n  parent: System.Windows.Automation.InvokePattern\n  langs:\n  - csharp\n  name: Pattern\n  nameWithType: InvokePattern.Pattern\n  fullName: InvokePattern.Pattern\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the <xref href=\"System.Windows.Automation.InvokePattern\"></xref> control pattern.\n  remarks: \"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  \\n  \\n The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.\"\n  example:\n  - \"In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \\n  \\n [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]\\n [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]\"\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;\n    return:\n      type: System.Windows.Automation.AutomationPattern\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation/InvokePattern.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: ghogen\nreferences:\n- uid: System.Windows.Automation.BasePattern\n  parent: System.Windows.Automation\n  isExternal: false\n  name: BasePattern\n  nameWithType: BasePattern\n  fullName: System.Windows.Automation.BasePattern\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Automation.ElementNotEnabledException\n  parent: System.Windows.Automation\n  isExternal: false\n  name: ElementNotEnabledException\n  nameWithType: ElementNotEnabledException\n  fullName: System.Windows.Automation.ElementNotEnabledException\n- uid: System.Windows.Automation.InvokePattern.Invoke\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Invoke()\n  nameWithType: InvokePattern.Invoke()\n  fullName: InvokePattern.Invoke()\n- uid: System.Windows.Automation.InvokePattern.InvokedEvent\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: InvokedEvent\n  nameWithType: InvokePattern.InvokedEvent\n  fullName: InvokePattern.InvokedEvent\n- uid: System.Windows.Automation.AutomationEvent\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationEvent\n  nameWithType: AutomationEvent\n  fullName: System.Windows.Automation.AutomationEvent\n- uid: System.Windows.Automation.InvokePattern.Pattern\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Pattern\n  nameWithType: InvokePattern.Pattern\n  fullName: InvokePattern.Pattern\n- uid: System.Windows.Automation.AutomationPattern\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationPattern\n  nameWithType: AutomationPattern\n  fullName: System.Windows.Automation.AutomationPattern\n- uid: System.Windows.Automation.InvokePattern.Invoke*\n  parent: System.Windows.Automation.InvokePattern\n  isExternal: false\n  name: Invoke\n  nameWithType: InvokePattern.Invoke\n  fullName: InvokePattern.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation/InvokePattern.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}