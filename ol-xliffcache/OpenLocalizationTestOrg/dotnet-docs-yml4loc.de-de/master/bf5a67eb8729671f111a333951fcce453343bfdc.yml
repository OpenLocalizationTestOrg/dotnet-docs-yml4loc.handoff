### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ResourcePermissionBase
  commentId: T:System.Security.Permissions.ResourcePermissionBase
  id: ResourcePermissionBase
  children:
  - System.Security.Permissions.ResourcePermissionBase.#ctor
  - System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.Any
  - System.Security.Permissions.ResourcePermissionBase.Clear
  - System.Security.Permissions.ResourcePermissionBase.Copy
  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  - System.Security.Permissions.ResourcePermissionBase.Local
  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.TagNames
  - System.Security.Permissions.ResourcePermissionBase.ToXml
  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ResourcePermissionBase
  nameWithType: ResourcePermissionBase
  fullName: System.Security.Permissions.ResourcePermissionBase
  type: Class
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Allows control of code access security permissions.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.ResourcePermissionBase> class compares strings using ordinal sort rules and ignores the case of the strings being compared.
  example:
  - "The following example inherits from the <xref:System.Security.Permissions.ResourcePermissionBase> class. 4 kinds of constructors are implemented. The example also provides an implementation of a class called `MailslotPermissionEntry`. The <xref:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType%2A> property is then privately set to the type of `MailslotPermissionEntry`. The <xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A> property is set privately to \"Name\" and \"Machine\".  \n  \n [!code-cpp[ResourcePermissionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#1)]\n [!code-csharp[ResourcePermissionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#1)]\n [!code-vb[ResourcePermissionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#1)]"
  syntax:
    content: 'public abstract class ResourcePermissionBase : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  derivedClasses:
  - System.Diagnostics.EventLogPermission
  - System.Diagnostics.PerformanceCounterPermission
  - System.DirectoryServices.DirectoryServicesPermission
  - System.ServiceProcess.ServiceControllerPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  - System.Security.CodeAccessPermission.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.#ctor
  commentId: M:System.Security.Permissions.ResourcePermissionBase.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: ResourcePermissionBase()
  nameWithType: ResourcePermissionBase.ResourcePermissionBase()
  fullName: ResourcePermissionBase.ResourcePermissionBase()
  type: Constructor
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.ResourcePermissionBase"></xref> class.
  syntax:
    content: protected ResourcePermissionBase ();
    parameters: []
  overload: System.Security.Permissions.ResourcePermissionBase.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: ResourcePermissionBase(PermissionState)
  nameWithType: ResourcePermissionBase.ResourcePermissionBase(PermissionState)
  fullName: ResourcePermissionBase.ResourcePermissionBase(PermissionState)
  type: Constructor
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.ResourcePermissionBase"></xref> class with the specified level of access to resources at creation.
  syntax:
    content: protected ResourcePermissionBase (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: One of the <xref href="System.Security.Permissions.PermissionState"></xref> values.
  overload: System.Security.Permissions.ResourcePermissionBase.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>state</code> parameter is not a valid value of <xref href="System.Security.Permissions.PermissionState"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  id: AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: AddPermissionAccess(ResourcePermissionBaseEntry)
  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)
  fullName: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Adds a permission entry to the permission.
  remarks: ''
  example:
  - "The following example shows the use of the <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> method to add a permission access entry during class initialization. This code example is part of a larger example provided for the <xref:System.Security.Permissions.ResourcePermissionBase> class.  \n  \n [!code-cpp[ResourcePermissionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#2)]\n [!code-csharp[ResourcePermissionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#2)]\n [!code-vb[ResourcePermissionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#2)]"
  syntax:
    content: protected void AddPermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);
    parameters:
    - id: entry
      type: System.Security.Permissions.ResourcePermissionBaseEntry
      description: The <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> to add.
  overload: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The specified <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The number of elements in the <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath\"></xref> property is not equal to the number of elements in the <xref href=\"System.Security.Permissions.ResourcePermissionBase.TagNames\"></xref> property.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is already included in the permission."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Any
  commentId: F:System.Security.Permissions.ResourcePermissionBase.Any
  id: Any
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Any
  nameWithType: ResourcePermissionBase.Any
  fullName: ResourcePermissionBase.Any
  type: Field
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Specifies the character to be used to represent the any wildcard character.
  remarks: The value of this field is "*".
  syntax:
    content: public const string Any;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Clear
  commentId: M:System.Security.Permissions.ResourcePermissionBase.Clear
  id: Clear
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourcePermissionBase.Clear()
  fullName: ResourcePermissionBase.Clear()
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Clears the permission of the added permission entries.
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Security.Permissions.ResourcePermissionBase.Clear*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Copy
  commentId: M:System.Security.Permissions.ResourcePermissionBase.Copy
  id: Copy
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Copy()
  nameWithType: ResourcePermissionBase.Copy()
  fullName: ResourcePermissionBase.Copy()
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns an identical copy of the current permission object.
  remarks: A copy of the permission object represents the same access to resources as the original permission object.
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A copy of the current permission object.
  overload: System.Security.Permissions.ResourcePermissionBase.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)
  fullName: ResourcePermissionBase.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Reconstructs a security object with a specified state from an XML encoding.
  syntax:
    content: >-
      [System.MonoTODO("incomplete - need more test")]

      public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: The XML encoding to use to reconstruct the security object.
  overload: System.Security.Permissions.ResourcePermissionBase.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>securityElement</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The version number of the <code>securityElement</code> parameter is not supported."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>securityElement</code> parameter is `null`.
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  commentId: M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  id: GetPermissionEntries
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: GetPermissionEntries()
  nameWithType: ResourcePermissionBase.GetPermissionEntries()
  fullName: ResourcePermissionBase.GetPermissionEntries()
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Returns an array of the <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> objects added to this permission.
  remarks: Use <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> and <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> to add and remove permission entries to this permission.
  syntax:
    content: protected System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries ();
    parameters: []
    return:
      type: System.Security.Permissions.ResourcePermissionBaseEntry[]
      description: An array of <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> objects that were added to this permission.
  overload: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ResourcePermissionBase.Intersect(IPermission)
  fullName: ResourcePermissionBase.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns a permission object that is the intersection of the current permission object and a target permission object.
  remarks: The intersection of two permission objects is a permission that describes the set of operations they both hold in common. Specifically, it represents the minimum permissions required for a demand to pass both permissions.
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission object of the same type as the current permission object.
    return:
      type: System.Security.IPermission
      description: A new permission object that represents the intersection of the current object and the specified target. This object is `null` if the intersection is empty.
  overload: System.Security.Permissions.ResourcePermissionBase.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The target permission object is not of the same type as the current permission object.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)
  fullName: ResourcePermissionBase.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Determines whether the current permission object is a subset of the specified permission.
  remarks: "The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\Example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.  \n  \n This method always returns `false` when the specified permission object is of a different type than that of the current permission object."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission object that is to be tested for the subset relationship.
    return:
      type: System.Boolean
      description: '`true` if the current permission object is a subset of the specified permission object; otherwise, `false`.'
  overload: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  commentId: M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: ResourcePermissionBase.IsUnrestricted()
  fullName: ResourcePermissionBase.IsUnrestricted()
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets a value indicating whether the permission is unrestricted.
  remarks: An unrestricted permission object represents access to any and all resources protected by the permission.
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if permission is unrestricted; otherwise, `false`.'
  overload: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Local
  commentId: F:System.Security.Permissions.ResourcePermissionBase.Local
  id: Local
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Local
  nameWithType: ResourcePermissionBase.Local
  fullName: ResourcePermissionBase.Local
  type: Field
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Specifies the character to be used to represent a local reference.
  remarks: The value of this field is ".".
  syntax:
    content: public const string Local;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  commentId: P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  id: PermissionAccessType
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: PermissionAccessType
  nameWithType: ResourcePermissionBase.PermissionAccessType
  fullName: ResourcePermissionBase.PermissionAccessType
  type: Property
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets an enumeration value that describes the types of access that you are giving the resource.
  syntax:
    content: protected Type PermissionAccessType { get; set; }
    return:
      type: System.Type
      description: An enumeration value that is derived from <xref href="System.Type"></xref> and describes the types of access that you are giving the resource.
  overload: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property value is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The property value is not an enumeration value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  id: RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: RemovePermissionAccess(ResourcePermissionBaseEntry)
  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)
  fullName: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Removes a permission entry from the permission.
  syntax:
    content: protected void RemovePermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);
    parameters:
    - id: entry
      type: System.Security.Permissions.ResourcePermissionBaseEntry
      description: The <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> to remove.
  overload: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The specified <xref href="System.Security.Permissions.ResourcePermissionBaseEntry"></xref> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The number of elements in the <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath\"></xref> property is not equal to the number of elements in the <xref href=\"System.Security.Permissions.ResourcePermissionBase.TagNames\"></xref> property.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Permissions.ResourcePermissionBaseEntry\"></xref> is not in the permission."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.TagNames
  commentId: P:System.Security.Permissions.ResourcePermissionBase.TagNames
  id: TagNames
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: TagNames
  nameWithType: ResourcePermissionBase.TagNames
  fullName: ResourcePermissionBase.TagNames
  type: Property
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets an array of strings that identify the resource you are protecting.
  syntax:
    content: protected string[] TagNames { get; set; }
    return:
      type: System.String[]
      description: An array of strings that identify the resource you are trying to protect.
  overload: System.Security.Permissions.ResourcePermissionBase.TagNames*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The property value is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The length of the array is 0.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.ToXml
  commentId: M:System.Security.Permissions.ResourcePermissionBase.ToXml
  id: ToXml
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: ToXml()
  nameWithType: ResourcePermissionBase.ToXml()
  fullName: ResourcePermissionBase.ToXml()
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns an XML encoding of the security object and its current state.
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: An XML encoding of the security object, including any state information.
  overload: System.Security.Permissions.ResourcePermissionBase.ToXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  commentId: M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ResourcePermissionBase.Union(IPermission)
  fullName: ResourcePermissionBase.Union(IPermission)
  type: Method
  assemblies:
  - System
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates a permission object that combines the current permission object and the target permission object.
  remarks: The result of a call to <xref:System.Security.Permissions.ResourcePermissionBase.Union%2A> is a permission that represents all the operations represented by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.
    return:
      type: System.Security.IPermission
      description: A new permission object that represents the union of the current permission object and the specified permission object.
  overload: System.Security.Permissions.ResourcePermissionBase.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>target</code> permission object is not of the same type as the current permission object.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.CodeAccessPermission
  parent: System.Security
  isExternal: false
  name: CodeAccessPermission
  nameWithType: CodeAccessPermission
  fullName: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Security.Permissions.ResourcePermissionBase.#ctor
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: ResourcePermissionBase()
  nameWithType: ResourcePermissionBase.ResourcePermissionBase()
  fullName: ResourcePermissionBase.ResourcePermissionBase()
- uid: System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: ResourcePermissionBase(PermissionState)
  nameWithType: ResourcePermissionBase.ResourcePermissionBase(PermissionState)
  fullName: ResourcePermissionBase.ResourcePermissionBase(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: AddPermissionAccess(ResourcePermissionBaseEntry)
  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)
  fullName: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)
- uid: System.Security.Permissions.ResourcePermissionBaseEntry
  parent: System.Security.Permissions
  isExternal: false
  name: ResourcePermissionBaseEntry
  nameWithType: ResourcePermissionBaseEntry
  fullName: System.Security.Permissions.ResourcePermissionBaseEntry
- uid: System.Security.Permissions.ResourcePermissionBase.Any
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Any
  nameWithType: ResourcePermissionBase.Any
  fullName: ResourcePermissionBase.Any
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.ResourcePermissionBase.Clear
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Clear()
  nameWithType: ResourcePermissionBase.Clear()
  fullName: ResourcePermissionBase.Clear()
- uid: System.Security.Permissions.ResourcePermissionBase.Copy
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Copy()
  nameWithType: ResourcePermissionBase.Copy()
  fullName: ResourcePermissionBase.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)
  fullName: ResourcePermissionBase.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: GetPermissionEntries()
  nameWithType: ResourcePermissionBase.GetPermissionEntries()
  fullName: ResourcePermissionBase.GetPermissionEntries()
- uid: System.Security.Permissions.ResourcePermissionBaseEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: ResourcePermissionBaseEntry[]
  nameWithType: ResourcePermissionBaseEntry[]
  fullName: System.Security.Permissions.ResourcePermissionBaseEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.ResourcePermissionBaseEntry
    name: ResourcePermissionBaseEntry
    nameWithType: ResourcePermissionBaseEntry
    fullName: System.Security.Permissions.ResourcePermissionBaseEntry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ResourcePermissionBase.Intersect(IPermission)
  fullName: ResourcePermissionBase.Intersect(IPermission)
- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)
  fullName: ResourcePermissionBase.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: IsUnrestricted()
  nameWithType: ResourcePermissionBase.IsUnrestricted()
  fullName: ResourcePermissionBase.IsUnrestricted()
- uid: System.Security.Permissions.ResourcePermissionBase.Local
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Local
  nameWithType: ResourcePermissionBase.Local
  fullName: ResourcePermissionBase.Local
- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: PermissionAccessType
  nameWithType: ResourcePermissionBase.PermissionAccessType
  fullName: ResourcePermissionBase.PermissionAccessType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: RemovePermissionAccess(ResourcePermissionBaseEntry)
  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)
  fullName: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)
- uid: System.Security.Permissions.ResourcePermissionBase.TagNames
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: TagNames
  nameWithType: ResourcePermissionBase.TagNames
  fullName: ResourcePermissionBase.TagNames
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.ResourcePermissionBase.ToXml
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: ToXml()
  nameWithType: ResourcePermissionBase.ToXml()
  fullName: ResourcePermissionBase.ToXml()
- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Union(IPermission)
  nameWithType: ResourcePermissionBase.Union(IPermission)
  fullName: ResourcePermissionBase.Union(IPermission)
- uid: System.Security.Permissions.ResourcePermissionBase.#ctor*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: ResourcePermissionBase
  nameWithType: ResourcePermissionBase.ResourcePermissionBase
  fullName: ResourcePermissionBase.ResourcePermissionBase
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: AddPermissionAccess
  nameWithType: ResourcePermissionBase.AddPermissionAccess
  fullName: ResourcePermissionBase.AddPermissionAccess
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.Clear*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Clear
  nameWithType: ResourcePermissionBase.Clear
  fullName: ResourcePermissionBase.Clear
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.Copy*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Copy
  nameWithType: ResourcePermissionBase.Copy
  fullName: ResourcePermissionBase.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.FromXml*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: FromXml
  nameWithType: ResourcePermissionBase.FromXml
  fullName: ResourcePermissionBase.FromXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: GetPermissionEntries
  nameWithType: ResourcePermissionBase.GetPermissionEntries
  fullName: ResourcePermissionBase.GetPermissionEntries
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.Intersect*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Intersect
  nameWithType: ResourcePermissionBase.Intersect
  fullName: ResourcePermissionBase.Intersect
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: IsSubsetOf
  nameWithType: ResourcePermissionBase.IsSubsetOf
  fullName: ResourcePermissionBase.IsSubsetOf
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: IsUnrestricted
  nameWithType: ResourcePermissionBase.IsUnrestricted
  fullName: ResourcePermissionBase.IsUnrestricted
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: PermissionAccessType
  nameWithType: ResourcePermissionBase.PermissionAccessType
  fullName: ResourcePermissionBase.PermissionAccessType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: RemovePermissionAccess
  nameWithType: ResourcePermissionBase.RemovePermissionAccess
  fullName: ResourcePermissionBase.RemovePermissionAccess
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.TagNames*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: TagNames
  nameWithType: ResourcePermissionBase.TagNames
  fullName: ResourcePermissionBase.TagNames
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.ToXml*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: ToXml
  nameWithType: ResourcePermissionBase.ToXml
  fullName: ResourcePermissionBase.ToXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.Permissions.ResourcePermissionBase.Union*
  parent: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: Union
  nameWithType: ResourcePermissionBase.Union
  fullName: ResourcePermissionBase.Union
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ResourcePermissionBase.xml
- uid: System.Security.CodeAccessPermission.Equals(System.Object)
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeAccessPermission.Equals(Object)
  fullName: CodeAccessPermission.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Security.CodeAccessPermission.GetHashCode
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeAccessPermission.GetHashCode()
  fullName: CodeAccessPermission.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Security.CodeAccessPermission.ToString
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: ToString()
  nameWithType: CodeAccessPermission.ToString()
  fullName: CodeAccessPermission.ToString()
- uid: System.Security.CodeAccessPermission.Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Assert()
  nameWithType: CodeAccessPermission.Assert()
  fullName: CodeAccessPermission.Assert()
- uid: System.Security.CodeAccessPermission.Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Demand()
  nameWithType: CodeAccessPermission.Demand()
  fullName: CodeAccessPermission.Demand()
- uid: System.Security.CodeAccessPermission.Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Deny()
  nameWithType: CodeAccessPermission.Deny()
  fullName: CodeAccessPermission.Deny()
- uid: System.Security.CodeAccessPermission.PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: PermitOnly()
  nameWithType: CodeAccessPermission.PermitOnly()
  fullName: CodeAccessPermission.PermitOnly()
- uid: System.Security.CodeAccessPermission.RevertAll
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAll()
  nameWithType: CodeAccessPermission.RevertAll()
  fullName: CodeAccessPermission.RevertAll()
- uid: System.Security.CodeAccessPermission.RevertAssert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAssert()
  nameWithType: CodeAccessPermission.RevertAssert()
  fullName: CodeAccessPermission.RevertAssert()
- uid: System.Security.CodeAccessPermission.RevertDeny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertDeny()
  nameWithType: CodeAccessPermission.RevertDeny()
  fullName: CodeAccessPermission.RevertDeny()
- uid: System.Security.CodeAccessPermission.RevertPermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertPermitOnly()
  nameWithType: CodeAccessPermission.RevertPermitOnly()
  fullName: CodeAccessPermission.RevertPermitOnly()
- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IPermission.Demand()
  nameWithType: CodeAccessPermission.IPermission.Demand()
  fullName: CodeAccessPermission.IPermission.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Assert()
  nameWithType: CodeAccessPermission.IStackWalk.Assert()
  fullName: CodeAccessPermission.IStackWalk.Assert()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Demand()
  nameWithType: CodeAccessPermission.IStackWalk.Demand()
  fullName: CodeAccessPermission.IStackWalk.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Deny()
  nameWithType: CodeAccessPermission.IStackWalk.Deny()
  fullName: CodeAccessPermission.IStackWalk.Deny()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.PermitOnly()
  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()
  fullName: CodeAccessPermission.IStackWalk.PermitOnly()
- uid: System.Security.Permissions.IUnrestrictedPermission
  parent: System.Security.Permissions
  isExternal: false
  name: IUnrestrictedPermission
  nameWithType: IUnrestrictedPermission
  fullName: System.Security.Permissions.IUnrestrictedPermission
