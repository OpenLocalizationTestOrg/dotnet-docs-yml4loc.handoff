{"nodes":[{"content":"Represents the semantic organization of a recognized phrase.","nodes":[{"pos":[0,60],"content":"Represents the semantic organization of a recognized phrase.","nodes":[{"content":"Represents the semantic organization of a recognized phrase.","pos":[0,60]}]}],"pos":[3475,3536],"yaml":true},{"content":"<xref:System.Speech.Recognition.SemanticValue> is the primary object that implements the semantic technology in System.Speech. Semantic interpretation allows grammars to define rules for use by a recognition engine to correctly interpret audio input. Semantic interpretation also enables recognition engines to organize their results so that they can be more easily processed, rather than returning only recognized words and sequences of words.  \n  \n For example, the recognition engine output \"Change background to red\" would have to be parsed and interpreted by an application before it could be acted upon. A <xref:System.Speech.Recognition.Grammar> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \"background\"), and the other for selecting color (represented by the text \"red\").  \n  \n System.Speech represents the semantics of a recognition operation in a tree of <xref:System.Speech.Recognition.SemanticValue> objects.  \n  \n Each <xref:System.Speech.Recognition.SemanticValue> instance includes the following:  \n  \n-   An <xref:System.Object>, accessed by means of the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property, used to key the instance of the <xref:System.Speech.Recognition.SemanticValue>.  \n  \n-   A measure of the accuracy of semantic parsing, returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property.  \n  \n-   A collection of name/value pairs (<xref:System.Collections.Generic.KeyValuePair%602>) of child objects, which are also <xref:System.Speech.Recognition.SemanticValue> instances. Child nodes are accessible through the <xref:System.Speech.Recognition.SemanticValue> implementation of <xref:System.Collections.Generic.IDictionary%602> using a string lookup key and a <xref:System.Speech.Recognition.SemanticValue> instance, as in the following example.  \n  \n    ```csharp  \n    foreach (KeyValuePair<String, SemanticValue> child in semantics)   \n    {  \n      Utils.CreateSemanticsTreeNodes(semanticsNode.Nodes, child.Value, child.Key);  \n    }  \n    ```  \n  \n Recognition engines based on System.Speech provide valid instances of <xref:System.Speech.Recognition.SemanticValue> for all output from recognition, even for phrases with no explicit semantic structure.  \n  \n The <xref:System.Speech.Recognition.SemanticValue> instance for a phrase is obtained using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object (or objects that inherit from it, such as <xref:System.Speech.Recognition.RecognitionResult>).  \n  \n <xref:System.Speech.Recognition.SemanticValue> objects obtained for recognized phrases without semantic structure are characterized by:  \n  \n-   The lack of children (<xref:System.Speech.Recognition.SemanticValue.Count%2A> is 0).  \n  \n-   The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property is `null`.  \n  \n-   An artificial semantic confidence level of 1.0 (returned by <xref:System.Speech.Recognition.SemanticValue.Confidence%2A>).  \n  \n Typically, applications create <xref:System.Speech.Recognition.SemanticValue> instances indirectly, adding them to <xref:System.Speech.Recognition.Grammar> objects by using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances,  in conjunction with  <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects.  \n  \n Direct construction of a <xref:System.Speech.Recognition.SemanticValue> instance is useful during the creation of strongly-typed grammars.  \n  \n <xref:System.Speech.Recognition.SemanticValue> implements the <xref:System.Collections.Generic.IDictionary%602>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> interfaces.","nodes":[{"pos":[0,444],"content":"<xref:System.Speech.Recognition.SemanticValue> is the primary object that implements the semantic technology in System.Speech. Semantic interpretation allows grammars to define rules for use by a recognition engine to correctly interpret audio input. Semantic interpretation also enables recognition engines to organize their results so that they can be more easily processed, rather than returning only recognized words and sequences of words.","nodes":[{"content":"<xref:System.Speech.Recognition.SemanticValue> is the primary object that implements the semantic technology in System.Speech. Semantic interpretation allows grammars to define rules for use by a recognition engine to correctly interpret audio input. Semantic interpretation also enables recognition engines to organize their results so that they can be more easily processed, rather than returning only recognized words and sequences of words.","pos":[0,444],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> is the primary object that implements the semantic technology in System.Speech.","pos":[0,126],"source":"<xref:System.Speech.Recognition.SemanticValue> is the primary object that implements the semantic technology in System.Speech."},{"content":"Semantic interpretation allows grammars to define rules for use by a recognition engine to correctly interpret audio input.","pos":[127,250]},{"content":"Semantic interpretation also enables recognition engines to organize their results so that they can be more easily processed, rather than returning only recognized words and sequences of words.","pos":[251,444]}]}]},{"pos":[451,936],"content":"For example, the recognition engine output \"Change background to red\" would have to be parsed and interpreted by an application before it could be acted upon. A <xref:System.Speech.Recognition.Grammar> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \"background\"), and the other for selecting color (represented by the text \"red\").","nodes":[{"content":"For example, the recognition engine output \"Change background to red\" would have to be parsed and interpreted by an application before it could be acted upon. A <xref:System.Speech.Recognition.Grammar> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \"background\"), and the other for selecting color (represented by the text \"red\").","pos":[0,485],"nodes":[{"content":"For example, the recognition engine output \"Change background to red\" would have to be parsed and interpreted by an application before it could be acted upon.","pos":[0,158]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \"background\"), and the other for selecting color (represented by the text \"red\").","pos":[159,485],"source":" A <xref:System.Speech.Recognition.Grammar> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \"background\"), and the other for selecting color (represented by the text \"red\")."}]}]},{"pos":[943,1077],"content":"System.Speech represents the semantics of a recognition operation in a tree of <xref:System.Speech.Recognition.SemanticValue> objects.","nodes":[{"content":"System.Speech represents the semantics of a recognition operation in a tree of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> objects.","pos":[0,134],"source":"System.Speech represents the semantics of a recognition operation in a tree of <xref:System.Speech.Recognition.SemanticValue> objects."}]},{"pos":[1084,1168],"content":"Each <xref:System.Speech.Recognition.SemanticValue> instance includes the following:","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance includes the following:","pos":[0,84],"source":"Each <xref:System.Speech.Recognition.SemanticValue> instance includes the following:"}]},{"pos":[1178,1373],"content":"An <xref:System.Object>, accessed by means of the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property, used to key the instance of the <xref:System.Speech.Recognition.SemanticValue>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>, accessed by means of the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> property, used to key the instance of the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph>.","pos":[0,195],"source":"An <xref:System.Object>, accessed by means of the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property, used to key the instance of the <xref:System.Speech.Recognition.SemanticValue>."}]},{"pos":[1383,1516],"content":"A measure of the accuracy of semantic parsing, returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property.","nodes":[{"content":"A measure of the accuracy of semantic parsing, returned by the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Confidence%2A&gt;</ph> property.","pos":[0,133],"source":"A measure of the accuracy of semantic parsing, returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property."}]},{"pos":[1526,1974],"content":"A collection of name/value pairs (<xref:System.Collections.Generic.KeyValuePair%602>) of child objects, which are also <xref:System.Speech.Recognition.SemanticValue> instances. Child nodes are accessible through the <xref:System.Speech.Recognition.SemanticValue> implementation of <xref:System.Collections.Generic.IDictionary%602> using a string lookup key and a <xref:System.Speech.Recognition.SemanticValue> instance, as in the following example.","nodes":[{"content":"A collection of name/value pairs (<xref:System.Collections.Generic.KeyValuePair%602>) of child objects, which are also <xref:System.Speech.Recognition.SemanticValue> instances. Child nodes are accessible through the <xref:System.Speech.Recognition.SemanticValue> implementation of <xref:System.Collections.Generic.IDictionary%602> using a string lookup key and a <xref:System.Speech.Recognition.SemanticValue> instance, as in the following example.","pos":[0,448],"nodes":[{"content":"A collection of name/value pairs (<ph id=\"ph1\">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>) of child objects, which are also <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instances.","pos":[0,176],"source":"A collection of name/value pairs (<xref:System.Collections.Generic.KeyValuePair%602>) of child objects, which are also <xref:System.Speech.Recognition.SemanticValue> instances."},{"content":"Child nodes are accessible through the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> implementation of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> using a string lookup key and a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance, as in the following example.","pos":[177,448],"source":" Child nodes are accessible through the <xref:System.Speech.Recognition.SemanticValue> implementation of <xref:System.Collections.Generic.IDictionary%602> using a string lookup key and a <xref:System.Speech.Recognition.SemanticValue> instance, as in the following example."}]}]},{"pos":[2183,2386],"content":"Recognition engines based on System.Speech provide valid instances of <xref:System.Speech.Recognition.SemanticValue> for all output from recognition, even for phrases with no explicit semantic structure.","nodes":[{"content":"Recognition engines based on System.Speech provide valid instances of <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> for all output from recognition, even for phrases with no explicit semantic structure.","pos":[0,203],"source":"Recognition engines based on System.Speech provide valid instances of <xref:System.Speech.Recognition.SemanticValue> for all output from recognition, even for phrases with no explicit semantic structure."}]},{"pos":[2393,2718],"content":"The <xref:System.Speech.Recognition.SemanticValue> instance for a phrase is obtained using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object (or objects that inherit from it, such as <xref:System.Speech.Recognition.RecognitionResult>).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance for a phrase is obtained using the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A&gt;</ph> property on the <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.RecognizedPhrase&gt;</ph> object (or objects that inherit from it, such as <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.RecognitionResult&gt;</ph>).","pos":[0,325],"source":"The <xref:System.Speech.Recognition.SemanticValue> instance for a phrase is obtained using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object (or objects that inherit from it, such as <xref:System.Speech.Recognition.RecognitionResult>)."}]},{"pos":[2725,2860],"content":"<xref:System.Speech.Recognition.SemanticValue> objects obtained for recognized phrases without semantic structure are characterized by:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> objects obtained for recognized phrases without semantic structure are characterized by:","pos":[0,135],"source":"<xref:System.Speech.Recognition.SemanticValue> objects obtained for recognized phrases without semantic structure are characterized by:"}]},{"pos":[2870,2954],"content":"The lack of children (<xref:System.Speech.Recognition.SemanticValue.Count%2A> is 0).","nodes":[{"content":"The lack of children (<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Count%2A&gt;</ph> is 0).","pos":[0,84],"source":"The lack of children (<xref:System.Speech.Recognition.SemanticValue.Count%2A> is 0)."}]},{"pos":[2964,3043],"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property is `null`."},{"pos":[3053,3175],"content":"An artificial semantic confidence level of 1.0 (returned by <xref:System.Speech.Recognition.SemanticValue.Confidence%2A>).","nodes":[{"content":"An artificial semantic confidence level of 1.0 (returned by <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Confidence%2A&gt;</ph>).","pos":[0,122],"source":"An artificial semantic confidence level of 1.0 (returned by <xref:System.Speech.Recognition.SemanticValue.Confidence%2A>)."}]},{"pos":[3182,3597],"content":"Typically, applications create <xref:System.Speech.Recognition.SemanticValue> instances indirectly, adding them to <xref:System.Speech.Recognition.Grammar> objects by using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances,  in conjunction with  <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects.","nodes":[{"content":"Typically, applications create <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instances indirectly, adding them to <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.Grammar&gt;</ph> objects by using <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticResultValue&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Speech.Recognition.SemanticResultKey&gt;</ph> instances,  in conjunction with  <ph id=\"ph5\">&lt;xref:System.Speech.Recognition.Choices&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Speech.Recognition.GrammarBuilder&gt;</ph> objects.","pos":[0,415],"source":"Typically, applications create <xref:System.Speech.Recognition.SemanticValue> instances indirectly, adding them to <xref:System.Speech.Recognition.Grammar> objects by using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances,  in conjunction with  <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects."}]},{"pos":[3604,3742],"content":"Direct construction of a <xref:System.Speech.Recognition.SemanticValue> instance is useful during the creation of strongly-typed grammars.","nodes":[{"content":"Direct construction of a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance is useful during the creation of strongly-typed grammars.","pos":[0,138],"source":"Direct construction of a <xref:System.Speech.Recognition.SemanticValue> instance is useful during the creation of strongly-typed grammars."}]},{"pos":[3749,3978],"content":"<xref:System.Speech.Recognition.SemanticValue> implements the <xref:System.Collections.Generic.IDictionary%602>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> interfaces.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interfaces.","pos":[0,229],"source":"<xref:System.Speech.Recognition.SemanticValue> implements the <xref:System.Collections.Generic.IDictionary%602>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> interfaces."}]}],"pos":[3547,7571],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> class and specifies a semantic value.","source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value."}],"pos":[40621,40754],"yaml":true},{"content":"There are no restrictions on the type of `value` to be stored.  \n  \n An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance.  \n  \n The value of the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property for the <xref:System.Speech.Recognition.SemanticValue> instance will be set to -1.  \n  \n A <xref:System.Speech.Recognition.SemanticValue> constructed with this method cannot be referenced by key name.","nodes":[{"pos":[0,62],"content":"There are no restrictions on the type of <ph id=\"ph1\">`value`</ph> to be stored.","source":"There are no restrictions on the type of `value` to be stored."},{"pos":[69,244],"content":"An application can retrieve <ph id=\"ph1\">`value`</ph> by using the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> property on a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance.","source":"An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance."},{"pos":[251,420],"content":"The value of the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property for the <xref:System.Speech.Recognition.SemanticValue> instance will be set to -1.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Confidence%2A&gt;</ph> property for the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance will be set to -1.","pos":[0,169],"source":"The value of the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property for the <xref:System.Speech.Recognition.SemanticValue> instance will be set to -1."}]},{"pos":[427,538],"content":"A <xref:System.Speech.Recognition.SemanticValue> constructed with this method cannot be referenced by key name.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> constructed with this method cannot be referenced by key name.","pos":[0,111],"source":"A <xref:System.Speech.Recognition.SemanticValue> constructed with this method cannot be referenced by key name."}]}],"pos":[40765,41312],"yaml":true,"extradata":"MT"},{"content":"The information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.","nodes":[{"pos":[0,104],"content":"The information to be stored in the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> object.","source":"The information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object."}],"pos":[41449,41554],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value, a key name, and a confidence level.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> class and specifies a semantic value, a key name, and a confidence level.","source":"Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value, a key name, and a confidence level."}],"pos":[42756,42925],"yaml":true},{"content":"There are no restrictions on the type of `value` to be stored.  \n  \n An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance.  \n  \n The `confidence` parameter (returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance), should be between 0.0 and 1.0.","nodes":[{"pos":[0,62],"content":"There are no restrictions on the type of <ph id=\"ph1\">`value`</ph> to be stored.","source":"There are no restrictions on the type of `value` to be stored."},{"pos":[69,244],"content":"An application can retrieve <ph id=\"ph1\">`value`</ph> by using the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> property on a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance.","source":"An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance."},{"pos":[251,458],"content":"The <ph id=\"ph1\">`confidence`</ph> parameter (returned by the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Confidence%2A&gt;</ph> property on a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance), should be between 0.0 and 1.0.","source":"The `confidence` parameter (returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance), should be between 0.0 and 1.0."}],"pos":[42936,43401],"yaml":true,"extradata":"MT"},{"content":"A key that can be used to reference this <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.","nodes":[{"pos":[0,111],"content":"A key that can be used to reference this <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"A key that can be used to reference this <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance."}],"pos":[43574,43686],"yaml":true},{"content":"An object containing information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.","nodes":[{"pos":[0,121],"content":"An object containing information to be stored in the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> object.","source":"An object containing information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object."}],"pos":[43747,43869],"yaml":true},{"content":"A `float` containing an estimate of the certainty of semantic analysis.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">`float`</ph> containing an estimate of the certainty of semantic analysis.","source":"A `float` containing an estimate of the certainty of semantic analysis."}],"pos":[43935,44007],"yaml":true},{"content":"Returns a relative measure of the certainty as to the correctness of the semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,189],"content":"Returns a relative measure of the certainty as to the correctness of the semantic parsing that returned the current instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a relative measure of the certainty as to the correctness of the semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[45009,45199],"yaml":true},{"content":"The <xref:System.Speech.Recognition.SemanticValue.Confidence%2A?displayProperty=fullName> property, which returns a measure of the correctness of semantic parsing, should not be confused with the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A?displayProperty=fullName> property, which returns a measure of the accuracy of speech recognition.","nodes":[{"pos":[0,357],"content":"The <xref:System.Speech.Recognition.SemanticValue.Confidence%2A?displayProperty=fullName> property, which returns a measure of the correctness of semantic parsing, should not be confused with the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A?displayProperty=fullName> property, which returns a measure of the accuracy of speech recognition.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Confidence%2A?displayProperty=fullName&gt;</ph> property, which returns a measure of the correctness of semantic parsing, should not be confused with the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A?displayProperty=fullName&gt;</ph> property, which returns a measure of the accuracy of speech recognition.","pos":[0,357],"source":"The <xref:System.Speech.Recognition.SemanticValue.Confidence%2A?displayProperty=fullName> property, which returns a measure of the correctness of semantic parsing, should not be confused with the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A?displayProperty=fullName> property, which returns a measure of the accuracy of speech recognition."}]}],"pos":[45210,45568],"yaml":true,"extradata":"MT"},{"content":"Returns a `float` that is a relative measure of the certainty of semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,181],"content":"Returns a <ph id=\"ph1\">`float`</ph> that is a relative measure of the certainty of semantic parsing that returned the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a `float` that is a relative measure of the certainty of semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[46902,47084],"yaml":true},{"content":"Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a specific key and a specific instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> expressed as a key/value pair.","nodes":[{"pos":[0,253],"content":"Indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance collection contains a specific key and a specific instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> expressed as a key/value pair.","source":"Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a specific key and a specific instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> expressed as a key/value pair."}],"pos":[48473,48727],"yaml":true},{"content":"An instance of <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> instantiated for a given value of a key string and a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.","nodes":[{"pos":[0,201],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> instantiated for a given value of a key string and a <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"An instance of <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> instantiated for a given value of a key string and a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance."}],"pos":[49024,49226],"yaml":true},{"content":"Returns a `bool` which is `true` if the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> contains an instance of <code>KeyValuePair<String, SemanticValue></code> for a specified value of the key string and the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>. Otherwise, `false` is returned.","nodes":[{"pos":[0,323],"content":"Returns a `bool` which is `true` if the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> contains an instance of <code>KeyValuePair<String, SemanticValue></code> for a specified value of the key string and the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>. Otherwise, `false` is returned.","nodes":[{"content":"Returns a <ph id=\"ph1\">`bool`</ph> which is <ph id=\"ph2\">`true`</ph> if the current <ph id=\"ph3\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> contains an instance of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">KeyValuePair&lt;String, SemanticValue&gt;</ph><ept id=\"p1\">&lt;/code&gt;</ept> for a specified value of the key string and the <ph id=\"ph5\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","pos":[0,291],"source":"Returns a `bool` which is `true` if the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> contains an instance of <code>KeyValuePair<String, SemanticValue></code> for a specified value of the key string and the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."},{"content":"Otherwise, <ph id=\"ph1\">`false`</ph> is returned.","pos":[292,323],"source":" Otherwise, `false` is returned."}]}],"pos":[49284,49608],"yaml":true},{"content":"Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance with a given key string.","nodes":[{"pos":[0,222],"content":"Indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance collection contains a child <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance with a given key string.","source":"Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance with a given key string."}],"pos":[50686,50909],"yaml":true},{"content":"You can only access data by key value at runtime, for example to check *semantic[\"myKey\"].Value*, and this generates an exception. We recommend that you query the object with <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> before using <xref:System.Speech.Recognition.SemanticValue.Item%2A> with a given instance of <xref:System.Speech.Recognition.SemanticValue>.","nodes":[{"pos":[0,377],"content":"You can only access data by key value at runtime, for example to check *semantic[\"myKey\"].Value*, and this generates an exception. We recommend that you query the object with <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> before using <xref:System.Speech.Recognition.SemanticValue.Item%2A> with a given instance of <xref:System.Speech.Recognition.SemanticValue>.","nodes":[{"content":"You can only access data by key value at runtime, for example to check <bpt id=\"p1\">*</bpt>semantic[\"myKey\"].Value<ept id=\"p1\">*</ept>, and this generates an exception.","pos":[0,130],"source":"You can only access data by key value at runtime, for example to check *semantic[\"myKey\"].Value*, and this generates an exception."},{"content":"We recommend that you query the object with <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A&gt;</ph> before using <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Item%2A&gt;</ph> with a given instance of <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph>.","pos":[131,377],"source":" We recommend that you query the object with <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> before using <xref:System.Speech.Recognition.SemanticValue.Item%2A> with a given instance of <xref:System.Speech.Recognition.SemanticValue>."}]}],"pos":[50920,51298],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.String\"></xref> containing the key string used to identify a child instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,238],"content":"<ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the key string used to identify a child instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> under the current <ph id=\"ph3\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.String\"></xref> containing the key string used to identify a child instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[55086,55325],"yaml":true},{"content":"Returns a `bool`, `true` if a child instance <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> tagged with the string <code>key</code> is found, `false` if not.","nodes":[{"pos":[0,171],"content":"Returns a <ph id=\"ph1\">`bool`</ph>, <ph id=\"ph2\">`true`</ph> if a child instance <ph id=\"ph3\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> tagged with the string <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found, <ph id=\"ph5\">`false`</ph> if not.","source":"Returns a `bool`, `true` if a child instance <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> tagged with the string <code>key</code> is found, `false` if not."}],"pos":[55383,55555],"yaml":true},{"content":"Returns the number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.","nodes":[{"pos":[0,185],"content":"Returns the number of child <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> objects under the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns the number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance."}],"pos":[56533,56719],"yaml":true},{"content":"Recognition results that do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Count%2A> value of zero, as well as a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null`.","nodes":[{"pos":[0,225],"content":"Recognition results that do not make use of semantic parsing always have a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Count%2A&gt;</ph> value of zero, as well as a <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> of <ph id=\"ph3\">`null`</ph>.","source":"Recognition results that do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Count%2A> value of zero, as well as a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null`."}],"pos":[56730,56956],"yaml":true,"extradata":"MT"},{"content":"The number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,168],"content":"The number of child <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> objects under the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"The number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[60917,61086],"yaml":true},{"content":"Determines whether a specified object is an instance of <code>SemanticValue</code> and equal to the current instance of <code>SemanticValue</code>.","nodes":[{"pos":[0,147],"content":"Determines whether a specified object is an instance of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SemanticValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> and equal to the current instance of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">SemanticValue</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Determines whether a specified object is an instance of <code>SemanticValue</code> and equal to the current instance of <code>SemanticValue</code>."}],"pos":[62131,62279],"yaml":true},{"content":"The object to evaluate.","nodes":[{"pos":[0,23],"content":"The object to evaluate.","nodes":[{"content":"The object to evaluate.","pos":[0,23]}]}],"pos":[62419,62443],"yaml":true},{"content":"`true` if the specified Object is equal to the current Object; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the specified Object is equal to the current Object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified Object is equal to the current Object; otherwise, `false`."}],"pos":[62501,62586],"yaml":true},{"content":"Provides a hash code for a <code>SemanticValue</code> object.","nodes":[{"pos":[0,61],"content":"Provides a hash code for a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SemanticValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"Provides a hash code for a <code>SemanticValue</code> object."}],"pos":[63599,63661],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.","nodes":[{"pos":[0,96],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object."}],"pos":[63795,63892],"yaml":true},{"content":"Returns child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instances that  belong to the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,174],"content":"Returns child <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instances that  belong to the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"Returns child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instances that  belong to the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[64933,65108],"yaml":true},{"content":"The <xref:System.Speech.Recognition.SemanticValue.Item%2A> is read-only and generates exceptions if members are modified.  \n  \n You can only access data by key value at run-time, not at compile-time, for example to check `semantic[\"myKey\"].Value`. Specifying a key that is not present generates an exception.  \n  \n To detect the presence of a given key, use the <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> property on an <xref:System.Speech.Recognition.SemanticValue> instance.","nodes":[{"pos":[0,121],"content":"The <xref:System.Speech.Recognition.SemanticValue.Item%2A> is read-only and generates exceptions if members are modified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Item%2A&gt;</ph> is read-only and generates exceptions if members are modified.","pos":[0,121],"source":"The <xref:System.Speech.Recognition.SemanticValue.Item%2A> is read-only and generates exceptions if members are modified."}]},{"pos":[128,308],"content":"You can only access data by key value at run-time, not at compile-time, for example to check `semantic[\"myKey\"].Value`. Specifying a key that is not present generates an exception.","nodes":[{"content":"You can only access data by key value at run-time, not at compile-time, for example to check <ph id=\"ph1\">`semantic[\"myKey\"].Value`</ph>.","pos":[0,119],"source":"You can only access data by key value at run-time, not at compile-time, for example to check `semantic[\"myKey\"].Value`."},{"content":"Specifying a key that is not present generates an exception.","pos":[120,180]}]},{"pos":[315,495],"content":"To detect the presence of a given key, use the <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> property on an <xref:System.Speech.Recognition.SemanticValue> instance.","nodes":[{"content":"To detect the presence of a given key, use the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A&gt;</ph> property on an <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SemanticValue&gt;</ph> instance.","pos":[0,180],"source":"To detect the presence of a given key, use the <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> property on an <xref:System.Speech.Recognition.SemanticValue> instance."}]}],"pos":[65119,65623],"yaml":true,"extradata":"MT"},{"content":"A key for a `KeyValuePair<String, SemanticValue>` contained in the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,148],"content":"A key for a <ph id=\"ph1\">`KeyValuePair&lt;String, SemanticValue&gt;`</ph> contained in the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"A key for a `KeyValuePair<String, SemanticValue>` contained in the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[69617,69766],"yaml":true},{"content":"Returns a child of the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> that can be indexed as part of a key value pair: <code>KeyValuePair<String,</code><code>SemanticValue></code>.","nodes":[{"pos":[0,202],"content":"Returns a child of the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> that can be indexed as part of a key value pair: <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">KeyValuePair&lt;String,</ph><ept id=\"p1\">&lt;/code&gt;</ept><bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">SemanticValue&gt;</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Returns a child of the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> that can be indexed as part of a key value pair: <code>KeyValuePair<String,</code><code>SemanticValue></code>."}],"pos":[69849,70054],"yaml":true},{"content":"Thrown if no child member of the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> has the key matching the <code>key</code> parameter.","nodes":[{"pos":[0,166],"content":"Thrown if no child member of the current instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> has the key matching the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Thrown if no child member of the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> has the key matching the <code>key</code> parameter."}],"pos":[70266,70433],"yaml":true},{"content":"Thrown if code attempts to change the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> at a given index.","nodes":[{"pos":[0,116],"content":"Thrown if code attempts to change the <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> at a given index.","source":"Thrown if code attempts to change the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> at a given index."}],"pos":[70543,70660],"yaml":true},{"content":"A read-only property that returns the information contained in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.","nodes":[{"pos":[0,136],"content":"A read-only property that returns the information contained in the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph>.","source":"A read-only property that returns the information contained in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>."}],"pos":[71556,71693],"yaml":true},{"content":"Recognition results which do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null` and a <xref:System.Speech.Recognition.SemanticValue.Count%2A> property of zero.","nodes":[{"pos":[0,221],"content":"Recognition results which do not make use of semantic parsing always have a <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SemanticValue.Value%2A&gt;</ph> of <ph id=\"ph2\">`null`</ph> and a <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SemanticValue.Count%2A&gt;</ph> property of zero.","source":"Recognition results which do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null` and a <xref:System.Speech.Recognition.SemanticValue.Count%2A> property of zero."}],"pos":[71704,71926],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.Object\"></xref> instance containing the information stored in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.","nodes":[{"pos":[0,174],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance containing the information stored in the current <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SemanticValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an <xref href=\"System.Object\"></xref> instance containing the information stored in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance."}],"pos":[73261,73436],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[96327,96385],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[96562,96620],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SemanticValue\n  commentId: T:System.Speech.Recognition.SemanticValue\n  id: SemanticValue\n  children:\n  - System.Speech.Recognition.SemanticValue.#ctor(System.Object)\n  - System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)\n  - System.Speech.Recognition.SemanticValue.Confidence\n  - System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  - System.Speech.Recognition.SemanticValue.ContainsKey(System.String)\n  - System.Speech.Recognition.SemanticValue.Count\n  - System.Speech.Recognition.SemanticValue.Equals(System.Object)\n  - System.Speech.Recognition.SemanticValue.GetHashCode\n  - System.Speech.Recognition.SemanticValue.Item(System.String)\n  - System.Speech.Recognition.SemanticValue.Value\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values\n  - System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator\n  - System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: SemanticValue\n  nameWithType: SemanticValue\n  fullName: System.Speech.Recognition.SemanticValue\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Represents the semantic organization of a recognized phrase.\n  remarks: \"<xref:System.Speech.Recognition.SemanticValue> is the primary object that implements the semantic technology in System.Speech. Semantic interpretation allows grammars to define rules for use by a recognition engine to correctly interpret audio input. Semantic interpretation also enables recognition engines to organize their results so that they can be more easily processed, rather than returning only recognized words and sequences of words.  \\n  \\n For example, the recognition engine output \\\"Change background to red\\\" would have to be parsed and interpreted by an application before it could be acted upon. A <xref:System.Speech.Recognition.Grammar> object can specify a semantic interpretation to make processing clearer by specifying that the phrase has two semantic substructures, one for selecting background or foreground (represented by the text \\\"background\\\"), and the other for selecting color (represented by the text \\\"red\\\").  \\n  \\n System.Speech represents the semantics of a recognition operation in a tree of <xref:System.Speech.Recognition.SemanticValue> objects.  \\n  \\n Each <xref:System.Speech.Recognition.SemanticValue> instance includes the following:  \\n  \\n-   An <xref:System.Object>, accessed by means of the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property, used to key the instance of the <xref:System.Speech.Recognition.SemanticValue>.  \\n  \\n-   A measure of the accuracy of semantic parsing, returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property.  \\n  \\n-   A collection of name/value pairs (<xref:System.Collections.Generic.KeyValuePair%602>) of child objects, which are also <xref:System.Speech.Recognition.SemanticValue> instances. Child nodes are accessible through the <xref:System.Speech.Recognition.SemanticValue> implementation of <xref:System.Collections.Generic.IDictionary%602> using a string lookup key and a <xref:System.Speech.Recognition.SemanticValue> instance, as in the following example.  \\n  \\n    ```csharp  \\n    foreach (KeyValuePair<String, SemanticValue> child in semantics)   \\n    {  \\n      Utils.CreateSemanticsTreeNodes(semanticsNode.Nodes, child.Value, child.Key);  \\n    }  \\n    ```  \\n  \\n Recognition engines based on System.Speech provide valid instances of <xref:System.Speech.Recognition.SemanticValue> for all output from recognition, even for phrases with no explicit semantic structure.  \\n  \\n The <xref:System.Speech.Recognition.SemanticValue> instance for a phrase is obtained using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object (or objects that inherit from it, such as <xref:System.Speech.Recognition.RecognitionResult>).  \\n  \\n <xref:System.Speech.Recognition.SemanticValue> objects obtained for recognized phrases without semantic structure are characterized by:  \\n  \\n-   The lack of children (<xref:System.Speech.Recognition.SemanticValue.Count%2A> is 0).  \\n  \\n-   The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property is `null`.  \\n  \\n-   An artificial semantic confidence level of 1.0 (returned by <xref:System.Speech.Recognition.SemanticValue.Confidence%2A>).  \\n  \\n Typically, applications create <xref:System.Speech.Recognition.SemanticValue> instances indirectly, adding them to <xref:System.Speech.Recognition.Grammar> objects by using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances,  in conjunction with  <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects.  \\n  \\n Direct construction of a <xref:System.Speech.Recognition.SemanticValue> instance is useful during the creation of strongly-typed grammars.  \\n  \\n <xref:System.Speech.Recognition.SemanticValue> implements the <xref:System.Collections.Generic.IDictionary%602>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> interfaces.\"\n  example:\n  - \"The following example shows a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event designed to handle commands to change foreground and background color.  \\n  \\n The handler identifies recognized phrases that have no underlying semantic structure by detecting a <xref:System.Speech.Recognition.SemanticValue.Count%2A> of zero and a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null`. This recognition output is then processed directly by parsing the raw text.  \\n  \\n In other cases, the handler uses keys to obtain the RGB components of a color name, to determine whether the command will change the foreground or background, or to indicate that no valid key was found.  \\n  \\n```csharp  \\n  \\nnewGrammar.SpeechRecognized +=  \\n  delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n  \\n    // Retrieve the value of the semantic property.  \\n    bool changeBackGround = true;  \\n    string errorString = \\\"\\\";  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n  \\n    Color newColor = Color.Empty;  \\n  \\n    try   \\n    {  \\n      if (semantics.Count == 0 && semantics.Value==null)  \\n      {  \\n        // Signifies recognition by a grammar with no semantics.  \\n        // Parse the string, assuming that the last word is color,  \\n        // and search for \\\"background\\\" or \\\"foreground\\\" in the input.  \\n        if (eventArgs.Result.Text.Contains(\\\"foreground\\\"))   \\n        {  \\n          changeBackGround = false;  \\n        }  \\n        string cName = eventArgs.Result.Words[eventArgs.Result.Words.Count - 1].Text;  \\n        newColor = Color.FromName(cName);  \\n  \\n      }  \\n      else if (semantics.ContainsKey(\\\"colorStringList\\\") ^ semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n      {  \\n  \\n        // Determine whether to change background or foreground.  \\n        if (semantics.ContainsKey(\\\"applyChgToBackground\\\"))   \\n        {  \\n          changeBackGround = semantics[\\\"applyChgToBackground\\\"].Value is bool;  \\n        }  \\n  \\n        // Get the RGB color value.  \\n        if (semantics.ContainsKey(\\\"colorStringList\\\"))   \\n        {  \\n          newColor = Color.FromName((string)semantics[\\\"colorStringList\\\"].Value);  \\n        }  \\n        if (semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n        {  \\n          newColor = System.Drawing.Color.FromArgb((int)semantics[\\\"colorRGBValueList\\\"].Value);  \\n        }  \\n      }  \\n      else   \\n      {  \\n  \\n        // Throw an exception if the semantics do not contain the keys we  \\n        // support.  \\n        throw(new Exception(\\\"Unsupported semantics keys found.\\\"));  \\n      }  \\n    }  \\n  \\n    catch (Exception exp)   \\n    {  \\n      MessageBox.Show(String.Format(\\\"Unable to process color semantics.:\\\\n{0}\\\\n\\\", exp.Message));  \\n      return;  \\n    }  \\n  \\n    // Change colors, either foreground or background.  \\n    if (changeBackGround)   \\n    {  \\n      BackColor = newColor;  \\n      float Bright = BackColor.GetBrightness();  \\n      float Hue = BackColor.GetHue();  \\n      float Sat = BackColor.GetSaturation();  \\n  \\n      // Make sure that text is readable regardless of the background.  \\n      if (BackColor.GetBrightness() <= .50)   \\n      {  \\n        ForeColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        ForeColor = Color.Black;  \\n      }  \\n    }  \\n    else   \\n    {  \\n      ForeColor = newColor;  \\n      float Bright = ForeColor.GetBrightness();  \\n      float Hue = ForeColor.GetHue();  \\n      float Sat = ForeColor.GetSaturation();  \\n  \\n      // Make sure that text is readable regardless of Foreground.  \\n      if (ForeColor.GetBrightness() <= .50)   \\n      {  \\n        BackColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        BackColor = Color.Black;  \\n      }  \\n    }  \\n    return;  \\n  };  \\n```\"\n  syntax:\n    content: 'public sealed class SemanticValue : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue>>, System.Collections.Generic.IDictionary<string,System.Speech.Recognition.SemanticValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue>>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n  - System.Collections.Generic.IDictionary{System.String,System.Speech.Recognition.SemanticValue}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  - System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.#ctor(System.Object)\n  commentId: M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: SemanticValue(Object)\n  nameWithType: SemanticValue.SemanticValue(Object)\n  fullName: SemanticValue.SemanticValue(Object)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value.\n  remarks: \"There are no restrictions on the type of `value` to be stored.  \\n  \\n An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance.  \\n  \\n The value of the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property for the <xref:System.Speech.Recognition.SemanticValue> instance will be set to -1.  \\n  \\n A <xref:System.Speech.Recognition.SemanticValue> constructed with this method cannot be referenced by key name.\"\n  syntax:\n    content: public SemanticValue (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.\n  overload: System.Speech.Recognition.SemanticValue.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)\n  commentId: M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)\n  id: '#ctor(System.String,System.Object,System.Single)'\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: SemanticValue(String, Object, Single)\n  nameWithType: SemanticValue.SemanticValue(String, Object, Single)\n  fullName: SemanticValue.SemanticValue(String, Object, Single)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Initializes a new instance of the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> class and specifies a semantic value, a key name, and a confidence level.\n  remarks: \"There are no restrictions on the type of `value` to be stored.  \\n  \\n An application can retrieve `value` by using the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance.  \\n  \\n The `confidence` parameter (returned by the <xref:System.Speech.Recognition.SemanticValue.Confidence%2A> property on a <xref:System.Speech.Recognition.SemanticValue> instance), should be between 0.0 and 1.0.\"\n  syntax:\n    content: public SemanticValue (string keyName, object value, float confidence);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: A key that can be used to reference this <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.\n    - id: value\n      type: System.Object\n      description: An object containing information to be stored in the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.\n    - id: confidence\n      type: System.Single\n      description: A `float` containing an estimate of the certainty of semantic analysis.\n  overload: System.Speech.Recognition.SemanticValue.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Confidence\n  commentId: P:System.Speech.Recognition.SemanticValue.Confidence\n  id: Confidence\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Confidence\n  nameWithType: SemanticValue.Confidence\n  fullName: SemanticValue.Confidence\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns a relative measure of the certainty as to the correctness of the semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n  remarks: The <xref:System.Speech.Recognition.SemanticValue.Confidence%2A?displayProperty=fullName> property, which returns a measure of the correctness of semantic parsing, should not be confused with the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A?displayProperty=fullName> property, which returns a measure of the accuracy of speech recognition.\n  example:\n  - \"The following example is used to recursively traverse and then display information (including confidence) as a <xref:System.Windows.Forms.TreeNodeCollection>, or as the nodes making up the tree structure of the semantics used to recognize a phrase.  \\n  \\n```csharp  \\ninternal static void CreateSemanticsTreeNodes(  \\n        TreeNodeCollection nodes,  \\n        SemanticValue semantics,  \\n        String name)   \\n{  \\n  string semanticsText =   \\n      String.Format(\\\"  {0}  (Confidence {1})\\\", name,semantics.Confidence);  \\n  \\n  // Format integers as hexadecimal.  \\n  if (semantics.Value == null )  \\n  {  \\n    semanticsText = semanticsText + \\\" = null\\\";  \\n  }  \\n  else if (semantics.Value.GetType() == typeof(int))   \\n  {  \\n    semanticsText = String.Format(\\\"{0} = {1:X} \\\", semanticsText, semantics.Value);  \\n  }   \\n  else   \\n  {  \\n    semanticsText = semanticsText + \\\" = \\\" + semantics.Value.ToString();  \\n  }  \\n  \\n  TreeNode semanticsNode = new TreeNode(semanticsText);  \\n  foreach (KeyValuePair<String, SemanticValue> child in semantics)   \\n  {  \\n    CreateSemanticsTreeNodes(semanticsNode.Nodes, child.Value, child.Key);  \\n  }  \\n  nodes.Add(semanticsNode);  \\n}  \\n```\"\n  syntax:\n    content: public float Confidence { get; }\n    return:\n      type: System.Single\n      description: Returns a `float` that is a relative measure of the certainty of semantic parsing that returned the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n  overload: System.Speech.Recognition.SemanticValue.Confidence*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  commentId: M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.Contains(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.Contains(KeyValuePair<String,SemanticValue>)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a specific key and a specific instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> expressed as a key/value pair.\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}\n      description: An instance of <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> instantiated for a given value of a key string and a <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.\n    return:\n      type: System.Boolean\n      description: Returns a `bool` which is `true` if the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> contains an instance of <code>KeyValuePair<String, SemanticValue></code> for a specified value of the key string and the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>. Otherwise, `false` is returned.\n  overload: System.Speech.Recognition.SemanticValue.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.ContainsKey(System.String)\n  commentId: M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: SemanticValue.ContainsKey(String)\n  fullName: SemanticValue.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Indicates whether the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance collection contains a child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance with a given key string.\n  remarks: You can only access data by key value at runtime, for example to check *semantic[\"myKey\"].Value*, and this generates an exception. We recommend that you query the object with <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> before using <xref:System.Speech.Recognition.SemanticValue.Item%2A> with a given instance of <xref:System.Speech.Recognition.SemanticValue>.\n  example:\n  - \"The following example shows a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event designed to handle commands to change foreground and background color.  \\n  \\n After handling phrases that are recognized but have no semantic structure, the handler checks for the presence of appropriate keys using <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> (`applyChgToBackground`, `colorRGBValueList`, or `colorStringList)`,  and then processes the semantically organized data.  \\n  \\n```csharp  \\n  \\nnewGrammar.SpeechRecognized +=  \\n  delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n  \\n    // Retrieve the value of the semantic property.  \\n    bool changeBackGround = true;  \\n    string errorString = \\\"\\\";  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n  \\n    Color newColor = Color.Empty;  \\n  \\n    try   \\n    {  \\n      if (semantics.Count == 0 && semantics.Value==null)  \\n      {  \\n  \\n        // Signifies recognition by a grammar with no semantics.  \\n        // Parse the string, assuming that the last word is color,  \\n        // searching for background or foreground in input.  \\n        if (eventArgs.Result.Text.Contains(\\\"foreground\\\"))   \\n        {  \\n          changeBackGround = false;  \\n        }  \\n        string cName = eventArgs.Result.Words[eventArgs.Result.Words.Count - 1].Text;  \\n        newColor = Color.FromName(cName);  \\n  \\n      }  \\n      else if (semantics.ContainsKey(\\\"colorStringList\\\") ^ semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n      {  \\n  \\n        // Determine whether to change background or foreground.  \\n        if (semantics.ContainsKey(\\\"applyChgToBackground\\\"))   \\n        {  \\n          changeBackGround = semantics[\\\"applyChgToBackground\\\"].Value is bool;  \\n        }  \\n  \\n        // Get the RGB color value.  \\n        if (semantics.ContainsKey(\\\"colorStringList\\\"))   \\n        {  \\n          newColor = Color.FromName((string)semantics[\\\"colorStringList\\\"].Value);  \\n        }  \\n        if (semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n        {  \\n          newColor = System.Drawing.Color.FromArgb((int)semantics[\\\"colorRGBValueList\\\"].Value);  \\n        }  \\n      }  \\n      else   \\n      {  \\n  \\n        // Throw an exception if the semantics do not contain the keys we  \\n        // support.  \\n        throw(new Exception(\\\"Unsupported semantics keys found.\\\"));  \\n      }  \\n    }  \\n  \\n    catch (Exception exp)   \\n    {  \\n      MessageBox.Show(String.Format(\\\"Unable to process color semantics.:\\\\n{0}\\\\n\\\", exp.Message));  \\n      return;  \\n    }  \\n  \\n    // Change colors, either foreground or background.  \\n    if (changeBackGround)   \\n    {  \\n      BackColor = newColor;  \\n      float Bright = BackColor.GetBrightness();  \\n      float Hue = BackColor.GetHue();  \\n      float Sat = BackColor.GetSaturation();  \\n      // Make sure that text is readable regardless of background.  \\n      if (BackColor.GetBrightness() <= .50)   \\n      {  \\n        ForeColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        ForeColor = Color.Black;  \\n      }  \\n    }  \\n    else   \\n    {  \\n      ForeColor = newColor;  \\n      float Bright = ForeColor.GetBrightness();  \\n      float Hue = ForeColor.GetHue();  \\n      float Sat = ForeColor.GetSaturation();  \\n      // Make sure that text is readable regardless of Foreground.  \\n      if (ForeColor.GetBrightness() <= .50)   \\n      {  \\n        BackColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        BackColor = Color.Black;  \\n      }  \\n    }  \\n    return;  \\n  };  \\n```\"\n  syntax:\n    content: public bool ContainsKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: <xref href=\"System.String\"></xref> containing the key string used to identify a child instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n    return:\n      type: System.Boolean\n      description: Returns a `bool`, `true` if a child instance <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> tagged with the string <code>key</code> is found, `false` if not.\n  overload: System.Speech.Recognition.SemanticValue.ContainsKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Count\n  commentId: P:System.Speech.Recognition.SemanticValue.Count\n  id: Count\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SemanticValue.Count\n  fullName: SemanticValue.Count\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns the number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.\n  remarks: Recognition results that do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Count%2A> value of zero, as well as a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null`.\n  example:\n  - \"The following example shows a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event designed to handle commands to change foreground and background color.  \\n  \\n The handler identifies recognized phrases that have no underlying semantic structure by detecting a <xref:System.Speech.Recognition.SemanticValue.Count%2A> of zero and a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null`. This recognition output is then processed directly by parsing the raw text.  \\n  \\n In other cases, the handler uses keys to obtain the RGB components of a color name, to determine whether the command will change the foreground or background, or to indicate that no valid key was found.  \\n  \\n```csharp  \\n  \\nnewGrammar.SpeechRecognized +=  \\n  delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n  \\n    // Retrieve the value of the semantic property.  \\n    bool changeBackGround = true;  \\n    string errorString = \\\"\\\";  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n  \\n    Color newColor = Color.Empty;  \\n  \\n    try   \\n    {  \\n      if (semantics.Count == 0 && semantics.Value==null)  \\n      {  \\n        // Signifies recognition by a grammar with no semantics.  \\n        // Parse the string, assuming that the last word is color,  \\n        //  searching for background or foreground in input.  \\n        if (eventArgs.Result.Text.Contains(\\\"foreground\\\"))   \\n        {  \\n          changeBackGround = false;  \\n        }  \\n        string cName = eventArgs.Result.Words[eventArgs.Result.Words.Count - 1].Text;  \\n        newColor = Color.FromName(cName);  \\n  \\n      }  \\n      else if (semantics.ContainsKey(\\\"colorStringList\\\") ^ semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n      {  \\n  \\n        // Determine whether to change background or foreground.  \\n        if (semantics.ContainsKey(\\\"applyChgToBackground\\\"))   \\n        {  \\n          changeBackGround = semantics[\\\"applyChgToBackground\\\"].Value is bool;  \\n        }  \\n  \\n        // Get the RGB color value.  \\n        if (semantics.ContainsKey(\\\"colorStringList\\\"))   \\n        {  \\n          newColor = Color.FromName((string)semantics[\\\"colorStringList\\\"].Value);  \\n        }  \\n        if (semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n        {  \\n          newColor = System.Drawing.Color.FromArgb((int)semantics[\\\"colorRGBValueList\\\"].Value);  \\n        }  \\n      }  \\n      else   \\n      {  \\n  \\n        // Throw an exception if the semantics do not contain the keys we  \\n        // support.  \\n        throw(new Exception(\\\"Unsupported semantics keys found.\\\"));  \\n      }  \\n    }  \\n  \\n    catch (Exception exp)   \\n    {  \\n      MessageBox.Show(String.Format(\\\"Unable to process color semantics.:\\\\n{0}\\\\n\\\", exp.Message));  \\n      return;  \\n    }  \\n  \\n    // Change colors, either foreground or background.  \\n    if (changeBackGround)   \\n    {  \\n      BackColor = newColor;  \\n      float Bright = BackColor.GetBrightness();  \\n      float Hue = BackColor.GetHue();  \\n      float Sat = BackColor.GetSaturation();  \\n      // Make sure that text is readable regardless of background.  \\n      if (BackColor.GetBrightness() <= .50)   \\n      {  \\n        ForeColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        ForeColor = Color.Black;  \\n      }  \\n    }  \\n    else   \\n    {  \\n      ForeColor = newColor;  \\n      float Bright = ForeColor.GetBrightness();  \\n      float Hue = ForeColor.GetHue();  \\n      float Sat = ForeColor.GetSaturation();  \\n  \\n      // Make sure that text is readable regardless of Foreground.  \\n      if (ForeColor.GetBrightness() <= .50)   \\n      {  \\n        BackColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        BackColor = Color.Black;  \\n      }  \\n    }  \\n    return;  \\n  };  \\n```\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> objects under the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n  overload: System.Speech.Recognition.SemanticValue.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Equals(System.Object)\n  commentId: M:System.Speech.Recognition.SemanticValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SemanticValue.Equals(Object)\n  fullName: SemanticValue.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Determines whether a specified object is an instance of <code>SemanticValue</code> and equal to the current instance of <code>SemanticValue</code>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified Object is equal to the current Object; otherwise, `false`.'\n  overload: System.Speech.Recognition.SemanticValue.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.GetHashCode\n  commentId: M:System.Speech.Recognition.SemanticValue.GetHashCode\n  id: GetHashCode\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SemanticValue.GetHashCode()\n  fullName: SemanticValue.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Provides a hash code for a <code>SemanticValue</code> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> object.\n  overload: System.Speech.Recognition.SemanticValue.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Item(System.String)\n  commentId: P:System.Speech.Recognition.SemanticValue.Item(System.String)\n  id: Item(System.String)\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SemanticValue.Item(String)\n  fullName: SemanticValue.Item(String)\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns child <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instances that  belong to the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n  remarks: \"The <xref:System.Speech.Recognition.SemanticValue.Item%2A> is read-only and generates exceptions if members are modified.  \\n  \\n You can only access data by key value at run-time, not at compile-time, for example to check `semantic[\\\"myKey\\\"].Value`. Specifying a key that is not present generates an exception.  \\n  \\n To detect the presence of a given key, use the <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> property on an <xref:System.Speech.Recognition.SemanticValue> instance.\"\n  example:\n  - \"The following example shows a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event designed to handle commands to change foreground and background color.  \\n  \\n After handling recognized phrases that have no semantic structure, the handler checks for the presence of appropriate keys using <xref:System.Speech.Recognition.SemanticValue.ContainsKey%2A> (`applyChgToBackground`, `colorRGBValueList`, or `colorStringList)`, and then uses the <xref:System.Speech.Recognition.SemanticValue.Item%2A> property to obtain the nodes with needed information.  \\n  \\n The use of <xref:System.Speech.Recognition.SemanticValue.Item%2A> is highlighted below.  \\n  \\n```csharp  \\n  \\nnewGrammar.SpeechRecognized +=  \\n  delegate(object sender, SpeechRecognizedEventArgs eventArgs)   \\n  {  \\n  \\n    // Retrieve the value of the semantic property.  \\n    bool changeBackGround = true;  \\n    string errorString = \\\"\\\";  \\n    SemanticValue semantics = eventArgs.Result.Semantics;  \\n  \\n    Color newColor = Color.Empty;  \\n  \\n    try   \\n    {  \\n      if (semantics.Count == 0 && semantics.Value==null)  \\n      {  \\n        // Signifies recognition by a grammar with no semantics.  \\n        // Parse the string, assuming that the last word is color,  \\n        //  searching for background or foreground in input.  \\n        if (eventArgs.Result.Text.Contains(\\\"foreground\\\"))   \\n        {  \\n          changeBackGround = false;  \\n        }  \\n        string cName = eventArgs.Result.Words[eventArgs.Result.Words.Count - 1].Text;  \\n        newColor = Color.FromName(cName);  \\n  \\n      }  \\n      else if (semantics.ContainsKey(\\\"colorStringList\\\") ^ semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n      {  \\n  \\n        // Determine whether to change background or foreground.  \\n        if (semantics.ContainsKey(\\\"applyChgToBackground\\\"))   \\n        {  \\n          changeBackGround = semantics[\\\"applyChgToBackground\\\"].Value is bool;  \\n        }  \\n  \\n        // Get the RGB color value.  \\n        if (semantics.ContainsKey(\\\"colorStringList\\\"))   \\n        {  \\n          newColor = Color.FromName((string)semantics[\\\"colorStringList\\\"].Value);  \\n        }  \\n        if (semantics.ContainsKey(\\\"colorRGBValueList\\\"))   \\n        {  \\n          newColor = System.Drawing.Color.FromArgb((int)semantics[\\\"colorRGBValueList\\\"].Value);  \\n        }  \\n      }  \\n      else   \\n      {  \\n  \\n        // Throw an exception if the semantics do not contain the keys we  \\n        // support.  \\n        throw(new Exception(\\\"Unsupported semantic keys found.\\\"));  \\n      }  \\n    }  \\n  \\n    catch (Exception exp)   \\n    {  \\n      MessageBox.Show(String.Format(\\\"Unable to process color semantics.:\\\\n{0}\\\\n\\\", exp.Message));  \\n      return;  \\n    }  \\n  \\n    // Change colors, either foreground or background.  \\n    if (changeBackGround)   \\n    {  \\n      BackColor = newColor;  \\n      float Bright = BackColor.GetBrightness();  \\n      float Hue = BackColor.GetHue();  \\n      float Sat = BackColor.GetSaturation();  \\n      // Make sure that text is readable regardless of background.  \\n      if (BackColor.GetBrightness() <= .50)   \\n      {  \\n        ForeColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        ForeColor = Color.Black;  \\n      }  \\n    }  \\n    else   \\n    {  \\n      ForeColor = newColor;  \\n      float Bright = ForeColor.GetBrightness();  \\n      float Hue = ForeColor.GetHue();  \\n      float Sat = ForeColor.GetSaturation();  \\n  \\n      // Make sure that text is readable regardless of the foreground.  \\n      if (ForeColor.GetBrightness() <= .50)   \\n      {  \\n        BackColor = Color.White;  \\n      }  \\n      else   \\n      {  \\n        BackColor = Color.Black;  \\n      }  \\n    }  \\n    return;  \\n  };  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.SemanticValue this[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: A key for a `KeyValuePair<String, SemanticValue>` contained in the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n    return:\n      type: System.Speech.Recognition.SemanticValue\n      description: 'Returns a child of the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> that can be indexed as part of a key value pair: <code>KeyValuePair<String,</code><code>SemanticValue></code>.'\n  overload: System.Speech.Recognition.SemanticValue.Item*\n  exceptions:\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: Thrown if no child member of the current instance of <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> has the key matching the <code>key</code> parameter.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Thrown if code attempts to change the <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> at a given index.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.Value\n  commentId: P:System.Speech.Recognition.SemanticValue.Value\n  id: Value\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SemanticValue.Value\n  fullName: SemanticValue.Value\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: A read-only property that returns the information contained in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref>.\n  remarks: Recognition results which do not make use of semantic parsing always have a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of `null` and a <xref:System.Speech.Recognition.SemanticValue.Count%2A> property of zero.\n  example:\n  - \"The following example is used to recursively traverse and then display information (including confidence) as a <xref:System.Windows.Forms.TreeNodeCollection>, or as the nodes making up the tree structure of the semantics used to recognize a phrase.  \\n  \\n```csharp  \\ninternal static void CreateSemanticsTreeNodes(  \\n          TreeNodeCollection nodes,  \\n          SemanticValue semantics,  \\n          String name)   \\n{  \\n  string semanticsText =   \\n      String.Format(\\\"  {0} ( Confidence {1})\\\", name,semantics.Confidence);  \\n  \\n  // Format integers as hexadecimal.  \\n  if (semantics.Value == null )  \\n  {  \\n    semanticsText = semanticsText + \\\" = null\\\";  \\n  }  \\n  else if (semantics.Value.GetType() == typeof(int))   \\n  {  \\n    semanticsText = String.Format(\\\"{0} = {1:X} \\\", semanticsText, semantics.Value);  \\n  }  \\n  else   \\n  {  \\n    semanticsText = semanticsText + \\\" = \\\" + semantics.Value.ToString();  \\n  }  \\n  \\n  TreeNode semanticsNode = new TreeNode(semanticsText);  \\n  foreach (KeyValuePair<String, SemanticValue> child in semantics)   \\n  {  \\n    CreateSemanticsTreeNodes(semanticsNode.Nodes, child.Value, child.Key);  \\n  }  \\n  nodes.Add(semanticsNode);  \\n}  \\n```\"\n  syntax:\n    content: public object Value { get; }\n    return:\n      type: System.Object\n      description: Returns an <xref href=\"System.Object\"></xref> instance containing the information stored in the current <xref href=\"System.Speech.Recognition.SemanticValue\"></xref> instance.\n  overload: System.Speech.Recognition.SemanticValue.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: void ICollection<KeyValuePair<string,SemanticValue>>.Add (System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue> key);\n    parameters:\n    - id: key\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#Clear\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: void ICollection<KeyValuePair<string,SemanticValue>>.Clear ();\n    parameters: []\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: void ICollection<KeyValuePair<string,SemanticValue>>.CopyTo (System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue>[] array, int index);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[]\n      description: ''\n    - id: index\n      type: System.Int32\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly\n  commentId: P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: bool ICollection<KeyValuePair<string,SemanticValue>>.Remove (System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue> key);\n    parameters:\n    - id: key\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary<System#String,System#Speech#Recognition#SemanticValue>#Add(System.String,System.Speech.Recognition.SemanticValue)\n  id: System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: void IDictionary<string,SemanticValue>.Add (string key, System.Speech.Recognition.SemanticValue value);\n    parameters:\n    - id: key\n      type: System.String\n      description: ''\n    - id: value\n      type: System.Speech.Recognition.SemanticValue\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys\n  commentId: P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary<System#String,System#Speech#Recognition#SemanticValue>#Keys\n  id: System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IDictionary<String,SemanticValue>.Keys\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Keys\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Keys\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: System.Collections.Generic.ICollection<string> System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary<System#String,System#Speech#Recognition#SemanticValue>#Remove(System.String)\n  id: System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IDictionary<String,SemanticValue>.Remove(String)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Remove(String)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Remove(String)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: bool IDictionary<string,SemanticValue>.Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary<System#String,System#Speech#Recognition#SemanticValue>#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)\n  id: System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: bool IDictionary<string,SemanticValue>.TryGetValue (string key, out System.Speech.Recognition.SemanticValue value);\n    parameters:\n    - id: key\n      type: System.String\n      description: ''\n    - id: value\n      type: System.Speech.Recognition.SemanticValue\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values\n  commentId: P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary<System#String,System#Speech#Recognition#SemanticValue>#Values\n  id: System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IDictionary<String,SemanticValue>.Values\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Values\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Values\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: System.Collections.Generic.ICollection<System.Speech.Recognition.SemanticValue> System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Speech.Recognition.SemanticValue}\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Speech#Recognition#SemanticValue>>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n  nameWithType: SemanticValue.IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n  fullName: SemanticValue.IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,System.Speech.Recognition.SemanticValue>> IEnumerable<KeyValuePair<string,SemanticValue>>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n      description: ''\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Speech.Recognition.SemanticValue\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: SemanticValue.IEnumerable.GetEnumerator()\n  fullName: SemanticValue.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns an enumerator that iterates through a collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Returns an enumerator that iterates through a collection.\n  overload: System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.KeyNotFoundException\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Speech.Recognition.SemanticValue.#ctor(System.Object)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: SemanticValue(Object)\n  nameWithType: SemanticValue.SemanticValue(Object)\n  fullName: SemanticValue.SemanticValue(Object)\n- uid: System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: SemanticValue(String, Object, Single)\n  nameWithType: SemanticValue.SemanticValue(String, Object, Single)\n  fullName: SemanticValue.SemanticValue(String, Object, Single)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Speech.Recognition.SemanticValue.Confidence\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Confidence\n  nameWithType: SemanticValue.Confidence\n  fullName: SemanticValue.Confidence\n- uid: System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Contains(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.Contains(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.Contains(KeyValuePair<String,SemanticValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Speech.Recognition.SemanticValue\n  name: SemanticValue\n  nameWithType: SemanticValue\n  fullName: System.Speech.Recognition.SemanticValue\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,SemanticValue>\n  nameWithType: KeyValuePair<String,SemanticValue>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.SemanticValue.ContainsKey(System.String)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: SemanticValue.ContainsKey(String)\n  fullName: SemanticValue.ContainsKey(String)\n- uid: System.Speech.Recognition.SemanticValue.Count\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Count\n  nameWithType: SemanticValue.Count\n  fullName: SemanticValue.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Speech.Recognition.SemanticValue.Equals(System.Object)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SemanticValue.Equals(Object)\n  fullName: SemanticValue.Equals(Object)\n- uid: System.Speech.Recognition.SemanticValue.GetHashCode\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SemanticValue.GetHashCode()\n  fullName: SemanticValue.GetHashCode()\n- uid: System.Speech.Recognition.SemanticValue.Item(System.String)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Item(String)\n  nameWithType: SemanticValue.Item(String)\n  fullName: SemanticValue.Item(String)\n- uid: System.Speech.Recognition.SemanticValue.Value\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Value\n  nameWithType: SemanticValue.Value\n  fullName: SemanticValue.Value\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Add(KeyValuePair<String,SemanticValue>)\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Clear()\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.CopyTo(KeyValuePair<String,SemanticValue>[], Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[]\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,SemanticValue>[]\n  nameWithType: KeyValuePair<String,SemanticValue>[]\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.IsReadOnly\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n  nameWithType: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n  fullName: SemanticValue.ICollection<KeyValuePair<String,SemanticValue>>.Remove(KeyValuePair<String,SemanticValue>)\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Add(String, SemanticValue)\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IDictionary<String,SemanticValue>.Keys\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Keys\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Keys\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove(System.String)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IDictionary<String,SemanticValue>.Remove(String)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Remove(String)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Remove(String)\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.TryGetValue(String, SemanticValue)\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IDictionary<String,SemanticValue>.Values\n  nameWithType: SemanticValue.IDictionary<String,SemanticValue>.Values\n  fullName: SemanticValue.IDictionary<String,SemanticValue>.Values\n- uid: System.Collections.Generic.ICollection{System.Speech.Recognition.SemanticValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<SemanticValue>\n  nameWithType: ICollection<SemanticValue>\n  fullName: System.Collections.Generic.ICollection<System.Speech.Recognition.SemanticValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n  nameWithType: SemanticValue.IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n  fullName: SemanticValue.IEnumerable<KeyValuePair<String,SemanticValue>>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<String,SemanticValue>>\n  nameWithType: IEnumerator<KeyValuePair<String,SemanticValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: SemanticValue.IEnumerable.GetEnumerator()\n  fullName: SemanticValue.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Speech.Recognition.SemanticValue.#ctor*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: SemanticValue\n  nameWithType: SemanticValue.SemanticValue\n  fullName: SemanticValue.SemanticValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Confidence*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Confidence\n  nameWithType: SemanticValue.Confidence\n  fullName: SemanticValue.Confidence\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Contains*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Contains\n  nameWithType: SemanticValue.Contains\n  fullName: SemanticValue.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.ContainsKey*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: ContainsKey\n  nameWithType: SemanticValue.ContainsKey\n  fullName: SemanticValue.ContainsKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Count*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Count\n  nameWithType: SemanticValue.Count\n  fullName: SemanticValue.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Equals*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Equals\n  nameWithType: SemanticValue.Equals\n  fullName: SemanticValue.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.GetHashCode*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SemanticValue.GetHashCode\n  fullName: SemanticValue.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Item*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Item\n  nameWithType: SemanticValue.Item\n  fullName: SemanticValue.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.Value*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: Value\n  nameWithType: SemanticValue.Value\n  fullName: SemanticValue.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Add*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Add\n  nameWithType: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Add\n  fullName: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Clear*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Clear\n  nameWithType: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Clear\n  fullName: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#CopyTo*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.CopyTo\n  nameWithType: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.CopyTo\n  fullName: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#IsReadOnly*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.IsReadOnly\n  nameWithType: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.IsReadOnly\n  fullName: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#Remove*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Remove\n  nameWithType: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Remove\n  fullName: SemanticValue.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Add*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Add\n  nameWithType: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Add\n  fullName: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Keys*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Keys\n  nameWithType: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Keys\n  fullName: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Remove*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Remove\n  nameWithType: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Remove\n  fullName: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#TryGetValue*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.TryGetValue\n  nameWithType: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.TryGetValue\n  fullName: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.TryGetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String,System#Speech#Recognition#SemanticValue}#Values*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Values\n  nameWithType: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Values\n  fullName: SemanticValue.System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>.Values\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Speech#Recognition#SemanticValue}}#GetEnumerator*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.GetEnumerator\n  nameWithType: SemanticValue.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.GetEnumerator\n  fullName: SemanticValue.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Speech.Recognition.SemanticValue\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: SemanticValue.System.Collections.IEnumerable.GetEnumerator\n  fullName: SemanticValue.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SemanticValue.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<KeyValuePair<String,SemanticValue>>\n  nameWithType: ICollection<KeyValuePair<String,SemanticValue>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Speech.Recognition.SemanticValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,SemanticValue>\n  nameWithType: IDictionary<String,SemanticValue>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Speech.Recognition.SemanticValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,SemanticValue>>\n  nameWithType: IEnumerable<KeyValuePair<String,SemanticValue>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Speech.Recognition.SemanticValue>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Speech.Recognition.SemanticValue\n    name: SemanticValue\n    nameWithType: SemanticValue\n    fullName: System.Speech.Recognition.SemanticValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}