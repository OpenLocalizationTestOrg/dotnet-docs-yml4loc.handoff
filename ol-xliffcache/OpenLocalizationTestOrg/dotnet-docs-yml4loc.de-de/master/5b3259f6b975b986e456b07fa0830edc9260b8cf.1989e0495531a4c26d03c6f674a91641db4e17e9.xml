{"nodes":[{"content":"Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.  \n  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"pos":[0,117],"content":"Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.","nodes":[{"content":"Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.","pos":[0,117],"nodes":[{"content":"Specifies that this assembly provides management instrumentation.","pos":[0,65]},{"content":"This attribute should appear one time per assembly.","pos":[66,117]}]}]},{"pos":[124,440],"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[0,193]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[194,316],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]}],"pos":[869,1314],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set for the root\\default namespace. This is the default constructor.","nodes":[{"pos":[0,193],"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set for the root\\default namespace. This is the default constructor.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"&gt;&lt;/xref&gt;</ph> class that is set for the root\\default namespace.","pos":[0,160],"source":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set for the root\\default namespace."},{"content":"This is the default constructor.","pos":[161,193]}]}],"pos":[6251,6445],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[6456,6723],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace for instrumentation within this assembly.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"&gt;&lt;/xref&gt;</ph> class that is set to the specified namespace for instrumentation within this assembly.","source":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace for instrumentation within this assembly."}],"pos":[7980,8178],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[8189,8456],"yaml":true,"extradata":"MT"},{"content":"The namespace for instrumentation instances and events.","nodes":[{"pos":[0,55],"content":"The namespace for instrumentation instances and events.","nodes":[{"content":"The namespace for instrumentation instances and events.","pos":[0,55]}]}],"pos":[8617,8673],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace and security settings for instrumentation within this assembly.","nodes":[{"pos":[0,219],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"&gt;&lt;/xref&gt;</ph> class that is set to the specified namespace and security settings for instrumentation within this assembly.","source":"Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace and security settings for instrumentation within this assembly."}],"pos":[9921,10141],"yaml":true},{"content":"## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[3,26],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[30,263],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[10152,10419],"yaml":true,"extradata":"MT"},{"content":"The namespace for instrumentation instances and events.","nodes":[{"pos":[0,55],"content":"The namespace for instrumentation instances and events.","nodes":[{"content":"The namespace for instrumentation instances and events.","pos":[0,55]}]}],"pos":[10607,10663],"yaml":true},{"content":"A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","nodes":[{"pos":[0,149],"content":"A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","nodes":[{"content":"A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","pos":[0,149]}]}],"pos":[10737,10887],"yaml":true},{"content":"Gets or sets the namespace for instrumentation instances and events in this assembly.","nodes":[{"pos":[0,85],"content":"Gets or sets the namespace for instrumentation instances and events in this assembly.","nodes":[{"content":"Gets or sets the namespace for instrumentation instances and events in this assembly.","pos":[0,85]}]}],"pos":[11995,12081],"yaml":true},{"content":"It is highly recommended that the namespace name be specified by the assembly, and that it should be a unique namespace per assembly, or per application. Having a specific namespace for each assembly or application instrumentation allows more granularity for securing access to instrumentation provided by different assemblies or applications.  \n  \n## Property Value  \n If not specified, the default namespace will be set as \"\\\\\\\\.\\root\\default\". Otherwise, a string indicating the name of the namespace for instrumentation instances and events in this assembly.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,343],"content":"It is highly recommended that the namespace name be specified by the assembly, and that it should be a unique namespace per assembly, or per application. Having a specific namespace for each assembly or application instrumentation allows more granularity for securing access to instrumentation provided by different assemblies or applications.","nodes":[{"content":"It is highly recommended that the namespace name be specified by the assembly, and that it should be a unique namespace per assembly, or per application. Having a specific namespace for each assembly or application instrumentation allows more granularity for securing access to instrumentation provided by different assemblies or applications.","pos":[0,343],"nodes":[{"content":"It is highly recommended that the namespace name be specified by the assembly, and that it should be a unique namespace per assembly, or per application.","pos":[0,153]},{"content":"Having a specific namespace for each assembly or application instrumentation allows more granularity for securing access to instrumentation provided by different assemblies or applications.","pos":[154,343]}]}]},{"pos":[352,366],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[370,562],"content":"If not specified, the default namespace will be set as \"\\\\\\\\.\\root\\default\". Otherwise, a string indicating the name of the namespace for instrumentation instances and events in this assembly.","nodes":[{"content":"If not specified, the default namespace will be set as \"\\\\\\\\.\\root\\default\". Otherwise, a string indicating the name of the namespace for instrumentation instances and events in this assembly.","pos":[0,192],"nodes":[{"content":"If not specified, the default namespace will be set as \"<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph>.\\root\\default\".","pos":[0,76],"source":"If not specified, the default namespace will be set as \"\\\\\\\\.\\root\\default\"."},{"content":"Otherwise, a string indicating the name of the namespace for instrumentation instances and events in this assembly.","pos":[77,192]}]}]},{"pos":[571,594],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[598,831],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[12092,12940],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.String\"></xref> value containing the name of the namespace for instrumentation instances and events in this assembly.","nodes":[{"pos":[0,146],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value containing the name of the namespace for instrumentation instances and events in this assembly.","source":"Returns a <xref href=\"System.String\"></xref> value containing the name of the namespace for instrumentation instances and events in this assembly."}],"pos":[13057,13204],"yaml":true},{"content":"Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","nodes":[{"pos":[0,162],"content":"Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","nodes":[{"content":"Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","pos":[0,162]}]}],"pos":[14350,14513],"yaml":true},{"content":"Users or groups not specified in this security descriptor may still run the application, but cannot provide instrumentation from this assembly.  \n  \n## Property Value  \n If null, the default value is defined as the Local Administrators Group. This will only allow members of the local administrators group to publish data and fire events from this assembly. Otherwise, this is a string in SDDL format representing the security descriptor that defines which users and groups can provide instrumentation data and events from this application.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"pos":[0,143],"content":"Users or groups not specified in this security descriptor may still run the application, but cannot provide instrumentation from this assembly.","nodes":[{"content":"Users or groups not specified in this security descriptor may still run the application, but cannot provide instrumentation from this assembly.","pos":[0,143]}]},{"pos":[152,166],"content":"Property Value","linkify":"Property Value","nodes":[{"content":"Property Value","pos":[0,14]}]},{"pos":[170,540],"content":"If null, the default value is defined as the Local Administrators Group. This will only allow members of the local administrators group to publish data and fire events from this assembly. Otherwise, this is a string in SDDL format representing the security descriptor that defines which users and groups can provide instrumentation data and events from this application.","nodes":[{"content":"If null, the default value is defined as the Local Administrators Group. This will only allow members of the local administrators group to publish data and fire events from this assembly. Otherwise, this is a string in SDDL format representing the security descriptor that defines which users and groups can provide instrumentation data and events from this application.","pos":[0,370],"nodes":[{"content":"If null, the default value is defined as the Local Administrators Group.","pos":[0,72]},{"content":"This will only allow members of the local administrators group to publish data and fire events from this assembly.","pos":[73,187]},{"content":"Otherwise, this is a string in SDDL format representing the security descriptor that defines which users and groups can provide instrumentation data and events from this application.","pos":[188,370]}]}]},{"pos":[549,572],"content":".NET Framework Security","linkify":".NET Framework Security","nodes":[{"content":".NET Framework Security","pos":[0,23]}]},{"pos":[576,809],"content":"Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).","nodes":[{"content":"Full trust for the immediate caller.","pos":[0,36]},{"content":"This member cannot be used by partially trusted code.","pos":[37,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using Libraries from Partially Trusted Code<ept id=\"p1\">](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)</ept>.","pos":[91,233],"source":" For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."}]}],"pos":[14524,15342],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.String\"></xref> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","nodes":[{"pos":[0,213],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.","source":"Returns a <xref href=\"System.String\"></xref> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly."}],"pos":[15464,15678],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.InstrumentedAttribute\n  commentId: T:System.Management.Instrumentation.InstrumentedAttribute\n  id: InstrumentedAttribute\n  children:\n  - System.Management.Instrumentation.InstrumentedAttribute.#ctor\n  - System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)\n  - System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)\n  - System.Management.Instrumentation.InstrumentedAttribute.NamespaceName\n  - System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor\n  langs:\n  - csharp\n  name: InstrumentedAttribute\n  nameWithType: InstrumentedAttribute\n  fullName: System.Management.Instrumentation.InstrumentedAttribute\n  type: Class\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: \"Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly)]\n\n      public class InstrumentedAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor\n  commentId: M:System.Management.Instrumentation.InstrumentedAttribute.#ctor\n  id: '#ctor'\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  langs:\n  - csharp\n  name: InstrumentedAttribute()\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute()\n  fullName: InstrumentedAttribute.InstrumentedAttribute()\n  type: Constructor\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set for the root\\default namespace. This is the default constructor.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public InstrumentedAttribute ();\n    parameters: []\n  overload: System.Management.Instrumentation.InstrumentedAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)\n  commentId: M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  langs:\n  - csharp\n  name: InstrumentedAttribute(String)\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute(String)\n  fullName: InstrumentedAttribute.InstrumentedAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace for instrumentation within this assembly.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public InstrumentedAttribute (string namespaceName);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: The namespace for instrumentation instances and events.\n  overload: System.Management.Instrumentation.InstrumentedAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)\n  commentId: M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  langs:\n  - csharp\n  name: InstrumentedAttribute(String, String)\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute(String, String)\n  fullName: InstrumentedAttribute.InstrumentedAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.Instrumentation.InstrumentedAttribute\"></xref> class that is set to the specified namespace and security settings for instrumentation within this assembly.\n  remarks: \"## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public InstrumentedAttribute (string namespaceName, string securityDescriptor);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: The namespace for instrumentation instances and events.\n    - id: securityDescriptor\n      type: System.String\n      description: A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.\n  overload: System.Management.Instrumentation.InstrumentedAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentedAttribute.NamespaceName\n  commentId: P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName\n  id: NamespaceName\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  langs:\n  - csharp\n  name: NamespaceName\n  nameWithType: InstrumentedAttribute.NamespaceName\n  fullName: InstrumentedAttribute.NamespaceName\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets the namespace for instrumentation instances and events in this assembly.\n  remarks: \"It is highly recommended that the namespace name be specified by the assembly, and that it should be a unique namespace per assembly, or per application. Having a specific namespace for each assembly or application instrumentation allows more granularity for securing access to instrumentation provided by different assemblies or applications.  \\n  \\n## Property Value  \\n If not specified, the default namespace will be set as \\\"\\\\\\\\\\\\\\\\.\\\\root\\\\default\\\". Otherwise, a string indicating the name of the namespace for instrumentation instances and events in this assembly.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public string NamespaceName { get; }\n    return:\n      type: System.String\n      description: Returns a <xref href=\"System.String\"></xref> value containing the name of the namespace for instrumentation instances and events in this assembly.\n  overload: System.Management.Instrumentation.InstrumentedAttribute.NamespaceName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor\n  commentId: P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor\n  id: SecurityDescriptor\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  langs:\n  - csharp\n  name: SecurityDescriptor\n  nameWithType: InstrumentedAttribute.SecurityDescriptor\n  fullName: InstrumentedAttribute.SecurityDescriptor\n  type: Property\n  assemblies:\n  - System.Management\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.\n  remarks: \"Users or groups not specified in this security descriptor may still run the application, but cannot provide instrumentation from this assembly.  \\n  \\n## Property Value  \\n If null, the default value is defined as the Local Administrators Group. This will only allow members of the local administrators group to publish data and fire events from this assembly. Otherwise, this is a string in SDDL format representing the security descriptor that defines which users and groups can provide instrumentation data and events from this application.  \\n  \\n## .NET Framework Security  \\n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).\"\n  syntax:\n    content: public string SecurityDescriptor { get; }\n    return:\n      type: System.String\n      description: Returns a <xref href=\"System.String\"></xref> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.\n  overload: System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: InstrumentedAttribute()\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute()\n  fullName: InstrumentedAttribute.InstrumentedAttribute()\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: InstrumentedAttribute(String)\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute(String)\n  fullName: InstrumentedAttribute.InstrumentedAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: InstrumentedAttribute(String, String)\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute(String, String)\n  fullName: InstrumentedAttribute.InstrumentedAttribute(String, String)\n- uid: System.Management.Instrumentation.InstrumentedAttribute.NamespaceName\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: NamespaceName\n  nameWithType: InstrumentedAttribute.NamespaceName\n  fullName: InstrumentedAttribute.NamespaceName\n- uid: System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: SecurityDescriptor\n  nameWithType: InstrumentedAttribute.SecurityDescriptor\n  fullName: InstrumentedAttribute.SecurityDescriptor\n- uid: System.Management.Instrumentation.InstrumentedAttribute.#ctor*\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: InstrumentedAttribute\n  nameWithType: InstrumentedAttribute.InstrumentedAttribute\n  fullName: InstrumentedAttribute.InstrumentedAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n- uid: System.Management.Instrumentation.InstrumentedAttribute.NamespaceName*\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: NamespaceName\n  nameWithType: InstrumentedAttribute.NamespaceName\n  fullName: InstrumentedAttribute.NamespaceName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n- uid: System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor*\n  parent: System.Management.Instrumentation.InstrumentedAttribute\n  isExternal: false\n  name: SecurityDescriptor\n  nameWithType: InstrumentedAttribute.SecurityDescriptor\n  fullName: InstrumentedAttribute.SecurityDescriptor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/InstrumentedAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}