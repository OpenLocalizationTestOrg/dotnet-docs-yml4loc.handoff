<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6387aa0653b8f3f95cd6a1e0283ad9fb8c72e994</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.Mail.SmtpClient.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06af4cefbdbc824db24a1f346714883f201e4e33</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f560d556729c9dad23185c0e5534be3ac2d06a68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows applications to send e-mail by using the Simple Mail Transfer Protocol (SMTP).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class is used to send e-mail to an SMTP server for delivery.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SMTP protocol is defined in RFC 2821, which is available at <bpt id="p1">[</bpt>http://www.ietf.org<ept id="p1">](http://www.ietf.org/)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The classes shown in the following table are used to construct e-mail messages that can be sent using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Class</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents file attachments.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class allows you to attach files, streams, or text to an e-mail message.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents the e-mail address of the sender and recipients.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents an e-mail message.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To construct and send an e-mail message by using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>, you must specify the following information:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SMTP host server that you use to send e-mail.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Credentials for authentication, if required by the SMTP server.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The e-mail address of the sender.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods that take a <ph id="ph3">`from`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also see the <ph id="ph1">&lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The e-mail address or addresses of the recipients.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods that take a <ph id="ph3">`recipient`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also see the <ph id="ph1">&lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message content.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods that take a <ph id="ph3">`body`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also see the <ph id="ph1">&lt;xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include an attachment with an e-mail message, first create the attachment by using the <ph id="ph1">&lt;xref:System.Net.Mail.Attachment&gt;</ph> class, and then add it to the message by using the <ph id="ph2">&lt;xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the e-mail reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For clients that cannot display the attachment in its original form, you can specify alternate views by using the <ph id="ph1">&lt;xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the application or machine configuration files to specify default host, port, and credentials values for all <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send the e-mail message and block while waiting for the e-mail to be transmitted to the SMTP server, use one of the synchronous <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow your program's main thread to continue executing while the e-mail is transmitted, use one of the asynchronous <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> event is raised when a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation completes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive this event, you must add a <ph id="ph1">&lt;xref:System.Net.Mail.SendCompletedEventHandler&gt;</ph> delegate to <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SendCompletedEventHandler&gt;</ph> delegate must reference a callback method that handles notification of <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cancel an asynchronous e-mail transmission, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is an e-mail transmission in progress and you call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> again, you will receive an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection established by the current instance of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of authenticating and establishing a TLS session can be expensive operations.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application may re-use the same <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object to send many different emails to the same SMTP server and to many different SMTP servers.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, there is no way to determine when an application is finished using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object and it should be cleaned up.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class has no <ph id="ph2">`Finalize`</ph> method, so an application must call <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> to explicitly free up resources.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method iterates through all established connections to the SMTP server specified in the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> property and sends a QUIT message followed by gracefully ending the TCP connection.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method also releases the unmanaged resources used by the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and optionally disposes of the managed resources.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> class by using configuration file settings.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties for the new <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> by using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> class that sends e-mail by using the specified SMTP server.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`host`</ph> parameter is used to initialize the value of the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties are initialized by using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`host`</ph> is <ph id="ph2">`null`</ph> or equal to <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> is initialized using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using the application and machine configuration files, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If information is specified using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> constructors or properties, this information overrides the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the name or IP address of the host computer used for SMTP transactions.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> class that sends e-mail by using the specified SMTP server and port.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`host`</ph> and <ph id="ph2">`port`</ph> parameters set the value of the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`host`</ph> is <ph id="ph2">`null`</ph> or equal to <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> is initialized using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`port`</ph> is zero, <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> is initialized using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property is initialized using the settings in the application or machine configuration files.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using the application and machine configuration files, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If information is specified using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> constructors or properties, this information overrides the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the name or IP address of the host used for SMTP transactions.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> greater than zero that contains the port to be used on <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">host</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;port&lt;/code&gt;</ph> cannot be less than zero.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specify which certificates should be used to establish the Secure Sockets Layer (SSL) connection.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client certificates are, by default, optional; however, the server configuration might require that the client present a valid certificate as part of the initial connection negotiation.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.ClientCertificates%2A&gt;</ph> is empty.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;&lt;/xref&gt;</ph>, holding one or more client certificates.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default value is derived from the mail configuration attributes in a configuration file.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets the credentials used to authenticate the sender.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some SMTP servers require that the client be authenticated before the server will send e-mail on its behalf.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use your default network credentials, you can set the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> to <ph id="ph2">`true`</ph> instead of setting this property.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> property is set to <ph id="ph2">`false,`</ph> then the value set in the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property will be used for the credentials when connecting to the server.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property has not been set, then mail is sent to the server anonymously.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Credentials information can also be specified using the application and machine configuration files.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If information is specified using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property, this information overrides the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide credentials for basic authentication, they are sent to the server in clear text.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can present a security issue because your credentials can be seen, and then used by others.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.ICredentialsByHost"&gt;&lt;/xref&gt;</ph> that represents the credentials to use for authentication; or <ph id="ph2">`null`</ph> if no credentials have been specified.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You cannot change the value of this property when an email is being sent.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the delivery format used by <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> to send e-mail.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpDeliveryFormat"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The delivery format used by <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies how outgoing email messages will be handled.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delivery methods include:</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>An SMTP server.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Moving the email into the pickup directory for IIS, which then delivers the message.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Moving the email to a directory specified by <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A&gt;</ph> for later delivery by another application.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property can also be set in a machine or application configuration file.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A&gt;</ph> property override the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod"&gt;&lt;/xref&gt;</ph> that indicates how email messages are delivered.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection established by the current instance of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of authenticating and establishing a TLS session can be expensive operations.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application may re-use the same <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object to send many different emails to the same SMTP server and to many different SMTP servers.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, there is no way to determine when an application is finished using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object and it should be cleaned up.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object that is executing an asynchronous <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation will cancel the send operation as though the <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method had been called.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class has no <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>So an application must call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> to explicitly free up resources.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method iterates through all established connections to the SMTP server specified in the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> property and sends a QUIT message followed by gracefully ending the TCP connection.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method also releases the unmanaged resources used by the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> class, and optionally disposes of the managed resources.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection established by the current instance of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is particularly useful when authentication or encryption are used establish a connection to the SMTP server.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of authenticating and establishing a TLS session can be expensive operations.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application may re-use the same <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object to send many different emails to the same SMTP server and to many different SMTP servers.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, there is no way to determine when an application is finished using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object and it should be cleaned up.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object that is executing an asynchronous <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation will cancel the send operation as though the <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method had been called.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class has no <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>So an application must call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> to explicitly free up resources.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method iterates through all established connections to the SMTP server specified in the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> property and sends a QUIT message followed by gracefully ending the TCP connection.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method also releases the unmanaged resources used by the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and optionally disposes of the managed resources.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to releases only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Specify whether the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> uses Secure Sockets Layer (SSL) to encrypt the connection.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property specifies whether SSL is used to access the specified SMTP mail server.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property can also be set in a machine or application configuration file.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property override the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class only supports the SMTP Service Extension for Secure SMTP over Transport Layer Security as defined in RFC 3207.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this mode, the SMTP session begins on an unencrypted channel, then a STARTTLS command is issued by the client to the server to switch to secure communication using SSL.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>See RFC 3207 published by the Internet Engineering Task Force (IETF) for more information.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternate connection method is where an SSL session is established up front before any protocol commands are sent.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This connection method is sometimes called SMTP/SSL, SMTP over SSL, or SMTPS and by default uses port 465.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This alternate connection method using SSL is not currently supported.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.ClientCertificates%2A&gt;</ph> to specify which client certificates should be used to establish the SSL connection.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A&gt;</ph> allows you to reject the certificate provided by the SMTP server.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.ServicePointManager.SecurityProtocol%2A&gt;</ph> property allows you to specify the version of the SSL protocol to use.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods will throw an <ph id="ph5">&lt;xref:System.Net.Mail.SmtpException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> uses SSL; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Gets or sets the name or IP address of the host used for SMTP transactions.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> property can also be set using constructors or the application or machine configuration file.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If information is specified using this property, this information overrides the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the name or IP address of the computer to use for SMTP transactions.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The value specified for a set operation is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The value specified for a set operation is equal to <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> ("").</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You cannot change the value of this property when an email is being sent.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.SendCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A&gt;</ph> method to perform additional tasks when the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A&gt;</ph> also allows derived classes to handle <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> in a derived class.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Gets or sets the folder where applications save mail messages to be processed by the local SMTP server.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mail messages in the pickup directory are automatically sent by a local SMTP server (if present), such as IIS.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property can also be set in a machine or application configuration file.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A&gt;</ph> property override the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that specifies the pickup directory for mail messages.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets or sets the port used for SMTP transactions.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> property can also be set using constructors or the application or machine configuration file.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using configuration files, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If information is specified using this property, this information overrides the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that contains the port number on the SMTP host.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The default value is 25.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The value specified for a set operation is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You cannot change the value of this property when an email is being sent.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Sends the specified message to an SMTP server for delivery.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the e-mail is transmitted.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a time-out value using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Timeout%2A&gt;</ph> property to ensure that the method returns after a specified amount of time elapses.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling this method, the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call this method if there is a message being sent asynchronously.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SMTP host requires credentials, you must set them before calling this method.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify credentials, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you receive an <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> exception, check the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException.StatusCode%2A&gt;</ph> property to find the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> can also contain an inner exception that indicates the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending e-mail using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> sends e-mail to the accepted recipients and then a <ph id="ph3">&lt;xref:System.Net.Mail.SmtpFailedRecipientsException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will contain a listing of the recipients that were rejected.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods will throw an <ph id="ph5">&lt;xref:System.Net.Mail.SmtpException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage"&gt;&lt;/xref&gt;</ph> that contains the message to send.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> has a <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient.SendAsync*"&gt;&lt;/xref&gt;</ph> call in progress.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage.From"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>There are no recipients specified in <ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage.To"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Net.Mail.MailMessage.CC"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Net.Mail.MailMessage.Bcc"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is equal to the empty string ("").</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Port"&gt;&lt;/xref&gt;</ph> is zero, a negative number, or greater than 65,535.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This object has been disposed.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The connection to the SMTP server failed.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Authentication failed.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The operation timed out.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph> but the <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph4">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory"&gt;&lt;/xref&gt;</ph> or <ph id="ph5">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true,`</ph> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> could not be delivered to one or more of the recipients in <ph id="ph2">&lt;xref href="System.Net.Mail.MailMessage.To"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Net.Mail.MailMessage.CC"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Net.Mail.MailMessage.Bcc"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Sends the specified e-mail message to an SMTP server for delivery.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The message sender, recipients, subject, and message body are specified using <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the e-mail is transmitted.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a time-out value using the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Timeout%2A&gt;</ph> property to ensure that the method returns after a specified amount of time elapses.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling this method, the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call this method if there is a message being sent asynchronously.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SMTP host requires credentials, you must set them before calling this method.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify credentials, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you receive an <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> exception, check the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException.StatusCode%2A&gt;</ph> property to find the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> can also contain an inner exception that indicates the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending e-mail using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> sends e-mail to the accepted recipients and then a <ph id="ph3">&lt;xref:System.Net.Mail.SmtpFailedRecipientsException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will contain a listing of the recipients that were rejected.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods will throw an <ph id="ph5">&lt;xref:System.Net.Mail.SmtpException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the address information of the message sender.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the subject line for the message.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the message body.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipients&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipients&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> has a <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient.SendAsync*"&gt;&lt;/xref&gt;</ph> call in progress.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is equal to the empty string ("").</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Port"&gt;&lt;/xref&gt;</ph> is zero, a negative number, or greater than 65,535.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This object has been disposed.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The connection to the SMTP server failed.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Authentication failed.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The operation timed out.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph> but the <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph4">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory"&gt;&lt;/xref&gt;</ph> or <ph id="ph5">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true,`</ph> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The message could not be delivered to one or more of the recipients in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">recipients</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Sends the specified e-mail message to an SMTP server for delivery.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cancel a <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation by calling the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph>, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling this method, the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> must be set through the configuration files by setting the relevant properties, or by passing this information into the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SMTP host requires credentials, you must set them before calling this method.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify credentials, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you receive an <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> exception, check the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException.StatusCode%2A&gt;</ph> property to find the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> can also contain an inner exception that indicates the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending e-mail using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> is thrown with a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph> for the inner exception.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this occurs, <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> fails to send e-mail to any of the recipients.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can detect a server certificate validation error by examining the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> property passed into the <ph id="ph2">&lt;xref:System.Net.Mail.SendCompletedEventHandler&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Timeout%2A&gt;</ph> property does not have any effect on a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send mail and block while it is transmitted to the SMTP server, use one of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods will throw an <ph id="ph5">&lt;xref:System.Net.Mail.SmtpException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage"&gt;&lt;/xref&gt;</ph> that contains the message to send.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage.From"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> has a <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient.SendAsync*"&gt;&lt;/xref&gt;</ph> call in progress.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>There are no recipients specified in <ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage.To"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Net.Mail.MailMessage.CC"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Net.Mail.MailMessage.Bcc"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is equal to the empty string ("").</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Port"&gt;&lt;/xref&gt;</ph> is zero, a negative number, or greater than 65,535.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>This object has been disposed.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The connection to the SMTP server failed.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Authentication failed.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The operation timed out.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph> but the <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph4">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory"&gt;&lt;/xref&gt;</ph> or <ph id="ph5">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true,`</ph> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> could not be delivered to one or more of the recipients in <ph id="ph2">&lt;xref href="System.Net.Mail.MailMessage.To"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Net.Mail.MailMessage.CC"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Net.Mail.MailMessage.Bcc"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Sends an e-mail message to an SMTP server for delivery.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The message sender, recipients, subject, and message body are specified using <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cancel a <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation by calling the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph>, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling this method, the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Host%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Port%2A&gt;</ph> properties must be set either through the configuration files or by setting the properties or passing this information into the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SMTP host requires credentials, you must set them before calling this method.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify credentials, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you receive an <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> exception, check the <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException.StatusCode%2A&gt;</ph> property to find the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> can also contain an inner exception that indicates the reason the operation failed.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending e-mail using <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> is thrown with a <ph id="ph3">&lt;xref:System.NullReferenceException&gt;</ph> for the inner exception.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this occurs, <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> fails to send e-mail to any of the recipients.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can detect a server certificate validation error by examining the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A&gt;</ph> property passed into the <ph id="ph2">&lt;xref:System.Net.Mail.SendCompletedEventHandler&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Timeout%2A&gt;</ph> property does not have any effect on a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send mail and block while it is transmitted to the SMTP server, use one of the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.EnableSsl%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods will throw an <ph id="ph5">&lt;xref:System.Net.Mail.SmtpException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the address information of the message sender.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the subject line for the message.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the message body.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipient&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipient&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient"&gt;&lt;/xref&gt;</ph> has a <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient.SendAsync*"&gt;&lt;/xref&gt;</ph> call in progress.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is equal to the empty string ("").</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.Network"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.Port"&gt;&lt;/xref&gt;</ph> is zero, a negative number, or greater than 65,535.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>This object has been disposed.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The connection to the SMTP server failed.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Authentication failed.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The operation timed out.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph> but the <ph id="ph3">&lt;xref href="System.Net.Mail.SmtpClient.DeliveryMethod"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph4">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory"&gt;&lt;/xref&gt;</ph> or <ph id="ph5">&lt;xref href="System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.EnableSsl"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true,`</ph> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The message could not be delivered to one or more of the recipients in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">recipients</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Cancels an asynchronous operation to send an e-mail message.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A&gt;</ph> method to cancel a pending <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> operation.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is mail waiting to be sent, this method releases resources used to store the mail.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no mail waiting to be sent, this method does nothing.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>This object has been disposed.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous e-mail send operation completes.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph> event is raised each time an e-mail message is sent asynchronously when the send operation completes.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send an e-mail message asynchronously, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.Mail.SendCompletedEventHandler&gt;</ph> is the delegate for <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.SendCompleted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Sends the specified message to an SMTP server for delivery as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>&gt; object will complete once the message has been sent.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.Mail.MailMessage"&gt;&lt;/xref&gt;</ph> that contains the message to send.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Sends the specified message to an SMTP server for delivery as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The message sender, recipients, subject, and message body are specified using <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>&gt; object will complete once the message has been sent.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the address information of the message sender.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the addresses that the message is sent to.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the subject line for the message.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the message body.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipients&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;recipients&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets the network connection used to transmit the e-mail message.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The settings for the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.ServicePoint%2A&gt;</ph> property are created using defaults specified in the application or machine configuration files and the <ph id="ph2">&lt;xref:System.Net.ServicePointManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.ServicePoint"&gt;&lt;/xref&gt;</ph> that connects to the <ph id="ph2">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> property used for SMTP.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.Host"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph> or the empty string ("").</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.Port"&gt;&lt;/xref&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.TargetName%2A&gt;</ph> property is used with integrated Windows authentication when an application is using extended protection.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> can then provide extended protection to ensure that credential challenge responses contain service specific information (a SPN) and, if necessary, channel specific information (a channel binding token or CBT).</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property can also be set in a machine or application configuration file.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.TargetName%2A&gt;</ph> property override the configuration file settings.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that specifies the SPN to use for extended protection.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The default value for this SPN is of the form "SMTPSVC/<ph id="ph1">&lt;host&gt;</ph>" where <ph id="ph2">&lt;host&gt;</ph> is the hostname of the SMTP mail server.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the amount of time after which a synchronous <ph id="ph1">&lt;xref href="System.Net.Mail.SmtpClient.Send*"&gt;&lt;/xref&gt;</ph> call times out.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, calls to the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> method block until the operation completes.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.Timeout%2A&gt;</ph> property to a positive value, and a <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient.Send%2A&gt;</ph> operation cannot complete in the allotted time, the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> class throws an <ph id="ph4">&lt;xref:System.Net.Mail.SmtpException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a message and continue executing in the application thread, use the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.SendAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that specifies the time-out value in milliseconds.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The default value is 100,000 (100 seconds).</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The value specified for a set operation was less than zero.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>You cannot change the value of this property when an email is being sent.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value that controls whether the <ph id="ph2">&lt;xref href="System.Net.CredentialCache.DefaultCredentials"&gt;&lt;/xref&gt;</ph> are sent with requests.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some SMTP servers require that the client be authenticated before the server sends e-mail on its behalf.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to <ph id="ph1">`true`</ph> when this <ph id="ph2">&lt;xref:System.Net.Mail.SmtpClient&gt;</ph> object should, if requested by the server, authenticate using the default credentials of the currently logged on user.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Credentials information can also be specified using the application and machine configuration files.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;mailSettings<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> property is set to <ph id="ph2">`false,`</ph> then the value set in the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property will be used for the credentials when connecting to the server.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.Net.Mail.SmtpClient.Credentials%2A&gt;</ph> property has not been set, then mail is sent to the server anonymously.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide credentials for basic authentication, they are sent to the server in clear text.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can present a security issue because your credentials can be seen, and then used by others.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the default credentials are used; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>You cannot change the value of this property when an e-mail is being sent.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>