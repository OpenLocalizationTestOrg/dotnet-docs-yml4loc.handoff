### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.
  remarks: "This class is used by objects with custom serialization behavior. The <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method on either <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Runtime.Serialization.ISerializationSurrogate> populates the <xref:System.Runtime.Serialization.SerializationInfo> store with the name, type, and value of each piece of information it wants to serialize. During deserialization, the appropriate function can extract this information.  \n  \n Objects are added to the <xref:System.Runtime.Serialization.SerializationInfo> store at serialization time using the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> methods and extracted from the <xref:System.Runtime.Serialization.SerializationInfo> store at deserialization using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> methods.  \n  \n For more information about customizing serialization, see [Custom Serialization](~/docs/framework/serialization/custom-serialization.md)."
  example:
  - "The following code example demonstrates the <xref:System.Runtime.Serialization.SerializationInfo> for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]\n [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]\n [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  commentId: M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type, IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type, IFormatterConverter)
  fullName: SerializationInfo.SerializationInfo(Type, IFormatterConverter)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Creates a new instance of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> class.
  remarks: The <xref:System.Runtime.Serialization.IFormatterConverter> passed as the `converter` parameter converts data from its internal representation to the form the user requested. The internal representation of the data within the <xref:System.Runtime.Serialization.SerializationInfo> depends on the formatter that created it.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object to serialize.
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: The <xref href="System.Runtime.Serialization.IFormatterConverter"></xref> used during deserialization.
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> or <code>converter</code> is `null`.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  commentId: M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type, IFormatterConverter, Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type, IFormatterConverter, Boolean)
  fullName: SerializationInfo.SerializationInfo(Type, IFormatterConverter, Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Initializes a new instance of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object to serialize.
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: The <xref href="System.Runtime.Serialization.IFormatterConverter"></xref> used during deserialization.
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: Indicates whether the object requires same token in partial trust.
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Object, Type)
  nameWithType: SerializationInfo.AddValue(String, Object, Type)
  fullName: SerializationInfo.AddValue(String, Object, Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store, where <code>value</code> is associated with <code>name</code> and is serialized as being of <xref href="System.Type"></xref><code>type</code>.
  remarks: "The assigned type is always the type of the object, or one of its parents.  \n  \n If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown."
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Object
      description: The value to be serialized. Any children of this object will automatically be serialized.
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> to associate with the current object. This parameter must always be the type of the object itself or of one of its base classes.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code>name</code> or <code>type</code> is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, UInt64)
  nameWithType: SerializationInfo.AddValue(String, UInt64)
  fullName: SerializationInfo.AddValue(String, UInt64)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 64-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.UInt64
      description: The `UInt64` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, UInt32)
  nameWithType: SerializationInfo.AddValue(String, UInt32)
  fullName: SerializationInfo.AddValue(String, UInt32)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 32-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]\n [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.UInt32
      description: The `UInt32` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, UInt16)
  nameWithType: SerializationInfo.AddValue(String, UInt16)
  fullName: SerializationInfo.AddValue(String, UInt16)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 16-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.UInt16
      description: The `UInt16` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Single)
  nameWithType: SerializationInfo.AddValue(String, Single)
  fullName: SerializationInfo.AddValue(String, Single)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a single-precision floating-point value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Single
      description: The single value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, SByte)
  nameWithType: SerializationInfo.AddValue(String, SByte)
  fullName: SerializationInfo.AddValue(String, SByte)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds an 8-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.SByte
      description: The `Sbyte` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Object)
  nameWithType: SerializationInfo.AddValue(String, Object)
  fullName: SerializationInfo.AddValue(String, Object)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds the specified object into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store, where it is associated with a specified name.
  remarks: "The object contained in the `value` parameter is serialized as the type returned by `value`.  \n  \n If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown."
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Object
      description: The value to be serialized. Any children of this object will automatically be serialized.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Int64)
  nameWithType: SerializationInfo.AddValue(String, Int64)
  fullName: SerializationInfo.AddValue(String, Int64)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 64-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Int64
      description: The Int64 value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Int32)
  nameWithType: SerializationInfo.AddValue(String, Int32)
  fullName: SerializationInfo.AddValue(String, Int32)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 32-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
     [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
     [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Int32
      description: The `Int32` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Int16)
  nameWithType: SerializationInfo.AddValue(String, Int16)
  fullName: SerializationInfo.AddValue(String, Int16)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a 16-bit signed integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Int16
      description: The `Int16` value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Double)
  nameWithType: SerializationInfo.AddValue(String, Double)
  fullName: SerializationInfo.AddValue(String, Double)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a double-precision floating-point value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Double
      description: The double value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Decimal)
  nameWithType: SerializationInfo.AddValue(String, Decimal)
  fullName: SerializationInfo.AddValue(String, Decimal)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a decimal value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Decimal
      description: The decimal value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: If a value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, DateTime)
  nameWithType: SerializationInfo.AddValue(String, DateTime)
  fullName: SerializationInfo.AddValue(String, DateTime)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a <xref href="System.DateTime"></xref> value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Char)
  nameWithType: SerializationInfo.AddValue(String, Char)
  fullName: SerializationInfo.AddValue(String, Char)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a Unicode character value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Char
      description: The character value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Byte)
  nameWithType: SerializationInfo.AddValue(String, Byte)
  fullName: SerializationInfo.AddValue(String, Byte)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds an 8-bit unsigned integer value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown.
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Byte
      description: The byte value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String, Boolean)
  nameWithType: SerializationInfo.AddValue(String, Boolean)
  fullName: SerializationInfo.AddValue(String, Boolean)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Adds a Boolean value into the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: "If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <xref:System.Runtime.Serialization.SerializationException> to be thrown. For example:  \n  \n```csharp  \nvoid ISerializable.GetObject(SerializationInfo info, StreamingContext context)  \n{  \n   // This will not cause an exception to be thrown.  \n   info.AddValue(\"ABC\", true);  \n   info.AddValue(\"abc\", false);  \n   // However, this will cause the SerializationException to be thrown.  \n   info.AddValue(\"XYZ\", true);  \n   info.AddValue(\"XYZ\", false);  \n}  \n```  \n  \n```vb  \nPrivate Sub GetObjectData(ByVal info As SerializationInfo, _  \nByVal context As StreamingContext)  \n   ' This will not cause an exception to be thrown.  \n   info.AddValue(\"ABC\", \"upper case\")  \n   info.AddValue(\"abc\", \"lower case\")  \n   ' However, this will cause the SerializationException to be thrown.  \n   info.AddValue(\"XYZ\", \"same case\")  \n   info.AddValue(\"XYZ\", \"same case\")  \nEnd Sub  \n```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: The name to associate with the value, so it can be deserialized later.
    - id: value
      type: System.Boolean
      description: The Boolean value to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: A value has already been associated with <code>name</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  commentId: P:System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Gets or sets the assembly name of the type to serialize during serialization only.
  remarks: "The <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> is the same as the value returned by <xref:System.Reflection.Assembly.FullName%2A> property of the assembly of the containing type. This is the assembly name that the formatter uses when serializing type information for this object.  \n  \n The assembly name contains the name of the assembly, version, culture, and some security information about the object.  \n  \n Users who are changing the type being serialized (for example, to send a proxy for a particular type) will set the value of this property.  \n  \n> [!CAUTION]\n>  Do not use this property during deserialization because the value of this property is undefined."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public string AssemblyName { get; set; }
    return:
      type: System.String
      description: The full name of the assembly of the type to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value the property is set to is `null`.
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  commentId: P:System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Gets or sets the full name of the <xref href="System.Type"></xref> to serialize.
  remarks: "The <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> is the same as what would be returned by calling the <xref:System.Type.FullName%2A> on <xref:System.Type>. This is the type name the formatter uses when serializing type information for this object.  \n  \n Users who are changing the type to serialize (for example, to send a proxy for a particular type) will want to set the value of this property.  \n  \n> [!CAUTION]\n>  Do not use this property during deserialization because the value of this property is undefined."
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: The full name of the type to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value this property is set to is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a Boolean value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a Boolean, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Boolean
      description: The Boolean value associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a Boolean value.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves an 8-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is an 8-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Byte
      description: The 8-bit unsigned integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to an 8-bit unsigned integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a Unicode character value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a Unicode character, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Char
      description: The Unicode character associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a Unicode character.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a <xref href="System.DateTime"></xref> value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a <xref:System.DateTime>, or can be converted to a <xref:System.DateTime>, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> value associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a <xref href="System.DateTime"></xref> value.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a decimal value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a decimal, or can be converted to a decimal, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Decimal
      description: A decimal value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref>.
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a decimal.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a double-precision floating-point value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a double, or can be converted to a double, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Double
      description: The double-precision floating-point value associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a double-precision floating-point value.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Returns a <xref href="System.Runtime.Serialization.SerializationInfoEnumerator"></xref> used to iterate through the name-value pairs in the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: This function will most often be used by formatters that need to enumerate through the values before writing them out to the stream.
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: A <xref href="System.Runtime.Serialization.SerializationInfoEnumerator"></xref> for parsing the name-value pairs contained in the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 16-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 16-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Int16
      description: The 16-bit signed integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 16-bit signed integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 32-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
     [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
     [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve.
    return:
      type: System.Int32
      description: The 32-bit signed integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 32-bit signed integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 64-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 64-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.Int64
      description: The 64-bit signed integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 64-bit signed integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves an 8-bit signed integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is an `Int8`, or can be converted to an `Int8`, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.SByte
      description: The 8-bit signed integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to an 8-bit signed integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a single-precision floating-point value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a single-precision floating-point number, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve.
    return:
      type: System.Single
      description: The single-precision floating-point value associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a single-precision floating-point value.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a <xref href="System.String"></xref> value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a <xref:System.String>, or can be converted to a <xref:System.String>, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.String
      description: The <xref href="System.String"></xref> associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a <xref href="System.String"></xref>.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 16-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 16-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt16
      description: The 16-bit unsigned integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 16-bit unsigned integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 32-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt32
      description: The 32-bit unsigned integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 32-bit unsigned integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a 64-bit unsigned integer value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: If the value is a 64-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <xref:System.InvalidCastException> is thrown. All conversions are done by the <xref:System.Runtime.Serialization.IFormatterConverter> associated with this <xref:System.Runtime.Serialization.SerializationInfo>.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    return:
      type: System.UInt64
      description: The 64-bit unsigned integer associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to a 64-bit unsigned integer.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String, Type)
  nameWithType: SerializationInfo.GetValue(String, Type)
  fullName: SerializationInfo.GetValue(String, Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Retrieves a value from the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  remarks: "If the data stored in the <xref:System.Runtime.Serialization.SerializationInfo> is of the type requested (or one of its derived classes), that value is returned directly. Otherwise, <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName> is called to convert it to the appropriate type.  \n  \n The value returned by the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method can always be safely cast to the type specified in the `type` parameter."
  example:
  - "The following code example demonstrates the use of the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method:  \n  \n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/CS/source.cs#1)]\n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SerializationInfo.GetValue Example/VB/source.vb#1)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: The name associated with the value to retrieve.
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the value to retrieve. If the stored value cannot be converted to this type, the system will throw a <xref href="System.InvalidCastException"></xref>.
    return:
      type: System.Object
      description: The object of the specified <xref href="System.Type"></xref> associated with <code>name</code>.
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> or <code>type</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value associated with <code>name</code> cannot be converted to <code>type</code>.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: An element with the specified name is not found in the current instance.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  commentId: P:System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Gets whether the assembly name has been explicitly set.
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: '`True` if the assembly name has been explicitly set; otherwise `false`.'
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  commentId: P:System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Gets whether the full type name has been explicitly set.
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: '`True` if the full type name has been explicitly set; otherwise `false`.'
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  commentId: P:System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: SerializationInfo.MemberCount
  type: Property
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Gets the number of members that have been added to the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> store.
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: The number of members that have been added to the current <xref href="System.Runtime.Serialization.SerializationInfo"></xref>.
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  commentId: P:System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: SerializationInfo.ObjectType
  type: Property
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Returns the type of the object to be serialized.
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: The type of the object being serialized.
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  commentId: M:System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Formatters
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.Serialization
  summary: Sets the <xref href="System.Type"></xref> of the object to serialize.
  remarks: The <xref:System.Runtime.Serialization.Formatter> is responsible for setting the <xref:System.Type> of the <xref:System.Runtime.Serialization.SerializationInfo> instance before passing it to <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>. However, users who want to send proxies for their objects will need to change the type represented by this <xref:System.Runtime.Serialization.SerializationInfo> instance. Using the <xref:System.Runtime.Serialization.SerializationInfo.SetType%2A> method is equivalent to setting both the <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> and the <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.
  example:
  - >-
    [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
     [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
     [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object to serialize.
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>type</code> parameter is `null`.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationException
  nameWithType: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type, IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type, IFormatterConverter)
  fullName: SerializationInfo.SerializationInfo(Type, IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type, IFormatterConverter, Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type, IFormatterConverter, Boolean)
  fullName: SerializationInfo.SerializationInfo(Type, IFormatterConverter, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Object, Type)
  nameWithType: SerializationInfo.AddValue(String, Object, Type)
  fullName: SerializationInfo.AddValue(String, Object, Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, UInt64)
  nameWithType: SerializationInfo.AddValue(String, UInt64)
  fullName: SerializationInfo.AddValue(String, UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, UInt32)
  nameWithType: SerializationInfo.AddValue(String, UInt32)
  fullName: SerializationInfo.AddValue(String, UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, UInt16)
  nameWithType: SerializationInfo.AddValue(String, UInt16)
  fullName: SerializationInfo.AddValue(String, UInt16)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Single)
  nameWithType: SerializationInfo.AddValue(String, Single)
  fullName: SerializationInfo.AddValue(String, Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, SByte)
  nameWithType: SerializationInfo.AddValue(String, SByte)
  fullName: SerializationInfo.AddValue(String, SByte)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Object)
  nameWithType: SerializationInfo.AddValue(String, Object)
  fullName: SerializationInfo.AddValue(String, Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Int64)
  nameWithType: SerializationInfo.AddValue(String, Int64)
  fullName: SerializationInfo.AddValue(String, Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Int32)
  nameWithType: SerializationInfo.AddValue(String, Int32)
  fullName: SerializationInfo.AddValue(String, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Int16)
  nameWithType: SerializationInfo.AddValue(String, Int16)
  fullName: SerializationInfo.AddValue(String, Int16)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Double)
  nameWithType: SerializationInfo.AddValue(String, Double)
  fullName: SerializationInfo.AddValue(String, Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Decimal)
  nameWithType: SerializationInfo.AddValue(String, Decimal)
  fullName: SerializationInfo.AddValue(String, Decimal)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, DateTime)
  nameWithType: SerializationInfo.AddValue(String, DateTime)
  fullName: SerializationInfo.AddValue(String, DateTime)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Char)
  nameWithType: SerializationInfo.AddValue(String, Char)
  fullName: SerializationInfo.AddValue(String, Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Byte)
  nameWithType: SerializationInfo.AddValue(String, Byte)
  fullName: SerializationInfo.AddValue(String, Byte)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String, Boolean)
  nameWithType: SerializationInfo.AddValue(String, Boolean)
  fullName: SerializationInfo.AddValue(String, Boolean)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String, Type)
  nameWithType: SerializationInfo.GetValue(String, Type)
  fullName: SerializationInfo.GetValue(String, Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
  fullName: SerializationInfo.SerializationInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
  fullName: SerializationInfo.AddValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: SerializationInfo.AssemblyName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: SerializationInfo.FullTypeName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
  fullName: SerializationInfo.GetBoolean
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
  fullName: SerializationInfo.GetByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
  fullName: SerializationInfo.GetChar
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
  fullName: SerializationInfo.GetDateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
  fullName: SerializationInfo.GetDecimal
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
  fullName: SerializationInfo.GetDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
  fullName: SerializationInfo.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
  fullName: SerializationInfo.GetInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
  fullName: SerializationInfo.GetInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
  fullName: SerializationInfo.GetInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
  fullName: SerializationInfo.GetSByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
  fullName: SerializationInfo.GetSingle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
  fullName: SerializationInfo.GetString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
  fullName: SerializationInfo.GetUInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
  fullName: SerializationInfo.GetUInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
  fullName: SerializationInfo.GetUInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
  fullName: SerializationInfo.GetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: SerializationInfo.IsAssemblyNameSetExplicit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: SerializationInfo.IsFullTypeNameSetExplicit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: SerializationInfo.MemberCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: SerializationInfo.ObjectType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
  fullName: SerializationInfo.SetType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/SerializationInfo.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
