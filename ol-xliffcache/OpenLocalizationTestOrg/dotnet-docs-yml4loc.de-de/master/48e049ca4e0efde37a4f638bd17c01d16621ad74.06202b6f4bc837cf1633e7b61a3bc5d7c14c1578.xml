{"nodes":[{"content":"Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.","nodes":[{"pos":[0,147],"content":"Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.","nodes":[{"content":"Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.","pos":[0,147]}]}],"pos":[989,1137],"yaml":true},{"content":"You can apply this attribute to assemblies.  \n  \n By default, the [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) uses an assembly's version number to calculate class identifiers (CLSIDs). All public, COM-visible classes receive new CLSIDs each time you export a new assembly version.  \n  \n You can apply the `ComCompatibleVersionAttribute` attribute to force all CLSIDs for classes in the current version of an assembly to be the same as CLSIDs for classes in an earlier version of the assembly. As long as the CLSIDs remain the same, a legacy COM application can use the later version of a compatible assembly after you uninstall the original assembly. If you apply the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> to a class to explicitly set its CLSID, the `ComCompatibleVersionAttribute` has no effect.  \n  \n The properties of this attribute combine to form the four parts of an assembly version. Always specify the lowest version that the current assembly is backward compatible with so that version is used to calculate all CLSIDs in the assembly.","nodes":[{"pos":[0,43],"content":"You can apply this attribute to assemblies.","nodes":[{"content":"You can apply this attribute to assemblies.","pos":[0,43]}]},{"pos":[50,333],"content":"By default, the [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) uses an assembly's version number to calculate class identifiers (CLSIDs). All public, COM-visible classes receive new CLSIDs each time you export a new assembly version.","nodes":[{"content":"By default, the <bpt id=\"p1\">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id=\"p1\">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> uses an assembly's version number to calculate class identifiers (CLSIDs).","pos":[0,187],"source":"By default, the [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) uses an assembly's version number to calculate class identifiers (CLSIDs)."},{"content":"All public, COM-visible classes receive new CLSIDs each time you export a new assembly version.","pos":[188,283]}]},{"pos":[340,888],"content":"You can apply the `ComCompatibleVersionAttribute` attribute to force all CLSIDs for classes in the current version of an assembly to be the same as CLSIDs for classes in an earlier version of the assembly. As long as the CLSIDs remain the same, a legacy COM application can use the later version of a compatible assembly after you uninstall the original assembly. If you apply the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> to a class to explicitly set its CLSID, the `ComCompatibleVersionAttribute` has no effect.","nodes":[{"content":"You can apply the <ph id=\"ph1\">`ComCompatibleVersionAttribute`</ph> attribute to force all CLSIDs for classes in the current version of an assembly to be the same as CLSIDs for classes in an earlier version of the assembly.","pos":[0,205],"source":"You can apply the `ComCompatibleVersionAttribute` attribute to force all CLSIDs for classes in the current version of an assembly to be the same as CLSIDs for classes in an earlier version of the assembly."},{"content":"As long as the CLSIDs remain the same, a legacy COM application can use the later version of a compatible assembly after you uninstall the original assembly.","pos":[206,363]},{"content":"If you apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName&gt;</ph> to a class to explicitly set its CLSID, the <ph id=\"ph2\">`ComCompatibleVersionAttribute`</ph> has no effect.","pos":[364,548],"source":" If you apply the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> to a class to explicitly set its CLSID, the `ComCompatibleVersionAttribute` has no effect."}]},{"pos":[895,1135],"content":"The properties of this attribute combine to form the four parts of an assembly version. Always specify the lowest version that the current assembly is backward compatible with so that version is used to calculate all CLSIDs in the assembly.","nodes":[{"content":"The properties of this attribute combine to form the four parts of an assembly version. Always specify the lowest version that the current assembly is backward compatible with so that version is used to calculate all CLSIDs in the assembly.","pos":[0,240],"nodes":[{"content":"The properties of this attribute combine to form the four parts of an assembly version.","pos":[0,87]},{"content":"Always specify the lowest version that the current assembly is backward compatible with so that version is used to calculate all CLSIDs in the assembly.","pos":[88,240]}]}]}],"pos":[1148,2292],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComCompatibleVersionAttribute\"></xref> class with the major version, minor version, build, and revision numbers of the assembly.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComCompatibleVersionAttribute\"&gt;&lt;/xref&gt;</ph> class with the major version, minor version, build, and revision numbers of the assembly.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComCompatibleVersionAttribute\"></xref> class with the major version, minor version, build, and revision numbers of the assembly."}],"pos":[8856,9062],"yaml":true},{"content":"The major version number of the assembly.","nodes":[{"pos":[0,41],"content":"The major version number of the assembly.","nodes":[{"content":"The major version number of the assembly.","pos":[0,41]}]}],"pos":[9247,9289],"yaml":true},{"content":"The minor version number of the assembly.","nodes":[{"pos":[0,41],"content":"The minor version number of the assembly.","nodes":[{"content":"The minor version number of the assembly.","pos":[0,41]}]}],"pos":[9349,9391],"yaml":true},{"content":"The build number of the assembly.","nodes":[{"pos":[0,33],"content":"The build number of the assembly.","nodes":[{"content":"The build number of the assembly.","pos":[0,33]}]}],"pos":[9451,9485],"yaml":true},{"content":"The revision number of the assembly.","nodes":[{"pos":[0,36],"content":"The revision number of the assembly.","nodes":[{"content":"The revision number of the assembly.","pos":[0,36]}]}],"pos":[9548,9585],"yaml":true},{"content":"Gets the build number of the assembly.","nodes":[{"pos":[0,38],"content":"Gets the build number of the assembly.","nodes":[{"content":"Gets the build number of the assembly.","pos":[0,38]}]}],"pos":[10998,11037],"yaml":true},{"content":"The build number of the assembly.","nodes":[{"pos":[0,33],"content":"The build number of the assembly.","nodes":[{"content":"The build number of the assembly.","pos":[0,33]}]}],"pos":[11148,11182],"yaml":true},{"content":"Gets the major version number of the assembly.","nodes":[{"pos":[0,46],"content":"Gets the major version number of the assembly.","nodes":[{"content":"Gets the major version number of the assembly.","pos":[0,46]}]}],"pos":[12607,12654],"yaml":true},{"content":"The major version number of the assembly.","nodes":[{"pos":[0,41],"content":"The major version number of the assembly.","nodes":[{"content":"The major version number of the assembly.","pos":[0,41]}]}],"pos":[12766,12808],"yaml":true},{"content":"Gets the minor version number of the assembly.","nodes":[{"pos":[0,46],"content":"Gets the minor version number of the assembly.","nodes":[{"content":"Gets the minor version number of the assembly.","pos":[0,46]}]}],"pos":[14234,14281],"yaml":true},{"content":"The minor version number of the assembly.","nodes":[{"pos":[0,41],"content":"The minor version number of the assembly.","nodes":[{"content":"The minor version number of the assembly.","pos":[0,41]}]}],"pos":[14393,14435],"yaml":true},{"content":"Gets the revision number of the assembly.","nodes":[{"pos":[0,41],"content":"Gets the revision number of the assembly.","nodes":[{"content":"Gets the revision number of the assembly.","pos":[0,41]}]}],"pos":[15873,15915],"yaml":true},{"content":"The revision number of the assembly.","nodes":[{"pos":[0,36],"content":"The revision number of the assembly.","nodes":[{"content":"The revision number of the assembly.","pos":[0,36]}]}],"pos":[16029,16066],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  commentId: T:System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  id: ComCompatibleVersionAttribute\n  children:\n  - System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber\n  - System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion\n  - System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion\n  - System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber\n  langs:\n  - csharp\n  name: ComCompatibleVersionAttribute\n  nameWithType: ComCompatibleVersionAttribute\n  fullName: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Indicates to a COM client that all classes in the current version of an assembly are compatible with classes in an earlier version of the assembly.\n  remarks: \"You can apply this attribute to assemblies.  \\n  \\n By default, the [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) uses an assembly's version number to calculate class identifiers (CLSIDs). All public, COM-visible classes receive new CLSIDs each time you export a new assembly version.  \\n  \\n You can apply the `ComCompatibleVersionAttribute` attribute to force all CLSIDs for classes in the current version of an assembly to be the same as CLSIDs for classes in an earlier version of the assembly. As long as the CLSIDs remain the same, a legacy COM application can use the later version of a compatible assembly after you uninstall the original assembly. If you apply the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> to a class to explicitly set its CLSID, the `ComCompatibleVersionAttribute` has no effect.  \\n  \\n The properties of this attribute combine to form the four parts of an assembly version. Always specify the lowest version that the current assembly is backward compatible with so that version is used to calculate all CLSIDs in the assembly.\"\n  example:\n  - \"The following example shows how to specify assembly version 1.0.0.0 in an assembly with a higher version number. Regardless of the new assembly version, all CLSIDs in the assembly are generated using version 1.0.0.0 instead of using the current assembly version.  \\n  \\n [!code-cpp[System.Runtime.InteropServices.ComCompatibleVersionAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.comcompatibleversionattribute/cpp/source.cpp#1)]\\n [!code-csharp[System.Runtime.InteropServices.ComCompatibleVersionAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.comcompatibleversionattribute/cs/source.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.ComCompatibleVersionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.comcompatibleversionattribute/vb/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ComCompatibleVersionAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  langs:\n  - csharp\n  name: ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n  nameWithType: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n  fullName: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComCompatibleVersionAttribute\"></xref> class with the major version, minor version, build, and revision numbers of the assembly.\n  syntax:\n    content: public ComCompatibleVersionAttribute (int major, int minor, int build, int revision);\n    parameters:\n    - id: major\n      type: System.Int32\n      description: The major version number of the assembly.\n    - id: minor\n      type: System.Int32\n      description: The minor version number of the assembly.\n    - id: build\n      type: System.Int32\n      description: The build number of the assembly.\n    - id: revision\n      type: System.Int32\n      description: The revision number of the assembly.\n  overload: System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber\n  commentId: P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber\n  id: BuildNumber\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  langs:\n  - csharp\n  name: BuildNumber\n  nameWithType: ComCompatibleVersionAttribute.BuildNumber\n  fullName: ComCompatibleVersionAttribute.BuildNumber\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the build number of the assembly.\n  syntax:\n    content: public int BuildNumber { get; }\n    return:\n      type: System.Int32\n      description: The build number of the assembly.\n  overload: System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion\n  commentId: P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion\n  id: MajorVersion\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  langs:\n  - csharp\n  name: MajorVersion\n  nameWithType: ComCompatibleVersionAttribute.MajorVersion\n  fullName: ComCompatibleVersionAttribute.MajorVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the major version number of the assembly.\n  syntax:\n    content: public int MajorVersion { get; }\n    return:\n      type: System.Int32\n      description: The major version number of the assembly.\n  overload: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion\n  commentId: P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion\n  id: MinorVersion\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  langs:\n  - csharp\n  name: MinorVersion\n  nameWithType: ComCompatibleVersionAttribute.MinorVersion\n  fullName: ComCompatibleVersionAttribute.MinorVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the minor version number of the assembly.\n  syntax:\n    content: public int MinorVersion { get; }\n    return:\n      type: System.Int32\n      description: The minor version number of the assembly.\n  overload: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber\n  commentId: P:System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber\n  id: RevisionNumber\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  langs:\n  - csharp\n  name: RevisionNumber\n  nameWithType: ComCompatibleVersionAttribute.RevisionNumber\n  fullName: ComCompatibleVersionAttribute.RevisionNumber\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the revision number of the assembly.\n  syntax:\n    content: public int RevisionNumber { get; }\n    return:\n      type: System.Int32\n      description: The revision number of the assembly.\n  overload: System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n  nameWithType: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n  fullName: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute(Int32, Int32, Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: BuildNumber\n  nameWithType: ComCompatibleVersionAttribute.BuildNumber\n  fullName: ComCompatibleVersionAttribute.BuildNumber\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: MajorVersion\n  nameWithType: ComCompatibleVersionAttribute.MajorVersion\n  fullName: ComCompatibleVersionAttribute.MajorVersion\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: MinorVersion\n  nameWithType: ComCompatibleVersionAttribute.MinorVersion\n  fullName: ComCompatibleVersionAttribute.MinorVersion\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: RevisionNumber\n  nameWithType: ComCompatibleVersionAttribute.RevisionNumber\n  fullName: ComCompatibleVersionAttribute.RevisionNumber\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.#ctor*\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: ComCompatibleVersionAttribute\n  nameWithType: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute\n  fullName: ComCompatibleVersionAttribute.ComCompatibleVersionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.BuildNumber*\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: BuildNumber\n  nameWithType: ComCompatibleVersionAttribute.BuildNumber\n  fullName: ComCompatibleVersionAttribute.BuildNumber\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MajorVersion*\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: MajorVersion\n  nameWithType: ComCompatibleVersionAttribute.MajorVersion\n  fullName: ComCompatibleVersionAttribute.MajorVersion\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.MinorVersion*\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: MinorVersion\n  nameWithType: ComCompatibleVersionAttribute.MinorVersion\n  fullName: ComCompatibleVersionAttribute.MinorVersion\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n- uid: System.Runtime.InteropServices.ComCompatibleVersionAttribute.RevisionNumber*\n  parent: System.Runtime.InteropServices.ComCompatibleVersionAttribute\n  isExternal: false\n  name: RevisionNumber\n  nameWithType: ComCompatibleVersionAttribute.RevisionNumber\n  fullName: ComCompatibleVersionAttribute.RevisionNumber\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComCompatibleVersionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}