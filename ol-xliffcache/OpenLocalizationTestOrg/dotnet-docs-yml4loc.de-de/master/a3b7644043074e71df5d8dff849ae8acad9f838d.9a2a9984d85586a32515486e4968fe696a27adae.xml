{"nodes":[{"content":"A stream that represents a spooled print job in a print queue.","nodes":[{"pos":[0,62],"content":"A stream that represents a spooled print job in a print queue.","nodes":[{"content":"A stream that represents a spooled print job in a print queue.","pos":[0,62]}]}],"pos":[1786,1849],"yaml":true},{"content":"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]. If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.  \n  \n> [!CAUTION]\n>  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.  \n  \n If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.","nodes":[{"pos":[0,601],"content":"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]. If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.","nodes":[{"content":"Use this class to write device specific information to a spool file that is not automatically included by the <ph id=\"ph1\">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> spooler.","pos":[0,176],"source":"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler."},{"content":"Of course, you need to know whether the spool file is <ph id=\"ph1\">[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]</ph>.","pos":[177,350],"source":" Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]."},{"content":"If you prefer working with a <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph> array, you can also use two of the overloads of the <ph id=\"ph2\">&lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;</ph> property to write to the spool file.","pos":[351,601],"source":" If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file."}]},{"pos":[609,932],"content":"[!CAUTION]\n Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.","leadings":["","> "],"nodes":[{"content":" Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.","pos":[11,321],"nodes":[{"content":"Classes within the <ph id=\"ph1\">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.","pos":[1,138],"source":" Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service."},{"content":"Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.","pos":[139,310]}]}]},{"pos":[939,1043],"content":"If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.","nodes":[{"content":"If you want to print from a Windows Forms application, see the <ph id=\"ph1\">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.","pos":[0,104],"source":"If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace."}]}],"pos":[1860,2911],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>."}],"pos":[5751,5954],"yaml":true},{"content":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.","source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."}],"pos":[6209,6327],"yaml":true},{"content":"The name of the print job that provides the content of the stream.","nodes":[{"pos":[0,66],"content":"The name of the print job that provides the content of the stream.","nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]}],"pos":[6395,6462],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.","nodes":[{"pos":[0,345],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph>, with an indication of whether data in the <ph id=\"ph3\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> should be committed when the stream is closed.","source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed."}],"pos":[7757,8103],"yaml":true},{"content":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.","source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."}],"pos":[8382,8500],"yaml":true},{"content":"The name of the print job that provides the content of the stream.","nodes":[{"pos":[0,66],"content":"The name of the print job that provides the content of the stream.","nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]}],"pos":[8568,8635],"yaml":true},{"content":"`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">`true`</ph> to commit data in the <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> when the <ph id=\"ph3\">&lt;xref href=\"System.Printing.PrintQueueStream.Close\"&gt;&lt;/xref&gt;</ph> method is called; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`."}],"pos":[8709,8901],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with the specified settings and an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.","nodes":[{"pos":[0,372],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph>, with the specified settings and an indication of whether data in the <ph id=\"ph3\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> should be committed when the stream is closed.","source":"Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with the specified settings and an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed."}],"pos":[10341,10714],"yaml":true},{"content":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueue\"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.","source":"The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream."}],"pos":[11034,11152],"yaml":true},{"content":"The name of the print job that provides the content of the stream.","nodes":[{"pos":[0,66],"content":"The name of the print job that provides the content of the stream.","nodes":[{"content":"The name of the print job that provides the content of the stream.","pos":[0,66]}]}],"pos":[11220,11287],"yaml":true},{"content":"`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">`true`</ph> to commit data in the <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> when the <ph id=\"ph3\">&lt;xref href=\"System.Printing.PrintQueueStream.Close\"&gt;&lt;/xref&gt;</ph> method is called; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`."}],"pos":[11361,11553],"yaml":true},{"content":"The settings of the print job.","nodes":[{"pos":[0,30],"content":"The settings of the print job.","nodes":[{"content":"The settings of the print job.","pos":[0,30]}]}],"pos":[11634,11665],"yaml":true},{"content":"Begins an asynchronous write operation.","nodes":[{"pos":[0,39],"content":"Begins an asynchronous write operation.","nodes":[{"content":"Begins an asynchronous write operation.","pos":[0,39]}]}],"pos":[13077,13117],"yaml":true},{"content":"The buffer from which to write data.","nodes":[{"pos":[0,36],"content":"The buffer from which to write data.","nodes":[{"content":"The buffer from which to write data.","pos":[0,36]}]}],"pos":[13336,13373],"yaml":true},{"content":"The byte offset in the buffer from which to begin writing.","nodes":[{"pos":[0,58],"content":"The byte offset in the buffer from which to begin writing.","nodes":[{"content":"The byte offset in the buffer from which to begin writing.","pos":[0,58]}]}],"pos":[13434,13493],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[13553,13591],"yaml":true},{"content":"An asynchronous callback, which is called when the writing operation is complete.","nodes":[{"pos":[0,81],"content":"An asynchronous callback, which is called when the writing operation is complete.","nodes":[{"content":"An asynchronous callback, which is called when the writing operation is complete.","pos":[0,81]}]}],"pos":[13662,13744],"yaml":true},{"content":"A user-provided object that distinguishes this asynchronous writing request from other requests.","nodes":[{"pos":[0,96],"content":"A user-provided object that distinguishes this asynchronous writing request from other requests.","nodes":[{"content":"A user-provided object that distinguishes this asynchronous writing request from other requests.","pos":[0,96]}]}],"pos":[13805,13902],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous write, which might still be pending.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the asynchronous write, which might still be pending.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous write, which might still be pending."}],"pos":[13965,14079],"yaml":true},{"content":"Gets a value that indicates whether the stream supports reading.","nodes":[{"pos":[0,64],"content":"Gets a value that indicates whether the stream supports reading.","nodes":[{"content":"Gets a value that indicates whether the stream supports reading.","pos":[0,64]}]}],"pos":[15051,15116],"yaml":true},{"content":"`true` if reading is supported; otherwise `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if reading is supported; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if reading is supported; otherwise `false`."}],"pos":[15235,15288],"yaml":true},{"content":"Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.","nodes":[{"pos":[0,137],"content":"Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.","nodes":[{"content":"Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.","pos":[0,137]}]}],"pos":[16257,16395],"yaml":true},{"content":"`true` if seeking is supported; otherwise `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if seeking is supported; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if seeking is supported; otherwise `false`."}],"pos":[16514,16567],"yaml":true},{"content":"Gets a value that indicates whether the stream supports writing.","nodes":[{"pos":[0,64],"content":"Gets a value that indicates whether the stream supports writing.","nodes":[{"content":"Gets a value that indicates whether the stream supports writing.","pos":[0,64]}]}],"pos":[17542,17607],"yaml":true},{"content":"`true` if writing is supported; otherwise `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if writing is supported; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if writing is supported; otherwise `false`."}],"pos":[17727,17780],"yaml":true},{"content":"Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.","nodes":[{"pos":[0,108],"content":"Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.","nodes":[{"content":"Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.","pos":[0,108]}]}],"pos":[18742,18851],"yaml":true},{"content":"Releases the unmanaged resources that are used by the <xref href=\"System.Printing.PrintQueueStream\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,154],"content":"Releases the unmanaged resources that are used by the <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources that are used by the <xref href=\"System.Printing.PrintQueueStream\"></xref> and optionally releases the managed resources."}],"pos":[20059,20214],"yaml":true},{"content":"This method is called by the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.  \n  \n When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,281],"content":"This method is called by the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.","nodes":[{"content":"This method is called by the <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,69],"source":"This method is called by the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[70,179],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id=\"ph3\">`false`</ph>.","pos":[180,281],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`."}]},{"pos":[288,537],"content":"When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the unnamed Boolean parameter is <ph id=\"ph1\">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.Printing.PrintQueueStream&gt;</ph> references.","pos":[0,179],"source":"When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[180,249],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[20225,20767],"yaml":true,"extradata":"MT"},{"content":"Ends an asynchronous write operation.","nodes":[{"pos":[0,37],"content":"Ends an asynchronous write operation.","nodes":[{"content":"Ends an asynchronous write operation.","pos":[0,37]}]}],"pos":[22184,22222],"yaml":true},{"content":"<xref:System.Printing.PrintQueueStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.","nodes":[{"pos":[0,202],"content":"<xref:System.Printing.PrintQueueStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Printing.PrintQueueStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from a call to <ph id=\"ph3\">&lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;</ph>.","pos":[0,202],"source":"<xref:System.Printing.PrintQueueStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>."}]}],"pos":[22233,22436],"yaml":true,"extradata":"MT"},{"content":"A reference to the pending asynchronous I/O request.","nodes":[{"pos":[0,52],"content":"A reference to the pending asynchronous I/O request.","nodes":[{"content":"A reference to the pending asynchronous I/O request.","pos":[0,52]}]}],"pos":[22606,22659],"yaml":true},{"content":"Enables a <xref href=\"System.Printing.PrintQueueStream\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Printing.PrintQueueStream\"></xref> is reclaimed by garbage collection.","nodes":[{"pos":[0,230],"content":"Enables a <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id=\"ph2\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.","source":"Enables a <xref href=\"System.Printing.PrintQueueStream\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Printing.PrintQueueStream\"></xref> is reclaimed by garbage collection."}],"pos":[23639,23870],"yaml":true},{"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \n  \n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","nodes":[{"pos":[0,333],"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</ph>.","pos":[0,80],"source":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id=\"ph2\">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.","pos":[81,333],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]},{"pos":[340,663],"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","source":"For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}],"pos":[23881,24549],"yaml":true,"extradata":"MT"},{"content":"Clears all the buffers for this stream and writes any buffered data to the underlying device.","nodes":[{"pos":[0,93],"content":"Clears all the buffers for this stream and writes any buffered data to the underlying device.","nodes":[{"content":"Clears all the buffers for this stream and writes any buffered data to the underlying device.","pos":[0,93]}]}],"pos":[25575,25669],"yaml":true},{"content":"Enables the <xref href=\"System.Printing.PrintQueueStream\"></xref> to respond to the packaging progress by handling the <xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"></xref>.","nodes":[{"pos":[0,215],"content":"Enables the <ph id=\"ph1\">&lt;xref href=\"System.Printing.PrintQueueStream\"&gt;&lt;/xref&gt;</ph> to respond to the packaging progress by handling the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"&gt;&lt;/xref&gt;</ph>.","source":"Enables the <xref href=\"System.Printing.PrintQueueStream\"></xref> to respond to the packaging progress by handling the <xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"></xref>."}],"pos":[27271,27487],"yaml":true},{"content":"The source of the event.","nodes":[{"pos":[0,24],"content":"The source of the event.","nodes":[{"content":"The source of the event.","pos":[0,24]}]}],"pos":[27801,27826],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[27925,27941],"yaml":true},{"content":"Gets the ID number of the print job.","nodes":[{"pos":[0,36],"content":"Gets the ID number of the print job.","nodes":[{"content":"Gets the ID number of the print job.","pos":[0,36]}]}],"pos":[29088,29125],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> that represents an ID number.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that represents an ID number.","source":"An <xref href=\"System.Int32\"></xref> that represents an ID number."}],"pos":[29294,29361],"yaml":true},{"content":"Gets the length of the stream in bytes.","nodes":[{"pos":[0,39],"content":"Gets the length of the stream in bytes.","nodes":[{"content":"Gets the length of the stream in bytes.","pos":[0,39]}]}],"pos":[30394,30434],"yaml":true},{"content":"An <xref href=\"System.Int64\"></xref> that represents the length of the stream in bytes.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> that represents the length of the stream in bytes.","source":"An <xref href=\"System.Int64\"></xref> that represents the length of the stream in bytes."}],"pos":[30606,30694],"yaml":true},{"content":"Gets or sets the current read/write position in the stream.","nodes":[{"pos":[0,59],"content":"Gets or sets the current read/write position in the stream.","nodes":[{"content":"Gets or sets the current read/write position in the stream.","pos":[0,59]}]}],"pos":[31732,31792],"yaml":true},{"content":"An <xref href=\"System.Int64\"></xref> that represents the current position in the stream.","nodes":[{"pos":[0,88],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> that represents the current position in the stream.","source":"An <xref href=\"System.Int64\"></xref> that represents the current position in the stream."}],"pos":[32018,32107],"yaml":true},{"content":"Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.","nodes":[{"pos":[0,131],"content":"Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.","nodes":[{"content":"Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.","pos":[0,131]}]}],"pos":[33360,33492],"yaml":true},{"content":"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.  \n  \n When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source.","nodes":[{"pos":[0,197],"content":"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.","nodes":[{"content":"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.","pos":[0,197]}]},{"pos":[204,386],"content":"When this method returns, <ph id=\"ph1\">`buffer`</ph> contains the specified byte array and the values between <ph id=\"ph2\">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.","source":"When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source."}],"pos":[33503,33894],"yaml":true,"extradata":"MT"},{"content":"An array of bytes.","nodes":[{"pos":[0,18],"content":"An array of bytes.","nodes":[{"content":"An array of bytes.","pos":[0,18]}]}],"pos":[34111,34130],"yaml":true},{"content":"The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.","nodes":[{"pos":[0,111],"content":"The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.","nodes":[{"content":"The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.","pos":[0,111]}]}],"pos":[34191,34303],"yaml":true},{"content":"The maximum number of bytes to be read from the stream.","nodes":[{"pos":[0,55],"content":"The maximum number of bytes to be read from the stream.","nodes":[{"content":"The maximum number of bytes to be read from the stream.","pos":[0,55]}]}],"pos":[34363,34419],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> that holds the total number of bytes that are read into the buffer.","nodes":[{"pos":[0,104],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that holds the total number of bytes that are read into the buffer.","source":"An <xref href=\"System.Int32\"></xref> that holds the total number of bytes that are read into the buffer."}],"pos":[34475,34580],"yaml":true},{"content":"Sets the read/write position within the stream.","nodes":[{"pos":[0,47],"content":"Sets the read/write position within the stream.","nodes":[{"content":"Sets the read/write position within the stream.","pos":[0,47]}]}],"pos":[35754,35802],"yaml":true},{"content":"A byte offset that is relative to the origin parameter.","nodes":[{"pos":[0,55],"content":"A byte offset that is relative to the origin parameter.","nodes":[{"content":"A byte offset that is relative to the origin parameter.","pos":[0,55]}]}],"pos":[36023,36079],"yaml":true},{"content":"A value of type <xref href=\"System.IO.SeekOrigin\"></xref> that indicates the reference point that is used to obtain the new position.","nodes":[{"pos":[0,133],"content":"A value of type <ph id=\"ph1\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph> that indicates the reference point that is used to obtain the new position.","source":"A value of type <xref href=\"System.IO.SeekOrigin\"></xref> that indicates the reference point that is used to obtain the new position."}],"pos":[36148,36282],"yaml":true},{"content":"An <xref href=\"System.Int64\"></xref> that represents the new read/write position.","nodes":[{"pos":[0,81],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> that represents the new read/write position.","source":"An <xref href=\"System.Int64\"></xref> that represents the new read/write position."}],"pos":[36338,36420],"yaml":true},{"content":"Sets the length of the stream.","nodes":[{"pos":[0,30],"content":"Sets the length of the stream.","nodes":[{"content":"Sets the length of the stream.","pos":[0,30]}]}],"pos":[37525,37556],"yaml":true},{"content":"A stream must support both writing and seeking for <xref:System.Printing.PrintQueueStream.SetLength%2A> to work.  \n  \n Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.","nodes":[{"pos":[0,112],"content":"A stream must support both writing and seeking for <xref:System.Printing.PrintQueueStream.SetLength%2A> to work.","nodes":[{"content":"A stream must support both writing and seeking for <ph id=\"ph1\">&lt;xref:System.Printing.PrintQueueStream.SetLength%2A&gt;</ph> to work.","pos":[0,112],"source":"A stream must support both writing and seeking for <xref:System.Printing.PrintQueueStream.SetLength%2A> to work."}]},{"pos":[119,362],"content":"Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing, and use the <ph id=\"ph2\">&lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;</ph> property to determine whether seeking is supported.","pos":[0,243],"source":"Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported."}]}],"pos":[37567,37934],"yaml":true,"extradata":"MT"},{"content":"The needed length, in bytes, of the current stream.","nodes":[{"pos":[0,51],"content":"The needed length, in bytes, of the current stream.","nodes":[{"content":"The needed length, in bytes, of the current stream.","pos":[0,51]}]}],"pos":[38078,38130],"yaml":true},{"content":"Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.","nodes":[{"pos":[0,132],"content":"Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.","nodes":[{"content":"Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.","pos":[0,132]}]}],"pos":[39276,39409],"yaml":true},{"content":"An array of bytes from which to copy to the stream.","nodes":[{"pos":[0,51],"content":"An array of bytes from which to copy to the stream.","nodes":[{"content":"An array of bytes from which to copy to the stream.","pos":[0,51]}]}],"pos":[39628,39680],"yaml":true},{"content":"The zero-based byte offset in the <code>buffer</code> where you want to begin copying bytes to the stream.","nodes":[{"pos":[0,106],"content":"The zero-based byte offset in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> where you want to begin copying bytes to the stream.","source":"The zero-based byte offset in the <code>buffer</code> where you want to begin copying bytes to the stream."}],"pos":[39741,39848],"yaml":true},{"content":"The number of bytes to write to the stream.","nodes":[{"pos":[0,43],"content":"The number of bytes to write to the stream.","nodes":[{"content":"The number of bytes to write to the stream.","pos":[0,43]}]}],"pos":[39908,39952],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Printing.PrintQueueStream\n  commentId: T:System.Printing.PrintQueueStream\n  id: PrintQueueStream\n  children:\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  - System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Printing.PrintQueueStream.CanRead\n  - System.Printing.PrintQueueStream.CanSeek\n  - System.Printing.PrintQueueStream.CanWrite\n  - System.Printing.PrintQueueStream.Close\n  - System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  - System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  - System.Printing.PrintQueueStream.Finalize\n  - System.Printing.PrintQueueStream.Flush\n  - System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  - System.Printing.PrintQueueStream.JobIdentifier\n  - System.Printing.PrintQueueStream.Length\n  - System.Printing.PrintQueueStream.Position\n  - System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Printing.PrintQueueStream.SetLength(System.Int64)\n  - System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: PrintQueueStream\n  nameWithType: PrintQueueStream\n  fullName: System.Printing.PrintQueueStream\n  type: Class\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: A stream that represents a spooled print job in a print queue.\n  remarks: \"Use this class to write device specific information to a spool file that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]. If you prefer working with a <xref:System.Byte> array, you can also use two of the overloads of the <xref:System.Printing.PrintQueue.AddJob%2A> method and the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property to write to the spool file.  \\n  \\n> [!CAUTION]\\n>  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.  \\n  \\n If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.\"\n  syntax:\n    content: 'public class PrintQueueStream : System.IO.Stream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  commentId: M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  id: '#ctor(System.Printing.PrintQueue,System.String)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue, String)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  commentId: M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue, String, Boolean)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n    - id: commitDataOnClose\n      type: System.Boolean\n      description: '`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`.'\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  commentId: M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)'\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n  type: Constructor\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Initializes a new instance of the <xref href=\"System.Printing.PrintQueueStream\"></xref> class for the specified print job that is hosted in the specified <xref href=\"System.Printing.PrintQueue\"></xref>, with the specified settings and an indication of whether data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> should be committed when the stream is closed.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose, System.Printing.PrintTicket printTicket);\n    parameters:\n    - id: printQueue\n      type: System.Printing.PrintQueue\n      description: The <xref href=\"System.Printing.PrintQueue\"></xref> that hosts the print job that provides the content of the stream.\n    - id: printJobName\n      type: System.String\n      description: The name of the print job that provides the content of the stream.\n    - id: commitDataOnClose\n      type: System.Boolean\n      description: '`true` to commit data in the <xref href=\"System.Printing.PrintQueueStream\"></xref> when the <xref href=\"System.Printing.PrintQueueStream.Close\"></xref> method is called; otherwise, `false`.'\n    - id: printTicket\n      type: System.Printing.PrintTicket\n      description: The settings of the print job.\n  overload: System.Printing.PrintQueueStream.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PrintQueueStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PrintQueueStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Begins an asynchronous write operation.\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer from which to write data.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in the buffer from which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: callback\n      type: System.AsyncCallback\n      description: An asynchronous callback, which is called when the writing operation is complete.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this asynchronous writing request from other requests.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous write, which might still be pending.\n  overload: System.Printing.PrintQueueStream.BeginWrite*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.CanRead\n  commentId: P:System.Printing.PrintQueueStream.CanRead\n  id: CanRead\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n  fullName: PrintQueueStream.CanRead\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports reading.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if reading is supported; otherwise `false`.'\n  overload: System.Printing.PrintQueueStream.CanRead*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.CanSeek\n  commentId: P:System.Printing.PrintQueueStream.CanSeek\n  id: CanSeek\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n  fullName: PrintQueueStream.CanSeek\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if seeking is supported; otherwise `false`.'\n  overload: System.Printing.PrintQueueStream.CanSeek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.CanWrite\n  commentId: P:System.Printing.PrintQueueStream.CanWrite\n  id: CanWrite\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n  fullName: PrintQueueStream.CanWrite\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets a value that indicates whether the stream supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if writing is supported; otherwise `false`.'\n  overload: System.Printing.PrintQueueStream.CanWrite*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Close\n  commentId: M:System.Printing.PrintQueueStream.Close\n  id: Close\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: PrintQueueStream.Close()\n  fullName: PrintQueueStream.Close()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Close ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Close*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  commentId: M:System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: PrintQueueStream.Dispose(Boolean)\n  fullName: PrintQueueStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Releases the unmanaged resources that are used by the <xref href=\"System.Printing.PrintQueueStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the unnamed Boolean parameter set to `false`.  \\n  \\n When the unnamed Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueStream> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: >-\n      [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]\n\n      protected override void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: ''\n  overload: System.Printing.PrintQueueStream.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)\n  fullName: PrintQueueStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Ends an asynchronous write operation.\n  remarks: <xref:System.Printing.PrintQueueStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> that is returned from a call to <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: A reference to the pending asynchronous I/O request.\n  overload: System.Printing.PrintQueueStream.EndWrite*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Finalize\n  commentId: M:System.Printing.PrintQueueStream.Finalize\n  id: Finalize\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: PrintQueueStream.Finalize()\n  fullName: PrintQueueStream.Finalize()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Enables a <xref href=\"System.Printing.PrintQueueStream\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Printing.PrintQueueStream\"></xref> is reclaimed by garbage collection.\n  remarks: \"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \\n  \\n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~PrintQueueStream ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Flush\n  commentId: M:System.Printing.PrintQueueStream.Flush\n  id: Flush\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: PrintQueueStream.Flush()\n  fullName: PrintQueueStream.Flush()\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Clears all the buffers for this stream and writes any buffered data to the underlying device.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Flush ();\n    parameters: []\n  overload: System.Printing.PrintQueueStream.Flush*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  commentId: M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  id: HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n  fullName: PrintQueueStream.HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Enables the <xref href=\"System.Printing.PrintQueueStream\"></xref> to respond to the packaging progress by handling the <xref href=\"System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent\"></xref>.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      [System.Security.SecurityTreatAsSafe]\n\n      public void HandlePackagingProgressEvent (object sender, System.Windows.Xps.Packaging.PackagingProgressEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the event.\n    - id: e\n      type: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n      description: The event data.\n  overload: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  - type: System.Security.SecurityTreatAsSafeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.JobIdentifier\n  commentId: P:System.Printing.PrintQueueStream.JobIdentifier\n  id: JobIdentifier\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n  fullName: PrintQueueStream.JobIdentifier\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets the ID number of the print job.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public int JobIdentifier { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> that represents an ID number.\n  overload: System.Printing.PrintQueueStream.JobIdentifier*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Length\n  commentId: P:System.Printing.PrintQueueStream.Length\n  id: Length\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: PrintQueueStream.Length\n  fullName: PrintQueueStream.Length\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets the length of the stream in bytes.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public override long Length { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> that represents the length of the stream in bytes.\n  overload: System.Printing.PrintQueueStream.Length*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Position\n  commentId: P:System.Printing.PrintQueueStream.Position\n  id: Position\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: PrintQueueStream.Position\n  fullName: PrintQueueStream.Position\n  type: Property\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Gets or sets the current read/write position in the stream.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      [set: System.Security.SecurityCritical]\n\n      public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> that represents the current position in the stream.\n  overload: System.Printing.PrintQueueStream.Position*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: PrintQueueStream.Read(Byte[], Int32, Int32)\n  fullName: PrintQueueStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.\n  remarks: \"The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.  \\n  \\n When this method returns, `buffer` contains the specified byte array and the values between `offset` and (offset + count - 1) are replaced by the bytes that are read from the source.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to be read from the stream.\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> that holds the total number of bytes that are read into the buffer.\n  overload: System.Printing.PrintQueueStream.Read*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: PrintQueueStream.Seek(Int64, SeekOrigin)\n  fullName: PrintQueueStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Sets the read/write position within the stream.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: A byte offset that is relative to the origin parameter.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: A value of type <xref href=\"System.IO.SeekOrigin\"></xref> that indicates the reference point that is used to obtain the new position.\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> that represents the new read/write position.\n  overload: System.Printing.PrintQueueStream.Seek*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)\n  commentId: M:System.Printing.PrintQueueStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: PrintQueueStream.SetLength(Int64)\n  fullName: PrintQueueStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Sets the length of the stream.\n  remarks: \"A stream must support both writing and seeking for <xref:System.Printing.PrintQueueStream.SetLength%2A> to work.  \\n  \\n Use the <xref:System.Printing.PrintQueueStream.CanWrite%2A> property to determine whether the current instance supports writing, and use the <xref:System.Printing.PrintQueueStream.CanSeek%2A> property to determine whether seeking is supported.\"\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The needed length, in bytes, of the current stream.\n  overload: System.Printing.PrintQueueStream.SetLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: PrintQueueStream.Write(Byte[], Int32, Int32)\n  fullName: PrintQueueStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Printing\n  namespace: System.Printing\n  summary: Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes from which to copy to the stream.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the <code>buffer</code> where you want to begin copying bytes to the stream.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write to the stream.\n  overload: System.Printing.PrintQueueStream.Write*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue, String)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String)\n- uid: System.Printing.PrintQueue\n  parent: System.Printing\n  isExternal: false\n  name: PrintQueue\n  nameWithType: PrintQueue\n  fullName: System.Printing.PrintQueue\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue, String, Boolean)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n  fullName: PrintQueueStream.PrintQueueStream(PrintQueue, String, Boolean, PrintTicket)\n- uid: System.Printing.PrintTicket\n  parent: System.Printing\n  isExternal: false\n  name: PrintTicket\n  nameWithType: PrintTicket\n  fullName: System.Printing.PrintTicket\n- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PrintQueueStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PrintQueueStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Printing.PrintQueueStream.CanRead\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n  fullName: PrintQueueStream.CanRead\n- uid: System.Printing.PrintQueueStream.CanSeek\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n  fullName: PrintQueueStream.CanSeek\n- uid: System.Printing.PrintQueueStream.CanWrite\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n  fullName: PrintQueueStream.CanWrite\n- uid: System.Printing.PrintQueueStream.Close\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Close()\n  nameWithType: PrintQueueStream.Close()\n  fullName: PrintQueueStream.Close()\n- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PrintQueueStream.Dispose(Boolean)\n  fullName: PrintQueueStream.Dispose(Boolean)\n- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)\n  fullName: PrintQueueStream.EndWrite(IAsyncResult)\n- uid: System.Printing.PrintQueueStream.Finalize\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Finalize()\n  nameWithType: PrintQueueStream.Finalize()\n  fullName: PrintQueueStream.Finalize()\n- uid: System.Printing.PrintQueueStream.Flush\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Flush()\n  nameWithType: PrintQueueStream.Flush()\n  fullName: PrintQueueStream.Flush()\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n  fullName: PrintQueueStream.HandlePackagingProgressEvent(Object, PackagingProgressEventArgs)\n- uid: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n  parent: System.Windows.Xps.Packaging\n  isExternal: false\n  name: PackagingProgressEventArgs\n  nameWithType: PackagingProgressEventArgs\n  fullName: System.Windows.Xps.Packaging.PackagingProgressEventArgs\n- uid: System.Printing.PrintQueueStream.JobIdentifier\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n  fullName: PrintQueueStream.JobIdentifier\n- uid: System.Printing.PrintQueueStream.Length\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Length\n  nameWithType: PrintQueueStream.Length\n  fullName: PrintQueueStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Printing.PrintQueueStream.Position\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Position\n  nameWithType: PrintQueueStream.Position\n  fullName: PrintQueueStream.Position\n- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: PrintQueueStream.Read(Byte[], Int32, Int32)\n  fullName: PrintQueueStream.Read(Byte[], Int32, Int32)\n- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: PrintQueueStream.Seek(Int64, SeekOrigin)\n  fullName: PrintQueueStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: PrintQueueStream.SetLength(Int64)\n  fullName: PrintQueueStream.SetLength(Int64)\n- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: PrintQueueStream.Write(Byte[], Int32, Int32)\n  fullName: PrintQueueStream.Write(Byte[], Int32, Int32)\n- uid: System.Printing.PrintQueueStream.#ctor*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: PrintQueueStream\n  nameWithType: PrintQueueStream.PrintQueueStream\n  fullName: PrintQueueStream.PrintQueueStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.BeginWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: PrintQueueStream.BeginWrite\n  fullName: PrintQueueStream.BeginWrite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.CanRead*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PrintQueueStream.CanRead\n  fullName: PrintQueueStream.CanRead\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.CanSeek*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PrintQueueStream.CanSeek\n  fullName: PrintQueueStream.CanSeek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.CanWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PrintQueueStream.CanWrite\n  fullName: PrintQueueStream.CanWrite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Close*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Close\n  nameWithType: PrintQueueStream.Close\n  fullName: PrintQueueStream.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Dispose*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Dispose\n  nameWithType: PrintQueueStream.Dispose\n  fullName: PrintQueueStream.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.EndWrite*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: PrintQueueStream.EndWrite\n  fullName: PrintQueueStream.EndWrite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Finalize*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Finalize\n  nameWithType: PrintQueueStream.Finalize\n  fullName: PrintQueueStream.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Flush*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Flush\n  nameWithType: PrintQueueStream.Flush\n  fullName: PrintQueueStream.Flush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: HandlePackagingProgressEvent\n  nameWithType: PrintQueueStream.HandlePackagingProgressEvent\n  fullName: PrintQueueStream.HandlePackagingProgressEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.JobIdentifier*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: JobIdentifier\n  nameWithType: PrintQueueStream.JobIdentifier\n  fullName: PrintQueueStream.JobIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Length*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Length\n  nameWithType: PrintQueueStream.Length\n  fullName: PrintQueueStream.Length\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Position*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Position\n  nameWithType: PrintQueueStream.Position\n  fullName: PrintQueueStream.Position\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Read*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Read\n  nameWithType: PrintQueueStream.Read\n  fullName: PrintQueueStream.Read\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Seek*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Seek\n  nameWithType: PrintQueueStream.Seek\n  fullName: PrintQueueStream.Seek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.SetLength*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: SetLength\n  nameWithType: PrintQueueStream.SetLength\n  fullName: PrintQueueStream.SetLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Printing.PrintQueueStream.Write*\n  parent: System.Printing.PrintQueueStream\n  isExternal: false\n  name: Write\n  nameWithType: PrintQueueStream.Write\n  fullName: PrintQueueStream.Write\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Printing/PrintQueueStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n  fullName: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n"}