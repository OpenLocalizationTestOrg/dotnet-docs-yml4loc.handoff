{"nodes":[{"content":"Permits late-bound registration of an event handler.","nodes":[{"pos":[0,52],"content":"Permits late-bound registration of an event handler.","nodes":[{"content":"Permits late-bound registration of an event handler.","pos":[0,52]}]}],"pos":[1560,1613],"yaml":true},{"content":"Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods instead of using regular add handler and remove handler methods for events. This occurs if the interface that the corresponding event is defined on needs to be embedded.  \n  \n You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.  \n  \n The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods.","nodes":[{"pos":[0,510],"content":"Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods instead of using regular add handler and remove handler methods for events. This occurs if the interface that the corresponding event is defined on needs to be embedded.","nodes":[{"content":"Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods instead of using regular add handler and remove handler methods for events. This occurs if the interface that the corresponding event is defined on needs to be embedded.","pos":[0,510],"nodes":[{"content":"Normally, compilers will automatically embed calls to the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> methods instead of using regular add handler and remove handler methods for events.","pos":[0,416],"source":"Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods instead of using regular add handler and remove handler methods for events."},{"content":"This occurs if the interface that the corresponding event is defined on needs to be embedded.","pos":[417,510]}]}]},{"pos":[517,724],"content":"You can specify this by embedding the entire assembly that contains the interface by using the <bpt id=\"p1\">**</bpt>/link<ept id=\"p1\">**</ept> option on the compilers or by setting the <bpt id=\"p2\">**</bpt>Embed Interop Types<ept id=\"p2\">**</ept> property to <ph id=\"ph1\">`True`</ph> in Visual Studio.","source":"You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio."},{"pos":[731,1113],"content":"The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo&gt;</ph> type derives from the <ph id=\"ph2\">&lt;xref:System.Reflection.EventInfo&gt;</ph> class and overrides the <ph id=\"ph3\">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> methods.","pos":[0,382],"source":"The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods."}]}],"pos":[1624,2744],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComAwareEventInfo\"></xref> class by using the specified type and a name of the event on the type.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComAwareEventInfo\"&gt;&lt;/xref&gt;</ph> class by using the specified type and a name of the event on the type.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComAwareEventInfo\"></xref> class by using the specified type and a name of the event on the type."}],"pos":[9900,10075],"yaml":true},{"content":"The type of object.","nodes":[{"pos":[0,19],"content":"The type of object.","nodes":[{"content":"The type of object.","pos":[0,19]}]}],"pos":[10228,10248],"yaml":true},{"content":"The name of an event on <code>type</code>.","nodes":[{"pos":[0,42],"content":"The name of an event on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The name of an event on <code>type</code>."}],"pos":[10313,10356],"yaml":true},{"content":"Attaches an event handler to a COM object.","nodes":[{"pos":[0,42],"content":"Attaches an event handler to a COM object.","nodes":[{"content":"Attaches an event handler to a COM object.","pos":[0,42]}]}],"pos":[12161,12204],"yaml":true},{"content":"This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method except that it allows you to attach events to COM objects.  \n  \n If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method.  \n  \n <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:  \n  \n-   The target object itself (`target`).  \n  \n-   The GUID of the source interface.  \n  \n-   The DispID of the method on the COM interface that corresponds to the specified event.  \n  \n-   The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).  \n  \n <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.","nodes":[{"pos":[0,208],"content":"This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method except that it allows you to attach events to COM objects.","nodes":[{"content":"This method is similar to the <ph id=\"ph1\">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> method except that it allows you to attach events to COM objects.","pos":[0,208],"source":"This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method except that it allows you to attach events to COM objects."}]},{"pos":[215,457],"content":"If <ph id=\"ph1\">`target`</ph> is a COM object, this method adds a delegate to an event by using the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> method.","source":"If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method."},{"pos":[464,672],"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:","nodes":[{"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:","pos":[0,208],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> facilitates registering COM event sinks that forward calls to corresponding managed delegates.","pos":[0,169],"source":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates."},{"content":"It requires the following information:","pos":[170,208]}]}]},{"pos":[682,718],"content":"The target object itself (<ph id=\"ph1\">`target`</ph>).","source":"The target object itself (`target`)."},{"pos":[728,761],"content":"The GUID of the source interface.","nodes":[{"content":"The GUID of the source interface.","pos":[0,33]}]},{"pos":[771,857],"content":"The DispID of the method on the COM interface that corresponds to the specified event.","nodes":[{"content":"The DispID of the method on the COM interface that corresponds to the specified event.","pos":[0,86]}]},{"pos":[867,967],"content":"The delegate that would be invoked when the COM object triggers the corresponding event (<ph id=\"ph1\">`handler`</ph>).","source":"The delegate that would be invoked when the COM object triggers the corresponding event (`handler`)."},{"pos":[974,1847],"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName&gt;</ph> constructor).","pos":[0,306],"source":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor)."},{"content":"It then looks up a method on the source interface whose name is identical to the event name.","pos":[307,399]},{"content":"The value of <ph id=\"ph1\">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph>; the value of <ph id=\"ph3\">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id=\"ph4\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph>.","pos":[400,873],"source":" The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>."}]}],"pos":[12215,14079],"yaml":true,"extradata":"MT"},{"content":"The target object that the event delegate should bind to.","nodes":[{"pos":[0,57],"content":"The target object that the event delegate should bind to.","nodes":[{"content":"The target object that the event delegate should bind to.","pos":[0,57]}]}],"pos":[14252,14310],"yaml":true},{"content":"The event delegate.","nodes":[{"pos":[0,19],"content":"The event delegate.","nodes":[{"content":"The event delegate.","pos":[0,19]}]}],"pos":[14375,14395],"yaml":true},{"content":"Gets the attributes for this event.","nodes":[{"pos":[0,35],"content":"Gets the attributes for this event.","nodes":[{"content":"Gets the attributes for this event.","pos":[0,35]}]}],"pos":[16035,16071],"yaml":true},{"content":"The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.","nodes":[{"pos":[0,146],"content":"The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.","nodes":[{"content":"The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.","pos":[0,146]}]}],"pos":[16082,16229],"yaml":true,"extradata":"MT"},{"content":"The read-only attributes for this event.","nodes":[{"pos":[0,40],"content":"The read-only attributes for this event.","nodes":[{"content":"The read-only attributes for this event.","pos":[0,40]}]}],"pos":[16399,16440],"yaml":true},{"content":"Gets the class that declares this member.","nodes":[{"pos":[0,41],"content":"Gets the class that declares this member.","nodes":[{"content":"Gets the class that declares this member.","pos":[0,41]}]}],"pos":[18093,18135],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> object for the class that declares this member.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object for the class that declares this member.","source":"The <xref href=\"System.Type\"></xref> object for the class that declares this member."}],"pos":[18257,18342],"yaml":true},{"content":"Gets the method that was used to add an event handler delegate to the event source.","nodes":[{"pos":[0,83],"content":"Gets the method that was used to add an event handler delegate to the event source.","nodes":[{"content":"Gets the method that was used to add an event handler delegate to the event source.","pos":[0,83]}]}],"pos":[20065,20149],"yaml":true},{"content":"This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,105],"content":"This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=fullName> method.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,105],"source":"This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=fullName> method."}]}],"pos":[20160,20266],"yaml":true,"extradata":"MT"},{"content":"`true` to return non-public methods; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> to return non-public methods; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to return non-public methods; otherwise, `false`."}],"pos":[20447,20506],"yaml":true},{"content":"The method that was used to add an event handler delegate to the event source.","nodes":[{"pos":[0,78],"content":"The method that was used to add an event handler delegate to the event source.","nodes":[{"content":"The method that was used to add an event handler delegate to the event source.","pos":[0,78]}]}],"pos":[20578,20657],"yaml":true},{"content":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","nodes":[{"pos":[0,174],"content":"<ph id=\"ph1\">&lt;code&gt;nonPublic&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","source":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods."}],"pos":[20848,21023],"yaml":true},{"content":"When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.","nodes":[{"pos":[0,122],"content":"When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.","nodes":[{"content":"When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.","pos":[0,122]}]}],"pos":[22391,22514],"yaml":true},{"content":"This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.","nodes":[{"pos":[0,148],"content":"This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method of the underlying <ph id=\"ph2\">&lt;xref:System.Reflection.EventInfo&gt;</ph> object.","pos":[0,148],"source":"This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object."}]}],"pos":[22525,22674],"yaml":true,"extradata":"MT"},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[22838,22933],"yaml":true},{"content":"An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.","nodes":[{"pos":[0,113],"content":"An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.","nodes":[{"content":"An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.","pos":[0,113]}]}],"pos":[22992,23106],"yaml":true},{"content":"This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).","nodes":[{"pos":[0,242],"content":"This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).","nodes":[{"content":"This member belongs to a type that is loaded into the reflection-only context.","pos":[0,78]},{"content":"See <bpt id=\"p1\">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>.","pos":[79,242],"source":" See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)."}]}],"pos":[23312,23557],"yaml":true},{"content":"A custom attribute type cannot be loaded.","nodes":[{"pos":[0,41],"content":"A custom attribute type cannot be loaded.","nodes":[{"content":"A custom attribute type cannot be loaded.","pos":[0,41]}]}],"pos":[23651,23693],"yaml":true},{"content":"When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.","nodes":[{"pos":[0,144],"content":"When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.","nodes":[{"content":"When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.","pos":[0,144]}]}],"pos":[25115,25260],"yaml":true},{"content":"The attribute type to search for. Only attributes that are assignable to this type can be returned.","nodes":[{"pos":[0,99],"content":"The attribute type to search for. Only attributes that are assignable to this type can be returned.","nodes":[{"content":"The attribute type to search for. Only attributes that are assignable to this type can be returned.","pos":[0,99],"nodes":[{"content":"The attribute type to search for.","pos":[0,33]},{"content":"Only attributes that are assignable to this type can be returned.","pos":[34,99]}]}]}],"pos":[25447,25547],"yaml":true},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[25611,25706],"yaml":true},{"content":"An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.","nodes":[{"pos":[0,135],"content":"An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.","nodes":[{"content":"An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.","pos":[0,135]}]}],"pos":[25765,25901],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[26099,26137],"yaml":true},{"content":"This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)","nodes":[{"pos":[0,241],"content":"This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)","nodes":[{"content":"This member belongs to a type that is loaded into the reflection-only context.","pos":[0,78]},{"content":"See <bpt id=\"p1\">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>","pos":[79,241],"source":" See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)"}]}],"pos":[26247,26491],"yaml":true},{"content":"A custom attribute type cannot be loaded.","nodes":[{"pos":[0,41],"content":"A custom attribute type cannot be loaded.","nodes":[{"content":"A custom attribute type cannot be loaded.","pos":[0,41]}]}],"pos":[26585,26627],"yaml":true},{"content":"When overridden in a derived class, returns the method that was called when the event was raised.","nodes":[{"pos":[0,97],"content":"When overridden in a derived class, returns the method that was called when the event was raised.","nodes":[{"content":"When overridden in a derived class, returns the method that was called when the event was raised.","pos":[0,97]}]}],"pos":[27965,28063],"yaml":true},{"content":"This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword. This is because the C# and Visual Basic compilers do not generate such a method.","nodes":[{"pos":[0,201],"content":"This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword. This is because the C# and Visual Basic compilers do not generate such a method.","nodes":[{"content":"This method returns <ph id=\"ph1\">`null`</ph> for events that are declared with the C# <ph id=\"ph2\">`event`</ph> keyword or the Visual Basic <ph id=\"ph3\">`Event`</ph> keyword.","pos":[0,120],"source":"This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword."},{"content":"This is because the C# and Visual Basic compilers do not generate such a method.","pos":[121,201]}]}],"pos":[28074,28276],"yaml":true,"extradata":"MT"},{"content":"`true` to return non-public methods; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> to return non-public methods; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to return non-public methods; otherwise, `false`."}],"pos":[28459,28518],"yaml":true},{"content":"The object that was called when the event was raised.","nodes":[{"pos":[0,53],"content":"The object that was called when the event was raised.","nodes":[{"content":"The object that was called when the event was raised.","pos":[0,53]}]}],"pos":[28590,28644],"yaml":true},{"content":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","nodes":[{"pos":[0,174],"content":"<ph id=\"ph1\">&lt;code&gt;nonPublic&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","source":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods."}],"pos":[28837,29012],"yaml":true},{"content":"When overridden in a derived class, retrieves the <xref href=\"System.Reflection.MethodInfo\"></xref> object for removing a method of the event.","nodes":[{"pos":[0,142],"content":"When overridden in a derived class, retrieves the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object for removing a method of the event.","source":"When overridden in a derived class, retrieves the <xref href=\"System.Reflection.MethodInfo\"></xref> object for removing a method of the event."}],"pos":[30356,30499],"yaml":true},{"content":"`true` to return non-public methods; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> to return non-public methods; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to return non-public methods; otherwise, `false`."}],"pos":[30683,30742],"yaml":true},{"content":"The method that was used to remove an event handler delegate from the event source.","nodes":[{"pos":[0,83],"content":"The method that was used to remove an event handler delegate from the event source.","nodes":[{"content":"The method that was used to remove an event handler delegate from the event source.","pos":[0,83]}]}],"pos":[30814,30898],"yaml":true},{"content":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","nodes":[{"pos":[0,174],"content":"<ph id=\"ph1\">&lt;code&gt;nonPublic&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.","source":"<code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods."}],"pos":[31092,31267],"yaml":true},{"content":"Indicates whether one or more instances of the specified attribute are applied to this member.","nodes":[{"pos":[0,94],"content":"Indicates whether one or more instances of the specified attribute are applied to this member.","nodes":[{"content":"Indicates whether one or more instances of the specified attribute are applied to this member.","pos":[0,94]}]}],"pos":[32629,32724],"yaml":true},{"content":"The attribute type to search for.","nodes":[{"pos":[0,33],"content":"The attribute type to search for.","nodes":[{"content":"The attribute type to search for.","pos":[0,33]}]}],"pos":[32897,32931],"yaml":true},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[32995,33090],"yaml":true},{"content":"`true` if the specified attribute has been applied to this member; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the specified attribute has been applied to this member; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified attribute has been applied to this member; otherwise, `false`."}],"pos":[33148,33237],"yaml":true},{"content":"Gets the name of the current member.","nodes":[{"pos":[0,36],"content":"Gets the name of the current member.","nodes":[{"content":"Gets the name of the current member.","pos":[0,36]}]}],"pos":[34531,34568],"yaml":true},{"content":"The name of this member.","nodes":[{"pos":[0,24],"content":"The name of this member.","nodes":[{"content":"The name of this member.","pos":[0,24]}]}],"pos":[34685,34710],"yaml":true},{"content":"Gets the class object that was used to initialize this instance.","nodes":[{"pos":[0,64],"content":"Gets the class object that was used to initialize this instance.","nodes":[{"content":"Gets the class object that was used to initialize this instance.","pos":[0,64]}]}],"pos":[36357,36422],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> object that was used to initialize the current object.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that was used to initialize the current object.","source":"The <xref href=\"System.Type\"></xref> object that was used to initialize the current object."}],"pos":[36544,36636],"yaml":true},{"content":"Detaches an event handler from a COM object.","nodes":[{"pos":[0,44],"content":"Detaches an event handler from a COM object.","nodes":[{"content":"Detaches an event handler from a COM object.","pos":[0,44]}]}],"pos":[38163,38208],"yaml":true},{"content":"This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method, except that it allows you to detach events from COM objects.  \n  \n If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method.  \n  \n <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:  \n  \n-   The target object itself (`target`).  \n  \n-   The GUID of the source interface.  \n  \n-   The DispID of the method on the COM interface that corresponds to the specified event.  \n  \n-   The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).  \n  \n <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then it looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.","nodes":[{"pos":[0,214],"content":"This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method, except that it allows you to detach events from COM objects.","nodes":[{"content":"This method is similar to the <ph id=\"ph1\">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> method, except that it allows you to detach events from COM objects.","pos":[0,214],"source":"This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method, except that it allows you to detach events from COM objects."}]},{"pos":[221,466],"content":"If <ph id=\"ph1\">`target`</ph> is a COM object, this method releases a delegate to an event by using the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph> method.","source":"If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method."},{"pos":[473,686],"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:","nodes":[{"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:","pos":[0,213],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.","pos":[0,174],"source":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates."},{"content":"It requires the following information:","pos":[175,213]}]}]},{"pos":[696,732],"content":"The target object itself (<ph id=\"ph1\">`target`</ph>).","source":"The target object itself (`target`)."},{"pos":[742,775],"content":"The GUID of the source interface.","nodes":[{"content":"The GUID of the source interface.","pos":[0,33]}]},{"pos":[785,871],"content":"The DispID of the method on the COM interface that corresponds to the specified event.","nodes":[{"content":"The DispID of the method on the COM interface that corresponds to the specified event.","pos":[0,86]}]},{"pos":[881,981],"content":"The delegate that would be invoked when the COM object triggers the corresponding event (<ph id=\"ph1\">`handler`</ph>).","source":"The delegate that would be invoked when the COM object triggers the corresponding event (`handler`)."},{"pos":[988,1865],"content":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then it looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName&gt;</ph> constructor).","pos":[0,309],"source":"<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor)."},{"content":"It then it looks up a method on the source interface whose name is identical to the event name.","pos":[310,405]},{"content":"The value of <ph id=\"ph1\">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph>; the value of <ph id=\"ph3\">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id=\"ph4\">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName&gt;</ph>.","pos":[406,877],"source":" The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>."}]}],"pos":[38219,40101],"yaml":true,"extradata":"MT"},{"content":"The target object that the event delegate is bound to.","nodes":[{"pos":[0,54],"content":"The target object that the event delegate is bound to.","nodes":[{"content":"The target object that the event delegate is bound to.","pos":[0,54]}]}],"pos":[40277,40332],"yaml":true},{"content":"The event delegate.","nodes":[{"pos":[0,19],"content":"The event delegate.","nodes":[{"content":"The event delegate.","pos":[0,19]}]}],"pos":[40397,40417],"yaml":true},{"content":"The event does not have a public `remove` accessor.","nodes":[{"pos":[0,51],"content":"The event does not have a public <ph id=\"ph1\">`remove`</ph> accessor.","source":"The event does not have a public `remove` accessor."}],"pos":[40622,40674],"yaml":true},{"content":"The handler that was passed in cannot be used.","nodes":[{"pos":[0,46],"content":"The handler that was passed in cannot be used.","nodes":[{"content":"The handler that was passed in cannot be used.","pos":[0,46]}]}],"pos":[40768,40815],"yaml":true},{"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <xref href=\"System.Exception\"></xref> instead.  \n  \n</p>\n    </block>  \n  \n The <code>target</code> parameter is `null` and the event is not static.  \n  \n -or-  \n  \n The <xref href=\"System.Reflection.EventInfo\"></xref> is not declared on the target.","nodes":[{"pos":[0,310],"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <xref href=\"System.Exception\"></xref> instead.","nodes":[{"content":"In the <bpt id=\"p1\">[</bpt>.NET for Windows Store apps<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id=\"p2\">[</bpt>Portable Class Library<ept id=\"p2\">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> instead.","pos":[47,310],"source":" In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <xref href=\"System.Exception\"></xref> instead."}]},{"pos":[316,333],"content":"</p>\n    </block>","nodes":[]},{"pos":[340,412],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> and the event is not static.","source":"The <code>target</code> parameter is `null` and the event is not static."},{"pos":[419,423],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[430,513],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> is not declared on the target.","source":"The <xref href=\"System.Reflection.EventInfo\"></xref> is not declared on the target."}],"pos":[40927,41462],"yaml":true},{"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The caller does not have access permission to the member.","nodes":[{"pos":[0,349],"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead.","nodes":[{"content":"In the <bpt id=\"p1\">[</bpt>.NET for Windows Store apps<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id=\"p2\">[</bpt>Portable Class Library<ept id=\"p2\">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph>, instead.","pos":[47,349],"source":" In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.MemberAccessException\"></xref>, instead."}]},{"pos":[355,372],"content":"</p>\n    </block>","nodes":[]},{"pos":[379,436],"content":"The caller does not have access permission to the member.","nodes":[{"content":"The caller does not have access permission to the member.","pos":[0,57]}]}],"pos":[41564,42016],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ComAwareEventInfo\n  commentId: T:System.Runtime.InteropServices.ComAwareEventInfo\n  id: ComAwareEventInfo\n  children:\n  - System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)\n  - System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)\n  - System.Runtime.InteropServices.ComAwareEventInfo.Attributes\n  - System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType\n  - System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices.ComAwareEventInfo.Name\n  - System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType\n  - System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  langs:\n  - csharp\n  name: ComAwareEventInfo\n  nameWithType: ComAwareEventInfo\n  fullName: System.Runtime.InteropServices.ComAwareEventInfo\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Permits late-bound registration of an event handler.\n  remarks: \"Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods instead of using regular add handler and remove handler methods for events. This occurs if the interface that the corresponding event is defined on needs to be embedded.  \\n  \\n You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.  \\n  \\n The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> methods.\"\n  syntax:\n    content: 'public class ComAwareEventInfo : System.Reflection.EventInfo'\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.EventInfo\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.EventInfo.AddMethod\n  - System.Reflection.EventInfo.Equals(System.Object)\n  - System.Reflection.EventInfo.EventHandlerType\n  - System.Reflection.EventInfo.GetAddMethod\n  - System.Reflection.EventInfo.GetHashCode\n  - System.Reflection.EventInfo.GetOtherMethods\n  - System.Reflection.EventInfo.GetOtherMethods(System.Boolean)\n  - System.Reflection.EventInfo.GetRaiseMethod\n  - System.Reflection.EventInfo.GetRemoveMethod\n  - System.Reflection.EventInfo.IsMulticast\n  - System.Reflection.EventInfo.IsSpecialName\n  - System.Reflection.EventInfo.MemberType\n  - System.Reflection.EventInfo.op_Equality(System.Reflection.EventInfo,System.Reflection.EventInfo)\n  - System.Reflection.EventInfo.op_Inequality(System.Reflection.EventInfo,System.Reflection.EventInfo)\n  - System.Reflection.EventInfo.RaiseMethod\n  - System.Reflection.EventInfo.RemoveMethod\n  - System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetType\n  - System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.EventInfoExtensions.GetAddMethod(System.Reflection.EventInfo)\n  - System.Reflection.EventInfoExtensions.GetAddMethod(System.Reflection.EventInfo,System.Boolean)\n  - System.Reflection.EventInfoExtensions.GetRaiseMethod(System.Reflection.EventInfo)\n  - System.Reflection.EventInfoExtensions.GetRaiseMethod(System.Reflection.EventInfo,System.Boolean)\n  - System.Reflection.EventInfoExtensions.GetRemoveMethod(System.Reflection.EventInfo)\n  - System.Reflection.EventInfoExtensions.GetRemoveMethod(System.Reflection.EventInfo,System.Boolean)\n  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: ComAwareEventInfo(Type, String)\n  nameWithType: ComAwareEventInfo.ComAwareEventInfo(Type, String)\n  fullName: ComAwareEventInfo.ComAwareEventInfo(Type, String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ComAwareEventInfo\"></xref> class by using the specified type and a name of the event on the type.\n  syntax:\n    content: public ComAwareEventInfo (Type type, string eventName);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object.\n    - id: eventName\n      type: System.String\n      description: The name of an event on <code>type</code>.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)\n  id: AddEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: AddEventHandler(Object, Delegate)\n  nameWithType: ComAwareEventInfo.AddEventHandler(Object, Delegate)\n  fullName: ComAwareEventInfo.AddEventHandler(Object, Delegate)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Attaches an event handler to a COM object.\n  remarks: \"This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method except that it allows you to attach events to COM objects.  \\n  \\n If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method.  \\n  \\n <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:  \\n  \\n-   The target object itself (`target`).  \\n  \\n-   The GUID of the source interface.  \\n  \\n-   The DispID of the method on the COM interface that corresponds to the specified event.  \\n  \\n-   The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).  \\n  \\n <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.\"\n  syntax:\n    content: public override void AddEventHandler (object target, Delegate handler);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The target object that the event delegate should bind to.\n    - id: handler\n      type: System.Delegate\n      description: The event delegate.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Attributes\n  commentId: P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: ComAwareEventInfo.Attributes\n  fullName: ComAwareEventInfo.Attributes\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the attributes for this event.\n  remarks: The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.\n  syntax:\n    content: public override System.Reflection.EventAttributes Attributes { get; }\n    return:\n      type: System.Reflection.EventAttributes\n      description: The read-only attributes for this event.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.Attributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType\n  commentId: P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: ComAwareEventInfo.DeclaringType\n  fullName: ComAwareEventInfo.DeclaringType\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the class that declares this member.\n  syntax:\n    content: public override Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object for the class that declares this member.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)\n  id: GetAddMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: GetAddMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetAddMethod(Boolean)\n  fullName: ComAwareEventInfo.GetAddMethod(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the method that was used to add an event handler delegate to the event source.\n  remarks: This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=fullName> method.\n  syntax:\n    content: public override System.Reflection.MethodInfo GetAddMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to return non-public methods; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo\n      description: The method that was used to add an event handler delegate to the event source.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod*\n  exceptions:\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: <code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ComAwareEventInfo.GetCustomAttributes(Boolean)\n  fullName: ComAwareEventInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.\n  remarks: This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).'\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: A custom attribute type cannot be loaded.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ComAwareEventInfo.GetCustomAttributes(Type, Boolean)\n  fullName: ComAwareEventInfo.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The attribute type to search for. Only attributes that are assignable to this type can be returned.\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'This member belongs to a type that is loaded into the reflection-only context. See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)'\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: A custom attribute type cannot be loaded.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)\n  id: GetRaiseMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: GetRaiseMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetRaiseMethod(Boolean)\n  fullName: ComAwareEventInfo.GetRaiseMethod(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: When overridden in a derived class, returns the method that was called when the event was raised.\n  remarks: This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword. This is because the C# and Visual Basic compilers do not generate such a method.\n  syntax:\n    content: public override System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to return non-public methods; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo\n      description: The object that was called when the event was raised.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod*\n  exceptions:\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: <code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)\n  id: GetRemoveMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: GetRemoveMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetRemoveMethod(Boolean)\n  fullName: ComAwareEventInfo.GetRemoveMethod(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: When overridden in a derived class, retrieves the <xref href=\"System.Reflection.MethodInfo\"></xref> object for removing a method of the event.\n  syntax:\n    content: public override System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to return non-public methods; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo\n      description: The method that was used to remove an event handler delegate from the event source.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod*\n  exceptions:\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: <code>nonPublic</code> is `true` and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: ComAwareEventInfo.IsDefined(Type, Boolean)\n  fullName: ComAwareEventInfo.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Indicates whether one or more instances of the specified attribute are applied to this member.\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The attribute type to search for.\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Boolean\n      description: '`true` if the specified attribute has been applied to this member; otherwise, `false`.'\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.IsDefined*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Name\n  commentId: P:System.Runtime.InteropServices.ComAwareEventInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ComAwareEventInfo.Name\n  fullName: ComAwareEventInfo.Name\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the name of the current member.\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: The name of this member.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType\n  commentId: P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: ComAwareEventInfo.ReflectedType\n  fullName: ComAwareEventInfo.ReflectedType\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Gets the class object that was used to initialize this instance.\n  syntax:\n    content: public override Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object that was used to initialize the current object.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  commentId: M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  id: RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  langs:\n  - csharp\n  name: RemoveEventHandler(Object, Delegate)\n  nameWithType: ComAwareEventInfo.RemoveEventHandler(Object, Delegate)\n  fullName: ComAwareEventInfo.RemoveEventHandler(Object, Delegate)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - System.Core\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Detaches an event handler from a COM object.\n  remarks: \"This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=fullName> method, except that it allows you to detach events from COM objects.  \\n  \\n If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName> method.  \\n  \\n <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates. It requires the following information:  \\n  \\n-   The target object itself (`target`).  \\n  \\n-   The GUID of the source interface.  \\n  \\n-   The DispID of the method on the COM interface that corresponds to the specified event.  \\n  \\n-   The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).  \\n  \\n <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=fullName> constructor). It then it looks up a method on the source interface whose name is identical to the event name. The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=fullName>.\"\n  syntax:\n    content: public override void RemoveEventHandler (object target, Delegate handler);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The target object that the event delegate is bound to.\n    - id: handler\n      type: System.Delegate\n      description: The event delegate.\n  overload: System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The event does not have a public `remove` accessor.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The handler that was passed in cannot be used.\n  - type: System.Reflection.TargetException\n    commentId: T:System.Reflection.TargetException\n    description: \"<block subset=\\\"none\\\" type=\\\"note\\\">\\n      <p>  \\n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <xref href=\\\"System.Exception\\\"></xref> instead.  \\n  \\n</p>\\n    </block>  \\n  \\n The <code>target</code> parameter is `null` and the event is not static.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Reflection.EventInfo\\\"></xref> is not declared on the target.\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"<block subset=\\\"none\\\" type=\\\"note\\\">\\n      <p>  \\n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\\\"System.MemberAccessException\\\"></xref>, instead.  \\n  \\n</p>\\n    </block>  \\n  \\n The caller does not have access permission to the member.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.MethodAccessException\n  parent: System\n  isExternal: false\n  name: MethodAccessException\n  nameWithType: MethodAccessException\n  fullName: System.MethodAccessException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  nameWithType: TypeLoadException\n  fullName: System.TypeLoadException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Reflection.TargetException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetException\n  nameWithType: TargetException\n  fullName: System.Reflection.TargetException\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: ComAwareEventInfo(Type, String)\n  nameWithType: ComAwareEventInfo.ComAwareEventInfo(Type, String)\n  fullName: ComAwareEventInfo.ComAwareEventInfo(Type, String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: AddEventHandler(Object, Delegate)\n  nameWithType: ComAwareEventInfo.AddEventHandler(Object, Delegate)\n  fullName: ComAwareEventInfo.AddEventHandler(Object, Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Attributes\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: ComAwareEventInfo.Attributes\n  fullName: ComAwareEventInfo.Attributes\n- uid: System.Reflection.EventAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: EventAttributes\n  nameWithType: EventAttributes\n  fullName: System.Reflection.EventAttributes\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: ComAwareEventInfo.DeclaringType\n  fullName: ComAwareEventInfo.DeclaringType\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetAddMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetAddMethod(Boolean)\n  fullName: ComAwareEventInfo.GetAddMethod(Boolean)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ComAwareEventInfo.GetCustomAttributes(Boolean)\n  fullName: ComAwareEventInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ComAwareEventInfo.GetCustomAttributes(Type, Boolean)\n  fullName: ComAwareEventInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetRaiseMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetRaiseMethod(Boolean)\n  fullName: ComAwareEventInfo.GetRaiseMethod(Boolean)\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetRemoveMethod(Boolean)\n  nameWithType: ComAwareEventInfo.GetRemoveMethod(Boolean)\n  fullName: ComAwareEventInfo.GetRemoveMethod(Boolean)\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: ComAwareEventInfo.IsDefined(Type, Boolean)\n  fullName: ComAwareEventInfo.IsDefined(Type, Boolean)\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Name\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: Name\n  nameWithType: ComAwareEventInfo.Name\n  fullName: ComAwareEventInfo.Name\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: ComAwareEventInfo.ReflectedType\n  fullName: ComAwareEventInfo.ReflectedType\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: RemoveEventHandler(Object, Delegate)\n  nameWithType: ComAwareEventInfo.RemoveEventHandler(Object, Delegate)\n  fullName: ComAwareEventInfo.RemoveEventHandler(Object, Delegate)\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.#ctor*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: ComAwareEventInfo\n  nameWithType: ComAwareEventInfo.ComAwareEventInfo\n  fullName: ComAwareEventInfo.ComAwareEventInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: AddEventHandler\n  nameWithType: ComAwareEventInfo.AddEventHandler\n  fullName: ComAwareEventInfo.AddEventHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Attributes*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: ComAwareEventInfo.Attributes\n  fullName: ComAwareEventInfo.Attributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: ComAwareEventInfo.DeclaringType\n  fullName: ComAwareEventInfo.DeclaringType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetAddMethod\n  nameWithType: ComAwareEventInfo.GetAddMethod\n  fullName: ComAwareEventInfo.GetAddMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: ComAwareEventInfo.GetCustomAttributes\n  fullName: ComAwareEventInfo.GetCustomAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetRaiseMethod\n  nameWithType: ComAwareEventInfo.GetRaiseMethod\n  fullName: ComAwareEventInfo.GetRaiseMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: GetRemoveMethod\n  nameWithType: ComAwareEventInfo.GetRemoveMethod\n  fullName: ComAwareEventInfo.GetRemoveMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.IsDefined*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: ComAwareEventInfo.IsDefined\n  fullName: ComAwareEventInfo.IsDefined\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.Name*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: Name\n  nameWithType: ComAwareEventInfo.Name\n  fullName: ComAwareEventInfo.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: ComAwareEventInfo.ReflectedType\n  fullName: ComAwareEventInfo.ReflectedType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler*\n  parent: System.Runtime.InteropServices.ComAwareEventInfo\n  isExternal: false\n  name: RemoveEventHandler\n  nameWithType: ComAwareEventInfo.RemoveEventHandler\n  fullName: ComAwareEventInfo.RemoveEventHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ComAwareEventInfo.xml\n- uid: System.Reflection.EventInfo.Equals(System.Object)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: EventInfo.Equals(Object)\n  fullName: EventInfo.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Reflection.EventInfo.GetHashCode\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: EventInfo.GetHashCode()\n  fullName: EventInfo.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  fullName: MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  fullName: MemberInfo.GetCustomAttributesData()\n- uid: System.Reflection.EventInfo.MemberType\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: EventInfo.MemberType\n  fullName: EventInfo.MemberType\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  fullName: MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  nameWithType: MemberInfo.Module\n  fullName: MemberInfo.Module\n- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Equality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Inequality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetType()\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  fullName: MemberInfo._MemberInfo.GetType()\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.EventInfo.AddMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: AddMethod\n  nameWithType: EventInfo.AddMethod\n  fullName: EventInfo.AddMethod\n- uid: System.Reflection.EventInfo.EventHandlerType\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: EventHandlerType\n  nameWithType: EventInfo.EventHandlerType\n  fullName: EventInfo.EventHandlerType\n- uid: System.Reflection.EventInfo.GetAddMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetAddMethod()\n  nameWithType: EventInfo.GetAddMethod()\n  fullName: EventInfo.GetAddMethod()\n- uid: System.Reflection.EventInfo.GetOtherMethods\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetOtherMethods()\n  nameWithType: EventInfo.GetOtherMethods()\n  fullName: EventInfo.GetOtherMethods()\n- uid: System.Reflection.EventInfo.GetOtherMethods(System.Boolean)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetOtherMethods(Boolean)\n  nameWithType: EventInfo.GetOtherMethods(Boolean)\n  fullName: EventInfo.GetOtherMethods(Boolean)\n- uid: System.Reflection.EventInfo.GetRaiseMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetRaiseMethod()\n  nameWithType: EventInfo.GetRaiseMethod()\n  fullName: EventInfo.GetRaiseMethod()\n- uid: System.Reflection.EventInfo.GetRemoveMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: GetRemoveMethod()\n  nameWithType: EventInfo.GetRemoveMethod()\n  fullName: EventInfo.GetRemoveMethod()\n- uid: System.Reflection.EventInfo.IsMulticast\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: IsMulticast\n  nameWithType: EventInfo.IsMulticast\n  fullName: EventInfo.IsMulticast\n- uid: System.Reflection.EventInfo.IsSpecialName\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: EventInfo.IsSpecialName\n  fullName: EventInfo.IsSpecialName\n- uid: System.Reflection.EventInfo.op_Equality(System.Reflection.EventInfo,System.Reflection.EventInfo)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: op_Equality(EventInfo, EventInfo)\n  nameWithType: EventInfo.op_Equality(EventInfo, EventInfo)\n  fullName: EventInfo.op_Equality(EventInfo, EventInfo)\n- uid: System.Reflection.EventInfo.op_Inequality(System.Reflection.EventInfo,System.Reflection.EventInfo)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: op_Inequality(EventInfo, EventInfo)\n  nameWithType: EventInfo.op_Inequality(EventInfo, EventInfo)\n  fullName: EventInfo.op_Inequality(EventInfo, EventInfo)\n- uid: System.Reflection.EventInfo.RaiseMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: RaiseMethod\n  nameWithType: EventInfo.RaiseMethod\n  fullName: EventInfo.RaiseMethod\n- uid: System.Reflection.EventInfo.RemoveMethod\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: RemoveMethod\n  nameWithType: EventInfo.RemoveMethod\n  fullName: EventInfo.RemoveMethod\n- uid: System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: _EventInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: EventInfo._EventInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: EventInfo._EventInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetType\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: _EventInfo.GetType()\n  nameWithType: EventInfo._EventInfo.GetType()\n  fullName: EventInfo._EventInfo.GetType()\n- uid: System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: _EventInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: EventInfo._EventInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: EventInfo._EventInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: _EventInfo.GetTypeInfoCount(UInt32)\n  nameWithType: EventInfo._EventInfo.GetTypeInfoCount(UInt32)\n  fullName: EventInfo._EventInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.EventInfo\n  isExternal: false\n  name: _EventInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: EventInfo._EventInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: EventInfo._EventInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Reflection.EventInfoExtensions.GetAddMethod(System.Reflection.EventInfo)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetAddMethod(EventInfo)\n  nameWithType: EventInfoExtensions.GetAddMethod(EventInfo)\n  fullName: EventInfoExtensions.GetAddMethod(EventInfo)\n- uid: System.Reflection.EventInfoExtensions.GetAddMethod(System.Reflection.EventInfo,System.Boolean)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetAddMethod(EventInfo, Boolean)\n  nameWithType: EventInfoExtensions.GetAddMethod(EventInfo, Boolean)\n  fullName: EventInfoExtensions.GetAddMethod(EventInfo, Boolean)\n- uid: System.Reflection.EventInfoExtensions.GetRaiseMethod(System.Reflection.EventInfo)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetRaiseMethod(EventInfo)\n  nameWithType: EventInfoExtensions.GetRaiseMethod(EventInfo)\n  fullName: EventInfoExtensions.GetRaiseMethod(EventInfo)\n- uid: System.Reflection.EventInfoExtensions.GetRaiseMethod(System.Reflection.EventInfo,System.Boolean)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetRaiseMethod(EventInfo, Boolean)\n  nameWithType: EventInfoExtensions.GetRaiseMethod(EventInfo, Boolean)\n  fullName: EventInfoExtensions.GetRaiseMethod(EventInfo, Boolean)\n- uid: System.Reflection.EventInfoExtensions.GetRemoveMethod(System.Reflection.EventInfo)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetRemoveMethod(EventInfo)\n  nameWithType: EventInfoExtensions.GetRemoveMethod(EventInfo)\n  fullName: EventInfoExtensions.GetRemoveMethod(EventInfo)\n- uid: System.Reflection.EventInfoExtensions.GetRemoveMethod(System.Reflection.EventInfo,System.Boolean)\n  parent: System.Reflection.EventInfoExtensions\n  isExternal: false\n  name: GetRemoveMethod(EventInfo, Boolean)\n  nameWithType: EventInfoExtensions.GetRemoveMethod(EventInfo, Boolean)\n  fullName: EventInfoExtensions.GetRemoveMethod(EventInfo, Boolean)\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: GetMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: HasMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n"}