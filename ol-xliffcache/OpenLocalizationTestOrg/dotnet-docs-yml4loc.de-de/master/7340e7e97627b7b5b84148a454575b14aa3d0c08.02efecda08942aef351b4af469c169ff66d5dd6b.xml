{"nodes":[{"content":"Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.","nodes":[{"pos":[0,131],"content":"Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.","nodes":[{"content":"Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.","pos":[0,131]}]}],"pos":[2370,2502],"yaml":true},{"content":"You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services. When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service. You can then use the class to start, stop, and otherwise manipulate the service.  \n  \n You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity. For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance. This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.  \n  \n After you create an instance of <xref:System.ServiceProcess.ServiceController>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.  \n  \n> [!NOTE]\n>  By default, <xref:System.ServiceProcess.ServiceController.MachineName%2A> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.  \n  \n Generally, the service author writes code that customizes the action associated with a specific command. For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName> command. In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service.  \n  \n The set of commands a service can process depends on its properties; for example, you can set the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property for a service to `false`. This setting renders the `Stop` command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button. If you try to stop the service from your code, the system raises an error and displays the error message \"Failed to stop `servicename`.\"","nodes":[{"pos":[0,371],"content":"You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services. When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service. You can then use the class to start, stop, and otherwise manipulate the service.","nodes":[{"content":"You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services. When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service. You can then use the class to start, stop, and otherwise manipulate the service.","pos":[0,371],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to connect to and control the behavior of existing services.","pos":[0,129],"source":"You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services."},{"content":"When you create an instance of the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class, you set its properties so it interacts with a specific Windows service.","pos":[130,290],"source":" When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service."},{"content":"You can then use the class to start, stop, and otherwise manipulate the service.","pos":[291,371]}]}]},{"pos":[378,797],"content":"You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity. For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance. This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.","nodes":[{"content":"You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity. For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance. This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.","pos":[0,419],"nodes":[{"content":"You will most likely use the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> component in an administrative capacity.","pos":[0,116],"source":"You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity."},{"content":"For example, you could create a Windows or Web application that sends custom commands to a service through the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.","pos":[117,284],"source":" For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance."},{"content":"This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.","pos":[285,419]}]}]},{"pos":[804,1033],"content":"After you create an instance of <xref:System.ServiceProcess.ServiceController>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.","nodes":[{"content":"After you create an instance of <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.","pos":[0,229],"source":"After you create an instance of <xref:System.ServiceProcess.ServiceController>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control."}]},{"pos":[1041,1253],"content":"[!NOTE]\n By default, <xref:System.ServiceProcess.ServiceController.MachineName%2A> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.","leadings":["","> "],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.MachineName%2A&gt;</ph> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.","pos":[9,210],"source":" By default, <xref:System.ServiceProcess.ServiceController.MachineName%2A> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer."}]},{"pos":[1260,1655],"content":"Generally, the service author writes code that customizes the action associated with a specific command. For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName> command. In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service.","nodes":[{"content":"Generally, the service author writes code that customizes the action associated with a specific command. For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName> command. In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service.","pos":[0,395],"nodes":[{"content":"Generally, the service author writes code that customizes the action associated with a specific command.","pos":[0,104]},{"content":"For example, a service can contain code to respond to an <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName&gt;</ph> command.","pos":[105,247],"source":" For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName> command."},{"content":"In that case, the custom processing for the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> task runs before the system pauses the service.","pos":[248,395],"source":" In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service."}]}]},{"pos":[1662,2159],"content":"The set of commands a service can process depends on its properties; for example, you can set the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property for a service to `false`. This setting renders the `Stop` command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button. If you try to stop the service from your code, the system raises an error and displays the error message \"Failed to stop `servicename`.\"","nodes":[{"content":"The set of commands a service can process depends on its properties; for example, you can set the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> property for a service to <ph id=\"ph2\">`false`</ph>.","pos":[0,190],"source":"The set of commands a service can process depends on its properties; for example, you can set the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property for a service to `false`."},{"content":"This setting renders the <ph id=\"ph1\">`Stop`</ph> command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button.","pos":[191,360],"source":" This setting renders the `Stop` command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button."},{"content":"If you try to stop the service from your code, the system raises an error and displays the error message \"Failed to stop <ph id=\"ph1\">`servicename`</ph>.\"","pos":[361,497],"source":" If you try to stop the service from your code, the system raises an error and displays the error message \"Failed to stop `servicename`.\""}]}],"pos":[2513,4688],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is not associated with a specific service.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> class that is not associated with a specific service.","source":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is not associated with a specific service."}],"pos":[6789,6938],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the local computer.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> class that is associated with an existing service on the local computer.","source":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the local computer."}],"pos":[8168,8336],"yaml":true},{"content":"The name that identifies the service to the system. This can also be the display name for the service.","nodes":[{"pos":[0,102],"content":"The name that identifies the service to the system. This can also be the display name for the service.","nodes":[{"content":"The name that identifies the service to the system. This can also be the display name for the service.","pos":[0,102],"nodes":[{"content":"The name that identifies the service to the system.","pos":[0,51]},{"content":"This can also be the display name for the service.","pos":[52,102]}]}]}],"pos":[9152,9255],"yaml":true},{"content":"<code>name</code> is invalid.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is invalid.","source":"<code>name</code> is invalid."}],"pos":[9422,9452],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the specified computer.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> class that is associated with an existing service on the specified computer.","source":"Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the specified computer."}],"pos":[10697,10869],"yaml":true},{"content":"For the `machineName` parameter, you can use \".\" to represent the local computer.","nodes":[{"pos":[0,81],"content":"For the <ph id=\"ph1\">`machineName`</ph> parameter, you can use \".\" to represent the local computer.","source":"For the `machineName` parameter, you can use \".\" to represent the local computer."}],"pos":[10880,10962],"yaml":true,"extradata":"MT"},{"content":"The name that identifies the service to the system. This can also be the display name for the service.","nodes":[{"pos":[0,102],"content":"The name that identifies the service to the system. This can also be the display name for the service.","nodes":[{"content":"The name that identifies the service to the system. This can also be the display name for the service.","pos":[0,102],"nodes":[{"content":"The name that identifies the service to the system.","pos":[0,51]},{"content":"This can also be the display name for the service.","pos":[52,102]}]}]}],"pos":[11121,11224],"yaml":true},{"content":"The computer on which the service resides.","nodes":[{"pos":[0,42],"content":"The computer on which the service resides.","nodes":[{"content":"The computer on which the service resides.","pos":[0,42]}]}],"pos":[11291,11334],"yaml":true},{"content":"<code>name</code> is invalid.  \n  \n -or-  \n  \n <code>machineName</code> is invalid.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is invalid.","source":"<code>name</code> is invalid."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,83],"content":"<ph id=\"ph1\">&lt;code&gt;machineName&lt;/code&gt;</ph> is invalid.","source":"<code>machineName</code> is invalid."}],"pos":[11501,11591],"yaml":true},{"content":"Gets a value indicating whether the service can be paused and resumed.","nodes":[{"pos":[0,70],"content":"Gets a value indicating whether the service can be paused and resumed.","nodes":[{"content":"Gets a value indicating whether the service can be paused and resumed.","pos":[0,70]}]}],"pos":[12744,12815],"yaml":true},{"content":"`true` if the service can be paused; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the service can be paused; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the service can be paused; otherwise, `false`."}],"pos":[13620,13679],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[13884,13931],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[14041,14068],"yaml":true},{"content":"Gets a value indicating whether the service should be notified when the system is shutting down.","nodes":[{"pos":[0,96],"content":"Gets a value indicating whether the service should be notified when the system is shutting down.","nodes":[{"content":"Gets a value indicating whether the service should be notified when the system is shutting down.","pos":[0,96]}]}],"pos":[15254,15351],"yaml":true},{"content":"`true` if the service should be notified when the system is shutting down; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the service should be notified when the system is shutting down; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the service should be notified when the system is shutting down; otherwise, `false`."}],"pos":[16149,16246],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[16443,16490],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[16600,16627],"yaml":true},{"content":"Gets a value indicating whether the service can be stopped after it has started.","nodes":[{"pos":[0,80],"content":"Gets a value indicating whether the service can be stopped after it has started.","nodes":[{"content":"Gets a value indicating whether the service can be stopped after it has started.","pos":[0,80]}]}],"pos":[17789,17870],"yaml":true},{"content":"`true` if the service can be stopped and the <xref href=\"System.ServiceProcess.ServiceBase.OnStop\"></xref> method called; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the service can be stopped and the <ph id=\"ph2\">&lt;xref href=\"System.ServiceProcess.ServiceBase.OnStop\"&gt;&lt;/xref&gt;</ph> method called; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the service can be stopped and the <xref href=\"System.ServiceProcess.ServiceBase.OnStop\"></xref> method called; otherwise, `false`."}],"pos":[18652,18796],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[18989,19036],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[19146,19173],"yaml":true},{"content":"Disconnects this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance from the service and frees all the resources that the instance allocated.","nodes":[{"pos":[0,160],"content":"Disconnects this <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instance from the service and frees all the resources that the instance allocated.","source":"Disconnects this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance from the service and frees all the resources that the instance allocated."}],"pos":[20283,20444],"yaml":true},{"content":"<xref:System.ServiceProcess.ServiceController.Close%2A> releases all the handles associated with the <xref:System.ServiceProcess.ServiceController> instance.","nodes":[{"pos":[0,157],"content":"<xref:System.ServiceProcess.ServiceController.Close%2A> releases all the handles associated with the <xref:System.ServiceProcess.ServiceController> instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Close%2A&gt;</ph> releases all the handles associated with the <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.","pos":[0,157],"source":"<xref:System.ServiceProcess.ServiceController.Close%2A> releases all the handles associated with the <xref:System.ServiceProcess.ServiceController> instance."}]}],"pos":[20455,20613],"yaml":true,"extradata":"MT"},{"content":"Continues a service after it has been paused.","nodes":[{"pos":[0,45],"content":"Continues a service after it has been paused.","nodes":[{"content":"Continues a service after it has been paused.","pos":[0,45]}]}],"pos":[21748,21794],"yaml":true},{"content":"When you call <xref:System.ServiceProcess.ServiceController.Continue%2A> for a service, its status is first changed to `ContinuePending` and then, when the <xref:System.ServiceProcess.ServiceController.Continue%2A> method returns, it is changed to `Running`.  \n  \n You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.","nodes":[{"pos":[0,258],"content":"When you call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for a service, its status is first changed to <ph id=\"ph2\">`ContinuePending`</ph> and then, when the <ph id=\"ph3\">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> method returns, it is changed to <ph id=\"ph4\">`Running`</ph>.","source":"When you call <xref:System.ServiceProcess.ServiceController.Continue%2A> for a service, its status is first changed to `ContinuePending` and then, when the <xref:System.ServiceProcess.ServiceController.Continue%2A> method returns, it is changed to `Running`."},{"pos":[265,404],"content":"You cannot call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id=\"ph2\">`Paused`</ph>.","source":"You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`."}],"pos":[21805,22214],"yaml":true,"extradata":"MT"},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[23015,23062],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[23172,23199],"yaml":true},{"content":"Gets the set of services that depends on the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance.","nodes":[{"pos":[0,144],"content":"Gets the set of services that depends on the service associated with this <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the set of services that depends on the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance."}],"pos":[24340,24485],"yaml":true},{"content":"The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> array represents the services that the system stops if your application calls <xref:System.ServiceProcess.ServiceController.Stop%2A> for this service.","nodes":[{"pos":[0,222],"content":"The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> array represents the services that the system stops if your application calls <xref:System.ServiceProcess.ServiceController.Stop%2A> for this service.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> array represents the services that the system stops if your application calls <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for this service.","pos":[0,222],"source":"The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> array represents the services that the system stops if your application calls <xref:System.ServiceProcess.ServiceController.Stop%2A> for this service."}]}],"pos":[24496,24719],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that depends on this service.","nodes":[{"pos":[0,156],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instances, each of which is associated with a service that depends on this service.","source":"An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that depends on this service."}],"pos":[25547,25704],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[25907,25954],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[26064,26091],"yaml":true},{"content":"Gets or sets a friendly name for the service.","nodes":[{"pos":[0,45],"content":"Gets or sets a friendly name for the service.","nodes":[{"content":"Gets or sets a friendly name for the service.","pos":[0,45]}]}],"pos":[27277,27323],"yaml":true},{"content":"You can set the <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\"), but setting the property to `null` throws an exception.","nodes":[{"pos":[0,158],"content":"You can set the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string (\"\"), but setting the property to <ph id=\"ph2\">`null`</ph> throws an exception.","source":"You can set the <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\"), but setting the property to `null` throws an exception."}],"pos":[27334,27493],"yaml":true,"extradata":"MT"},{"content":"The friendly name of the service, which can be used to identify the service.","nodes":[{"pos":[0,76],"content":"The friendly name of the service, which can be used to identify the service.","nodes":[{"content":"The friendly name of the service, which can be used to identify the service.","pos":[0,76]}]}],"pos":[28251,28328],"yaml":true},{"content":"The <xref href=\"System.ServiceProcess.ServiceController.DisplayName\"></xref> is `null`.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController.DisplayName\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.ServiceProcess.ServiceController.DisplayName\"></xref> is `null`."}],"pos":[28509,28597],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[28715,28762],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[28872,28899],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,152],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> and optionally releases the managed resources."}],"pos":[30974,31127],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ServiceProcess.ServiceController> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,541],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ServiceProcess.ServiceController> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> references.","pos":[0,171],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ServiceProcess.ServiceController> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[172,241],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[31138,31684],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[31839,31942],"yaml":true},{"content":"Executes a custom command on the service.","nodes":[{"pos":[0,41],"content":"Executes a custom command on the service.","nodes":[{"content":"Executes a custom command on the service.","pos":[0,41]}]}],"pos":[33160,33202],"yaml":true},{"content":"When you call <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, the status of the service does not change. If the service was started, the status remains `Running`. If the service was stopped, the status remains `Stopped`, and so on. To process the custom command, the service must override the <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> method and provide a handler for the command identified by the `command` parameter.","nodes":[{"pos":[0,454],"content":"When you call <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, the status of the service does not change. If the service was started, the status remains `Running`. If the service was stopped, the status remains `Stopped`, and so on. To process the custom command, the service must override the <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> method and provide a handler for the command identified by the `command` parameter.","nodes":[{"content":"When you call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph>, the status of the service does not change.","pos":[0,122],"source":"When you call <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, the status of the service does not change."},{"content":"If the service was started, the status remains <ph id=\"ph1\">`Running`</ph>.","pos":[123,180],"source":" If the service was started, the status remains `Running`."},{"content":"If the service was stopped, the status remains <ph id=\"ph1\">`Stopped`</ph>, and so on.","pos":[181,249],"source":" If the service was stopped, the status remains `Stopped`, and so on."},{"content":"To process the custom command, the service must override the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> method and provide a handler for the command identified by the <ph id=\"ph2\">`command`</ph> parameter.","pos":[250,454],"source":" To process the custom command, the service must override the <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> method and provide a handler for the command identified by the `command` parameter."}]}],"pos":[33213,33668],"yaml":true,"extradata":"MT"},{"content":"An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive.","nodes":[{"pos":[0,133],"content":"An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive.","nodes":[{"content":"An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive.","pos":[0,133],"nodes":[{"content":"An application-defined command flag that indicates which custom command to execute.","pos":[0,83]},{"content":"The value must be between 128 and 256, inclusive.","pos":[84,133]}]}]}],"pos":[34348,34482],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[34682,34729],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[34839,34866],"yaml":true},{"content":"Retrieves the device driver services on the local computer.","nodes":[{"pos":[0,59],"content":"Retrieves the device driver services on the local computer.","nodes":[{"content":"Retrieves the device driver services on the local computer.","pos":[0,59]}]}],"pos":[35873,35933],"yaml":true},{"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"pos":[0,357],"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","pos":[0,357],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the local computer.","pos":[0,125],"source":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer."},{"content":"To retrieve the non-device driver services or services that are not drivers, call the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.","pos":[126,281],"source":" To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method."},{"content":"Together, the two methods provide access to all the services on a computer.","pos":[282,357]}]}]}],"pos":[35944,36302],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the local computer.","nodes":[{"pos":[0,165],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> in which each element is associated with a device driver service on the local computer.","source":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the local computer."}],"pos":[37040,37206],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[37402,37449],"yaml":true},{"content":"Retrieves the device driver services on the specified computer.","nodes":[{"pos":[0,63],"content":"Retrieves the device driver services on the specified computer.","nodes":[{"content":"Retrieves the device driver services on the specified computer.","pos":[0,63]}]}],"pos":[38615,38679],"yaml":true},{"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"pos":[0,361],"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"content":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.","pos":[0,361],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the specified computer.","pos":[0,129],"source":"<xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer."},{"content":"To retrieve the non-device driver services or services that are not drivers, call the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.","pos":[130,285],"source":" To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method."},{"content":"Together, the two methods provide access to all the services on a computer.","pos":[286,361]}]}]}],"pos":[38690,39052],"yaml":true,"extradata":"MT"},{"content":"The computer from which to retrieve the device driver services.","nodes":[{"pos":[0,63],"content":"The computer from which to retrieve the device driver services.","nodes":[{"content":"The computer from which to retrieve the device driver services.","pos":[0,63]}]}],"pos":[39247,39311],"yaml":true},{"content":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the specified computer.","nodes":[{"pos":[0,169],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> in which each element is associated with a device driver service on the specified computer.","source":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the specified computer."}],"pos":[39396,39566],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[39762,39809],"yaml":true},{"content":"The <code>machineName</code> parameter has invalid syntax.","nodes":[{"pos":[0,58],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has invalid syntax.","source":"The <code>machineName</code> parameter has invalid syntax."}],"pos":[39903,39962],"yaml":true},{"content":"Retrieves all the services on the specified computer, except for the device driver services.","nodes":[{"pos":[0,92],"content":"Retrieves all the services on the specified computer, except for the device driver services.","nodes":[{"content":"Retrieves all the services on the specified computer, except for the device driver services.","pos":[0,92]}]}],"pos":[41134,41227],"yaml":true},{"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"pos":[0,362],"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","pos":[0,362],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the specified computer.","pos":[0,172],"source":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer."},{"content":"To retrieve device driver services, call the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.","pos":[173,286],"source":" To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method."},{"content":"Together, the two methods provide access to all the services on a computer.","pos":[287,362]}]}]}],"pos":[41238,41601],"yaml":true,"extradata":"MT"},{"content":"The computer from which to retrieve the services.","nodes":[{"pos":[0,49],"content":"The computer from which to retrieve the services.","nodes":[{"content":"The computer from which to retrieve the services.","pos":[0,49]}]}],"pos":[41797,41847],"yaml":true},{"content":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the specified computer.","nodes":[{"pos":[0,155],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> in which each element is associated with a service on the specified computer.","source":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the specified computer."}],"pos":[41932,42088],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[42285,42332],"yaml":true},{"content":"The <code>machineName</code> parameter has invalid syntax.","nodes":[{"pos":[0,58],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">machineName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter has invalid syntax.","source":"The <code>machineName</code> parameter has invalid syntax."}],"pos":[42426,42485],"yaml":true},{"content":"Retrieves all the services on the local computer, except for the device driver services.","nodes":[{"pos":[0,88],"content":"Retrieves all the services on the local computer, except for the device driver services.","nodes":[{"content":"Retrieves all the services on the local computer, except for the device driver services.","pos":[0,88]}]}],"pos":[43594,43683],"yaml":true},{"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"pos":[0,358],"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","nodes":[{"content":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.","pos":[0,358],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the local computer.","pos":[0,168],"source":"<xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer."},{"content":"To retrieve device driver services, call the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.","pos":[169,282],"source":" To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method."},{"content":"Together, the two methods provide access to all the services on a computer.","pos":[283,358]}]}]}],"pos":[43694,44053],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the local computer.","nodes":[{"pos":[0,151],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> in which each element is associated with a service on the local computer.","source":"An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the local computer."}],"pos":[44795,44947],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[45144,45191],"yaml":true},{"content":"Gets or sets the name of the computer on which this service resides.","nodes":[{"pos":[0,68],"content":"Gets or sets the name of the computer on which this service resides.","nodes":[{"content":"Gets or sets the name of the computer on which this service resides.","pos":[0,68]}]}],"pos":[46296,46365],"yaml":true},{"content":"The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\\\\\).","nodes":[{"pos":[0,124],"content":"The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\\\\\).","nodes":[{"content":"The computer name is the name of the server that is running this service, without the preceding backslash characters (<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph>).","pos":[0,124],"source":"The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\\\\\)."}]}],"pos":[46376,46501],"yaml":true,"extradata":"MT"},{"content":"The name of the computer that is running the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance. The default is the local computer (\".\").","nodes":[{"pos":[0,185],"content":"The name of the computer that is running the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance. The default is the local computer (\".\").","nodes":[{"content":"The name of the computer that is running the service associated with this <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instance.","pos":[0,144],"source":"The name of the computer that is running the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance."},{"content":"The default is the local computer (\".\").","pos":[145,185]}]}],"pos":[46806,46992],"yaml":true},{"content":"The <xref href=\"System.ServiceProcess.ServiceController.MachineName\"></xref> syntax is invalid.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController.MachineName\"&gt;&lt;/xref&gt;</ph> syntax is invalid.","source":"The <xref href=\"System.ServiceProcess.ServiceController.MachineName\"></xref> syntax is invalid."}],"pos":[47165,47261],"yaml":true},{"content":"Suspends a service's operation.","nodes":[{"pos":[0,31],"content":"Suspends a service's operation.","nodes":[{"content":"Suspends a service's operation.","pos":[0,31]}]}],"pos":[48524,48556],"yaml":true},{"content":"You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.","nodes":[{"pos":[0,139],"content":"You cannot call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id=\"ph2\">`Paused`</ph>.","source":"You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`."}],"pos":[48567,48707],"yaml":true,"extradata":"MT"},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[49489,49536],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[49646,49673],"yaml":true},{"content":"Refreshes property values by resetting the properties to their current values.","nodes":[{"pos":[0,78],"content":"Refreshes property values by resetting the properties to their current values.","nodes":[{"content":"Refreshes property values by resetting the properties to their current values.","pos":[0,78]}]}],"pos":[50758,50837],"yaml":true},{"content":"The <xref:System.ServiceProcess.ServiceController.Refresh%2A> method causes the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, and <xref:System.ServiceProcess.ServiceController.Status%2A> properties to be reset to their current values when they are next referenced.","nodes":[{"pos":[0,357],"content":"The <xref:System.ServiceProcess.ServiceController.Refresh%2A> method causes the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, and <xref:System.ServiceProcess.ServiceController.Status%2A> properties to be reset to their current values when they are next referenced.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> method causes the <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ServiceProcess.ServiceController.Status%2A&gt;</ph> properties to be reset to their current values when they are next referenced.","pos":[0,357],"source":"The <xref:System.ServiceProcess.ServiceController.Refresh%2A> method causes the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, and <xref:System.ServiceProcess.ServiceController.Status%2A> properties to be reset to their current values when they are next referenced."}]}],"pos":[50848,51206],"yaml":true,"extradata":"MT"},{"content":"Gets the handle for the service.","nodes":[{"pos":[0,32],"content":"Gets the handle for the service.","nodes":[{"content":"Gets the handle for the service.","pos":[0,32]}]}],"pos":[53103,53136],"yaml":true},{"content":"A <xref href=\"System.Runtime.InteropServices.SafeHandle\"></xref> that contains the handle for the service.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.SafeHandle\"&gt;&lt;/xref&gt;</ph> that contains the handle for the service.","source":"A <xref href=\"System.Runtime.InteropServices.SafeHandle\"></xref> that contains the handle for the service."}],"pos":[53373,53480],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[53671,53698],"yaml":true},{"content":"Gets or sets the name that identifies the service that this instance references.","nodes":[{"pos":[0,80],"content":"Gets or sets the name that identifies the service that this instance references.","nodes":[{"content":"Gets or sets the name that identifies the service that this instance references.","pos":[0,80]}]}],"pos":[54868,54949],"yaml":true},{"content":"The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager. Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.  \n  \n When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the corresponding <xref:System.ServiceProcess.ServiceInstaller> class. In code, the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> is usually set in the `main()` function of the executable.  \n  \n When you reset the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> property, the method that sets the property sets this instance's <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\").","nodes":[{"pos":[0,339],"content":"The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager. Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.","nodes":[{"content":"The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager. Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.","pos":[0,339],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> identifies the service to the Service Control Manager.","pos":[0,120],"source":"The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager."},{"content":"Changing this property causes the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.","pos":[121,339],"source":" Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays."}]}]},{"pos":[346,756],"content":"When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the corresponding <xref:System.ServiceProcess.ServiceInstaller> class. In code, the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> is usually set in the `main()` function of the executable.","nodes":[{"content":"When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property of the corresponding <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> class.","pos":[0,276],"source":"When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the corresponding <xref:System.ServiceProcess.ServiceInstaller> class."},{"content":"In code, the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> is usually set in the <ph id=\"ph2\">`main()`</ph> function of the executable.","pos":[277,410],"source":" In code, the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> is usually set in the `main()` function of the executable."}]},{"pos":[763,995],"content":"When you reset the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> property, the method that sets the property sets this instance's <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\").","nodes":[{"content":"When you reset the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> property, the method that sets the property sets this instance's <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string (\"\").","pos":[0,232],"source":"When you reset the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> property, the method that sets the property sets this instance's <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\")."}]}],"pos":[54960,55964],"yaml":true,"extradata":"MT"},{"content":"The name that identifies the service that this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance references. The default is an empty string (\"\").","nodes":[{"pos":[0,165],"content":"The name that identifies the service that this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance references. The default is an empty string (\"\").","nodes":[{"content":"The name that identifies the service that this <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instance references.","pos":[0,128],"source":"The name that identifies the service that this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance references."},{"content":"The default is an empty string (\"\").","pos":[129,165]}]}],"pos":[56325,56491],"yaml":true},{"content":"The <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> is `null`.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController.ServiceName\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> is `null`."}],"pos":[56672,56760],"yaml":true},{"content":"The syntax of the <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> property is invalid.","nodes":[{"pos":[0,111],"content":"The syntax of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController.ServiceName\"&gt;&lt;/xref&gt;</ph> property is invalid.","source":"The syntax of the <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> property is invalid."}],"pos":[56854,56966],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[57076,57103],"yaml":true},{"content":"The set of services that this service depends on.","nodes":[{"pos":[0,49],"content":"The set of services that this service depends on.","nodes":[{"content":"The set of services that this service depends on.","pos":[0,49]}]}],"pos":[58444,58494],"yaml":true},{"content":"If any service in the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> array is not running, you will not be able to start this service.","nodes":[{"pos":[0,156],"content":"If any service in the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> array is not running, you will not be able to start this service.","nodes":[{"content":"If any service in the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> array is not running, you will not be able to start this service.","pos":[0,156],"source":"If any service in the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> array is not running, you will not be able to start this service."}]}],"pos":[58505,58662],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that must be running for this service to run.","nodes":[{"pos":[0,172],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> instances, each of which is associated with a service that must be running for this service to run.","source":"An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that must be running for this service to run."}],"pos":[59491,59664],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[59868,59915],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[60025,60052],"yaml":true},{"content":"Gets the type of service that this object references.","nodes":[{"pos":[0,53],"content":"Gets the type of service that this object references.","nodes":[{"content":"Gets the type of service that this object references.","pos":[0,53]}]}],"pos":[61238,61292],"yaml":true},{"content":"The service type indicates how the service is used by the system. The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator.","nodes":[{"pos":[0,219],"content":"The service type indicates how the service is used by the system. The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator.","nodes":[{"content":"The service type indicates how the service is used by the system. The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator.","pos":[0,219],"nodes":[{"content":"The service type indicates how the service is used by the system.","pos":[0,65]},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServiceType%2A&gt;</ph> property represents a set of flags combined using the bitwise OR operator.","pos":[66,219],"source":" The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator."}]}]}],"pos":[61303,61523],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.ServiceProcess.ServiceType\"></xref> values, used to indicate the network service type.","nodes":[{"pos":[0,116],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceType\"&gt;&lt;/xref&gt;</ph> values, used to indicate the network service type.","source":"One of the <xref href=\"System.ServiceProcess.ServiceType\"></xref> values, used to indicate the network service type."}],"pos":[62308,62425],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[62622,62669],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[62779,62806],"yaml":true},{"content":"Starts the service, passing no arguments.","nodes":[{"pos":[0,41],"content":"Starts the service, passing no arguments.","nodes":[{"content":"Starts the service, passing no arguments.","pos":[0,41]}]}],"pos":[63960,64002],"yaml":true},{"content":"You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.","nodes":[{"pos":[0,136],"content":"You cannot call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id=\"ph2\">`Running`</ph>.","source":"You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`."}],"pos":[64013,64150],"yaml":true,"extradata":"MT"},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[65098,65145],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[65255,65282],"yaml":true},{"content":"Starts a service, passing the specified arguments.","nodes":[{"pos":[0,50],"content":"Starts a service, passing the specified arguments.","nodes":[{"content":"Starts a service, passing the specified arguments.","pos":[0,50]}]}],"pos":[66430,66481],"yaml":true},{"content":"You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.","nodes":[{"pos":[0,136],"content":"You cannot call <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id=\"ph2\">`Running`</ph>.","source":"You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`."}],"pos":[66492,66629],"yaml":true,"extradata":"MT"},{"content":"An array of arguments to pass to the service when it starts.","nodes":[{"pos":[0,60],"content":"An array of arguments to pass to the service when it starts.","nodes":[{"content":"An array of arguments to pass to the service when it starts.","pos":[0,60]}]}],"pos":[66765,66826],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[67017,67064],"yaml":true},{"content":"The service cannot be started.","nodes":[{"pos":[0,30],"content":"The service cannot be started.","nodes":[{"content":"The service cannot be started.","pos":[0,30]}]}],"pos":[67174,67205],"yaml":true},{"content":"<code>args</code> is `null`.  \n  \n -or-  \n  \n A member of the array is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;args&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>args</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,78],"content":"A member of the array is <ph id=\"ph1\">`null`</ph>.","source":"A member of the array is `null`."}],"pos":[67307,67392],"yaml":true},{"content":"Gets a value that indicates how the service represented by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> object starts.","nodes":[{"pos":[0,138],"content":"Gets a value that indicates how the service represented by the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceController\"&gt;&lt;/xref&gt;</ph> object starts.","source":"Gets a value that indicates how the service represented by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> object starts."}],"pos":[68485,68624],"yaml":true},{"content":"A value that indicates how the service starts.","nodes":[{"pos":[0,46],"content":"A value that indicates how the service starts.","nodes":[{"content":"A value that indicates how the service starts.","pos":[0,46]}]}],"pos":[68875,68922],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[69117,69164],"yaml":true},{"content":"Gets the status of the service that is referenced by this instance.","nodes":[{"pos":[0,67],"content":"Gets the status of the service that is referenced by this instance.","nodes":[{"content":"Gets the status of the service that is referenced by this instance.","pos":[0,67]}]}],"pos":[70144,70212],"yaml":true},{"content":"The status indicates the current state of the service. The set of possible values includes several that indicate whether a state-changing command is pending.","nodes":[{"pos":[0,157],"content":"The status indicates the current state of the service. The set of possible values includes several that indicate whether a state-changing command is pending.","nodes":[{"content":"The status indicates the current state of the service. The set of possible values includes several that indicate whether a state-changing command is pending.","pos":[0,157],"nodes":[{"content":"The status indicates the current state of the service.","pos":[0,54]},{"content":"The set of possible values includes several that indicate whether a state-changing command is pending.","pos":[55,157]}]}]}],"pos":[70223,70381],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.","nodes":[{"pos":[0,216],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceProcess.ServiceControllerStatus\"&gt;&lt;/xref&gt;</ph> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.","source":"One of the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending."}],"pos":[71287,71504],"yaml":true},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[71696,71743],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[71853,71880],"yaml":true},{"content":"Stops this service and any services that are dependent on this service.","nodes":[{"pos":[0,71],"content":"Stops this service and any services that are dependent on this service.","nodes":[{"content":"Stops this service and any services that are dependent on this service.","pos":[0,71]}]}],"pos":[73028,73100],"yaml":true},{"content":"If any services depend on this service for their operation, they will be stopped before this service is stopped. The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one.  \n  \n If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service. The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on.","nodes":[{"pos":[0,247],"content":"If any services depend on this service for their operation, they will be stopped before this service is stopped. The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one.","nodes":[{"content":"If any services depend on this service for their operation, they will be stopped before this service is stopped. The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one.","pos":[0,247],"nodes":[{"content":"If any services depend on this service for their operation, they will be stopped before this service is stopped.","pos":[0,112]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> property contains the set of services that depend on this one.","pos":[113,247],"source":" The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one."}]}]},{"pos":[254,622],"content":"If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service. The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on.","nodes":[{"content":"If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service. The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on.","pos":[0,368],"nodes":[{"content":"If you stop a service that this service depends on, call the <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method on this service within the <ph id=\"ph2\">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method of the parent service.","pos":[0,234],"source":"If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> property contains the services that this service depends on.","pos":[235,368],"source":" The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on."}]}]}],"pos":[73111,73738],"yaml":true,"extradata":"MT"},{"content":"An error occurred when accessing a system API.","nodes":[{"pos":[0,46],"content":"An error occurred when accessing a system API.","nodes":[{"content":"An error occurred when accessing a system API.","pos":[0,46]}]}],"pos":[74638,74685],"yaml":true},{"content":"The service was not found.","nodes":[{"pos":[0,26],"content":"The service was not found.","nodes":[{"content":"The service was not found.","pos":[0,26]}]}],"pos":[74795,74822],"yaml":true},{"content":"Infinitely waits for the service to reach the specified status.","nodes":[{"pos":[0,63],"content":"Infinitely waits for the service to reach the specified status.","nodes":[{"content":"Infinitely waits for the service to reach the specified status.","pos":[0,63]}]}],"pos":[76153,76217],"yaml":true},{"content":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.  \n  \n> [!NOTE]\n>  The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","nodes":[{"pos":[0,157],"content":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.","pos":[0,157],"source":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status."}]},{"pos":[165,515],"content":"[!NOTE]\n The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","pos":[8,348],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.","pos":[1,139],"source":" The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id=\"ph2\">`desiredStatus`</ph> and then immediately to another status in that interval.","pos":[141,340],"source":"  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval."}]}]}],"pos":[76228,76749],"yaml":true,"extradata":"MT"},{"content":"The status to wait for.","nodes":[{"pos":[0,23],"content":"The status to wait for.","nodes":[{"content":"The status to wait for.","pos":[0,23]}]}],"pos":[77671,77695],"yaml":true},{"content":"The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration.","nodes":[{"pos":[0,160],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">desiredStatus</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not any of the values defined in the <ph id=\"ph2\">&lt;xref href=\"System.ServiceProcess.ServiceControllerStatus\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration."}],"pos":[77922,78083],"yaml":true},{"content":"Waits for the service to reach the specified status or for the specified time-out to expire.","nodes":[{"pos":[0,92],"content":"Waits for the service to reach the specified status or for the specified time-out to expire.","nodes":[{"content":"Waits for the service to reach the specified status or for the specified time-out to expire.","pos":[0,92]}]}],"pos":[79492,79585],"yaml":true},{"content":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.  \n  \n> [!NOTE]\n>  The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","nodes":[{"pos":[0,157],"content":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.","pos":[0,157],"source":"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status."}]},{"pos":[165,515],"content":"[!NOTE]\n The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","leadings":["","> "],"nodes":[{"content":" The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.","pos":[8,348],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.","pos":[1,139],"source":" The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id=\"ph2\">`desiredStatus`</ph> and then immediately to another status in that interval.","pos":[141,340],"source":"  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval."}]}]}],"pos":[79596,80117],"yaml":true,"extradata":"MT"},{"content":"The status to wait for.","nodes":[{"pos":[0,23],"content":"The status to wait for.","nodes":[{"content":"The status to wait for.","pos":[0,23]}]}],"pos":[80364,80388],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> object specifying the amount of time to wait for the service to reach the specified status.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object specifying the amount of time to wait for the service to reach the specified status.","source":"A <xref href=\"System.TimeSpan\"></xref> object specifying the amount of time to wait for the service to reach the specified status."}],"pos":[80453,80584],"yaml":true},{"content":"The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration.","nodes":[{"pos":[0,160],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">desiredStatus</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not any of the values defined in the <ph id=\"ph2\">&lt;xref href=\"System.ServiceProcess.ServiceControllerStatus\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration."}],"pos":[80811,80972],"yaml":true},{"content":"The value specified for the <code>timeout</code> parameter expires.","nodes":[{"pos":[0,67],"content":"The value specified for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter expires.","source":"The value specified for the <code>timeout</code> parameter expires."}],"pos":[81094,81162],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceProcess.ServiceController\n  commentId: T:System.ServiceProcess.ServiceController\n  id: ServiceController\n  children:\n  - System.ServiceProcess.ServiceController.#ctor\n  - System.ServiceProcess.ServiceController.#ctor(System.String)\n  - System.ServiceProcess.ServiceController.#ctor(System.String,System.String)\n  - System.ServiceProcess.ServiceController.CanPauseAndContinue\n  - System.ServiceProcess.ServiceController.CanShutdown\n  - System.ServiceProcess.ServiceController.CanStop\n  - System.ServiceProcess.ServiceController.Close\n  - System.ServiceProcess.ServiceController.Continue\n  - System.ServiceProcess.ServiceController.DependentServices\n  - System.ServiceProcess.ServiceController.DisplayName\n  - System.ServiceProcess.ServiceController.Dispose\n  - System.ServiceProcess.ServiceController.Dispose(System.Boolean)\n  - System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)\n  - System.ServiceProcess.ServiceController.GetDevices\n  - System.ServiceProcess.ServiceController.GetDevices(System.String)\n  - System.ServiceProcess.ServiceController.GetServices(System.String)\n  - System.ServiceProcess.ServiceController.GetServices\n  - System.ServiceProcess.ServiceController.MachineName\n  - System.ServiceProcess.ServiceController.Pause\n  - System.ServiceProcess.ServiceController.Refresh\n  - System.ServiceProcess.ServiceController.ServiceHandle\n  - System.ServiceProcess.ServiceController.ServiceName\n  - System.ServiceProcess.ServiceController.ServicesDependedOn\n  - System.ServiceProcess.ServiceController.ServiceType\n  - System.ServiceProcess.ServiceController.Start\n  - System.ServiceProcess.ServiceController.Start(System.String[])\n  - System.ServiceProcess.ServiceController.StartType\n  - System.ServiceProcess.ServiceController.Status\n  - System.ServiceProcess.ServiceController.Stop\n  - System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)\n  - System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)\n  langs:\n  - csharp\n  name: ServiceController\n  nameWithType: ServiceController\n  fullName: System.ServiceProcess.ServiceController\n  type: Class\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.\n  remarks: \"You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services. When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service. You can then use the class to start, stop, and otherwise manipulate the service.  \\n  \\n You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity. For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance. This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.  \\n  \\n After you create an instance of <xref:System.ServiceProcess.ServiceController>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.  \\n  \\n> [!NOTE]\\n>  By default, <xref:System.ServiceProcess.ServiceController.MachineName%2A> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.  \\n  \\n Generally, the service author writes code that customizes the action associated with a specific command. For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName> command. In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service.  \\n  \\n The set of commands a service can process depends on its properties; for example, you can set the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property for a service to `false`. This setting renders the `Stop` command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button. If you try to stop the service from your code, the system raises an error and displays the error message \\\"Failed to stop `servicename`.\\\"\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController> class to control the `SimpleService` service example.  \\n  \\n [!code-csharp[ServiceControllerClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#1)]\\n [!code-vb[ServiceControllerClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"ServiceControllerDesc\")]\n\n      public class ServiceController : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.#ctor\n  commentId: M:System.ServiceProcess.ServiceController.#ctor\n  id: '#ctor'\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceController()\n  nameWithType: ServiceController.ServiceController()\n  fullName: ServiceController.ServiceController()\n  type: Constructor\n  assemblies:\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is not associated with a specific service.\n  syntax:\n    content: public ServiceController ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.#ctor(System.String)\n  commentId: M:System.ServiceProcess.ServiceController.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceController(String)\n  nameWithType: ServiceController.ServiceController(String)\n  fullName: ServiceController.ServiceController(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the local computer.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=fullName> constructor to create a <xref:System.ServiceProcess.ServiceController> object that is used to control a sample service. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]\\n [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]\"\n  syntax:\n    content: public ServiceController (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name that identifies the service to the system. This can also be the display name for the service.\n  overload: System.ServiceProcess.ServiceController.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.#ctor(System.String,System.String)\n  commentId: M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceController(String, String)\n  nameWithType: ServiceController.ServiceController(String, String)\n  fullName: ServiceController.ServiceController(String, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Initializes a new instance of the <xref href=\"System.ServiceProcess.ServiceController\"></xref> class that is associated with an existing service on the specified computer.\n  remarks: For the `machineName` parameter, you can use \".\" to represent the local computer.\n  syntax:\n    content: public ServiceController (string name, string machineName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name that identifies the service to the system. This can also be the display name for the service.\n    - id: machineName\n      type: System.String\n      description: The computer on which the service resides.\n  overload: System.ServiceProcess.ServiceController.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is invalid.  \\n  \\n -or-  \\n  \\n <code>machineName</code> is invalid.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.CanPauseAndContinue\n  commentId: P:System.ServiceProcess.ServiceController.CanPauseAndContinue\n  id: CanPauseAndContinue\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: CanPauseAndContinue\n  nameWithType: ServiceController.CanPauseAndContinue\n  fullName: ServiceController.CanPauseAndContinue\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets a value indicating whether the service can be paused and resumed.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A> property to determine whether a service can pause and continue. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]\\n [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPCanPauseAndContinue\")]\n\n      public bool CanPauseAndContinue { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the service can be paused; otherwise, `false`.'\n  overload: System.ServiceProcess.ServiceController.CanPauseAndContinue*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.CanShutdown\n  commentId: P:System.ServiceProcess.ServiceController.CanShutdown\n  id: CanShutdown\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: CanShutdown\n  nameWithType: ServiceController.CanShutdown\n  fullName: ServiceController.CanShutdown\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets a value indicating whether the service should be notified when the system is shutting down.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanShutdown%2A> property to determine whether a service provides a handler for a shutdown event. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]\\n [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPCanShutdown\")]\n\n      public bool CanShutdown { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the service should be notified when the system is shutting down; otherwise, `false`.'\n  overload: System.ServiceProcess.ServiceController.CanShutdown*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.CanStop\n  commentId: P:System.ServiceProcess.ServiceController.CanStop\n  id: CanStop\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: CanStop\n  nameWithType: ServiceController.CanStop\n  fullName: ServiceController.CanStop\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets a value indicating whether the service can be stopped after it has started.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property to determine whether a service provides a handler for a stop event. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]\\n [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPCanStop\")]\n\n      public bool CanStop { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the service can be stopped and the <xref href=\"System.ServiceProcess.ServiceBase.OnStop\"></xref> method called; otherwise, `false`.'\n  overload: System.ServiceProcess.ServiceController.CanStop*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Close\n  commentId: M:System.ServiceProcess.ServiceController.Close\n  id: Close\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: ServiceController.Close()\n  fullName: ServiceController.Close()\n  type: Method\n  assemblies:\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Disconnects this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance from the service and frees all the resources that the instance allocated.\n  remarks: <xref:System.ServiceProcess.ServiceController.Close%2A> releases all the handles associated with the <xref:System.ServiceProcess.ServiceController> instance.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Continue\n  commentId: M:System.ServiceProcess.ServiceController.Continue\n  id: Continue\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Continue()\n  nameWithType: ServiceController.Continue()\n  fullName: ServiceController.Continue()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Continues a service after it has been paused.\n  remarks: \"When you call <xref:System.ServiceProcess.ServiceController.Continue%2A> for a service, its status is first changed to `ContinuePending` and then, when the <xref:System.ServiceProcess.ServiceController.Continue%2A> method returns, it is changed to `Running`.  \\n  \\n You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Continue%2A> method to continue a paused service. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#5)]\\n [!code-vb[ServiceControllerClass#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#5)]\"\n  syntax:\n    content: public void Continue ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Continue*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.DependentServices\n  commentId: P:System.ServiceProcess.ServiceController.DependentServices\n  id: DependentServices\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: DependentServices\n  nameWithType: ServiceController.DependentServices\n  fullName: ServiceController.DependentServices\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets the set of services that depends on the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance.\n  remarks: The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> array represents the services that the system stops if your application calls <xref:System.ServiceProcess.ServiceController.Stop%2A> for this service.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that are dependent on the Event Log service.  \\n  \\n [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]\\n [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]\\n [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPDependentServices\")]\n\n      public System.ServiceProcess.ServiceController[] DependentServices { get; }\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that depends on this service.\n  overload: System.ServiceProcess.ServiceController.DependentServices*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.DisplayName\n  commentId: P:System.ServiceProcess.ServiceController.DisplayName\n  id: DisplayName\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: ServiceController.DisplayName\n  fullName: ServiceController.DisplayName\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets or sets a friendly name for the service.\n  remarks: You can set the <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\"\"), but setting the property to `null` throws an exception.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that are dependent on the Event Log service.  \\n  \\n [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]\\n [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]\\n [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPDisplayName\")]\n\n      public string DisplayName { get; set; }\n    return:\n      type: System.String\n      description: The friendly name of the service, which can be used to identify the service.\n  overload: System.ServiceProcess.ServiceController.DisplayName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.ServiceProcess.ServiceController.DisplayName\"></xref> is `null`.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Dispose\n  commentId: M:System.ServiceProcess.ServiceController.Dispose\n  id: Dispose\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ServiceController.Dispose()\n  fullName: ServiceController.Dispose()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  namespace: System.ServiceProcess\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceProcess.ServiceController.Dispose(System.Boolean)\n  commentId: M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ServiceController.Dispose(Boolean)\n  fullName: ServiceController.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ServiceProcess.ServiceController> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ServiceProcess.ServiceController.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)\n  commentId: M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)\n  id: ExecuteCommand(System.Int32)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ExecuteCommand(Int32)\n  nameWithType: ServiceController.ExecuteCommand(Int32)\n  fullName: ServiceController.ExecuteCommand(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Executes a custom command on the service.\n  remarks: When you call <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, the status of the service does not change. If the service was started, the status remains `Running`. If the service was stopped, the status remains `Stopped`, and so on. To process the custom command, the service must override the <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> method and provide a handler for the command identified by the `command` parameter.\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=fullName> method to execute custom commands in the `SimpleService` service example.  \\n  \\n [!code-csharp[ServiceContoller_ExecuteCommand#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/CS/program.cs#1)]\\n [!code-vb[ServiceContoller_ExecuteCommand#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/VB/module1.vb#1)]\"\n  syntax:\n    content: public void ExecuteCommand (int command);\n    parameters:\n    - id: command\n      type: System.Int32\n      description: An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive.\n  overload: System.ServiceProcess.ServiceController.ExecuteCommand*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.GetDevices\n  commentId: M:System.ServiceProcess.ServiceController.GetDevices\n  id: GetDevices\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: GetDevices()\n  nameWithType: ServiceController.GetDevices()\n  fullName: ServiceController.GetDevices()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Retrieves the device driver services on the local computer.\n  remarks: <xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the device driver services on the local computer.  \\n  \\n [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]\\n [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]\\n [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]\"\n  syntax:\n    content: public static System.ServiceProcess.ServiceController[] GetDevices ();\n    parameters: []\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the local computer.\n  overload: System.ServiceProcess.ServiceController.GetDevices*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.GetDevices(System.String)\n  commentId: M:System.ServiceProcess.ServiceController.GetDevices(System.String)\n  id: GetDevices(System.String)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: GetDevices(String)\n  nameWithType: ServiceController.GetDevices(String)\n  fullName: ServiceController.GetDevices(String)\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Retrieves the device driver services on the specified computer.\n  remarks: <xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer. To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method. Together, the two methods provide access to all the services on a computer.\n  syntax:\n    content: public static System.ServiceProcess.ServiceController[] GetDevices (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: The computer from which to retrieve the device driver services.\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a device driver service on the specified computer.\n  overload: System.ServiceProcess.ServiceController.GetDevices*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>machineName</code> parameter has invalid syntax.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.GetServices(System.String)\n  commentId: M:System.ServiceProcess.ServiceController.GetServices(System.String)\n  id: GetServices(System.String)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: GetServices(String)\n  nameWithType: ServiceController.GetServices(String)\n  fullName: ServiceController.GetServices(String)\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Retrieves all the services on the specified computer, except for the device driver services.\n  remarks: <xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.\n  syntax:\n    content: public static System.ServiceProcess.ServiceController[] GetServices (string machineName);\n    parameters:\n    - id: machineName\n      type: System.String\n      description: The computer from which to retrieve the services.\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the specified computer.\n  overload: System.ServiceProcess.ServiceController.GetServices*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>machineName</code> parameter has invalid syntax.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.GetServices\n  commentId: M:System.ServiceProcess.ServiceController.GetServices\n  id: GetServices\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: GetServices()\n  nameWithType: ServiceController.GetServices()\n  fullName: ServiceController.GetServices()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Retrieves all the services on the local computer, except for the device driver services.\n  remarks: <xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer. To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method. Together, the two methods provide access to all the services on a computer.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the services that are running on the local computer.  \\n  \\n [!code-cpp[ServiceController#6](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#6)]\\n [!code-csharp[ServiceController#6](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#6)]\\n [!code-vb[ServiceController#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#6)]\"\n  syntax:\n    content: public static System.ServiceProcess.ServiceController[] GetServices ();\n    parameters: []\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of type <xref href=\"System.ServiceProcess.ServiceController\"></xref> in which each element is associated with a service on the local computer.\n  overload: System.ServiceProcess.ServiceController.GetServices*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.MachineName\n  commentId: P:System.ServiceProcess.ServiceController.MachineName\n  id: MachineName\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: MachineName\n  nameWithType: ServiceController.MachineName\n  fullName: ServiceController.MachineName\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets or sets the name of the computer on which this service resides.\n  remarks: The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\\\\\).\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.ComponentModel.SettingsBindable(true)]\n\n      [System.ServiceProcess.ServiceProcessDescription(\"SPMachineName\")]\n\n      public string MachineName { get; set; }\n    return:\n      type: System.String\n      description: The name of the computer that is running the service associated with this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance. The default is the local computer (\".\").\n  overload: System.ServiceProcess.ServiceController.MachineName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.ServiceProcess.ServiceController.MachineName\"></xref> syntax is invalid.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.ComponentModel.SettingsBindableAttribute\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Pause\n  commentId: M:System.ServiceProcess.ServiceController.Pause\n  id: Pause\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Pause()\n  nameWithType: ServiceController.Pause()\n  fullName: ServiceController.Pause()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Suspends a service's operation.\n  remarks: You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Pause%2A> method to pause a service. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]\\n [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]\"\n  syntax:\n    content: public void Pause ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Pause*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Refresh\n  commentId: M:System.ServiceProcess.ServiceController.Refresh\n  id: Refresh\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Refresh()\n  nameWithType: ServiceController.Refresh()\n  fullName: ServiceController.Refresh()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Refreshes property values by resetting the properties to their current values.\n  remarks: The <xref:System.ServiceProcess.ServiceController.Refresh%2A> method causes the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, and <xref:System.ServiceProcess.ServiceController.Status%2A> properties to be reset to their current values when they are next referenced.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Refresh%2A> method to obtain the status of a service. The code instructs a service to pause, and then waits for the status to reflect the change. This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.  \\n  \\n [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]\\n [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]\"\n  syntax:\n    content: public void Refresh ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Refresh*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.ServiceHandle\n  commentId: P:System.ServiceProcess.ServiceController.ServiceHandle\n  id: ServiceHandle\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceHandle\n  nameWithType: ServiceController.ServiceHandle\n  fullName: ServiceController.ServiceHandle\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets the handle for the service.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Runtime.InteropServices.SafeHandle ServiceHandle { get; }\n    return:\n      type: System.Runtime.InteropServices.SafeHandle\n      description: A <xref href=\"System.Runtime.InteropServices.SafeHandle\"></xref> that contains the handle for the service.\n  overload: System.ServiceProcess.ServiceController.ServiceHandle*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.ServiceName\n  commentId: P:System.ServiceProcess.ServiceController.ServiceName\n  id: ServiceName\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceName\n  nameWithType: ServiceController.ServiceName\n  fullName: ServiceController.ServiceName\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets or sets the name that identifies the service that this instance references.\n  remarks: \"The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager. Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.  \\n  \\n When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the corresponding <xref:System.ServiceProcess.ServiceInstaller> class. In code, the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> is usually set in the `main()` function of the executable.  \\n  \\n When you reset the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> property, the method that sets the property sets this instance's <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (\\\"\\\").\"\n  syntax:\n    content: >-\n      [System.ComponentModel.SettingsBindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceProcess.Design.ServiceNameConverter))]\n\n      [System.ServiceProcess.ServiceProcessDescription(\"SPServiceName\")]\n\n      public string ServiceName { get; set; }\n    return:\n      type: System.String\n      description: The name that identifies the service that this <xref href=\"System.ServiceProcess.ServiceController\"></xref> instance references. The default is an empty string (\"\").\n  overload: System.ServiceProcess.ServiceController.ServiceName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The syntax of the <xref href=\"System.ServiceProcess.ServiceController.ServiceName\"></xref> property is invalid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ComponentModel.SettingsBindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.ServicesDependedOn\n  commentId: P:System.ServiceProcess.ServiceController.ServicesDependedOn\n  id: ServicesDependedOn\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServicesDependedOn\n  nameWithType: ServiceController.ServicesDependedOn\n  fullName: ServiceController.ServicesDependedOn\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: The set of services that this service depends on.\n  remarks: If any service in the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> array is not running, you will not be able to start this service.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that the Messenger service is dependent on.  \\n  \\n [!code-cpp[ServiceController#4](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#4)]\\n [!code-csharp[ServiceController#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#4)]\\n [!code-vb[ServiceController#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#4)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPServicesDependedOn\")]\n\n      public System.ServiceProcess.ServiceController[] ServicesDependedOn { get; }\n    return:\n      type: System.ServiceProcess.ServiceController[]\n      description: An array of <xref href=\"System.ServiceProcess.ServiceController\"></xref> instances, each of which is associated with a service that must be running for this service to run.\n  overload: System.ServiceProcess.ServiceController.ServicesDependedOn*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.ServiceType\n  commentId: P:System.ServiceProcess.ServiceController.ServiceType\n  id: ServiceType\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: ServiceType\n  nameWithType: ServiceController.ServiceType\n  fullName: ServiceController.ServiceType\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets the type of service that this object references.\n  remarks: The service type indicates how the service is used by the system. The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the device driver services on the local computer.  \\n  \\n [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]\\n [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]\\n [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPServiceType\")]\n\n      public System.ServiceProcess.ServiceType ServiceType { get; }\n    return:\n      type: System.ServiceProcess.ServiceType\n      description: One of the <xref href=\"System.ServiceProcess.ServiceType\"></xref> values, used to indicate the network service type.\n  overload: System.ServiceProcess.ServiceController.ServiceType*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Start\n  commentId: M:System.ServiceProcess.ServiceController.Start\n  id: Start\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: ServiceController.Start()\n  fullName: ServiceController.Start()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Starts the service, passing no arguments.\n  remarks: You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to check whether the Alerter service is stopped. If the service is stopped, the example starts the service and waits until the service status is set to <xref:System.ServiceProcess.ServiceControllerStatus.Running>.  \\n  \\n [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]\\n [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]\\n [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]\"\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Start*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Start(System.String[])\n  commentId: M:System.ServiceProcess.ServiceController.Start(System.String[])\n  id: Start(System.String[])\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Start(String[])\n  nameWithType: ServiceController.Start(String[])\n  fullName: ServiceController.Start(String[])\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Starts a service, passing the specified arguments.\n  remarks: You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.\n  syntax:\n    content: public void Start (string[] args);\n    parameters:\n    - id: args\n      type: System.String[]\n      description: An array of arguments to pass to the service when it starts.\n  overload: System.ServiceProcess.ServiceController.Start*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service cannot be started.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>args</code> is `null`.  \\n  \\n -or-  \\n  \\n A member of the array is `null`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.StartType\n  commentId: P:System.ServiceProcess.ServiceController.StartType\n  id: StartType\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: StartType\n  nameWithType: ServiceController.StartType\n  fullName: ServiceController.StartType\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets a value that indicates how the service represented by the <xref href=\"System.ServiceProcess.ServiceController\"></xref> object starts.\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPStartType\")]\n\n      public System.ServiceProcess.ServiceStartMode StartType { get; }\n    return:\n      type: System.ServiceProcess.ServiceStartMode\n      description: A value that indicates how the service starts.\n  overload: System.ServiceProcess.ServiceController.StartType*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Status\n  commentId: P:System.ServiceProcess.ServiceController.Status\n  id: Status\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Status\n  nameWithType: ServiceController.Status\n  fullName: ServiceController.Status\n  type: Property\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Gets the status of the service that is referenced by this instance.\n  remarks: The status indicates the current state of the service. The set of possible values includes several that indicate whether a state-changing command is pending.\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to check the current status of the Telnet service. If the service is stopped, the example starts the service. If the service is running, the example stops the service.  \\n  \\n [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]\\n [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]\\n [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ServiceProcess.ServiceProcessDescription(\"SPStatus\")]\n\n      public System.ServiceProcess.ServiceControllerStatus Status { get; }\n    return:\n      type: System.ServiceProcess.ServiceControllerStatus\n      description: One of the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.\n  overload: System.ServiceProcess.ServiceController.Status*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  attributes:\n  - type: System.ServiceProcess.ServiceProcessDescriptionAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.Stop\n  commentId: M:System.ServiceProcess.ServiceController.Stop\n  id: Stop\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: ServiceController.Stop()\n  fullName: ServiceController.Stop()\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Stops this service and any services that are dependent on this service.\n  remarks: \"If any services depend on this service for their operation, they will be stopped before this service is stopped. The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one.  \\n  \\n If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service. The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on.\"\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to check the current status of the Telnet service. If the service is stopped, the example starts the service. If the service is running, the example stops the service.  \\n  \\n [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]\\n [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]\\n [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]\"\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.ServiceProcess.ServiceController.Stop*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: An error occurred when accessing a system API.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The service was not found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)\n  commentId: M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)\n  id: WaitForStatus(System.ServiceProcess.ServiceControllerStatus)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: WaitForStatus(ServiceControllerStatus)\n  nameWithType: ServiceController.WaitForStatus(ServiceControllerStatus)\n  fullName: ServiceController.WaitForStatus(ServiceControllerStatus)\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Infinitely waits for the service to reach the specified status.\n  remarks: \"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.\"\n  example:\n  - \"The following example uses the <xref:System.ServiceProcess.ServiceController> class to check whether the Alerter service is stopped. If the service is stopped, the example starts the service and waits until the service status is set to <xref:System.ServiceProcess.ServiceControllerStatus.Running>.  \\n  \\n [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]\\n [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]\\n [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]\"\n  syntax:\n    content: public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus);\n    parameters:\n    - id: desiredStatus\n      type: System.ServiceProcess.ServiceControllerStatus\n      description: The status to wait for.\n  overload: System.ServiceProcess.ServiceController.WaitForStatus*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)\n  commentId: M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)\n  id: WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)\n  parent: System.ServiceProcess.ServiceController\n  langs:\n  - csharp\n  name: WaitForStatus(ServiceControllerStatus, TimeSpan)\n  nameWithType: ServiceController.WaitForStatus(ServiceControllerStatus, TimeSpan)\n  fullName: ServiceController.WaitForStatus(ServiceControllerStatus, TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceProcess.ServiceController\n  - System.ServiceProcess\n  namespace: System.ServiceProcess\n  summary: Waits for the service to reach the specified status or for the specified time-out to expire.\n  remarks: \"Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.  <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.\"\n  syntax:\n    content: public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus, TimeSpan timeout);\n    parameters:\n    - id: desiredStatus\n      type: System.ServiceProcess.ServiceControllerStatus\n      description: The status to wait for.\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> object specifying the amount of time to wait for the service to reach the specified status.\n  overload: System.ServiceProcess.ServiceController.WaitForStatus*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The <code>desiredStatus</code> parameter is not any of the values defined in the <xref href=\"System.ServiceProcess.ServiceControllerStatus\"></xref> enumeration.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The value specified for the <code>timeout</code> parameter expires.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ServiceProcess.TimeoutException\n  parent: System.ServiceProcess\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.ServiceProcess.TimeoutException\n- uid: System.ServiceProcess.ServiceController.#ctor\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceController()\n  nameWithType: ServiceController.ServiceController()\n  fullName: ServiceController.ServiceController()\n- uid: System.ServiceProcess.ServiceController.#ctor(System.String)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceController(String)\n  nameWithType: ServiceController.ServiceController(String)\n  fullName: ServiceController.ServiceController(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceProcess.ServiceController.#ctor(System.String,System.String)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceController(String, String)\n  nameWithType: ServiceController.ServiceController(String, String)\n  fullName: ServiceController.ServiceController(String, String)\n- uid: System.ServiceProcess.ServiceController.CanPauseAndContinue\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanPauseAndContinue\n  nameWithType: ServiceController.CanPauseAndContinue\n  fullName: ServiceController.CanPauseAndContinue\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceProcess.ServiceController.CanShutdown\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanShutdown\n  nameWithType: ServiceController.CanShutdown\n  fullName: ServiceController.CanShutdown\n- uid: System.ServiceProcess.ServiceController.CanStop\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanStop\n  nameWithType: ServiceController.CanStop\n  fullName: ServiceController.CanStop\n- uid: System.ServiceProcess.ServiceController.Close\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Close()\n  nameWithType: ServiceController.Close()\n  fullName: ServiceController.Close()\n- uid: System.ServiceProcess.ServiceController.Continue\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Continue()\n  nameWithType: ServiceController.Continue()\n  fullName: ServiceController.Continue()\n- uid: System.ServiceProcess.ServiceController.DependentServices\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: DependentServices\n  nameWithType: ServiceController.DependentServices\n  fullName: ServiceController.DependentServices\n- uid: System.ServiceProcess.ServiceController\n  name: ServiceController\n  nameWithType: ServiceController\n  fullName: System.ServiceProcess.ServiceController\n- uid: System.ServiceProcess.ServiceController[]\n  parent: System.ServiceProcess\n  isExternal: false\n  name: ServiceController[]\n  nameWithType: ServiceController[]\n  fullName: System.ServiceProcess.ServiceController[]\n  spec.csharp:\n  - uid: System.ServiceProcess.ServiceController\n    name: ServiceController\n    nameWithType: ServiceController\n    fullName: System.ServiceProcess.ServiceController\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceProcess.ServiceController.DisplayName\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: DisplayName\n  nameWithType: ServiceController.DisplayName\n  fullName: ServiceController.DisplayName\n- uid: System.ServiceProcess.ServiceController.Dispose\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Dispose()\n  nameWithType: ServiceController.Dispose()\n  fullName: ServiceController.Dispose()\n- uid: System.ServiceProcess.ServiceController.Dispose(System.Boolean)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ServiceController.Dispose(Boolean)\n  fullName: ServiceController.Dispose(Boolean)\n- uid: System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ExecuteCommand(Int32)\n  nameWithType: ServiceController.ExecuteCommand(Int32)\n  fullName: ServiceController.ExecuteCommand(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceProcess.ServiceController.GetDevices\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetDevices()\n  nameWithType: ServiceController.GetDevices()\n  fullName: ServiceController.GetDevices()\n- uid: System.ServiceProcess.ServiceController.GetDevices(System.String)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetDevices(String)\n  nameWithType: ServiceController.GetDevices(String)\n  fullName: ServiceController.GetDevices(String)\n- uid: System.ServiceProcess.ServiceController.GetServices(System.String)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetServices(String)\n  nameWithType: ServiceController.GetServices(String)\n  fullName: ServiceController.GetServices(String)\n- uid: System.ServiceProcess.ServiceController.GetServices\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetServices()\n  nameWithType: ServiceController.GetServices()\n  fullName: ServiceController.GetServices()\n- uid: System.ServiceProcess.ServiceController.MachineName\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: MachineName\n  nameWithType: ServiceController.MachineName\n  fullName: ServiceController.MachineName\n- uid: System.ServiceProcess.ServiceController.Pause\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Pause()\n  nameWithType: ServiceController.Pause()\n  fullName: ServiceController.Pause()\n- uid: System.ServiceProcess.ServiceController.Refresh\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Refresh()\n  nameWithType: ServiceController.Refresh()\n  fullName: ServiceController.Refresh()\n- uid: System.ServiceProcess.ServiceController.ServiceHandle\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceHandle\n  nameWithType: ServiceController.ServiceHandle\n  fullName: ServiceController.ServiceHandle\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.ServiceProcess.ServiceController.ServiceName\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceName\n  nameWithType: ServiceController.ServiceName\n  fullName: ServiceController.ServiceName\n- uid: System.ServiceProcess.ServiceController.ServicesDependedOn\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServicesDependedOn\n  nameWithType: ServiceController.ServicesDependedOn\n  fullName: ServiceController.ServicesDependedOn\n- uid: System.ServiceProcess.ServiceController.ServiceType\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceType\n  nameWithType: ServiceController.ServiceType\n  fullName: ServiceController.ServiceType\n- uid: System.ServiceProcess.ServiceType\n  parent: System.ServiceProcess\n  isExternal: false\n  name: ServiceType\n  nameWithType: ServiceType\n  fullName: System.ServiceProcess.ServiceType\n- uid: System.ServiceProcess.ServiceController.Start\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Start()\n  nameWithType: ServiceController.Start()\n  fullName: ServiceController.Start()\n- uid: System.ServiceProcess.ServiceController.Start(System.String[])\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Start(String[])\n  nameWithType: ServiceController.Start(String[])\n  fullName: ServiceController.Start(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceProcess.ServiceController.StartType\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: StartType\n  nameWithType: ServiceController.StartType\n  fullName: ServiceController.StartType\n- uid: System.ServiceProcess.ServiceStartMode\n  parent: System.ServiceProcess\n  isExternal: false\n  name: ServiceStartMode\n  nameWithType: ServiceStartMode\n  fullName: System.ServiceProcess.ServiceStartMode\n- uid: System.ServiceProcess.ServiceController.Status\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Status\n  nameWithType: ServiceController.Status\n  fullName: ServiceController.Status\n- uid: System.ServiceProcess.ServiceControllerStatus\n  parent: System.ServiceProcess\n  isExternal: false\n  name: ServiceControllerStatus\n  nameWithType: ServiceControllerStatus\n  fullName: System.ServiceProcess.ServiceControllerStatus\n- uid: System.ServiceProcess.ServiceController.Stop\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Stop()\n  nameWithType: ServiceController.Stop()\n  fullName: ServiceController.Stop()\n- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: WaitForStatus(ServiceControllerStatus)\n  nameWithType: ServiceController.WaitForStatus(ServiceControllerStatus)\n  fullName: ServiceController.WaitForStatus(ServiceControllerStatus)\n- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: WaitForStatus(ServiceControllerStatus, TimeSpan)\n  nameWithType: ServiceController.WaitForStatus(ServiceControllerStatus, TimeSpan)\n  fullName: ServiceController.WaitForStatus(ServiceControllerStatus, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceProcess.ServiceController.#ctor*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceController\n  nameWithType: ServiceController.ServiceController\n  fullName: ServiceController.ServiceController\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.CanPauseAndContinue*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanPauseAndContinue\n  nameWithType: ServiceController.CanPauseAndContinue\n  fullName: ServiceController.CanPauseAndContinue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.CanShutdown*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanShutdown\n  nameWithType: ServiceController.CanShutdown\n  fullName: ServiceController.CanShutdown\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.CanStop*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: CanStop\n  nameWithType: ServiceController.CanStop\n  fullName: ServiceController.CanStop\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Close*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Close\n  nameWithType: ServiceController.Close\n  fullName: ServiceController.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Continue*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Continue\n  nameWithType: ServiceController.Continue\n  fullName: ServiceController.Continue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.DependentServices*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: DependentServices\n  nameWithType: ServiceController.DependentServices\n  fullName: ServiceController.DependentServices\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.DisplayName*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: DisplayName\n  nameWithType: ServiceController.DisplayName\n  fullName: ServiceController.DisplayName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Dispose*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Dispose\n  nameWithType: ServiceController.Dispose\n  fullName: ServiceController.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.ExecuteCommand*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ExecuteCommand\n  nameWithType: ServiceController.ExecuteCommand\n  fullName: ServiceController.ExecuteCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.GetDevices*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetDevices\n  nameWithType: ServiceController.GetDevices\n  fullName: ServiceController.GetDevices\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.GetServices*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: GetServices\n  nameWithType: ServiceController.GetServices\n  fullName: ServiceController.GetServices\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.MachineName*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: MachineName\n  nameWithType: ServiceController.MachineName\n  fullName: ServiceController.MachineName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Pause*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Pause\n  nameWithType: ServiceController.Pause\n  fullName: ServiceController.Pause\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Refresh*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Refresh\n  nameWithType: ServiceController.Refresh\n  fullName: ServiceController.Refresh\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.ServiceHandle*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceHandle\n  nameWithType: ServiceController.ServiceHandle\n  fullName: ServiceController.ServiceHandle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.ServiceName*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceName\n  nameWithType: ServiceController.ServiceName\n  fullName: ServiceController.ServiceName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.ServicesDependedOn*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServicesDependedOn\n  nameWithType: ServiceController.ServicesDependedOn\n  fullName: ServiceController.ServicesDependedOn\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.ServiceType*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: ServiceType\n  nameWithType: ServiceController.ServiceType\n  fullName: ServiceController.ServiceType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Start*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Start\n  nameWithType: ServiceController.Start\n  fullName: ServiceController.Start\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.StartType*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: StartType\n  nameWithType: ServiceController.StartType\n  fullName: ServiceController.StartType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Status*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Status\n  nameWithType: ServiceController.Status\n  fullName: ServiceController.Status\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.Stop*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: Stop\n  nameWithType: ServiceController.Stop\n  fullName: ServiceController.Stop\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.ServiceProcess.ServiceController.WaitForStatus*\n  parent: System.ServiceProcess.ServiceController\n  isExternal: false\n  name: WaitForStatus\n  nameWithType: ServiceController.WaitForStatus\n  fullName: ServiceController.WaitForStatus\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceProcess/ServiceController.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}