### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebEventProvider
  commentId: T:System.Web.Management.WebEventProvider
  id: WebEventProvider
  children:
  - System.Web.Management.WebEventProvider.#ctor
  - System.Web.Management.WebEventProvider.Flush
  - System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebEventProvider.Shutdown
  langs:
  - csharp
  name: WebEventProvider
  nameWithType: WebEventProvider
  fullName: System.Web.Management.WebEventProvider
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: Provides the base class for non buffered event providers.
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.WebEventProvider> class to create your own custom provider.  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebEventProvider> class, see the example provided in this topic."
  example:
  - "The following code example shows how to derive from the <xref:System.Web.Management.WebEventProvider> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted. This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms. In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application. This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.  \n  \n The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \n  \n```  \n<healthMonitoring   \n  heartBeatInterval=\"0\"   \n  enabled=\"true\">  \n  \n    <providers>  \n  \n      <add name=\"SampleWebEventProvider\"   \n        type=\"SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\" />  \n  \n    </providers>  \n  \n    <rules>  \n  \n      <rule   \n        name=\"Custom Event Provider\"  \n        eventName=\"All Events\"  \n        provider=\"SampleWebEventProvider\"  \n        profile=\"Default\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]\n [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]"
  syntax:
    content: 'public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  derivedClasses:
  - System.Web.Management.BufferedWebEventProvider
  - System.Web.Management.EventLogWebEventProvider
  - System.Web.Management.IisTraceWebEventProvider
  - System.Web.Management.TraceWebEventProvider
  - System.Web.Management.WmiWebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Management.WebEventProvider.#ctor
  commentId: M:System.Web.Management.WebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: WebEventProvider.WebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: Initializes a new instance of the <xref href="System.Web.Management.WebEventProvider"></xref> class.
  remarks: The <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebEventProvider> class.
  example:
  - "The following code example shows how to use this constructor in a custom event provider.  \n  \n [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]\n [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]"
  syntax:
    content: protected WebEventProvider ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Management.WebEventProvider.Flush
  commentId: M:System.Web.Management.WebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: WebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: Moves the events from the provider's buffer into the event log.
  remarks: When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.
  example:
  - "The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Flush%2A> method.  \n  \n [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]\n [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]"
  syntax:
    content: public abstract void Flush ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Flush*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  commentId: M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: WebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: Processes the event passed to the provider.
  remarks: This is the method that ASP.NET health monitoring calls to start processing the event.
  example:
  - "The following code example shows how to implement the <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> method. This method appends the customized string representation of the event to a specific log file.  \n  \n [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]\n [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]"
  syntax:
    content: public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);
    parameters:
    - id: raisedEvent
      type: System.Web.Management.WebBaseEvent
      description: The <xref href="System.Web.Management.WebBaseEvent"></xref> object to process.
  overload: System.Web.Management.WebEventProvider.ProcessEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Management.WebEventProvider.Shutdown
  commentId: M:System.Web.Management.WebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: WebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: Performs tasks associated with shutting down the provider.
  remarks: ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.
  example:
  - "The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Shutdown%2A> method.  \n  \n [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]\n [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]"
  syntax:
    content: public abstract void Shutdown ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Shutdown*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Web.Management.WebEventProvider.#ctor
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: WebEventProvider.WebEventProvider()
- uid: System.Web.Management.WebEventProvider.Flush
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: WebEventProvider.Flush()
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: WebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WebEventProvider.Shutdown
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: WebEventProvider.Shutdown()
- uid: System.Web.Management.WebEventProvider.#ctor*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider
  nameWithType: WebEventProvider.WebEventProvider
  fullName: WebEventProvider.WebEventProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
- uid: System.Web.Management.WebEventProvider.Flush*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WebEventProvider.Flush
  fullName: WebEventProvider.Flush
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
- uid: System.Web.Management.WebEventProvider.ProcessEvent*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WebEventProvider.ProcessEvent
  fullName: WebEventProvider.ProcessEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
- uid: System.Web.Management.WebEventProvider.Shutdown*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WebEventProvider.Shutdown
  fullName: WebEventProvider.Shutdown
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebEventProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String, NameValueCollection)
  nameWithType: ProviderBase.Initialize(String, NameValueCollection)
  fullName: ProviderBase.Initialize(String, NameValueCollection)
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: ProviderBase.Name
