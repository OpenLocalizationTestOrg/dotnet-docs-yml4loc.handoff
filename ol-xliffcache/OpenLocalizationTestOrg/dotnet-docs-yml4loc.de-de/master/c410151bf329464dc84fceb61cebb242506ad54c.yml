### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  commentId: T:Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href="Microsoft.Win32.OpenFileDialog"></xref> and <xref href="Microsoft.Win32.SaveFileDialog"></xref>.
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  derivedClasses:
  - Microsoft.Win32.OpenFileDialog
  - Microsoft.Win32.SaveFileDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.#ctor
  commentId: M:Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Initializes a new instance of the <xref href="Microsoft.Win32.FileDialog"></xref> class.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Security.SecurityTreatAsSafe]

      protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  - type: System.Security.SecurityTreatAsSafeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.AddExtension
  commentId: P:Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: '`true` if extensions are added; otherwise, `false`. The default is `true`.'
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  commentId: P:Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.
  remarks: The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: '`true` if warnings are displayed; otherwise, `false`. The default in this base class is `false`.'
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  commentId: P:Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: '`true` if warnings are displayed; otherwise, `false`. The default is `true`.'
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  commentId: P:Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets the list of custom places for file dialog boxes.
  remarks: Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: The list of custom places.
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.DefaultExt
  commentId: P:Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.
  remarks: "The extension string must contain the leading period. For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \".txt\" to select all text files.  \n  \n By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead."
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-csharp[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/VisualBasic/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: The default extension string. The default is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  commentId: P:Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: '`true` to return the location referenced; `false` to return the shortcut location. The default is `false`.'
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.FileName
  commentId: P:Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a string containing the full path of the file selected in a file dialog.
  remarks: If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then <xref:Microsoft.Win32.FileDialog.FileName%2A> contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      [set: System.Security.SecurityCritical]

      public string FileName { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that is the full path of the file selected in the file dialog. The default is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.FileNames
  commentId: P:Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets an array that contains one file name for each selected file.
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      public string[] FileNames { get; }
    return:
      type: System.String[]
      description: An array of <xref href="System.String"></xref> that contains one file name for each selected file. The default is an array with a single item whose value is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.FileOk
  commentId: E:Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Occurs when the user selects a file name by either clicking the **Open** button of the <xref href="Microsoft.Win32.OpenFileDialog"></xref> or the **Save** button of the <xref href="Microsoft.Win32.SaveFileDialog"></xref>.
  remarks: <xref:Microsoft.Win32.FileDialog.FileOk> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.Filter
  commentId: P:Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets the filter string that determines what types of files are displayed from either the <xref href="Microsoft.Win32.OpenFileDialog"></xref> or <xref href="Microsoft.Win32.SaveFileDialog"></xref>.
  remarks: "If <xref:Microsoft.Win32.FileDialog.Filter%2A> is either `null` or <xref:System.String.Empty>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, *.xls, *.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the <xref:Microsoft.Win32.FileDialog.Filter%2A> property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid <xref:Microsoft.Win32.FileDialog.Filter%2A> string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the <xref:Microsoft.Win32.FileDialog.Filter%2A> property.  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString1](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring1)] \n[!code-vb[FileDialogFilterSnippets#FilterString1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring1)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString2](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring2)] \n[!code-vb[FileDialogFilterSnippets#FilterString2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring2)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString3](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring3)] \n[!code-vb[FileDialogFilterSnippets#FilterString3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring3)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString4](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring4)] \n[!code-vb[FileDialogFilterSnippets#FilterString4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring4)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString5](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring5)] \n[!code-vb[FileDialogFilterSnippets#FilterString5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring5)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString6](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring6)] \n[!code-vb[FileDialogFilterSnippets#FilterString6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring6)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString7](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring7)] \n[!code-vb[FileDialogFilterSnippets#FilterString7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring7)]  \n  \n[!code-csharp[FileDialogFilterSnippets#FilterString8](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring8)] \n[!code-vb[FileDialogFilterSnippets#FilterString8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the filter. The default is <xref href="System.String.Empty"></xref>, which means that no filter is applied and all file types are displayed.
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The filter string is invalid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.FilterIndex
  commentId: P:Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets the index of the filter currently selected in a file dialog.
  remarks: This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)].
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: The <xref href="System.Int32"></xref> that is the index of the selected filter. The default is 1.
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  commentId: M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)
  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: Window handle for the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.
    - id: msg
      type: System.Int32
      description: Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.
    - id: wParam
      type: System.IntPtr
      description: Parameters for dialog actions.
    - id: lParam
      type: System.IntPtr
      description: Parameters for dialog actions.
    return:
      type: System.IntPtr
      description: Returns <xref href="System.IntPtr.Zero"></xref> to indicate success; otherwise, a non-zero value is returned to indicate failure.
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  commentId: P:Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets the initial directory that is displayed by a file dialog.
  remarks: If there is no initial directory set, this property will contain <xref:System.String.Empty> rather than a null string.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the initial directory. The default is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  commentId: M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Raises the <xref href="Microsoft.Win32.FileDialog.FileOk"></xref> event.
  remarks: "<xref:Microsoft.Win32.FileDialog.OnFileOk%2A> raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.  \n  \n A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised."
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: A <xref href="System.ComponentModel.CancelEventArgs"></xref> that contains the event data.
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.Options
  commentId: P:Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.
  remarks: This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: A <xref href="System.Int32"></xref> that contains the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.Reset
  commentId: M:Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Sets all properties of a file dialog back to their initial values.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  commentId: P:Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: This property is not implemented.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: Not implemented.
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  commentId: M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: <xref href="Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)"></xref> is called to display a file dialog in a derived class, such as <xref href="Microsoft.Win32.OpenFileDialog"></xref> and <xref href="Microsoft.Win32.SaveFileDialog"></xref>.
  remarks: The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: Handle to the window that owns the dialog.
    return:
      type: System.Boolean
      description: '`true` if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href="Microsoft.Win32.OpenFileDialog"></xref>, <xref href="Microsoft.Win32.SaveFileDialog"></xref>); otherwise, `false`.'
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.SafeFileName
  commentId: P:Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets a string that only contains the file name for the selected file.
  remarks: "This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.  \n  \n If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.  \n  \n See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      public string SafeFileName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that only contains the file name for the selected file. The default is <xref href="System.String.Empty"></xref>, which is also the value when either no file is selected or a directory is selected.
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  commentId: P:Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets an array that contains one safe file name for each selected file.
  remarks: See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: An array of <xref href="System.String"></xref> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.Title
  commentId: P:Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets the text that appears in the title bar of a file dialog.
  remarks: If <xref:Microsoft.Win32.FileDialog.Title%2A> is null or <xref:System.String.Empty>, a default, localized value is used, such as "Save As" or "Open".
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public string Title { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that is the text that appears in the title bar of a file dialog. The default is <xref href="System.String.Empty"></xref>.
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.ToString
  commentId: M:Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Returns a string that represents a file dialog.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A <xref href="System.String"></xref> representation of <xref href="Microsoft.Win32.FileDialog"></xref> that contains the full pathname for any files selected from either <xref href="Microsoft.Win32.OpenFileDialog"></xref>, <xref href="Microsoft.Win32.SaveFileDialog"></xref>.
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.Win32.FileDialog.ValidateNames
  commentId: P:Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] file names.
  syntax:
    content: >-
      [set: System.Security.SecurityCritical]

      public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: '`true` if warnings will be shown when an invalid file name is provided; otherwise, `false`. The default is `false`.'
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: Microsoft.Win32.CommonDialog
  parent: Microsoft.Win32
  isExternal: false
  name: CommonDialog
  nameWithType: CommonDialog
  fullName: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: Microsoft.Win32.FileDialogCustomPlace
  name: FileDialogCustomPlace
  nameWithType: FileDialogCustomPlace
  fullName: Microsoft.Win32.FileDialogCustomPlace
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: Microsoft.Win32.FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)
  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
  fullName: FileDialog.FileDialog
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: FileDialog.AddExtension
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: FileDialog.CheckFileExists
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: FileDialog.CheckPathExists
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: FileDialog.CustomPlaces
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: FileDialog.DefaultExt
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: FileDialog.DereferenceLinks
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: FileDialog.FileName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: FileDialog.FileNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: FileDialog.Filter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: FileDialog.FilterIndex
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
  fullName: FileDialog.HookProc
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: FileDialog.InitialDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
  fullName: FileDialog.OnFileOk
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: FileDialog.Options
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
  fullName: FileDialog.Reset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: FileDialog.RestoreDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
  fullName: FileDialog.RunDialog
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: FileDialog.SafeFileName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: FileDialog.SafeFileNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: FileDialog.Title
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
  fullName: FileDialog.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: FileDialog.ValidateNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  parent: Microsoft.Win32.CommonDialog
  isExternal: false
  name: CheckPermissionsToShowDialog()
  nameWithType: CommonDialog.CheckPermissionsToShowDialog()
  fullName: CommonDialog.CheckPermissionsToShowDialog()
- uid: Microsoft.Win32.CommonDialog.ShowDialog
  parent: Microsoft.Win32.CommonDialog
  isExternal: false
  name: ShowDialog()
  nameWithType: CommonDialog.ShowDialog()
  fullName: CommonDialog.ShowDialog()
- uid: Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  parent: Microsoft.Win32.CommonDialog
  isExternal: false
  name: ShowDialog(Window)
  nameWithType: CommonDialog.ShowDialog(Window)
  fullName: CommonDialog.ShowDialog(Window)
- uid: Microsoft.Win32.CommonDialog.Tag
  parent: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Tag
  nameWithType: CommonDialog.Tag
  fullName: CommonDialog.Tag
