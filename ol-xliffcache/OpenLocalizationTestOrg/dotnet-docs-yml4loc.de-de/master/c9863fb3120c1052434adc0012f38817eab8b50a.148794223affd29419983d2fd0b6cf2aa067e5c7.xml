{"nodes":[{"content":"Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.","nodes":[{"pos":[0,156],"content":"Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.","nodes":[{"content":"Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.","pos":[0,156],"nodes":[{"content":"Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified.","pos":[0,124]},{"content":"This class cannot be inherited.","pos":[125,156]}]}]}],"pos":[1067,1224],"yaml":true},{"content":"Apply <xref:System.ComponentModel.NotifyParentPropertyAttribute> to a property if its parent property should receive notification of changes to the property's values. For example, in the Properties window, the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName> property has nested properties such as <xref:System.Windows.Forms.DataGridViewRow.Height%2A> and <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>. These nested properties are marked with `NotifyParentPropertyAttribute(true)` so they notify the parent property to update its value and display when the property values change.  \n  \n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,630],"content":"Apply <xref:System.ComponentModel.NotifyParentPropertyAttribute> to a property if its parent property should receive notification of changes to the property's values. For example, in the Properties window, the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName> property has nested properties such as <xref:System.Windows.Forms.DataGridViewRow.Height%2A> and <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>. These nested properties are marked with `NotifyParentPropertyAttribute(true)` so they notify the parent property to update its value and display when the property values change.","nodes":[{"content":"Apply <ph id=\"ph1\">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> to a property if its parent property should receive notification of changes to the property's values.","pos":[0,166],"source":"Apply <xref:System.ComponentModel.NotifyParentPropertyAttribute> to a property if its parent property should receive notification of changes to the property's values."},{"content":"For example, in the Properties window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName&gt;</ph> property has nested properties such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A&gt;</ph>.","pos":[167,452],"source":" For example, in the Properties window, the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName> property has nested properties such as <xref:System.Windows.Forms.DataGridViewRow.Height%2A> and <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>."},{"content":"These nested properties are marked with <ph id=\"ph1\">`NotifyParentPropertyAttribute(true)`</ph> so they notify the parent property to update its value and display when the property values change.","pos":[453,630],"source":" These nested properties are marked with `NotifyParentPropertyAttribute(true)` so they notify the parent property to update its value and display when the property values change."}]},{"pos":[637,771],"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1235,2011],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\"></xref> class, using the specified value to determine whether the parent property is notified of changes to the value of the property.","nodes":[{"pos":[0,233],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\"&gt;&lt;/xref&gt;</ph> class, using the specified value to determine whether the parent property is notified of changes to the value of the property.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\"></xref> class, using the specified value to determine whether the parent property is notified of changes to the value of the property."}],"pos":[7899,8133],"yaml":true},{"content":"`true` if the parent should be notified of changes; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the parent should be notified of changes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parent should be notified of changes; otherwise, `false`."}],"pos":[8942,9016],"yaml":true},{"content":"Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.","nodes":[{"pos":[0,144],"content":"Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.","nodes":[{"content":"Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.","pos":[0,144],"nodes":[{"content":"Indicates the default attribute state, that the property should not notify the parent property of changes to its value.","pos":[0,119]},{"content":"This field is read-only.","pos":[120,144]}]}]}],"pos":[10411,10556],"yaml":true},{"content":"Gets a value indicating whether the specified object is the same as the current object.","nodes":[{"pos":[0,87],"content":"Gets a value indicating whether the specified object is the same as the current object.","nodes":[{"content":"Gets a value indicating whether the specified object is the same as the current object.","pos":[0,87]}]}],"pos":[12149,12237],"yaml":true},{"content":"The object to test for equality.","nodes":[{"pos":[0,32],"content":"The object to test for equality.","nodes":[{"content":"The object to test for equality.","pos":[0,32]}]}],"pos":[12377,12410],"yaml":true},{"content":"`true` if the object is the same as this object; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the object is the same as this object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is the same as this object; otherwise, `false`."}],"pos":[12468,12539],"yaml":true},{"content":"Gets the hash code for this object.","nodes":[{"pos":[0,35],"content":"Gets the hash code for this object.","nodes":[{"content":"Gets the hash code for this object.","pos":[0,35]}]}],"pos":[13966,14002],"yaml":true},{"content":"The hash code for the object the attribute belongs to.","nodes":[{"pos":[0,54],"content":"The hash code for the object the attribute belongs to.","nodes":[{"content":"The hash code for the object the attribute belongs to.","pos":[0,54]}]}],"pos":[14136,14191],"yaml":true},{"content":"Gets a value indicating whether the current value of the attribute is the default value for the attribute.","nodes":[{"pos":[0,106],"content":"Gets a value indicating whether the current value of the attribute is the default value for the attribute.","nodes":[{"content":"Gets a value indicating whether the current value of the attribute is the default value for the attribute.","pos":[0,106]}]}],"pos":[15665,15772],"yaml":true},{"content":"`true` if the current value of the attribute is the default value of the attribute; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if the current value of the attribute is the default value of the attribute; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current value of the attribute is the default value of the attribute; otherwise, `false`."}],"pos":[15916,16022],"yaml":true},{"content":"Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.","nodes":[{"pos":[0,119],"content":"Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.","nodes":[{"content":"Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.","pos":[0,119],"nodes":[{"content":"Indicates that the parent property is not be notified of changes to the value of the property.","pos":[0,94]},{"content":"This field is read-only.","pos":[95,119]}]}]}],"pos":[17336,17456],"yaml":true},{"content":"Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.","nodes":[{"pos":[0,119],"content":"Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.","nodes":[{"content":"Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.","pos":[0,119]}]}],"pos":[19013,19133],"yaml":true},{"content":"`true` if the parent property should be notified of changes; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the parent property should be notified of changes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parent property should be notified of changes; otherwise, `false`."}],"pos":[19248,19331],"yaml":true},{"content":"Indicates that the parent property is notified of changes to the value of the property. This field is read-only.","nodes":[{"pos":[0,112],"content":"Indicates that the parent property is notified of changes to the value of the property. This field is read-only.","nodes":[{"content":"Indicates that the parent property is notified of changes to the value of the property. This field is read-only.","pos":[0,112],"nodes":[{"content":"Indicates that the parent property is notified of changes to the value of the property.","pos":[0,87]},{"content":"This field is read-only.","pos":[88,112]}]}]}],"pos":[20709,20822],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.NotifyParentPropertyAttribute\n  commentId: T:System.ComponentModel.NotifyParentPropertyAttribute\n  id: NotifyParentPropertyAttribute\n  children:\n  - System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.NotifyParentPropertyAttribute.Default\n  - System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)\n  - System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode\n  - System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute\n  - System.ComponentModel.NotifyParentPropertyAttribute.No\n  - System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent\n  - System.ComponentModel.NotifyParentPropertyAttribute.Yes\n  langs:\n  - csharp\n  name: NotifyParentPropertyAttribute\n  nameWithType: NotifyParentPropertyAttribute\n  fullName: System.ComponentModel.NotifyParentPropertyAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.\n  remarks: \"Apply <xref:System.ComponentModel.NotifyParentPropertyAttribute> to a property if its parent property should receive notification of changes to the property's values. For example, in the Properties window, the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName> property has nested properties such as <xref:System.Windows.Forms.DataGridViewRow.Height%2A> and <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>. These nested properties are marked with `NotifyParentPropertyAttribute(true)` so they notify the parent property to update its value and display when the property values change.  \\n  \\n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.ComponentModel.NotifyParentPropertyAttribute> and the <xref:System.ComponentModel.ExpandableObjectConverter> class to create an expandable property on a custom control.  \\n  \\n [!code-csharp[System.ComponentModel.ExpandableObjectConverter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/CS/DemoControl.cs#1)]\\n [!code-vb[System.ComponentModel.ExpandableObjectConverter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/VB/DemoControl.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class NotifyParentPropertyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: NotifyParentPropertyAttribute(Boolean)\n  nameWithType: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute(Boolean)\n  fullName: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.NotifyParentPropertyAttribute\"></xref> class, using the specified value to determine whether the parent property is notified of changes to the value of the property.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.ComponentModel.NotifyParentPropertyAttribute> and the <xref:System.ComponentModel.ExpandableObjectConverter> class to create an expandable property on a custom control.  \\n  \\n [!code-csharp[System.ComponentModel.ExpandableObjectConverter#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/CS/DemoControl.cs#3)]\\n [!code-vb[System.ComponentModel.ExpandableObjectConverter#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/VB/DemoControl.vb#3)]\"\n  syntax:\n    content: public NotifyParentPropertyAttribute (bool notifyParent);\n    parameters:\n    - id: notifyParent\n      type: System.Boolean\n      description: '`true` if the parent should be notified of changes; otherwise, `false`.'\n  overload: System.ComponentModel.NotifyParentPropertyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Default\n  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.Default\n  id: Default\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: NotifyParentPropertyAttribute.Default\n  fullName: NotifyParentPropertyAttribute.Default\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.NotifyParentPropertyAttribute Default;\n    return:\n      type: System.ComponentModel.NotifyParentPropertyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NotifyParentPropertyAttribute.Equals(Object)\n  fullName: NotifyParentPropertyAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the specified object is the same as the current object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test for equality.\n    return:\n      type: System.Boolean\n      description: '`true` if the object is the same as this object; otherwise, `false`.'\n  overload: System.ComponentModel.NotifyParentPropertyAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode\n  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NotifyParentPropertyAttribute.GetHashCode()\n  fullName: NotifyParentPropertyAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the hash code for this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the object the attribute belongs to.\n  overload: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: NotifyParentPropertyAttribute.IsDefaultAttribute()\n  fullName: NotifyParentPropertyAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the current value of the attribute is the default value for the attribute.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current value of the attribute is the default value of the attribute; otherwise, `false`.'\n  overload: System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.No\n  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.No\n  id: No\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: NotifyParentPropertyAttribute.No\n  fullName: NotifyParentPropertyAttribute.No\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.NotifyParentPropertyAttribute No;\n    return:\n      type: System.ComponentModel.NotifyParentPropertyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent\n  commentId: P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent\n  id: NotifyParent\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: NotifyParent\n  nameWithType: NotifyParentPropertyAttribute.NotifyParent\n  fullName: NotifyParentPropertyAttribute.NotifyParent\n  type: Property\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.\n  syntax:\n    content: public bool NotifyParent { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parent property should be notified of changes; otherwise, `false`.'\n  overload: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Yes\n  commentId: F:System.ComponentModel.NotifyParentPropertyAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: NotifyParentPropertyAttribute.Yes\n  fullName: NotifyParentPropertyAttribute.Yes\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Indicates that the parent property is notified of changes to the value of the property. This field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.NotifyParentPropertyAttribute Yes;\n    return:\n      type: System.ComponentModel.NotifyParentPropertyAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: NotifyParentPropertyAttribute(Boolean)\n  nameWithType: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute(Boolean)\n  fullName: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Default\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: Default\n  nameWithType: NotifyParentPropertyAttribute.Default\n  fullName: NotifyParentPropertyAttribute.Default\n- uid: System.ComponentModel.NotifyParentPropertyAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: NotifyParentPropertyAttribute\n  nameWithType: NotifyParentPropertyAttribute\n  fullName: System.ComponentModel.NotifyParentPropertyAttribute\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NotifyParentPropertyAttribute.Equals(Object)\n  fullName: NotifyParentPropertyAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NotifyParentPropertyAttribute.GetHashCode()\n  fullName: NotifyParentPropertyAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: NotifyParentPropertyAttribute.IsDefaultAttribute()\n  fullName: NotifyParentPropertyAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.No\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: No\n  nameWithType: NotifyParentPropertyAttribute.No\n  fullName: NotifyParentPropertyAttribute.No\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: NotifyParent\n  nameWithType: NotifyParentPropertyAttribute.NotifyParent\n  fullName: NotifyParentPropertyAttribute.NotifyParent\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Yes\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: NotifyParentPropertyAttribute.Yes\n  fullName: NotifyParentPropertyAttribute.Yes\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.#ctor*\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: NotifyParentPropertyAttribute\n  nameWithType: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute\n  fullName: NotifyParentPropertyAttribute.NotifyParentPropertyAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.Equals*\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: NotifyParentPropertyAttribute.Equals\n  fullName: NotifyParentPropertyAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode*\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NotifyParentPropertyAttribute.GetHashCode\n  fullName: NotifyParentPropertyAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: NotifyParentPropertyAttribute.IsDefaultAttribute\n  fullName: NotifyParentPropertyAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n- uid: System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent*\n  parent: System.ComponentModel.NotifyParentPropertyAttribute\n  isExternal: false\n  name: NotifyParent\n  nameWithType: NotifyParentPropertyAttribute.NotifyParent\n  fullName: NotifyParentPropertyAttribute.NotifyParent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/NotifyParentPropertyAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}