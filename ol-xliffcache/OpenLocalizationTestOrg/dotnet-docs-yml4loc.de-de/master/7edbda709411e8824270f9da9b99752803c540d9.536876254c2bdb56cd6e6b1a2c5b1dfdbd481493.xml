{"nodes":[{"content":"Provides methods that a derived task handler class can implement in order to process an asynchronous task.","nodes":[{"pos":[0,106],"content":"Provides methods that a derived task handler class can implement in order to process an asynchronous task.","nodes":[{"content":"Provides methods that a derived task handler class can implement in order to process an asynchronous task.","pos":[0,106]}]}],"pos":[861,968],"yaml":true},{"content":"The<xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods.  To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code.","nodes":[{"pos":[0,441],"content":"The<xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods.  To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code.","nodes":[{"content":"The<xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods.  To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code.","pos":[0,441],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.Web.HttpTaskAsyncHandler&gt;</ph> class provides a simplified way to handle asynchronous tasks without having to implement the <ph id=\"ph2\">&lt;xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A&gt;</ph> methods.","pos":[0,263],"source":"The<xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods."},{"content":"To create a handler for an asynchronous task, you can override the <ph id=\"ph1\">&lt;xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A&gt;</ph> method and implement custom task handling code.","pos":[265,441],"source":"  To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code."}]}]}],"pos":[979,1421],"yaml":true,"extradata":"MT"},{"content":"Called from constructors in derived classes to initialize the <xref href=\"System.Web.HttpTaskAsyncHandler\"></xref> class.","nodes":[{"pos":[0,121],"content":"Called from constructors in derived classes to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpTaskAsyncHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Called from constructors in derived classes to initialize the <xref href=\"System.Web.HttpTaskAsyncHandler\"></xref> class."}],"pos":[2832,2954],"yaml":true},{"content":"When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.","nodes":[{"pos":[0,148],"content":"When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.","nodes":[{"content":"When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.","pos":[0,148]}]}],"pos":[4011,4160],"yaml":true},{"content":"`true` if the handler can be reused; otherwise, `false`.  The default is `false`.","nodes":[{"pos":[0,81],"content":"`true` if the handler can be reused; otherwise, `false`.  The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler can be reused; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if the handler can be reused; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[58,81],"source":"  The default is `false`."}]}],"pos":[4281,4365],"yaml":true},{"content":"When overridden in a derived class, provides code that handles a synchronous task.","nodes":[{"pos":[0,82],"content":"When overridden in a derived class, provides code that handles a synchronous task.","nodes":[{"content":"When overridden in a derived class, provides code that handles a synchronous task.","pos":[0,82]}]}],"pos":[5483,5566],"yaml":true},{"content":"The HTTP context.","nodes":[{"pos":[0,17],"content":"The HTTP context.","nodes":[{"content":"The HTTP context.","pos":[0,17]}]}],"pos":[5746,5764],"yaml":true},{"content":"The method is implemented but does not provide any default handling for synchronous tasks.","nodes":[{"pos":[0,90],"content":"The method is implemented but does not provide any default handling for synchronous tasks.","nodes":[{"content":"The method is implemented but does not provide any default handling for synchronous tasks.","pos":[0,90]}]}],"pos":[5940,6031],"yaml":true},{"content":"When overridden in a derived class, provides code that handles an asynchronous task.","nodes":[{"pos":[0,84],"content":"When overridden in a derived class, provides code that handles an asynchronous task.","nodes":[{"content":"When overridden in a derived class, provides code that handles an asynchronous task.","pos":[0,84]}]}],"pos":[7123,7208],"yaml":true},{"content":"To create a custom handler for an asynchronous task, override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method.","nodes":[{"pos":[0,135],"content":"To create a custom handler for an asynchronous task, override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method.","nodes":[{"content":"To create a custom handler for an asynchronous task, override the <ph id=\"ph1\">&lt;xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A&gt;</ph> method.","pos":[0,135],"source":"To create a custom handler for an asynchronous task, override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method."}]}],"pos":[7219,7355],"yaml":true,"extradata":"MT"},{"content":"The HTTP context.","nodes":[{"pos":[0,17],"content":"The HTTP context.","nodes":[{"content":"The HTTP context.","pos":[0,17]}]}],"pos":[7564,7582],"yaml":true},{"content":"The asynchronous task.","nodes":[{"pos":[0,22],"content":"The asynchronous task.","nodes":[{"content":"The asynchronous task.","pos":[0,22]}]}],"pos":[7653,7676],"yaml":true},{"content":"Initiates asynchronous processing of a task in an HTTP task handler.","nodes":[{"pos":[0,68],"content":"Initiates asynchronous processing of a task in an HTTP task handler.","nodes":[{"content":"Initiates asynchronous processing of a task in an HTTP task handler.","pos":[0,68]}]}],"pos":[9162,9231],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","nodes":[{"pos":[0,197],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","pos":[0,197],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.HttpTaskAsyncHandler&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.IHttpAsyncHandler&gt;</ph> interface.","pos":[60,197],"source":" It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface."}]}]}],"pos":[9242,9440],"yaml":true,"extradata":"MT"},{"content":"The HTTP context.","nodes":[{"pos":[0,17],"content":"The HTTP context.","nodes":[{"content":"The HTTP context.","pos":[0,17]}]}],"pos":[9672,9690],"yaml":true},{"content":"The callback method to invoke when the method returns.","nodes":[{"pos":[0,54],"content":"The callback method to invoke when the method returns.","nodes":[{"content":"The callback method to invoke when the method returns.","pos":[0,54]}]}],"pos":[9755,9810],"yaml":true},{"content":"Additional data for processing the task.","nodes":[{"pos":[0,40],"content":"Additional data for processing the task.","nodes":[{"content":"Additional data for processing the task.","pos":[0,40]}]}],"pos":[9875,9916],"yaml":true},{"content":"An object that contains status data about the asynchronous operation.","nodes":[{"pos":[0,69],"content":"An object that contains status data about the asynchronous operation.","nodes":[{"content":"An object that contains status data about the asynchronous operation.","pos":[0,69]}]}],"pos":[9979,10049],"yaml":true},{"content":"Ends asynchronous processing of a task in an HTTP task handler.","nodes":[{"pos":[0,63],"content":"Ends asynchronous processing of a task in an HTTP task handler.","nodes":[{"content":"Ends asynchronous processing of a task in an HTTP task handler.","pos":[0,63]}]}],"pos":[11372,11436],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","nodes":[{"pos":[0,197],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.","pos":[0,197],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.HttpTaskAsyncHandler&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.IHttpAsyncHandler&gt;</ph> interface.","pos":[60,197],"source":" It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface."}]}]}],"pos":[11447,11645],"yaml":true,"extradata":"MT"},{"content":"The status of the asynchronous operation.","nodes":[{"pos":[0,41],"content":"The status of the asynchronous operation.","nodes":[{"content":"The status of the asynchronous operation.","pos":[0,41]}]}],"pos":[11816,11858],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpTaskAsyncHandler\n  commentId: T:System.Web.HttpTaskAsyncHandler\n  id: HttpTaskAsyncHandler\n  children:\n  - System.Web.HttpTaskAsyncHandler.#ctor\n  - System.Web.HttpTaskAsyncHandler.IsReusable\n  - System.Web.HttpTaskAsyncHandler.ProcessRequest(System.Web.HttpContext)\n  - System.Web.HttpTaskAsyncHandler.ProcessRequestAsync(System.Web.HttpContext)\n  - System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  - System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  langs:\n  - csharp\n  name: HttpTaskAsyncHandler\n  nameWithType: HttpTaskAsyncHandler\n  fullName: System.Web.HttpTaskAsyncHandler\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides methods that a derived task handler class can implement in order to process an asynchronous task.\n  remarks: The<xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods.  To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code.\n  syntax:\n    content: 'public abstract class HttpTaskAsyncHandler : System.Web.IHttpAsyncHandler'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpAsyncHandler\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.#ctor\n  commentId: M:System.Web.HttpTaskAsyncHandler.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: HttpTaskAsyncHandler()\n  nameWithType: HttpTaskAsyncHandler.HttpTaskAsyncHandler()\n  fullName: HttpTaskAsyncHandler.HttpTaskAsyncHandler()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.Web.HttpTaskAsyncHandler\"></xref> class.\n  syntax:\n    content: protected HttpTaskAsyncHandler ();\n    parameters: []\n  overload: System.Web.HttpTaskAsyncHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.IsReusable\n  commentId: P:System.Web.HttpTaskAsyncHandler.IsReusable\n  id: IsReusable\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: IsReusable\n  nameWithType: HttpTaskAsyncHandler.IsReusable\n  fullName: HttpTaskAsyncHandler.IsReusable\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.\n  syntax:\n    content: public virtual bool IsReusable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler can be reused; otherwise, `false`.  The default is `false`.'\n  overload: System.Web.HttpTaskAsyncHandler.IsReusable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequest(System.Web.HttpContext)\n  commentId: M:System.Web.HttpTaskAsyncHandler.ProcessRequest(System.Web.HttpContext)\n  id: ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: ProcessRequest(HttpContext)\n  nameWithType: HttpTaskAsyncHandler.ProcessRequest(HttpContext)\n  fullName: HttpTaskAsyncHandler.ProcessRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, provides code that handles a synchronous task.\n  syntax:\n    content: public virtual void ProcessRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The HTTP context.\n  overload: System.Web.HttpTaskAsyncHandler.ProcessRequest*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The method is implemented but does not provide any default handling for synchronous tasks.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequestAsync(System.Web.HttpContext)\n  commentId: M:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync(System.Web.HttpContext)\n  id: ProcessRequestAsync(System.Web.HttpContext)\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: ProcessRequestAsync(HttpContext)\n  nameWithType: HttpTaskAsyncHandler.ProcessRequestAsync(HttpContext)\n  fullName: HttpTaskAsyncHandler.ProcessRequestAsync(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: When overridden in a derived class, provides code that handles an asynchronous task.\n  remarks: To create a custom handler for an asynchronous task, override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task ProcessRequestAsync (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The HTTP context.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The asynchronous task.\n  overload: System.Web.HttpTaskAsyncHandler.ProcessRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  commentId: M:System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  id: System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  nameWithType: HttpTaskAsyncHandler.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  fullName: HttpTaskAsyncHandler.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initiates asynchronous processing of a task in an HTTP task handler.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.\n  syntax:\n    content: IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The HTTP context.\n    - id: cb\n      type: System.AsyncCallback\n      description: The callback method to invoke when the method returns.\n    - id: extraData\n      type: System.Object\n      description: Additional data for processing the task.\n    return:\n      type: System.IAsyncResult\n      description: An object that contains status data about the asynchronous operation.\n  overload: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  commentId: M:System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  id: System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  isEii: true\n  parent: System.Web.HttpTaskAsyncHandler\n  langs:\n  - csharp\n  name: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  nameWithType: HttpTaskAsyncHandler.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  fullName: HttpTaskAsyncHandler.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Ends asynchronous processing of a task in an HTTP task handler.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.\n  syntax:\n    content: void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The status of the asynchronous operation.\n  overload: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Web.HttpTaskAsyncHandler.#ctor\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: HttpTaskAsyncHandler()\n  nameWithType: HttpTaskAsyncHandler.HttpTaskAsyncHandler()\n  fullName: HttpTaskAsyncHandler.HttpTaskAsyncHandler()\n- uid: System.Web.HttpTaskAsyncHandler.IsReusable\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: IsReusable\n  nameWithType: HttpTaskAsyncHandler.IsReusable\n  fullName: HttpTaskAsyncHandler.IsReusable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: ProcessRequest(HttpContext)\n  nameWithType: HttpTaskAsyncHandler.ProcessRequest(HttpContext)\n  fullName: HttpTaskAsyncHandler.ProcessRequest(HttpContext)\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequestAsync(System.Web.HttpContext)\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: ProcessRequestAsync(HttpContext)\n  nameWithType: HttpTaskAsyncHandler.ProcessRequestAsync(HttpContext)\n  fullName: HttpTaskAsyncHandler.ProcessRequestAsync(HttpContext)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  nameWithType: HttpTaskAsyncHandler.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  fullName: HttpTaskAsyncHandler.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  nameWithType: HttpTaskAsyncHandler.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  fullName: HttpTaskAsyncHandler.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n- uid: System.Web.HttpTaskAsyncHandler.#ctor*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: HttpTaskAsyncHandler\n  nameWithType: HttpTaskAsyncHandler.HttpTaskAsyncHandler\n  fullName: HttpTaskAsyncHandler.HttpTaskAsyncHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Web.HttpTaskAsyncHandler.IsReusable*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: IsReusable\n  nameWithType: HttpTaskAsyncHandler.IsReusable\n  fullName: HttpTaskAsyncHandler.IsReusable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequest*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: ProcessRequest\n  nameWithType: HttpTaskAsyncHandler.ProcessRequest\n  fullName: HttpTaskAsyncHandler.ProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Web.HttpTaskAsyncHandler.ProcessRequestAsync*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: ProcessRequestAsync\n  nameWithType: HttpTaskAsyncHandler.ProcessRequestAsync\n  fullName: HttpTaskAsyncHandler.ProcessRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: System.Web.IHttpAsyncHandler.BeginProcessRequest\n  nameWithType: HttpTaskAsyncHandler.System.Web.IHttpAsyncHandler.BeginProcessRequest\n  fullName: HttpTaskAsyncHandler.System.Web.IHttpAsyncHandler.BeginProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest*\n  parent: System.Web.HttpTaskAsyncHandler\n  isExternal: false\n  name: System.Web.IHttpAsyncHandler.EndProcessRequest\n  nameWithType: HttpTaskAsyncHandler.System.Web.IHttpAsyncHandler.EndProcessRequest\n  fullName: HttpTaskAsyncHandler.System.Web.IHttpAsyncHandler.EndProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpTaskAsyncHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.IHttpAsyncHandler\n  parent: System.Web\n  isExternal: false\n  name: IHttpAsyncHandler\n  nameWithType: IHttpAsyncHandler\n  fullName: System.Web.IHttpAsyncHandler\n"}