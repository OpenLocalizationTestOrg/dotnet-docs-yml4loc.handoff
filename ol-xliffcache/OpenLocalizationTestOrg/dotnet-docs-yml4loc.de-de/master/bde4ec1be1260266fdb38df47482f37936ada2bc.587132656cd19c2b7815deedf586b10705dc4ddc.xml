{"nodes":[{"content":"Converts a <xref href=\"System.Security.Cryptography.CryptoStream\"></xref> from base 64.","nodes":[{"pos":[0,87],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptoStream\"&gt;&lt;/xref&gt;</ph> from base 64.","source":"Converts a <xref href=\"System.Security.Cryptography.CryptoStream\"></xref> from base 64."}],"pos":[1460,1548],"yaml":true},{"content":"Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.","nodes":[{"pos":[0,106],"content":"Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.","nodes":[{"content":"Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.","pos":[0,106]}]}],"pos":[1559,1666],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class."}],"pos":[4263,4374],"yaml":true},{"content":"In the default configuration, white spaces are ignored. See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details.","nodes":[{"pos":[0,137],"content":"In the default configuration, white spaces are ignored. See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details.","nodes":[{"content":"In the default configuration, white spaces are ignored. See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details.","pos":[0,137],"nodes":[{"content":"In the default configuration, white spaces are ignored.","pos":[0,55]},{"content":"See <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.FromBase64TransformMode&gt;</ph> for more details.","pos":[56,137],"source":" See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details."}]}]}],"pos":[4385,4523],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class with the specified transformation mode.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> class with the specified transformation mode.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class with the specified transformation mode."}],"pos":[6179,6329],"yaml":true},{"content":"One of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> values.","nodes":[{"pos":[0,88],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> values."}],"pos":[7277,7366],"yaml":true},{"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"pos":[0,68],"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"content":"Gets a value indicating whether the current transform can be reused.","pos":[0,68]}]}],"pos":[8737,8806],"yaml":true},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[8934,8949],"yaml":true},{"content":"Gets a value that indicates whether multiple blocks can be transformed.","nodes":[{"pos":[0,71],"content":"Gets a value that indicates whether multiple blocks can be transformed.","nodes":[{"content":"Gets a value that indicates whether multiple blocks can be transformed.","pos":[0,71]}]}],"pos":[10386,10458],"yaml":true},{"content":"In the current implementation, only one block can be transformed at a time, so this property is always `false`.","nodes":[{"pos":[0,111],"content":"In the current implementation, only one block can be transformed at a time, so this property is always <ph id=\"ph1\">`false`</ph>.","source":"In the current implementation, only one block can be transformed at a time, so this property is always `false`."}],"pos":[10469,10581],"yaml":true,"extradata":"MT"},{"content":"Always `false`.","nodes":[{"pos":[0,15],"content":"Always <ph id=\"ph1\">`false`</ph>.","source":"Always `false`."}],"pos":[10710,10726],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>.","nodes":[{"pos":[0,105],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>."}],"pos":[12050,12156],"yaml":true},{"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.  \n  \n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.FromBase64Transform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"pos":[0,94],"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.","nodes":[{"content":"This method is a simple call to <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</ph>.","pos":[0,94],"source":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>."}]},{"pos":[101,371],"content":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.FromBase64Transform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"content":"Calling <ph id=\"ph1\">`Dispose`</ph> allows the resources used by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> to be reallocated for other purposes.","pos":[0,144],"source":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.FromBase64Transform> to be reallocated for other purposes."},{"content":"For more information about <ph id=\"ph1\">`Dispose`</ph>, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.","pos":[145,270],"source":" For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md)."}]}],"pos":[12167,12543],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class.","nodes":[{"pos":[0,135],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class."}],"pos":[13922,14058],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.FromBase64Transform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.FromBase64Transform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.FromBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.FromBase64Transform> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method.","nodes":[{"pos":[0,461],"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.FromBase64Transform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.FromBase64Transform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.FromBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.FromBase64Transform> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.","pos":[0,103],"source":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.FromBase64Transform>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> in an unusable state.","pos":[104,213],"source":" The `Dispose` method leaves the <xref:System.Security.Cryptography.FromBase64Transform> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> was occupying.","pos":[214,461],"source":" After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.FromBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.FromBase64Transform> was occupying."}]},{"pos":[468,673],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[681,993],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method.","pos":[8,310],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.","pos":[1,125],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[126,302],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method."}]}]}],"pos":[14069,15070],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,161],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> and optionally releases the managed resources."}],"pos":[16522,16684],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`. `Finalize` invokes `Dispose` with disposing set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.FromBase64Transform> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,245],"content":"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`. `Finalize` invokes `Dispose` with disposing set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">`Finalize`</ph> method.","pos":[0,81],"source":"This method is called by the public `Dispose()` method and the `Finalize` method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[82,185],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`."},{"content":"<ph id=\"ph1\">`Finalize`</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with disposing set to <ph id=\"ph3\">`false`</ph>.","pos":[186,245],"source":"`Finalize` invokes `Dispose` with disposing set to `false`."}]},{"pos":[252,504],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.FromBase64Transform> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> references.","pos":[0,182],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.FromBase64Transform> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[183,252],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[16695,17204],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[17358,17461],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>.","nodes":[{"pos":[0,115],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>."}],"pos":[18784,18900],"yaml":true},{"content":"Gets the input block size.","nodes":[{"pos":[0,26],"content":"Gets the input block size.","nodes":[{"content":"Gets the input block size.","pos":[0,26]}]}],"pos":[20323,20350],"yaml":true},{"content":"The input block size for this transformation is one byte.","nodes":[{"pos":[0,57],"content":"The input block size for this transformation is one byte.","nodes":[{"content":"The input block size for this transformation is one byte.","pos":[0,57]}]}],"pos":[20361,20419],"yaml":true,"extradata":"MT"},{"content":"The size of the input data blocks in bytes.","nodes":[{"pos":[0,43],"content":"The size of the input data blocks in bytes.","nodes":[{"content":"The size of the input data blocks in bytes.","pos":[0,43]}]}],"pos":[20533,20577],"yaml":true},{"content":"Gets the output block size.","nodes":[{"pos":[0,27],"content":"Gets the output block size.","nodes":[{"content":"Gets the output block size.","pos":[0,27]}]}],"pos":[21945,21973],"yaml":true},{"content":"The output block size for this transformation is 3 bytes.","nodes":[{"pos":[0,57],"content":"The output block size for this transformation is 3 bytes.","nodes":[{"content":"The output block size for this transformation is 3 bytes.","pos":[0,57]}]}],"pos":[21984,22042],"yaml":true,"extradata":"MT"},{"content":"The size of the output data blocks in bytes.","nodes":[{"pos":[0,44],"content":"The size of the output data blocks in bytes.","nodes":[{"content":"The size of the output data blocks in bytes.","pos":[0,44]}]}],"pos":[22157,22202],"yaml":true},{"content":"Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.","nodes":[{"pos":[0,138],"content":"Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.","nodes":[{"content":"Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.","pos":[0,138]}]}],"pos":[23878,24017],"yaml":true},{"content":"The input to compute from base 64.","nodes":[{"pos":[0,34],"content":"The input to compute from base 64.","nodes":[{"content":"The input to compute from base 64.","pos":[0,34]}]}],"pos":[24952,24987],"yaml":true},{"content":"The offset into the input byte array from which to begin using data.","nodes":[{"pos":[0,68],"content":"The offset into the input byte array from which to begin using data.","nodes":[{"content":"The offset into the input byte array from which to begin using data.","pos":[0,68]}]}],"pos":[25053,25122],"yaml":true},{"content":"The number of bytes in the input byte array to use as data.","nodes":[{"pos":[0,59],"content":"The number of bytes in the input byte array to use as data.","nodes":[{"content":"The number of bytes in the input byte array to use as data.","pos":[0,59]}]}],"pos":[25187,25247],"yaml":true},{"content":"The output to which to write the result.","nodes":[{"pos":[0,40],"content":"The output to which to write the result.","nodes":[{"content":"The output to which to write the result.","pos":[0,40]}]}],"pos":[25315,25356],"yaml":true},{"content":"The offset into the output byte array from which to begin writing data.","nodes":[{"pos":[0,71],"content":"The offset into the output byte array from which to begin writing data.","nodes":[{"content":"The offset into the output byte array from which to begin writing data.","pos":[0,71]}]}],"pos":[25423,25495],"yaml":true},{"content":"The number of bytes written.","nodes":[{"pos":[0,28],"content":"The number of bytes written.","nodes":[{"content":"The number of bytes written.","pos":[0,28]}]}],"pos":[25551,25580],"yaml":true},{"content":"The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed.","nodes":[{"pos":[0,115],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> object has already been disposed.","source":"The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed."}],"pos":[25777,25893],"yaml":true},{"content":"<code>inputCount</code> uses an invalid value.  \n  \n -or-  \n  \n <code>inputBuffer</code> has an invalid offset length.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.","source":"<code>inputCount</code> uses an invalid value."},{"pos":[53,57],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[64,118],"content":"<ph id=\"ph1\">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.","source":"<code>inputBuffer</code> has an invalid offset length."}],"pos":[25987,26112],"yaml":true},{"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"pos":[0,88],"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.","pos":[0,41],"source":"<code>inputOffset</code> is out of range."},{"content":"This parameter requires a non-negative number.","pos":[42,88]}]}],"pos":[26226,26315],"yaml":true},{"content":"<code>inputBuffer</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>inputBuffer</code> is `null`."}],"pos":[26417,26453],"yaml":true},{"content":"Converts the specified region of the specified byte array from base 64.","nodes":[{"pos":[0,71],"content":"Converts the specified region of the specified byte array from base 64.","nodes":[{"content":"Converts the specified region of the specified byte array from base 64.","pos":[0,71]}]}],"pos":[27938,28010],"yaml":true},{"content":"The input to convert from base 64.","nodes":[{"pos":[0,34],"content":"The input to convert from base 64.","nodes":[{"content":"The input to convert from base 64.","pos":[0,34]}]}],"pos":[28914,28949],"yaml":true},{"content":"The offset into the byte array from which to begin using data.","nodes":[{"pos":[0,62],"content":"The offset into the byte array from which to begin using data.","nodes":[{"content":"The offset into the byte array from which to begin using data.","pos":[0,62]}]}],"pos":[29015,29078],"yaml":true},{"content":"The number of bytes in the byte array to use as data.","nodes":[{"pos":[0,53],"content":"The number of bytes in the byte array to use as data.","nodes":[{"content":"The number of bytes in the byte array to use as data.","pos":[0,53]}]}],"pos":[29143,29197],"yaml":true},{"content":"The computed conversion.","nodes":[{"pos":[0,24],"content":"The computed conversion.","nodes":[{"content":"The computed conversion.","pos":[0,24]}]}],"pos":[29254,29279],"yaml":true},{"content":"The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed.","nodes":[{"pos":[0,115],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.FromBase64Transform\"&gt;&lt;/xref&gt;</ph> object has already been disposed.","source":"The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed."}],"pos":[29481,29597],"yaml":true},{"content":"<code>inputBuffer</code> has an invalid offset length.  \n  \n -or-  \n  \n <code>inputCount</code> has an invalid value.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.","source":"<code>inputBuffer</code> has an invalid offset length."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,117],"content":"<ph id=\"ph1\">&lt;code&gt;inputCount&lt;/code&gt;</ph> has an invalid value.","source":"<code>inputCount</code> has an invalid value."}],"pos":[29691,29815],"yaml":true},{"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"pos":[0,88],"content":"<code>inputOffset</code> is out of range. This parameter requires a non-negative number.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.","pos":[0,41],"source":"<code>inputOffset</code> is out of range."},{"content":"This parameter requires a non-negative number.","pos":[42,88]}]}],"pos":[29929,30018],"yaml":true},{"content":"<code>inputBuffer</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>inputBuffer</code> is `null`."}],"pos":[30120,30156],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.FromBase64Transform\n  commentId: T:System.Security.Cryptography.FromBase64Transform\n  id: FromBase64Transform\n  children:\n  - System.Security.Cryptography.FromBase64Transform.#ctor\n  - System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)\n  - System.Security.Cryptography.FromBase64Transform.CanReuseTransform\n  - System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks\n  - System.Security.Cryptography.FromBase64Transform.Clear\n  - System.Security.Cryptography.FromBase64Transform.Dispose\n  - System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)\n  - System.Security.Cryptography.FromBase64Transform.Finalize\n  - System.Security.Cryptography.FromBase64Transform.InputBlockSize\n  - System.Security.Cryptography.FromBase64Transform.OutputBlockSize\n  - System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: FromBase64Transform\n  nameWithType: FromBase64Transform\n  fullName: System.Security.Cryptography.FromBase64Transform\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Converts a <xref href=\"System.Security.Cryptography.CryptoStream\"></xref> from base 64.\n  remarks: Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.\n  example:\n  - \"The following example decodes a base 64-encoded file to an output text file.  \\n  \\n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class FromBase64Transform : System.Security.Cryptography.ICryptoTransform\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.Cryptography.ICryptoTransform\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.#ctor\n  commentId: M:System.Security.Cryptography.FromBase64Transform.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: FromBase64Transform()\n  nameWithType: FromBase64Transform.FromBase64Transform()\n  fullName: FromBase64Transform.FromBase64Transform()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class.\n  remarks: In the default configuration, white spaces are ignored. See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details.\n  syntax:\n    content: public FromBase64Transform ();\n    parameters: []\n  overload: System.Security.Cryptography.FromBase64Transform.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)\n  commentId: M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)\n  id: '#ctor(System.Security.Cryptography.FromBase64TransformMode)'\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: FromBase64Transform(FromBase64TransformMode)\n  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)\n  fullName: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class with the specified transformation mode.\n  remarks: ''\n  example:\n  - \"The following example decodes a base 64-encoded file to an output text file.  \\n  \\n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public FromBase64Transform (System.Security.Cryptography.FromBase64TransformMode whitespaces);\n    parameters:\n    - id: whitespaces\n      type: System.Security.Cryptography.FromBase64TransformMode\n      description: One of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> values.\n  overload: System.Security.Cryptography.FromBase64Transform.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform\n  commentId: P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform\n  id: CanReuseTransform\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: CanReuseTransform\n  nameWithType: FromBase64Transform.CanReuseTransform\n  fullName: FromBase64Transform.CanReuseTransform\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether the current transform can be reused.\n  syntax:\n    content: public virtual bool CanReuseTransform { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks\n  commentId: P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks\n  id: CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: CanTransformMultipleBlocks\n  nameWithType: FromBase64Transform.CanTransformMultipleBlocks\n  fullName: FromBase64Transform.CanTransformMultipleBlocks\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Gets a value that indicates whether multiple blocks can be transformed.\n  remarks: In the current implementation, only one block can be transformed at a time, so this property is always `false`.\n  syntax:\n    content: public bool CanTransformMultipleBlocks { get; }\n    return:\n      type: System.Boolean\n      description: Always `false`.\n  overload: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.Clear\n  commentId: M:System.Security.Cryptography.FromBase64Transform.Clear\n  id: Clear\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FromBase64Transform.Clear()\n  fullName: FromBase64Transform.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>.\n  remarks: \"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.  \\n  \\n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.FromBase64Transform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Security.Cryptography.FromBase64Transform.Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.Dispose\n  commentId: M:System.Security.Cryptography.FromBase64Transform.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: FromBase64Transform.Dispose()\n  fullName: FromBase64Transform.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.FromBase64Transform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.FromBase64Transform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.FromBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.FromBase64Transform> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.FromBase64Transform.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: FromBase64Transform.Dispose(Boolean)\n  fullName: FromBase64Transform.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`. `Finalize` invokes `Dispose` with disposing set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.FromBase64Transform> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.Cryptography.FromBase64Transform.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.Finalize\n  commentId: M:System.Security.Cryptography.FromBase64Transform.Finalize\n  id: Finalize\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: FromBase64Transform.Finalize()\n  fullName: FromBase64Transform.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref>.\n  syntax:\n    content: ~FromBase64Transform ();\n    parameters: []\n  overload: System.Security.Cryptography.FromBase64Transform.Finalize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize\n  commentId: P:System.Security.Cryptography.FromBase64Transform.InputBlockSize\n  id: InputBlockSize\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: InputBlockSize\n  nameWithType: FromBase64Transform.InputBlockSize\n  fullName: FromBase64Transform.InputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Gets the input block size.\n  remarks: The input block size for this transformation is one byte.\n  syntax:\n    content: public int InputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The size of the input data blocks in bytes.\n  overload: System.Security.Cryptography.FromBase64Transform.InputBlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize\n  commentId: P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize\n  id: OutputBlockSize\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: OutputBlockSize\n  nameWithType: FromBase64Transform.OutputBlockSize\n  fullName: FromBase64Transform.OutputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Gets the output block size.\n  remarks: The output block size for this transformation is 3 bytes.\n  syntax:\n    content: public int OutputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The size of the output data blocks in bytes.\n  overload: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  commentId: M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: FromBase64Transform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: FromBase64Transform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.\n  remarks: ''\n  example:\n  - \"The following example decrypts a base 64-encoded file to an output text file.  \\n  \\n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input to compute from base 64.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the input byte array from which to begin using data.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the input byte array to use as data.\n    - id: outputBuffer\n      type: System.Byte[]\n      description: The output to which to write the result.\n    - id: outputOffset\n      type: System.Int32\n      description: The offset into the output byte array from which to begin writing data.\n    return:\n      type: System.Int32\n      description: The number of bytes written.\n  overload: System.Security.Cryptography.FromBase64Transform.TransformBlock*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>inputCount</code> uses an invalid value.  \\n  \\n -or-  \\n  \\n <code>inputBuffer</code> has an invalid offset length.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>inputOffset</code> is out of range. This parameter requires a non-negative number.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>inputBuffer</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.FromBase64Transform\n  langs:\n  - csharp\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: FromBase64Transform.TransformFinalBlock(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: Converts the specified region of the specified byte array from base 64.\n  remarks: ''\n  example:\n  - \"The following example decrypts a base 64-encoded file to an output text file.  \\n  \\n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input to convert from base 64.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the byte array from which to begin using data.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the byte array to use as data.\n    return:\n      type: System.Byte[]\n      description: The computed conversion.\n  overload: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current <xref href=\"System.Security.Cryptography.FromBase64Transform\"></xref> object has already been disposed.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>inputBuffer</code> has an invalid offset length.  \\n  \\n -or-  \\n  \\n <code>inputCount</code> has an invalid value.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>inputOffset</code> is out of range. This parameter requires a non-negative number.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>inputBuffer</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.FromBase64Transform.#ctor\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: FromBase64Transform()\n  nameWithType: FromBase64Transform.FromBase64Transform()\n  fullName: FromBase64Transform.FromBase64Transform()\n- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: FromBase64Transform(FromBase64TransformMode)\n  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)\n  fullName: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)\n- uid: System.Security.Cryptography.FromBase64TransformMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: FromBase64TransformMode\n  nameWithType: FromBase64TransformMode\n  fullName: System.Security.Cryptography.FromBase64TransformMode\n- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: FromBase64Transform.CanReuseTransform\n  fullName: FromBase64Transform.CanReuseTransform\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: FromBase64Transform.CanTransformMultipleBlocks\n  fullName: FromBase64Transform.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.FromBase64Transform.Clear\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Clear()\n  nameWithType: FromBase64Transform.Clear()\n  fullName: FromBase64Transform.Clear()\n- uid: System.Security.Cryptography.FromBase64Transform.Dispose\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Dispose()\n  nameWithType: FromBase64Transform.Dispose()\n  fullName: FromBase64Transform.Dispose()\n- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: FromBase64Transform.Dispose(Boolean)\n  fullName: FromBase64Transform.Dispose(Boolean)\n- uid: System.Security.Cryptography.FromBase64Transform.Finalize\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Finalize()\n  nameWithType: FromBase64Transform.Finalize()\n  fullName: FromBase64Transform.Finalize()\n- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: FromBase64Transform.InputBlockSize\n  fullName: FromBase64Transform.InputBlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: FromBase64Transform.OutputBlockSize\n  fullName: FromBase64Transform.OutputBlockSize\n- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: FromBase64Transform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: FromBase64Transform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: FromBase64Transform.TransformFinalBlock(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.FromBase64Transform.#ctor*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: FromBase64Transform\n  nameWithType: FromBase64Transform.FromBase64Transform\n  fullName: FromBase64Transform.FromBase64Transform\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: FromBase64Transform.CanReuseTransform\n  fullName: FromBase64Transform.CanReuseTransform\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: FromBase64Transform.CanTransformMultipleBlocks\n  fullName: FromBase64Transform.CanTransformMultipleBlocks\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.Clear*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Clear\n  nameWithType: FromBase64Transform.Clear\n  fullName: FromBase64Transform.Clear\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.Dispose*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Dispose\n  nameWithType: FromBase64Transform.Dispose\n  fullName: FromBase64Transform.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.Finalize*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: Finalize\n  nameWithType: FromBase64Transform.Finalize\n  fullName: FromBase64Transform.Finalize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: FromBase64Transform.InputBlockSize\n  fullName: FromBase64Transform.InputBlockSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: FromBase64Transform.OutputBlockSize\n  fullName: FromBase64Transform.OutputBlockSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: TransformBlock\n  nameWithType: FromBase64Transform.TransformBlock\n  fullName: FromBase64Transform.TransformBlock\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*\n  parent: System.Security.Cryptography.FromBase64Transform\n  isExternal: false\n  name: TransformFinalBlock\n  nameWithType: FromBase64Transform.TransformFinalBlock\n  fullName: FromBase64Transform.TransformFinalBlock\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/FromBase64Transform.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n"}