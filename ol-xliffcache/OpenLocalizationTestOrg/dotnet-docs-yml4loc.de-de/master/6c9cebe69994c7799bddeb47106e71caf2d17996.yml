### YamlMime:ManagedReference
items:
- uid: System.Collections.CaseInsensitiveComparer
  commentId: T:System.Collections.CaseInsensitiveComparer
  id: CaseInsensitiveComparer
  children:
  - System.Collections.CaseInsensitiveComparer.#ctor
  - System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  - System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  - System.Collections.CaseInsensitiveComparer.Default
  - System.Collections.CaseInsensitiveComparer.DefaultInvariant
  langs:
  - csharp
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer
  fullName: System.Collections.CaseInsensitiveComparer
  type: Class
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Compares two objects for equivalence, ignoring the case of strings.
  remarks: "<xref:System.Collections.CaseInsensitiveComparer> implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveHashCodeProvider> implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings.  \n  \n The <xref:System.Collections.Comparer> class is the default implementation of the <xref:System.Collections.IComparer> interface and performs case-sensitive string comparisons.  \n  \n The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=fullName> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=fullName> method (or the <xref:System.Collections.IComparer> interface). The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly. For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation.  \n  \n String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]\n [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CaseInsensitiveComparer : System.Collections.IComparer
  inheritance:
  - System.Object
  implements:
  - System.Collections.IComparer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CaseInsensitiveComparer.#ctor
  commentId: M:System.Collections.CaseInsensitiveComparer.#ctor
  id: '#ctor'
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: CaseInsensitiveComparer()
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()
  fullName: CaseInsensitiveComparer.CaseInsensitiveComparer()
  type: Constructor
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.CaseInsensitiveComparer"></xref> class using the <xref href="System.Threading.Thread.CurrentCulture"></xref> of the current thread.
  remarks: When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]\n [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]"
  syntax:
    content: public CaseInsensitiveComparer ();
    parameters: []
  overload: System.Collections.CaseInsensitiveComparer.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  commentId: M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  id: '#ctor(System.Globalization.CultureInfo)'
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: CaseInsensitiveComparer(CultureInfo)
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  fullName: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  type: Constructor
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.CaseInsensitiveComparer"></xref> class using the specified <xref href="System.Globalization.CultureInfo"></xref>.
  remarks: Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]\n [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]"
  syntax:
    content: public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo"></xref> to use for the new <xref href="System.Collections.CaseInsensitiveComparer"></xref>.
  overload: System.Collections.CaseInsensitiveComparer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>culture</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  commentId: M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: Compare(Object, Object)
  nameWithType: CaseInsensitiveComparer.Compare(Object, Object)
  fullName: CaseInsensitiveComparer.Compare(Object, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
  remarks: "If `a` and `b` are both strings, this method uses <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> to compare the strings with the casing ignored; otherwise, it uses the <xref:System.IComparable> implementation of either object. That is, if `a` implements <xref:System.IComparable>, then this method returns the result of `a`. `CompareTo` (`b`); otherwise, if `b` implements <xref:System.IComparable>, then it returns the negated result of `b`. `CompareTo` (`a`).  \n  \n Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object.  \n  \n String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)."
  syntax:
    content: public int Compare (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: The first object to compare.
    - id: b
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
      description: "A signed integer that indicates the relative values of <code>a</code> and <code>b</code>, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>a</code> is less than <code>b</code>, with casing ignored.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>a</code> equals <code>b</code>, with casing ignored.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>a</code> is greater than <code>b</code>, with casing ignored.  \n  \n </td></tr></tbody></table>"
  overload: System.Collections.CaseInsensitiveComparer.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Neither <code>a</code> nor <code>b</code> implements the <xref href=\"System.IComparable\"></xref> interface.  \n  \n -or-  \n  \n <code>a</code> and <code>b</code> are of different types."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CaseInsensitiveComparer.Default
  commentId: P:System.Collections.CaseInsensitiveComparer.Default
  id: Default
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
  fullName: CaseInsensitiveComparer.Default
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets an instance of <xref href="System.Collections.CaseInsensitiveComparer"></xref> that is associated with the <xref href="System.Threading.Thread.CurrentCulture"></xref> of the current thread and that is always available.
  remarks: When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).
  syntax:
    content: public static System.Collections.CaseInsensitiveComparer Default { get; }
    return:
      type: System.Collections.CaseInsensitiveComparer
      description: An instance of <xref href="System.Collections.CaseInsensitiveComparer"></xref> that is associated with the <xref href="System.Threading.Thread.CurrentCulture"></xref> of the current thread.
  overload: System.Collections.CaseInsensitiveComparer.Default*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant
  commentId: P:System.Collections.CaseInsensitiveComparer.DefaultInvariant
  id: DefaultInvariant
  parent: System.Collections.CaseInsensitiveComparer
  langs:
  - csharp
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
  fullName: CaseInsensitiveComparer.DefaultInvariant
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets an instance of <xref href="System.Collections.CaseInsensitiveComparer"></xref> that is associated with <xref href="System.Globalization.CultureInfo.InvariantCulture"></xref> and that is always available.
  remarks: Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> to determine the sort order and casing rules. String comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]\n [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]"
  syntax:
    content: public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }
    return:
      type: System.Collections.CaseInsensitiveComparer
      description: An instance of <xref href="System.Collections.CaseInsensitiveComparer"></xref> that is associated with <xref href="System.Globalization.CultureInfo.InvariantCulture"></xref>.
  overload: System.Collections.CaseInsensitiveComparer.DefaultInvariant*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Collections.CaseInsensitiveComparer.#ctor
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer()
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()
  fullName: CaseInsensitiveComparer.CaseInsensitiveComparer()
- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer(CultureInfo)
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
  fullName: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Compare(Object, Object)
  nameWithType: CaseInsensitiveComparer.Compare(Object, Object)
  fullName: CaseInsensitiveComparer.Compare(Object, Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.CaseInsensitiveComparer.Default
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
  fullName: CaseInsensitiveComparer.Default
- uid: System.Collections.CaseInsensitiveComparer
  parent: System.Collections
  isExternal: false
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer
  fullName: System.Collections.CaseInsensitiveComparer
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
  fullName: CaseInsensitiveComparer.DefaultInvariant
- uid: System.Collections.CaseInsensitiveComparer.#ctor*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: CaseInsensitiveComparer
  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer
  fullName: CaseInsensitiveComparer.CaseInsensitiveComparer
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
- uid: System.Collections.CaseInsensitiveComparer.Compare*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Compare
  nameWithType: CaseInsensitiveComparer.Compare
  fullName: CaseInsensitiveComparer.Compare
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
- uid: System.Collections.CaseInsensitiveComparer.Default*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveComparer.Default
  fullName: CaseInsensitiveComparer.Default
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant*
  parent: System.Collections.CaseInsensitiveComparer
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveComparer.DefaultInvariant
  fullName: CaseInsensitiveComparer.DefaultInvariant
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CaseInsensitiveComparer.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
