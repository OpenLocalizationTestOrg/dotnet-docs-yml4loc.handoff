{"nodes":[{"content":"Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.","nodes":[{"pos":[0,108],"content":"Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.","nodes":[{"content":"Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.","pos":[0,108],"nodes":[{"content":"Specifies the serialization mechanism that the settings provider should use.","pos":[0,76]},{"content":"This class cannot be inherited.","pos":[77,108]}]}]}],"pos":[667,776],"yaml":true},{"content":"A settings provider often supports more than one of the .NET Framework standard serialization schemes. These schemes are outlined by the <xref:System.Configuration.SettingsSerializeAs> enumeration, and include plain text, XML, and binary serialization. In addition, a provider may optionally support a custom serialization scheme.  \n  \n With the <xref:System.Configuration.SettingsSerializeAsAttribute>, you can specify which serialization mechanism should be used for a given application settings class or property. This attribute is considered a request to the settings provider. It may be ignored or cause an error if the provider or the individual property type does not support the specified serialization scheme. If this attribute is not present, the provider will usually provide a default serialization mechanism, most commonly plain text.  \n  \n Although the settings provider may provide a way to dynamically change the serialization mechanism during run time, this is not a typical capability.","nodes":[{"pos":[0,330],"content":"A settings provider often supports more than one of the .NET Framework standard serialization schemes. These schemes are outlined by the <xref:System.Configuration.SettingsSerializeAs> enumeration, and include plain text, XML, and binary serialization. In addition, a provider may optionally support a custom serialization scheme.","nodes":[{"content":"A settings provider often supports more than one of the .NET Framework standard serialization schemes. These schemes are outlined by the <xref:System.Configuration.SettingsSerializeAs> enumeration, and include plain text, XML, and binary serialization. In addition, a provider may optionally support a custom serialization scheme.","pos":[0,330],"nodes":[{"content":"A settings provider often supports more than one of the .NET Framework standard serialization schemes.","pos":[0,102]},{"content":"These schemes are outlined by the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAs&gt;</ph> enumeration, and include plain text, XML, and binary serialization.","pos":[103,252],"source":" These schemes are outlined by the <xref:System.Configuration.SettingsSerializeAs> enumeration, and include plain text, XML, and binary serialization."},{"content":"In addition, a provider may optionally support a custom serialization scheme.","pos":[253,330]}]}]},{"pos":[337,847],"content":"With the <xref:System.Configuration.SettingsSerializeAsAttribute>, you can specify which serialization mechanism should be used for a given application settings class or property. This attribute is considered a request to the settings provider. It may be ignored or cause an error if the provider or the individual property type does not support the specified serialization scheme. If this attribute is not present, the provider will usually provide a default serialization mechanism, most commonly plain text.","nodes":[{"content":"With the <xref:System.Configuration.SettingsSerializeAsAttribute>, you can specify which serialization mechanism should be used for a given application settings class or property. This attribute is considered a request to the settings provider. It may be ignored or cause an error if the provider or the individual property type does not support the specified serialization scheme. If this attribute is not present, the provider will usually provide a default serialization mechanism, most commonly plain text.","pos":[0,510],"nodes":[{"content":"With the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>, you can specify which serialization mechanism should be used for a given application settings class or property.","pos":[0,179],"source":"With the <xref:System.Configuration.SettingsSerializeAsAttribute>, you can specify which serialization mechanism should be used for a given application settings class or property."},{"content":"This attribute is considered a request to the settings provider.","pos":[180,244]},{"content":"It may be ignored or cause an error if the provider or the individual property type does not support the specified serialization scheme.","pos":[245,381]},{"content":"If this attribute is not present, the provider will usually provide a default serialization mechanism, most commonly plain text.","pos":[382,510]}]}]},{"pos":[854,1003],"content":"Although the settings provider may provide a way to dynamically change the serialization mechanism during run time, this is not a typical capability.","nodes":[{"content":"Although the settings provider may provide a way to dynamically change the serialization mechanism during run time, this is not a typical capability.","pos":[0,149]}]}],"pos":[787,1797],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of the <xref href=\"System.Configuration.SettingsSerializeAsAttribute\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsSerializeAsAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes an instance of the <xref href=\"System.Configuration.SettingsSerializeAsAttribute\"></xref> class."}],"pos":[7106,7215],"yaml":true},{"content":"If the settings provider or the type of the property to be converted does not support the serialization scheme specified by the `serializeAs` parameter, the operation may have one of the following results:  \n  \n-   The settings provider may ignore the attribute and use its default serialization scheme.  \n  \n-   The serialization process may fail without a response. The application settings property will not be persisted.  \n  \n-   An exception may be raised during serialization.","nodes":[{"pos":[0,205],"content":"If the settings provider or the type of the property to be converted does not support the serialization scheme specified by the <ph id=\"ph1\">`serializeAs`</ph> parameter, the operation may have one of the following results:","source":"If the settings provider or the type of the property to be converted does not support the serialization scheme specified by the `serializeAs` parameter, the operation may have one of the following results:"},{"pos":[215,303],"content":"The settings provider may ignore the attribute and use its default serialization scheme.","nodes":[{"content":"The settings provider may ignore the attribute and use its default serialization scheme.","pos":[0,88]}]},{"pos":[313,424],"content":"The serialization process may fail without a response. The application settings property will not be persisted.","nodes":[{"content":"The serialization process may fail without a response. The application settings property will not be persisted.","pos":[0,111],"nodes":[{"content":"The serialization process may fail without a response.","pos":[0,54]},{"content":"The application settings property will not be persisted.","pos":[55,111]}]}]},{"pos":[434,482],"content":"An exception may be raised during serialization.","nodes":[{"content":"An exception may be raised during serialization.","pos":[0,48]}]}],"pos":[7226,7717],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsSerializeAs\"&gt;&lt;/xref&gt;</ph> enumerated value that specifies the serialization scheme.","source":"A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme."}],"pos":[7942,8064],"yaml":true},{"content":"Gets the <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumeration value that specifies the serialization scheme.","nodes":[{"pos":[0,129],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsSerializeAs\"&gt;&lt;/xref&gt;</ph> enumeration value that specifies the serialization scheme.","source":"Gets the <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumeration value that specifies the serialization scheme."}],"pos":[9276,9406],"yaml":true},{"content":"This property is set in the <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A> constructor.","nodes":[{"pos":[0,108],"content":"This property is set in the <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A> constructor.","nodes":[{"content":"This property is set in the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A&gt;</ph> constructor.","pos":[0,108],"source":"This property is set in the <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A> constructor."}]}],"pos":[9417,9526],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsSerializeAs\"&gt;&lt;/xref&gt;</ph> enumerated value that specifies the serialization scheme.","source":"A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme."}],"pos":[9702,9824],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsSerializeAsAttribute\n  commentId: T:System.Configuration.SettingsSerializeAsAttribute\n  id: SettingsSerializeAsAttribute\n  children:\n  - System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)\n  - System.Configuration.SettingsSerializeAsAttribute.SerializeAs\n  langs:\n  - csharp\n  name: SettingsSerializeAsAttribute\n  nameWithType: SettingsSerializeAsAttribute\n  fullName: System.Configuration.SettingsSerializeAsAttribute\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.\n  remarks: \"A settings provider often supports more than one of the .NET Framework standard serialization schemes. These schemes are outlined by the <xref:System.Configuration.SettingsSerializeAs> enumeration, and include plain text, XML, and binary serialization. In addition, a provider may optionally support a custom serialization scheme.  \\n  \\n With the <xref:System.Configuration.SettingsSerializeAsAttribute>, you can specify which serialization mechanism should be used for a given application settings class or property. This attribute is considered a request to the settings provider. It may be ignored or cause an error if the provider or the individual property type does not support the specified serialization scheme. If this attribute is not present, the provider will usually provide a default serialization mechanism, most commonly plain text.  \\n  \\n Although the settings provider may provide a way to dynamically change the serialization mechanism during run time, this is not a typical capability.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]\n\n      public sealed class SettingsSerializeAsAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsSerializeAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)\n  commentId: M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)\n  id: '#ctor(System.Configuration.SettingsSerializeAs)'\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  langs:\n  - csharp\n  name: SettingsSerializeAsAttribute(SettingsSerializeAs)\n  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)\n  fullName: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes an instance of the <xref href=\"System.Configuration.SettingsSerializeAsAttribute\"></xref> class.\n  remarks: \"If the settings provider or the type of the property to be converted does not support the serialization scheme specified by the `serializeAs` parameter, the operation may have one of the following results:  \\n  \\n-   The settings provider may ignore the attribute and use its default serialization scheme.  \\n  \\n-   The serialization process may fail without a response. The application settings property will not be persisted.  \\n  \\n-   An exception may be raised during serialization.\"\n  syntax:\n    content: public SettingsSerializeAsAttribute (System.Configuration.SettingsSerializeAs serializeAs);\n    parameters:\n    - id: serializeAs\n      type: System.Configuration.SettingsSerializeAs\n      description: A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme.\n  overload: System.Configuration.SettingsSerializeAsAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsSerializeAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs\n  commentId: P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs\n  id: SerializeAs\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  langs:\n  - csharp\n  name: SerializeAs\n  nameWithType: SettingsSerializeAsAttribute.SerializeAs\n  fullName: SettingsSerializeAsAttribute.SerializeAs\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumeration value that specifies the serialization scheme.\n  remarks: This property is set in the <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A> constructor.\n  syntax:\n    content: public System.Configuration.SettingsSerializeAs SerializeAs { get; }\n    return:\n      type: System.Configuration.SettingsSerializeAs\n      description: A <xref href=\"System.Configuration.SettingsSerializeAs\"></xref> enumerated value that specifies the serialization scheme.\n  overload: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsSerializeAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  isExternal: false\n  name: SettingsSerializeAsAttribute(SettingsSerializeAs)\n  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)\n  fullName: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)\n- uid: System.Configuration.SettingsSerializeAs\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsSerializeAs\n  nameWithType: SettingsSerializeAs\n  fullName: System.Configuration.SettingsSerializeAs\n- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  isExternal: false\n  name: SerializeAs\n  nameWithType: SettingsSerializeAsAttribute.SerializeAs\n  fullName: SettingsSerializeAsAttribute.SerializeAs\n- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor*\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  isExternal: false\n  name: SettingsSerializeAsAttribute\n  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute\n  fullName: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsSerializeAsAttribute.xml\n- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*\n  parent: System.Configuration.SettingsSerializeAsAttribute\n  isExternal: false\n  name: SerializeAs\n  nameWithType: SettingsSerializeAsAttribute.SerializeAs\n  fullName: SettingsSerializeAsAttribute.SerializeAs\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsSerializeAsAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}