{"nodes":[{"content":"Provides a base class for implementations of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface.","nodes":[{"pos":[0,135],"content":"Provides a base class for implementations of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEqualityComparer`1\"&gt;&lt;/xref&gt;</ph> generic interface.","source":"Provides a base class for implementations of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface."}],"pos":[942,1078],"yaml":true},{"content":"Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName>.  \n  \n The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.  \n  \n We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.","nodes":[{"pos":[0,347],"content":"Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName>.","nodes":[{"content":"Derive from this class to provide a custom implementation of the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface for use with collection classes such as the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class, or with methods such as <ph id=\"ph3\">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName&gt;</ph>.","pos":[0,347],"source":"Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName>."}]},{"pos":[354,833],"content":"The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id=\"ph2\">`T`</ph> implements the <ph id=\"ph3\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> generic interface and, if so, returns an <ph id=\"ph4\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that invokes the implementation of the <ph id=\"ph5\">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,378],"source":"The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method."},{"content":"Otherwise, it returns an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>, as provided by <ph id=\"ph2\">`T`</ph>.","pos":[379,479],"source":" Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`."}]},{"pos":[840,1465],"content":"We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.","nodes":[{"content":"We recommend that you derive from the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class instead of implementing the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface, because the <ph id=\"ph3\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class tests for equality using the <ph id=\"ph4\">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method instead of the <ph id=\"ph5\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,445],"source":"We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method."},{"content":"This is consistent with the <ph id=\"ph1\">`Contains`</ph>, <ph id=\"ph2\">`IndexOf`</ph>, <ph id=\"ph3\">`LastIndexOf`</ph>, and <ph id=\"ph4\">`Remove`</ph> methods of the <ph id=\"ph5\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and other generic collections.","pos":[446,625],"source":" This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections."}]}],"pos":[1089,2561],"yaml":true,"extradata":"MT"},{"content":"The type of objects to compare.","nodes":[{"pos":[0,31],"content":"The type of objects to compare.","nodes":[{"content":"The type of objects to compare.","pos":[0,31]}]}],"pos":[3518,3550],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.EqualityComparer`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class."}],"pos":[5522,5630],"yaml":true},{"content":"Returns a default equality comparer for the type specified by the generic argument.","nodes":[{"pos":[0,83],"content":"Returns a default equality comparer for the type specified by the generic argument.","nodes":[{"content":"Returns a default equality comparer for the type specified by the generic argument.","pos":[0,83]}]}],"pos":[7282,7366],"yaml":true},{"content":"The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=fullName> and <xref:System.Object.GetHashCode%2A?displayProperty=fullName> provided by `T`.","nodes":[{"pos":[0,535],"content":"The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=fullName> and <xref:System.Object.GetHashCode%2A?displayProperty=fullName> provided by `T`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id=\"ph2\">`T`</ph> implements the <ph id=\"ph3\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface and, if so, returns an <ph id=\"ph4\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses that implementation.","pos":[0,290],"source":"The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation."},{"content":"Otherwise, it returns an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses the overrides of <ph id=\"ph2\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph> provided by <ph id=\"ph4\">`T`</ph>.","pos":[291,535],"source":" Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=fullName> and <xref:System.Object.GetHashCode%2A?displayProperty=fullName> provided by `T`."}]}],"pos":[7377,7913],"yaml":true,"extradata":"MT"},{"content":"The default instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class for type <code>T</code>.","nodes":[{"pos":[0,125],"content":"The default instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.EqualityComparer`1\"&gt;&lt;/xref&gt;</ph> class for type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The default instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class for type <code>T</code>."}],"pos":[9394,9520],"yaml":true},{"content":"When overridden in a derived class, determines whether two objects of type <code>T</code> are equal.","nodes":[{"pos":[0,100],"content":"When overridden in a derived class, determines whether two objects of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal.","source":"When overridden in a derived class, determines whether two objects of type <code>T</code> are equal."}],"pos":[11132,11233],"yaml":true},{"content":"The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive. That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.","nodes":[{"pos":[0,357],"content":"The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive. That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%2A&gt;</ph> method is reflexive, symmetric, and transitive.","pos":[0,116],"source":"The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive."},{"content":"That is, it returns <ph id=\"ph1\">`true`</ph> if used to compare an object with itself; <ph id=\"ph2\">`true`</ph> for two objects <ph id=\"ph3\">`x`</ph> and <ph id=\"ph4\">`y`</ph> if it is <ph id=\"ph5\">`true`</ph> for <ph id=\"ph6\">`y`</ph> and <ph id=\"ph7\">`x`</ph>; and <ph id=\"ph8\">`true`</ph> for two objects <ph id=\"ph9\">`x`</ph> and <ph id=\"ph10\">`z`</ph> if it is <ph id=\"ph11\">`true`</ph> for <ph id=\"ph12\">`x`</ph> and <ph id=\"ph13\">`y`</ph> and also <ph id=\"ph14\">`true`</ph> for <ph id=\"ph15\">`y`</ph> and <ph id=\"ph16\">`z`</ph>.","pos":[117,357],"source":" That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`."}]}],"pos":[11244,11602],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[11726,11755],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[11800,11830],"yaml":true},{"content":"`true` if the specified objects are equal; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified objects are equal; otherwise, `false`."}],"pos":[11888,11953],"yaml":true},{"content":"When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.","nodes":[{"pos":[0,152],"content":"When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.","nodes":[{"content":"When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.","pos":[0,152]}]}],"pos":[13576,13729],"yaml":true},{"content":"The object for which to get a hash code.","nodes":[{"pos":[0,40],"content":"The object for which to get a hash code.","nodes":[{"content":"The object for which to get a hash code.","pos":[0,40]}]}],"pos":[13856,13897],"yaml":true},{"content":"A hash code for the specified object.","nodes":[{"pos":[0,37],"content":"A hash code for the specified object.","nodes":[{"content":"A hash code for the specified object.","pos":[0,37]}]}],"pos":[13953,13991],"yaml":true},{"content":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.","nodes":[{"pos":[0,80],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a reference type and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`."}],"pos":[14178,14259],"yaml":true},{"content":"Determines whether the specified objects are equal.","nodes":[{"pos":[0,51],"content":"Determines whether the specified objects are equal.","nodes":[{"content":"Determines whether the specified objects are equal.","pos":[0,51]}]}],"pos":[16062,16114],"yaml":true},{"content":"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance. If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.  \n  \n Comparing `null` is allowed and does not generate an exception.","nodes":[{"pos":[0,291],"content":"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance. If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.","nodes":[{"content":"This method is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29&gt;</ph> method, so <ph id=\"ph2\">`obj`</ph> must be cast to the type specified by the generic argument <ph id=\"ph3\">`T`</ph> of the current instance.","pos":[0,216],"source":"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance."},{"content":"If it cannot be cast to <ph id=\"ph1\">`T`</ph>, an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph> is thrown.","pos":[217,291],"source":" If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown."}]},{"pos":[298,361],"content":"Comparing <ph id=\"ph1\">`null`</ph> is allowed and does not generate an exception.","source":"Comparing `null` is allowed and does not generate an exception."}],"pos":[16125,16491],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[16639,16668],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[16725,16755],"yaml":true},{"content":"`true` if the specified objects are equal; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified objects are equal; otherwise, `false`."}],"pos":[16813,16878],"yaml":true},{"content":"<code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;x&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;y&lt;/code&gt;</ph> is of a type that cannot be cast to type <ph id=\"ph3\">&lt;code&gt;T&lt;/code&gt;</ph>.","source":"<code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>."}],"pos":[17089,17179],"yaml":true},{"content":"Returns a hash code for the specified object.","nodes":[{"pos":[0,45],"content":"Returns a hash code for the specified object.","nodes":[{"content":"Returns a hash code for the specified object.","pos":[0,45]}]}],"pos":[18946,18992],"yaml":true},{"content":"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.","nodes":[{"pos":[0,238],"content":"This method is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29&gt;</ph> method, so <ph id=\"ph2\">`obj`</ph> must be a type that can be cast to the type specified by the generic type argument <ph id=\"ph3\">`T`</ph> of the current instance.","source":"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance."}],"pos":[19003,19242],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> for which a hash code is to be returned.","source":"The <xref href=\"System.Object\"></xref> for which a hash code is to be returned."}],"pos":[19388,19468],"yaml":true},{"content":"A hash code for the specified object.","nodes":[{"pos":[0,37],"content":"A hash code for the specified object.","nodes":[{"content":"A hash code for the specified object.","pos":[0,37]}]}],"pos":[19524,19562],"yaml":true},{"content":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.  \n  \n -or-  \n  \n <code>obj</code> is of a type that cannot be cast to type <code>T</code>.","nodes":[{"pos":[0,80],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a reference type and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`."},{"pos":[87,91],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[98,171],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is of a type that cannot be cast to type <ph id=\"ph2\">&lt;code&gt;T&lt;/code&gt;</ph>.","source":"<code>obj</code> is of a type that cannot be cast to type <code>T</code>."}],"pos":[19786,19964],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.EqualityComparer`1\n  commentId: T:System.Collections.Generic.EqualityComparer`1\n  id: EqualityComparer`1\n  children:\n  - System.Collections.Generic.EqualityComparer`1.#ctor\n  - System.Collections.Generic.EqualityComparer`1.Default\n  - System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  - System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  langs:\n  - csharp\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>\n  fullName: System.Collections.Generic.EqualityComparer<T>\n  type: Class\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Provides a base class for implementations of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface.\n  remarks: \"Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName>.  \\n  \\n The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.  \\n  \\n We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.\"\n  example:\n  - \"The following example creates a dictionary collection of objects of type `Box` with an equality comparer. Two boxes are considered equal if their dimensions are the same. It then adds the boxes to the collection.  \\n  \\n The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.  \\n  \\n [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]\\n [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]\"\n  syntax:\n    content: 'public abstract class EqualityComparer<T> : System.Collections.Generic.IEqualityComparer<T>, System.Collections.IEqualityComparer'\n    typeParameters:\n    - id: T\n      description: The type of objects to compare.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEqualityComparer{T}\n  - System.Collections.IEqualityComparer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.#ctor\n  commentId: M:System.Collections.Generic.EqualityComparer`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: EqualityComparer<T>()\n  nameWithType: EqualityComparer<T>.EqualityComparer<T>()\n  fullName: EqualityComparer<T>.EqualityComparer<T>()\n  type: Constructor\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class.\n  syntax:\n    content: protected EqualityComparer ();\n    parameters: []\n  overload: System.Collections.Generic.EqualityComparer`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.Default\n  commentId: P:System.Collections.Generic.EqualityComparer`1.Default\n  id: Default\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: Default\n  nameWithType: EqualityComparer<T>.Default\n  fullName: EqualityComparer<T>.Default\n  type: Property\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns a default equality comparer for the type specified by the generic argument.\n  remarks: The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=fullName> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation. Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=fullName> and <xref:System.Object.GetHashCode%2A?displayProperty=fullName> provided by `T`.\n  example:\n  - \"The following example creates two dictionary collections of type `Box`. Both dictionaries are created with the constructor that takes an <xref:System.Collections.Generic.EqualityComparer%601> as a parameter.  \\n  \\n To determine the equality of dictionary keys, the `boxesByDim` dictionary uses an equality comparer (`BoxEqDimensions`) that uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method in the `Box` class. Two boxes are considered equal if their dimensions are the same.  \\n  \\n The `boxesByVol` dictionary uses an equality comparer (`BoxEqVolume`) that defines equality by volume. Two boxes are considered equal if their volumes are the same.  \\n  \\n [!code-cpp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cpp/program.cpp#1)]\\n [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs#1)]\\n [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb#1)]\"\n  syntax:\n    content: public static System.Collections.Generic.EqualityComparer<T> Default { get; }\n    return:\n      type: System.Collections.Generic.EqualityComparer`1\n      description: The default instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\"></xref> class for type <code>T</code>.\n  overload: System.Collections.Generic.EqualityComparer`1.Default*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  commentId: M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  id: Equals(`0,`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: Equals(T, T)\n  nameWithType: EqualityComparer<T>.Equals(T, T)\n  fullName: EqualityComparer<T>.Equals(T, T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: When overridden in a derived class, determines whether two objects of type <code>T</code> are equal.\n  remarks: The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive. That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.\n  syntax:\n    content: public abstract bool Equals (T x, T y);\n    parameters:\n    - id: x\n      type: T\n      description: The first object to compare.\n    - id: y\n      type: T\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified objects are equal; otherwise, `false`.'\n  overload: System.Collections.Generic.EqualityComparer`1.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  commentId: M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  id: GetHashCode(`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: GetHashCode(T)\n  nameWithType: EqualityComparer<T>.GetHashCode(T)\n  fullName: EqualityComparer<T>.GetHashCode(T)\n  type: Method\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.\n  syntax:\n    content: public abstract int GetHashCode (T obj);\n    parameters:\n    - id: obj\n      type: T\n      description: The object for which to get a hash code.\n    return:\n      type: System.Int32\n      description: A hash code for the specified object.\n  overload: System.Collections.Generic.EqualityComparer`1.GetHashCode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  id: System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: IEqualityComparer.Equals(Object, Object)\n  nameWithType: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)\n  fullName: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)\n  type: Method\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Determines whether the specified objects are equal.\n  remarks: \"This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance. If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.  \\n  \\n Comparing `null` is allowed and does not generate an exception.\"\n  syntax:\n    content: bool IEqualityComparer.Equals (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: The first object to compare.\n    - id: y\n      type: System.Object\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified objects are equal; otherwise, `false`.'\n  overload: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  id: System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: IEqualityComparer.GetHashCode(Object)\n  nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)\n  fullName: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)\n  type: Method\n  assemblies:\n  - System.Collections\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns a hash code for the specified object.\n  remarks: This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.\n  syntax:\n    content: int IEqualityComparer.GetHashCode (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> for which a hash code is to be returned.\n    return:\n      type: System.Int32\n      description: A hash code for the specified object.\n  overload: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>obj</code> is of a type that cannot be cast to type <code>T</code>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Collections.Generic.EqualityComparer`1.#ctor\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: EqualityComparer<T>()\n  nameWithType: EqualityComparer<T>.EqualityComparer<T>()\n  fullName: EqualityComparer<T>.EqualityComparer<T>()\n- uid: System.Collections.Generic.EqualityComparer`1.Default\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Default\n  nameWithType: EqualityComparer<T>.Default\n  fullName: EqualityComparer<T>.Default\n- uid: System.Collections.Generic.EqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>\n  fullName: System.Collections.Generic.EqualityComparer<T>\n- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Equals(T, T)\n  nameWithType: EqualityComparer<T>.Equals(T, T)\n  fullName: EqualityComparer<T>.Equals(T, T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: GetHashCode(T)\n  nameWithType: EqualityComparer<T>.GetHashCode(T)\n  fullName: EqualityComparer<T>.GetHashCode(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: IEqualityComparer.Equals(Object, Object)\n  nameWithType: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)\n  fullName: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: IEqualityComparer.GetHashCode(Object)\n  nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)\n  fullName: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)\n- uid: System.Collections.Generic.EqualityComparer`1.#ctor*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>.EqualityComparer<T>\n  fullName: EqualityComparer<T>.EqualityComparer<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Collections.Generic.EqualityComparer`1.Default*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Default\n  nameWithType: EqualityComparer<T>.Default\n  fullName: EqualityComparer<T>.Default\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Collections.Generic.EqualityComparer`1.Equals*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Equals\n  nameWithType: EqualityComparer<T>.Equals\n  fullName: EqualityComparer<T>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: GetHashCode\n  nameWithType: EqualityComparer<T>.GetHashCode\n  fullName: EqualityComparer<T>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: System.Collections.IEqualityComparer.Equals\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.Equals\n  fullName: EqualityComparer<T>.System.Collections.IEqualityComparer.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode*\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: System.Collections.IEqualityComparer.GetHashCode\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode\n  fullName: EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/EqualityComparer`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.IEqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n"}