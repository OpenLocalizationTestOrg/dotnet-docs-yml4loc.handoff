{"nodes":[{"content":"Specifies a range of character positions within a string.","nodes":[{"pos":[0,57],"content":"Specifies a range of character positions within a string.","nodes":[{"content":"Specifies a range of character positions within a string.","pos":[0,57]}]}],"pos":[820,878],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.CharacterRange\"></xref> structure, specifying a range of character positions within a string.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> structure, specifying a range of character positions within a string.","source":"Initializes a new instance of the <xref href=\"System.Drawing.CharacterRange\"></xref> structure, specifying a range of character positions within a string."}],"pos":[2927,3082],"yaml":true},{"content":"The position of the first character in the range. For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string.","nodes":[{"pos":[0,158],"content":"The position of the first character in the range. For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string.","nodes":[{"content":"The position of the first character in the range.","pos":[0,49]},{"content":"For example, if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">First</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to 0, the first position of the range is position 0 in the string.","pos":[50,158],"source":" For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string."}]}],"pos":[4131,4290],"yaml":true},{"content":"The number of positions in the range.","nodes":[{"pos":[0,37],"content":"The number of positions in the range.","nodes":[{"content":"The number of positions in the range.","pos":[0,37]}]}],"pos":[4351,4389],"yaml":true},{"content":"Gets a value indicating whether this object is equivalent to the specified object.","nodes":[{"pos":[0,82],"content":"Gets a value indicating whether this object is equivalent to the specified object.","nodes":[{"content":"Gets a value indicating whether this object is equivalent to the specified object.","pos":[0,82]}]}],"pos":[5396,5479],"yaml":true},{"content":"You can also use <xref:System.Drawing.CharacterRange.op_Equality%2A> to test for equality.","nodes":[{"pos":[0,90],"content":"You can also use <xref:System.Drawing.CharacterRange.op_Equality%2A> to test for equality.","nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> to test for equality.","pos":[0,90],"source":"You can also use <xref:System.Drawing.CharacterRange.op_Equality%2A> to test for equality."}]}],"pos":[5490,5581],"yaml":true,"extradata":"MT"},{"content":"The object to compare to for equality.","nodes":[{"pos":[0,38],"content":"The object to compare to for equality.","nodes":[{"content":"The object to compare to for equality.","pos":[0,38]}]}],"pos":[6450,6489],"yaml":true},{"content":"`true` to indicate the specified object is an instance with the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> value as this instance; otherwise, `false`.","nodes":[{"pos":[0,231],"content":"<ph id=\"ph1\">`true`</ph> to indicate the specified object is an instance with the same <ph id=\"ph2\">&lt;xref href=\"System.Drawing.CharacterRange.First\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Drawing.CharacterRange.Length\"&gt;&lt;/xref&gt;</ph> value as this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to indicate the specified object is an instance with the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> value as this instance; otherwise, `false`."}],"pos":[6547,6781],"yaml":true},{"content":"Gets or sets the position in the string of the first character of this <xref href=\"System.Drawing.CharacterRange\"></xref>.","nodes":[{"pos":[0,122],"content":"Gets or sets the position in the string of the first character of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the position in the string of the first character of this <xref href=\"System.Drawing.CharacterRange\"></xref>."}],"pos":[7716,7839],"yaml":true},{"content":"The first position of this <xref href=\"System.Drawing.CharacterRange\"></xref>.","nodes":[{"pos":[0,78],"content":"The first position of this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph>.","source":"The first position of this <xref href=\"System.Drawing.CharacterRange\"></xref>."}],"pos":[7949,8028],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[9002,9043],"yaml":true},{"content":"A 32-bit signed integer that is the hash code for this instance.","nodes":[{"pos":[0,64],"content":"A 32-bit signed integer that is the hash code for this instance.","nodes":[{"content":"A 32-bit signed integer that is the hash code for this instance.","pos":[0,64]}]}],"pos":[9177,9242],"yaml":true},{"content":"Gets or sets the number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets or sets the number of positions in this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>."}],"pos":[10188,10285],"yaml":true},{"content":"The number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>.","nodes":[{"pos":[0,83],"content":"The number of positions in this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph>.","source":"The number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>."}],"pos":[10396,10480],"yaml":true},{"content":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are equal.","nodes":[{"pos":[0,315],"content":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are equal.","nodes":[{"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,72],"source":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects."},{"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange.First\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Drawing.CharacterRange.Length\"&gt;&lt;/xref&gt;</ph> values of the two <ph id=\"ph3\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects are equal.","pos":[73,315],"source":" Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are equal."}]}],"pos":[11730,12046],"yaml":true},{"content":"You can also test for equality using the <xref:System.Drawing.CharacterRange.Equals%2A> method.  \n  \n The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>","nodes":[{"pos":[0,95],"content":"You can also test for equality using the <xref:System.Drawing.CharacterRange.Equals%2A> method.","nodes":[{"content":"You can also test for equality using the <ph id=\"ph1\">&lt;xref:System.Drawing.CharacterRange.Equals%2A&gt;</ph> method.","pos":[0,95],"source":"You can also test for equality using the <xref:System.Drawing.CharacterRange.Equals%2A> method."}]},{"pos":[102,280],"content":"The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Drawing.CharacterRange.Equals%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName&gt;</ph>","pos":[0,178],"source":"The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>"}]}],"pos":[12057,12342],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> to compare for equality.","source":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality."}],"pos":[13295,13373],"yaml":true},{"content":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> to compare for equality.","source":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality."}],"pos":[13448,13526],"yaml":true},{"content":"`true` to indicate the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects have the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values; otherwise, `false`.","nodes":[{"pos":[0,246],"content":"<ph id=\"ph1\">`true`</ph> to indicate the two <ph id=\"ph2\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects have the same <ph id=\"ph3\">&lt;xref href=\"System.Drawing.CharacterRange.First\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Drawing.CharacterRange.Length\"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` to indicate the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects have the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values; otherwise, `false`."}],"pos":[13584,13833],"yaml":true},{"content":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are not equal.","nodes":[{"pos":[0,318],"content":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are not equal.","nodes":[{"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,72],"source":"Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects."},{"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange.First\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Drawing.CharacterRange.Length\"&gt;&lt;/xref&gt;</ph> values of the two <ph id=\"ph3\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects are not equal.","pos":[73,318],"source":" Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are not equal."}]}],"pos":[15100,15419],"yaml":true},{"content":"The <xref:System.Drawing.CharacterRange.op_Inequality%2A> method returns the opposite of the <xref:System.Drawing.CharacterRange.op_Equality%2A> method.  \n  \n The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Compare%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>","nodes":[{"pos":[0,152],"content":"The <xref:System.Drawing.CharacterRange.op_Inequality%2A> method returns the opposite of the <xref:System.Drawing.CharacterRange.op_Equality%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.CharacterRange.op_Inequality%2A&gt;</ph> method returns the opposite of the <ph id=\"ph2\">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> method.","pos":[0,152],"source":"The <xref:System.Drawing.CharacterRange.op_Inequality%2A> method returns the opposite of the <xref:System.Drawing.CharacterRange.op_Equality%2A> method."}]},{"pos":[159,338],"content":"The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Compare%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Drawing.CharacterRange.Compare%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName&gt;</ph>","pos":[0,179],"source":"The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Compare%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>"}]}],"pos":[15430,15773],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality.","nodes":[{"pos":[0,79],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> to compare for inequality.","source":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality."}],"pos":[16729,16809],"yaml":true},{"content":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality.","nodes":[{"pos":[0,79],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> to compare for inequality.","source":"A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality."}],"pos":[16884,16964],"yaml":true},{"content":"`true` to indicate the either the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects differ; otherwise, `false`.","nodes":[{"pos":[0,256],"content":"<ph id=\"ph1\">`true`</ph> to indicate the either the <ph id=\"ph2\">&lt;xref href=\"System.Drawing.CharacterRange.First\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Drawing.CharacterRange.Length\"&gt;&lt;/xref&gt;</ph> values of the two <ph id=\"ph4\">&lt;xref href=\"System.Drawing.CharacterRange\"&gt;&lt;/xref&gt;</ph> objects differ; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` to indicate the either the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects differ; otherwise, `false`."}],"pos":[17022,17281],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.CharacterRange\n  commentId: T:System.Drawing.CharacterRange\n  id: CharacterRange\n  children:\n  - System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)\n  - System.Drawing.CharacterRange.Equals(System.Object)\n  - System.Drawing.CharacterRange.First\n  - System.Drawing.CharacterRange.GetHashCode\n  - System.Drawing.CharacterRange.Length\n  - System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  - System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  langs:\n  - csharp\n  name: CharacterRange\n  nameWithType: CharacterRange\n  fullName: System.Drawing.CharacterRange\n  type: Struct\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Specifies a range of character positions within a string.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Drawing.CharacterRange> and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]\"\n  syntax:\n    content: public struct CharacterRange\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: CharacterRange(Int32, Int32)\n  nameWithType: CharacterRange.CharacterRange(Int32, Int32)\n  fullName: CharacterRange.CharacterRange(Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.CharacterRange\"></xref> structure, specifying a range of character positions within a string.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Drawing.CharacterRange> and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]\\n [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]\\n [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]\"\n  syntax:\n    content: public CharacterRange (int First, int Length);\n    parameters:\n    - id: First\n      type: System.Int32\n      description: The position of the first character in the range. For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string.\n    - id: Length\n      type: System.Int32\n      description: The number of positions in the range.\n  overload: System.Drawing.CharacterRange.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.Equals(System.Object)\n  commentId: M:System.Drawing.CharacterRange.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CharacterRange.Equals(Object)\n  fullName: CharacterRange.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a value indicating whether this object is equivalent to the specified object.\n  remarks: You can also use <xref:System.Drawing.CharacterRange.op_Equality%2A> to test for equality.\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.Equals%2A> method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]\\n [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to for equality.\n    return:\n      type: System.Boolean\n      description: '`true` to indicate the specified object is an instance with the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> value as this instance; otherwise, `false`.'\n  overload: System.Drawing.CharacterRange.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.First\n  commentId: P:System.Drawing.CharacterRange.First\n  id: First\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: First\n  nameWithType: CharacterRange.First\n  fullName: CharacterRange.First\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the position in the string of the first character of this <xref href=\"System.Drawing.CharacterRange\"></xref>.\n  syntax:\n    content: public int First { get; set; }\n    return:\n      type: System.Int32\n      description: The first position of this <xref href=\"System.Drawing.CharacterRange\"></xref>.\n  overload: System.Drawing.CharacterRange.First*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.GetHashCode\n  commentId: M:System.Drawing.CharacterRange.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CharacterRange.GetHashCode()\n  fullName: CharacterRange.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer that is the hash code for this instance.\n  overload: System.Drawing.CharacterRange.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.Length\n  commentId: P:System.Drawing.CharacterRange.Length\n  id: Length\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: Length\n  nameWithType: CharacterRange.Length\n  fullName: CharacterRange.Length\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>.\n  syntax:\n    content: public int Length { get; set; }\n    return:\n      type: System.Int32\n      description: The number of positions in this <xref href=\"System.Drawing.CharacterRange\"></xref>.\n  overload: System.Drawing.CharacterRange.Length*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  commentId: M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  id: op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: op_Equality(CharacterRange, CharacterRange)\n  nameWithType: CharacterRange.op_Equality(CharacterRange, CharacterRange)\n  fullName: CharacterRange.op_Equality(CharacterRange, CharacterRange)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are equal.\n  remarks: \"You can also test for equality using the <xref:System.Drawing.CharacterRange.Equals%2A> method.  \\n  \\n The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.op_Equality%2A> operator. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]\\n [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]\"\n  syntax:\n    content: public static bool op_Equality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);\n    parameters:\n    - id: cr1\n      type: System.Drawing.CharacterRange\n      description: A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality.\n    - id: cr2\n      type: System.Drawing.CharacterRange\n      description: A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for equality.\n    return:\n      type: System.Boolean\n      description: '`true` to indicate the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects have the same <xref href=\"System.Drawing.CharacterRange.First\"></xref> and <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values; otherwise, `false`.'\n  overload: System.Drawing.CharacterRange.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  commentId: M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  id: op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  parent: System.Drawing.CharacterRange\n  langs:\n  - csharp\n  name: op_Inequality(CharacterRange, CharacterRange)\n  nameWithType: CharacterRange.op_Inequality(CharacterRange, CharacterRange)\n  fullName: CharacterRange.op_Inequality(CharacterRange, CharacterRange)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Compares two <xref href=\"System.Drawing.CharacterRange\"></xref> objects. Gets a value indicating whether the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects are not equal.\n  remarks: \"The <xref:System.Drawing.CharacterRange.op_Inequality%2A> method returns the opposite of the <xref:System.Drawing.CharacterRange.op_Equality%2A> method.  \\n  \\n The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Compare%28System.Drawing.CharacterRange%2CSystem.Drawing.CharacterRange%29?displayProperty=fullName>\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.op_Inequality%2A> method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeInequality` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]\\n [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]\"\n  syntax:\n    content: public static bool op_Inequality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);\n    parameters:\n    - id: cr1\n      type: System.Drawing.CharacterRange\n      description: A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality.\n    - id: cr2\n      type: System.Drawing.CharacterRange\n      description: A <xref href=\"System.Drawing.CharacterRange\"></xref> to compare for inequality.\n    return:\n      type: System.Boolean\n      description: '`true` to indicate the either the <xref href=\"System.Drawing.CharacterRange.First\"></xref> or <xref href=\"System.Drawing.CharacterRange.Length\"></xref> values of the two <xref href=\"System.Drawing.CharacterRange\"></xref> objects differ; otherwise, `false`.'\n  overload: System.Drawing.CharacterRange.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: CharacterRange(Int32, Int32)\n  nameWithType: CharacterRange.CharacterRange(Int32, Int32)\n  fullName: CharacterRange.CharacterRange(Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.CharacterRange.Equals(System.Object)\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CharacterRange.Equals(Object)\n  fullName: CharacterRange.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.CharacterRange.First\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: First\n  nameWithType: CharacterRange.First\n  fullName: CharacterRange.First\n- uid: System.Drawing.CharacterRange.GetHashCode\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CharacterRange.GetHashCode()\n  fullName: CharacterRange.GetHashCode()\n- uid: System.Drawing.CharacterRange.Length\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: Length\n  nameWithType: CharacterRange.Length\n  fullName: CharacterRange.Length\n- uid: System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: op_Equality(CharacterRange, CharacterRange)\n  nameWithType: CharacterRange.op_Equality(CharacterRange, CharacterRange)\n  fullName: CharacterRange.op_Equality(CharacterRange, CharacterRange)\n- uid: System.Drawing.CharacterRange\n  parent: System.Drawing\n  isExternal: false\n  name: CharacterRange\n  nameWithType: CharacterRange\n  fullName: System.Drawing.CharacterRange\n- uid: System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: op_Inequality(CharacterRange, CharacterRange)\n  nameWithType: CharacterRange.op_Inequality(CharacterRange, CharacterRange)\n  fullName: CharacterRange.op_Inequality(CharacterRange, CharacterRange)\n- uid: System.Drawing.CharacterRange.#ctor*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: CharacterRange\n  nameWithType: CharacterRange.CharacterRange\n  fullName: CharacterRange.CharacterRange\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.Equals*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: Equals\n  nameWithType: CharacterRange.Equals\n  fullName: CharacterRange.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.First*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: First\n  nameWithType: CharacterRange.First\n  fullName: CharacterRange.First\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.GetHashCode*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CharacterRange.GetHashCode\n  fullName: CharacterRange.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.Length*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: Length\n  nameWithType: CharacterRange.Length\n  fullName: CharacterRange.Length\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.op_Equality*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: op_Equality\n  nameWithType: CharacterRange.op_Equality\n  fullName: CharacterRange.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n- uid: System.Drawing.CharacterRange.op_Inequality*\n  parent: System.Drawing.CharacterRange\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CharacterRange.op_Inequality\n  fullName: CharacterRange.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/CharacterRange.xml\n"}