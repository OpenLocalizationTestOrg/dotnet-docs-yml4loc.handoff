{"nodes":[{"content":"Provides delayed resolution of security keys by resolving the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> only when cryptographic functions are needed. This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.","nodes":[{"pos":[0,419],"content":"Provides delayed resolution of security keys by resolving the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> only when cryptographic functions are needed. This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.","nodes":[{"content":"Provides delayed resolution of security keys by resolving the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> only when cryptographic functions are needed.","pos":[0,258],"source":"Provides delayed resolution of security keys by resolving the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> only when cryptographic functions are needed."},{"content":"This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.","pos":[259,419]}]}],"pos":[1266,1686],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"&gt;&lt;/xref&gt;</ph> class from the specified key identifier.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier."}],"pos":[3612,3755],"yaml":true},{"content":"A key identifier that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,96],"content":"A key identifier that represents a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"A key identifier that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[4084,4181],"yaml":true},{"content":"A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,104],"content":"A token resolver that can be resolved to a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[4297,4402],"yaml":true},{"content":"<code>securityKeyIdentifier</code> is `null`.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifier&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityKeyIdentifier</code> is `null`."}],"pos":[4584,4630],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier clause.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"&gt;&lt;/xref&gt;</ph> class from the specified key identifier clause.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier clause."}],"pos":[6105,6255],"yaml":true},{"content":"A key identifier clause that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,103],"content":"A key identifier clause that represents a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"A key identifier clause that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[6608,6712],"yaml":true},{"content":"A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.","nodes":[{"pos":[0,104],"content":"A token resolver that can be resolved to a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph>.","source":"A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>."}],"pos":[6828,6933],"yaml":true},{"content":"<code>securityKeyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityKeyIdentifierClause</code> is `null`."}],"pos":[7115,7167],"yaml":true},{"content":"Decrypts the specified key by using the specified algorithm.","nodes":[{"pos":[0,60],"content":"Decrypts the specified key by using the specified algorithm.","nodes":[{"content":"Decrypts the specified key by using the specified algorithm.","pos":[0,60]}]}],"pos":[8275,8336],"yaml":true},{"content":"The algorithm to use to decrypt the key.","nodes":[{"pos":[0,40],"content":"The algorithm to use to decrypt the key.","nodes":[{"content":"The algorithm to use to decrypt the key.","pos":[0,40]}]}],"pos":[8510,8551],"yaml":true},{"content":"An array that contains the encrypted key.","nodes":[{"pos":[0,41],"content":"An array that contains the encrypted key.","nodes":[{"content":"An array that contains the encrypted key.","pos":[0,41]}]}],"pos":[8614,8656],"yaml":true},{"content":"An array that contains the decrypted key.","nodes":[{"pos":[0,41],"content":"An array that contains the decrypted key.","nodes":[{"content":"An array that contains the decrypted key.","pos":[0,41]}]}],"pos":[8713,8755],"yaml":true},{"content":"Encrypts the specified key by using the specified algorithm.","nodes":[{"pos":[0,60],"content":"Encrypts the specified key by using the specified algorithm.","nodes":[{"content":"Encrypts the specified key by using the specified algorithm.","pos":[0,60]}]}],"pos":[9951,10012],"yaml":true},{"content":"The algorithm to use to decrypt the key.","nodes":[{"pos":[0,40],"content":"The algorithm to use to decrypt the key.","nodes":[{"content":"The algorithm to use to decrypt the key.","pos":[0,40]}]}],"pos":[10186,10227],"yaml":true},{"content":"An array that contains the key to encrypt.","nodes":[{"pos":[0,42],"content":"An array that contains the key to encrypt.","nodes":[{"content":"An array that contains the key to encrypt.","pos":[0,42]}]}],"pos":[10290,10333],"yaml":true},{"content":"An array that contains the encrypted key.","nodes":[{"pos":[0,41],"content":"An array that contains the encrypted key.","nodes":[{"content":"An array that contains the encrypted key.","pos":[0,41]}]}],"pos":[10390,10432],"yaml":true},{"content":"Returns a value that indicates whether the specified algorithm is asymmetric.","nodes":[{"pos":[0,77],"content":"Returns a value that indicates whether the specified algorithm is asymmetric.","nodes":[{"content":"Returns a value that indicates whether the specified algorithm is asymmetric.","pos":[0,77]}]}],"pos":[11628,11706],"yaml":true},{"content":"The algorithm to check.","nodes":[{"pos":[0,23],"content":"The algorithm to check.","nodes":[{"content":"The algorithm to check.","pos":[0,23]}]}],"pos":[11873,11897],"yaml":true},{"content":"`true` if the algorithm will be processed by the runtime as asymmetric; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the algorithm will be processed by the runtime as asymmetric; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the algorithm will be processed by the runtime as asymmetric; otherwise, `false`."}],"pos":[11955,12049],"yaml":true},{"content":"Returns a value that indicates whether the specified algorithm is supported by this key.","nodes":[{"pos":[0,88],"content":"Returns a value that indicates whether the specified algorithm is supported by this key.","nodes":[{"content":"Returns a value that indicates whether the specified algorithm is supported by this key.","pos":[0,88]}]}],"pos":[13250,13339],"yaml":true},{"content":"The algorithm to check.","nodes":[{"pos":[0,23],"content":"The algorithm to check.","nodes":[{"content":"The algorithm to check.","pos":[0,23]}]}],"pos":[13505,13529],"yaml":true},{"content":"`true` if the algorithm is supported by this key; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the algorithm is supported by this key; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the algorithm is supported by this key; otherwise, `false`."}],"pos":[13587,13659],"yaml":true},{"content":"Returns a value that indicates whether the specified algorithm is symmetric.","nodes":[{"pos":[0,76],"content":"Returns a value that indicates whether the specified algorithm is symmetric.","nodes":[{"content":"Returns a value that indicates whether the specified algorithm is symmetric.","pos":[0,76]}]}],"pos":[14859,14936],"yaml":true},{"content":"The algorithm to check.","nodes":[{"pos":[0,23],"content":"The algorithm to check.","nodes":[{"content":"The algorithm to check.","pos":[0,23]}]}],"pos":[15102,15126],"yaml":true},{"content":"`true` if the algorithm will be processed by the runtime as symmetric; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the algorithm will be processed by the runtime as symmetric; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the algorithm will be processed by the runtime as symmetric; otherwise, `false`."}],"pos":[15184,15277],"yaml":true},{"content":"Gets the key size, in bits.","nodes":[{"pos":[0,27],"content":"Gets the key size, in bits.","nodes":[{"content":"Gets the key size, in bits.","pos":[0,27]}]}],"pos":[16332,16360],"yaml":true},{"content":"The key size, in bits.","nodes":[{"pos":[0,22],"content":"The key size, in bits.","nodes":[{"content":"The key size, in bits.","pos":[0,22]}]}],"pos":[16476,16499],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityKeyElement\n  commentId: T:System.IdentityModel.Tokens.SecurityKeyElement\n  id: SecurityKeyElement\n  children:\n  - System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)\n  - System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.SecurityKeyElement.KeySize\n  langs:\n  - csharp\n  name: SecurityKeyElement\n  nameWithType: SecurityKeyElement\n  fullName: System.IdentityModel.Tokens.SecurityKeyElement\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Provides delayed resolution of security keys by resolving the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> only when cryptographic functions are needed. This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.\n  syntax:\n    content: 'public class SecurityKeyElement : System.IdentityModel.Tokens.SecurityKey'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKey\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)'\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n  fullName: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier.\n  syntax:\n    content: public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);\n    parameters:\n    - id: securityKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A key identifier that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n    - id: securityTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityKeyIdentifier</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)'\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n  fullName: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyElement\"></xref> class from the specified key identifier clause.\n  syntax:\n    content: public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);\n    parameters:\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A key identifier clause that represents a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n    - id: securityTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: A token resolver that can be resolved to a <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityKeyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])\n  id: DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: DecryptKey(String, Byte[])\n  nameWithType: SecurityKeyElement.DecryptKey(String, Byte[])\n  fullName: SecurityKeyElement.DecryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Decrypts the specified key by using the specified algorithm.\n  syntax:\n    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to use to decrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array that contains the encrypted key.\n    return:\n      type: System.Byte[]\n      description: An array that contains the decrypted key.\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])\n  id: EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: EncryptKey(String, Byte[])\n  nameWithType: SecurityKeyElement.EncryptKey(String, Byte[])\n  fullName: SecurityKeyElement.EncryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Encrypts the specified key by using the specified algorithm.\n  syntax:\n    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to use to decrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array that contains the key to encrypt.\n    return:\n      type: System.Byte[]\n      description: An array that contains the encrypted key.\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)\n  id: IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm(String)\n  fullName: SecurityKeyElement.IsAsymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified algorithm is asymmetric.\n  syntax:\n    content: public override bool IsAsymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the algorithm will be processed by the runtime as asymmetric; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)\n  id: IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: IsSupportedAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsSupportedAlgorithm(String)\n  fullName: SecurityKeyElement.IsSupportedAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified algorithm is supported by this key.\n  syntax:\n    content: public override bool IsSupportedAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the algorithm is supported by this key; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)\n  id: IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm(String)\n  fullName: SecurityKeyElement.IsSymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified algorithm is symmetric.\n  syntax:\n    content: public override bool IsSymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The algorithm to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the algorithm will be processed by the runtime as symmetric; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize\n  commentId: P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize\n  id: KeySize\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: SecurityKeyElement.KeySize\n  fullName: SecurityKeyElement.KeySize\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key size, in bits.\n  syntax:\n    content: public override int KeySize { get; }\n    return:\n      type: System.Int32\n      description: The key size, in bits.\n  overload: System.IdentityModel.Tokens.SecurityKeyElement.KeySize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n  fullName: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n  fullName: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: DecryptKey(String, Byte[])\n  nameWithType: SecurityKeyElement.DecryptKey(String, Byte[])\n  fullName: SecurityKeyElement.DecryptKey(String, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: EncryptKey(String, Byte[])\n  nameWithType: SecurityKeyElement.EncryptKey(String, Byte[])\n  fullName: SecurityKeyElement.EncryptKey(String, Byte[])\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm(String)\n  fullName: SecurityKeyElement.IsAsymmetricAlgorithm(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsSupportedAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsSupportedAlgorithm(String)\n  fullName: SecurityKeyElement.IsSupportedAlgorithm(String)\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm(String)\n  fullName: SecurityKeyElement.IsSymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: KeySize\n  nameWithType: SecurityKeyElement.KeySize\n  fullName: SecurityKeyElement.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: SecurityKeyElement\n  nameWithType: SecurityKeyElement.SecurityKeyElement\n  fullName: SecurityKeyElement.SecurityKeyElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: DecryptKey\n  nameWithType: SecurityKeyElement.DecryptKey\n  fullName: SecurityKeyElement.DecryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: EncryptKey\n  nameWithType: SecurityKeyElement.EncryptKey\n  fullName: SecurityKeyElement.EncryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsAsymmetricAlgorithm\n  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm\n  fullName: SecurityKeyElement.IsAsymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsSupportedAlgorithm\n  nameWithType: SecurityKeyElement.IsSupportedAlgorithm\n  fullName: SecurityKeyElement.IsSupportedAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: IsSymmetricAlgorithm\n  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm\n  fullName: SecurityKeyElement.IsSymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize*\n  parent: System.IdentityModel.Tokens.SecurityKeyElement\n  isExternal: false\n  name: KeySize\n  nameWithType: SecurityKeyElement.KeySize\n  fullName: SecurityKeyElement.KeySize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityKeyElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}