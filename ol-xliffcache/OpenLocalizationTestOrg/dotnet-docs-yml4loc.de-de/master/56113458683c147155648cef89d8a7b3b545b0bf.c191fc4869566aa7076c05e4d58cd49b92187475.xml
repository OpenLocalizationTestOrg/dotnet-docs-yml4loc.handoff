{"nodes":[{"content":"Represents a typed entity set that is used to perform create, read, update, and delete operations.","nodes":[{"pos":[0,98],"content":"Represents a typed entity set that is used to perform create, read, update, and delete operations.","nodes":[{"content":"Represents a typed entity set that is used to perform create, read, update, and delete operations.","pos":[0,98]}]}],"pos":[843,942],"yaml":true},{"content":"The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call. The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.","nodes":[{"pos":[0,492],"content":"The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call. The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.","nodes":[{"content":"The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call. The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.","pos":[0,492],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectSet%601&gt;</ph> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call.","pos":[0,176],"source":"The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectSet%601&gt;</ph> class extends the functionality of the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <ph id=\"ph3\">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.","pos":[177,492],"source":" The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>."}]}]}],"pos":[953,1446],"yaml":true,"extradata":"MT"},{"content":"The entity type.","nodes":[{"pos":[0,16],"content":"The entity type.","nodes":[{"content":"The entity type.","pos":[0,16]}]}],"pos":[1748,1765],"yaml":true},{"content":"Adds an object to the object context in the current entity set.","nodes":[{"pos":[0,63],"content":"Adds an object to the object context in the current entity set.","nodes":[{"content":"Adds an object to the object context in the current entity set.","pos":[0,63]}]}],"pos":[48564,48628],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.","nodes":[{"pos":[0,97],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.AddObject%2A&gt;</ph> method.","pos":[0,97],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method."}]}],"pos":[48639,48737],"yaml":true,"extradata":"MT"},{"content":"The object to add.","nodes":[{"pos":[0,18],"content":"The object to add.","nodes":[{"content":"The object to add.","pos":[0,18]}]}],"pos":[48872,48891],"yaml":true},{"content":"Copies the scalar values from the supplied object into the object in the <xref href=\"System.Data.Objects.ObjectContext\"></xref> that has the same key.","nodes":[{"pos":[0,150],"content":"Copies the scalar values from the supplied object into the object in the <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph> that has the same key.","source":"Copies the scalar values from the supplied object into the object in the <xref href=\"System.Data.Objects.ObjectContext\"></xref> that has the same key."}],"pos":[49973,50124],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.","nodes":[{"pos":[0,106],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A&gt;</ph> method.","pos":[0,106],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method."}]}],"pos":[50135,50242],"yaml":true,"extradata":"MT"},{"content":"The detached object that has property updates to apply to the original object. The entity key of <code>currentEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"pos":[0,290],"content":"The detached object that has property updates to apply to the original object. The entity key of <code>currentEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"content":"The detached object that has property updates to apply to the original object.","pos":[0,78]},{"content":"The entity key of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">currentEntity</ph><ept id=\"p1\">&lt;/code&gt;</ept> must match the <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"&gt;&lt;/xref&gt;</ph> property of an entry in the <ph id=\"ph3\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph>.","pos":[79,290],"source":" The entity key of <code>currentEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>."}]}],"pos":[50403,50694],"yaml":true},{"content":"The updated object.","nodes":[{"pos":[0,19],"content":"The updated object.","nodes":[{"content":"The updated object.","pos":[0,19]}]}],"pos":[50745,50765],"yaml":true},{"content":"Sets the <xref href=\"System.Data.Objects.ObjectStateEntry.OriginalValues\"></xref> property of an <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> to match the property values of a supplied object.","nodes":[{"pos":[0,205],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry.OriginalValues\"&gt;&lt;/xref&gt;</ph> property of an <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry\"&gt;&lt;/xref&gt;</ph> to match the property values of a supplied object.","source":"Sets the <xref href=\"System.Data.Objects.ObjectStateEntry.OriginalValues\"></xref> property of an <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> to match the property values of a supplied object."}],"pos":[51862,52068],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.","nodes":[{"pos":[0,107],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A&gt;</ph> method.","pos":[0,107],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method."}]}],"pos":[52079,52187],"yaml":true,"extradata":"MT"},{"content":"The detached object that has property updates to apply to the original object. The entity key of <code>originalEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"pos":[0,291],"content":"The detached object that has property updates to apply to the original object. The entity key of <code>originalEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"content":"The detached object that has property updates to apply to the original object.","pos":[0,78]},{"content":"The entity key of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">originalEntity</ph><ept id=\"p1\">&lt;/code&gt;</ept> must match the <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"&gt;&lt;/xref&gt;</ph> property of an entry in the <ph id=\"ph3\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph>.","pos":[79,291],"source":" The entity key of <code>originalEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>."}]}],"pos":[52351,52643],"yaml":true},{"content":"The updated object.","nodes":[{"pos":[0,19],"content":"The updated object.","nodes":[{"content":"The updated object.","pos":[0,19]}]}],"pos":[52694,52714],"yaml":true},{"content":"Attaches an object or object graph to the object context in the current entity set.","nodes":[{"pos":[0,83],"content":"Attaches an object or object graph to the object context in the current entity set.","nodes":[{"content":"Attaches an object or object graph to the object context in the current entity set.","pos":[0,83]}]}],"pos":[53734,53818],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.","nodes":[{"pos":[0,96],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.AttachTo%2A&gt;</ph> method.","pos":[0,96],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method."}]}],"pos":[53829,53926],"yaml":true,"extradata":"MT"},{"content":"The object to attach.","nodes":[{"pos":[0,21],"content":"The object to attach.","nodes":[{"content":"The object to attach.","pos":[0,21]}]}],"pos":[54058,54080],"yaml":true},{"content":"Creates a new entity type object.","nodes":[{"pos":[0,33],"content":"Creates a new entity type object.","nodes":[{"content":"Creates a new entity type object.","pos":[0,33]}]}],"pos":[55090,55124],"yaml":true},{"content":"The new entity type object, or an instance of a proxy type that corresponds to the entity type.","nodes":[{"pos":[0,95],"content":"The new entity type object, or an instance of a proxy type that corresponds to the entity type.","nodes":[{"content":"The new entity type object, or an instance of a proxy type that corresponds to the entity type.","pos":[0,95]}]}],"pos":[55249,55345],"yaml":true},{"content":"Creates an instance of the specified type.","nodes":[{"pos":[0,42],"content":"Creates an instance of the specified type.","nodes":[{"content":"Creates an instance of the specified type.","pos":[0,42]}]}],"pos":[56379,56422],"yaml":true},{"content":"Type of object to be returned.","nodes":[{"pos":[0,30],"content":"Type of object to be returned.","nodes":[{"content":"Type of object to be returned.","pos":[0,30]}]}],"pos":[56571,56602],"yaml":true},{"content":"An instance of the requested type <code>T</code>, or an instance of a proxy type that corresponds to the type <code>T</code>.","nodes":[{"pos":[0,125],"content":"An instance of the requested type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or an instance of a proxy type that corresponds to the type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An instance of the requested type <code>T</code>, or an instance of a proxy type that corresponds to the type <code>T</code>."}],"pos":[56647,56773],"yaml":true},{"content":"Marks an object for deletion.","nodes":[{"pos":[0,29],"content":"Marks an object for deletion.","nodes":[{"content":"Marks an object for deletion.","pos":[0,29]}]}],"pos":[57825,57855],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.","nodes":[{"pos":[0,100],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.DeleteObject%2A&gt;</ph> method.","pos":[0,100],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method."}]}],"pos":[57866,57967],"yaml":true,"extradata":"MT"},{"content":"An object that represents the entity to delete. The object can be in any state except <xref href=\"System.Data.EntityState.Detached\"></xref>.","nodes":[{"pos":[0,140],"content":"An object that represents the entity to delete. The object can be in any state except <xref href=\"System.Data.EntityState.Detached\"></xref>.","nodes":[{"content":"An object that represents the entity to delete.","pos":[0,47]},{"content":"The object can be in any state except <ph id=\"ph1\">&lt;xref href=\"System.Data.EntityState.Detached\"&gt;&lt;/xref&gt;</ph>.","pos":[48,140],"source":" The object can be in any state except <xref href=\"System.Data.EntityState.Detached\"></xref>."}]}],"pos":[58105,58246],"yaml":true},{"content":"Removes the object from the object context.","nodes":[{"pos":[0,43],"content":"Removes the object from the object context.","nodes":[{"content":"Removes the object from the object context.","pos":[0,43]}]}],"pos":[59259,59303],"yaml":true},{"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.","nodes":[{"pos":[0,94],"content":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.","nodes":[{"content":"This method is a wrapper around the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext.Detach%2A&gt;</ph> method.","pos":[0,94],"source":"This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method."}]}],"pos":[59314,59409],"yaml":true,"extradata":"MT"},{"content":"Object to be detached. Only the <code>entity</code> is removed; if there are any related objects that are being tracked by the same <xref href=\"System.Data.Objects.ObjectStateManager\"></xref>, those will not be detached automatically.","nodes":[{"pos":[0,234],"content":"Object to be detached. Only the <code>entity</code> is removed; if there are any related objects that are being tracked by the same <xref href=\"System.Data.Objects.ObjectStateManager\"></xref>, those will not be detached automatically.","nodes":[{"content":"Object to be detached.","pos":[0,22]},{"content":"Only the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">entity</ph><ept id=\"p1\">&lt;/code&gt;</ept> is removed; if there are any related objects that are being tracked by the same <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectStateManager\"&gt;&lt;/xref&gt;</ph>, those will not be detached automatically.","pos":[23,234],"source":" Only the <code>entity</code> is removed; if there are any related objects that are being tracked by the same <xref href=\"System.Data.Objects.ObjectStateManager\"></xref>, those will not be detached automatically."}]}],"pos":[59541,59776],"yaml":true},{"content":"Gets the metadata of the entity set represented by this <xref href=\"System.Data.Objects.ObjectSet`1\"></xref> instance.","nodes":[{"pos":[0,118],"content":"Gets the metadata of the entity set represented by this <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectSet`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the metadata of the entity set represented by this <xref href=\"System.Data.Objects.ObjectSet`1\"></xref> instance."}],"pos":[60764,60883],"yaml":true},{"content":"An <xref href=\"System.Data.Metadata.Edm.EntitySet\"></xref> object.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.EntitySet\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Data.Metadata.Edm.EntitySet\"></xref> object."}],"pos":[61045,61112],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectSet`1\n  commentId: T:System.Data.Objects.ObjectSet`1\n  id: ObjectSet`1\n  children:\n  - System.Data.Objects.ObjectSet`1.AddObject(`0)\n  - System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  - System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  - System.Data.Objects.ObjectSet`1.Attach(`0)\n  - System.Data.Objects.ObjectSet`1.CreateObject\n  - System.Data.Objects.ObjectSet`1.CreateObject``1\n  - System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  - System.Data.Objects.ObjectSet`1.Detach(`0)\n  - System.Data.Objects.ObjectSet`1.EntitySet\n  langs:\n  - csharp\n  name: ObjectSet<TEntity>\n  nameWithType: ObjectSet<TEntity>\n  fullName: System.Data.Objects.ObjectSet<TEntity>\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Represents a typed entity set that is used to perform create, read, update, and delete operations.\n  remarks: The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call. The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.\n  syntax:\n    content: 'public class ObjectSet<TEntity> : System.Data.Objects.ObjectQuery<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Objects.IObjectSet<TEntity>, System.Linq.IQueryable<TEntity> where TEntity : class'\n    typeParameters:\n    - id: TEntity\n      description: The entity type.\n  inheritance:\n  - System.Object\n  - System.Data.Objects.ObjectQuery\n  - System.Data.Objects.ObjectQuery`1\n  implements:\n  - System.Collections.Generic.IEnumerable{TEntity}\n  - System.Data.Objects.IObjectSet{TEntity}\n  - System.Linq.IQueryable{TEntity}\n  inheritedMembers:\n  - System.Data.Objects.ObjectQuery.CommandText\n  - System.Data.Objects.ObjectQuery.Context\n  - System.Data.Objects.ObjectQuery.EnablePlanCaching\n  - System.Data.Objects.ObjectQuery.GetResultType\n  - System.Data.Objects.ObjectQuery.MergeOption\n  - System.Data.Objects.ObjectQuery.Parameters\n  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  - System.Data.Objects.ObjectQuery.ToTraceString\n  - System.Data.Objects.ObjectQuery`1.Distinct\n  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Include(System.String)\n  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Name\n  - System.Data.Objects.ObjectQuery`1.OfType``1\n  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  - System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  - System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  - System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  - System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.AddObject(`0)\n  id: AddObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: AddObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)\n  fullName: ObjectSet<TEntity>.AddObject(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Adds an object to the object context in the current entity set.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.\n  syntax:\n    content: public void AddObject (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The object to add.\n  overload: System.Data.Objects.ObjectSet`1.AddObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  id: ApplyCurrentValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: ApplyCurrentValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  fullName: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Copies the scalar values from the supplied object into the object in the <xref href=\"System.Data.Objects.ObjectContext\"></xref> that has the same key.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.\n  syntax:\n    content: public TEntity ApplyCurrentValues (TEntity currentEntity);\n    parameters:\n    - id: currentEntity\n      type: TEntity\n      description: The detached object that has property updates to apply to the original object. The entity key of <code>currentEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.\n    return:\n      type: TEntity\n      description: The updated object.\n  overload: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  id: ApplyOriginalValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: ApplyOriginalValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  fullName: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Sets the <xref href=\"System.Data.Objects.ObjectStateEntry.OriginalValues\"></xref> property of an <xref href=\"System.Data.Objects.ObjectStateEntry\"></xref> to match the property values of a supplied object.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.\n  syntax:\n    content: public TEntity ApplyOriginalValues (TEntity originalEntity);\n    parameters:\n    - id: originalEntity\n      type: TEntity\n      description: The detached object that has property updates to apply to the original object. The entity key of <code>originalEntity</code> must match the <xref href=\"System.Data.Objects.ObjectStateEntry.EntityKey\"></xref> property of an entry in the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.\n    return:\n      type: TEntity\n      description: The updated object.\n  overload: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.Attach(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.Attach(`0)\n  id: Attach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: Attach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Attach(TEntity)\n  fullName: ObjectSet<TEntity>.Attach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Attaches an object or object graph to the object context in the current entity set.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.\n  syntax:\n    content: public void Attach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The object to attach.\n  overload: System.Data.Objects.ObjectSet`1.Attach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.CreateObject\n  commentId: M:System.Data.Objects.ObjectSet`1.CreateObject\n  id: CreateObject\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: ObjectSet<TEntity>.CreateObject()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Creates a new entity type object.\n  syntax:\n    content: public TEntity CreateObject ();\n    parameters: []\n    return:\n      type: TEntity\n      description: The new entity type object, or an instance of a proxy type that corresponds to the entity type.\n  overload: System.Data.Objects.ObjectSet`1.CreateObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.CreateObject``1\n  commentId: M:System.Data.Objects.ObjectSet`1.CreateObject``1\n  id: CreateObject``1\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: CreateObject<T>()\n  nameWithType: ObjectSet<TEntity>.CreateObject<T>()\n  fullName: ObjectSet<TEntity>.CreateObject<T>()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Creates an instance of the specified type.\n  syntax:\n    content: 'public T CreateObject<T> () where T : class, TEntity;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: Type of object to be returned.\n    return:\n      type: T\n      description: An instance of the requested type <code>T</code>, or an instance of a proxy type that corresponds to the type <code>T</code>.\n  overload: System.Data.Objects.ObjectSet`1.CreateObject``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  id: DeleteObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: DeleteObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)\n  fullName: ObjectSet<TEntity>.DeleteObject(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Marks an object for deletion.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.\n  syntax:\n    content: public void DeleteObject (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: An object that represents the entity to delete. The object can be in any state except <xref href=\"System.Data.EntityState.Detached\"></xref>.\n  overload: System.Data.Objects.ObjectSet`1.DeleteObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.Detach(`0)\n  commentId: M:System.Data.Objects.ObjectSet`1.Detach(`0)\n  id: Detach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: Detach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Detach(TEntity)\n  fullName: ObjectSet<TEntity>.Detach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Removes the object from the object context.\n  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.\n  syntax:\n    content: public void Detach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: Object to be detached. Only the <code>entity</code> is removed; if there are any related objects that are being tracked by the same <xref href=\"System.Data.Objects.ObjectStateManager\"></xref>, those will not be detached automatically.\n  overload: System.Data.Objects.ObjectSet`1.Detach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectSet`1.EntitySet\n  commentId: P:System.Data.Objects.ObjectSet`1.EntitySet\n  id: EntitySet\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n  fullName: ObjectSet<TEntity>.EntitySet\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets the metadata of the entity set represented by this <xref href=\"System.Data.Objects.ObjectSet`1\"></xref> instance.\n  syntax:\n    content: public System.Data.Metadata.Edm.EntitySet EntitySet { get; }\n    return:\n      type: System.Data.Metadata.Edm.EntitySet\n      description: An <xref href=\"System.Data.Metadata.Edm.EntitySet\"></xref> object.\n  overload: System.Data.Objects.ObjectSet`1.EntitySet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Objects.ObjectQuery`1\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: TEntity\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Data.Objects.ObjectQuery{TEntity}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<TEntity>\n  nameWithType: ObjectQuery<TEntity>\n  fullName: System.Data.Objects.ObjectQuery<TEntity>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectQuery`1\n    name: ObjectQuery\n    nameWithType: ObjectQuery\n    fullName: System.Data.Objects.ObjectQuery\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: AddObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)\n  fullName: ObjectSet<TEntity>.AddObject(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyCurrentValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  fullName: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyOriginalValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  fullName: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.Attach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Attach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Attach(TEntity)\n  fullName: ObjectSet<TEntity>.Attach(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.CreateObject\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: ObjectSet<TEntity>.CreateObject()\n- uid: System.Data.Objects.ObjectSet`1.CreateObject``1\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject<T>()\n  nameWithType: ObjectSet<TEntity>.CreateObject<T>()\n  fullName: ObjectSet<TEntity>.CreateObject<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: DeleteObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)\n  fullName: ObjectSet<TEntity>.DeleteObject(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.Detach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Detach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Detach(TEntity)\n  fullName: ObjectSet<TEntity>.Detach(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.EntitySet\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n  fullName: ObjectSet<TEntity>.EntitySet\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Objects.ObjectSet`1.AddObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: AddObject\n  nameWithType: ObjectSet<TEntity>.AddObject\n  fullName: ObjectSet<TEntity>.AddObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyCurrentValues\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues\n  fullName: ObjectSet<TEntity>.ApplyCurrentValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyOriginalValues\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues\n  fullName: ObjectSet<TEntity>.ApplyOriginalValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.Attach*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Attach\n  nameWithType: ObjectSet<TEntity>.Attach\n  fullName: ObjectSet<TEntity>.Attach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.CreateObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject\n  nameWithType: ObjectSet<TEntity>.CreateObject\n  fullName: ObjectSet<TEntity>.CreateObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.CreateObject``1*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject<T>\n  nameWithType: ObjectSet<TEntity>.CreateObject<T>\n  fullName: ObjectSet<TEntity>.CreateObject<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: DeleteObject\n  nameWithType: ObjectSet<TEntity>.DeleteObject\n  fullName: ObjectSet<TEntity>.DeleteObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.Detach*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Detach\n  nameWithType: ObjectSet<TEntity>.Detach\n  fullName: ObjectSet<TEntity>.Detach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Data.Objects.ObjectSet`1.EntitySet*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n  fullName: ObjectSet<TEntity>.EntitySet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectSet`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Objects.ObjectQuery.CommandText\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: CommandText\n  nameWithType: ObjectQuery.CommandText\n  fullName: ObjectQuery.CommandText\n- uid: System.Data.Objects.ObjectQuery.Context\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: Context\n  nameWithType: ObjectQuery.Context\n  fullName: ObjectQuery.Context\n- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: EnablePlanCaching\n  nameWithType: ObjectQuery.EnablePlanCaching\n  fullName: ObjectQuery.EnablePlanCaching\n- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Execute(MergeOption)\n  nameWithType: ObjectQuery<T>.Execute(MergeOption)\n  fullName: ObjectQuery<T>.Execute(MergeOption)\n- uid: System.Data.Objects.ObjectQuery.GetResultType\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: GetResultType()\n  nameWithType: ObjectQuery.GetResultType()\n  fullName: ObjectQuery.GetResultType()\n- uid: System.Data.Objects.ObjectQuery.MergeOption\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: MergeOption\n  nameWithType: ObjectQuery.MergeOption\n  fullName: ObjectQuery.MergeOption\n- uid: System.Data.Objects.ObjectQuery.Parameters\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: Parameters\n  nameWithType: ObjectQuery.Parameters\n  fullName: ObjectQuery.Parameters\n- uid: System.Data.Objects.ObjectQuery.ToTraceString\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: ToTraceString()\n  nameWithType: ObjectQuery.ToTraceString()\n  fullName: ObjectQuery.ToTraceString()\n- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ObjectQuery.IEnumerable.GetEnumerator()\n  fullName: ObjectQuery.IEnumerable.GetEnumerator()\n- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IListSource.ContainsListCollection\n  nameWithType: ObjectQuery.IListSource.ContainsListCollection\n  fullName: ObjectQuery.IListSource.ContainsListCollection\n- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IListSource.GetList()\n  nameWithType: ObjectQuery.IListSource.GetList()\n  fullName: ObjectQuery.IListSource.GetList()\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.ElementType\n  nameWithType: ObjectQuery.IQueryable.ElementType\n  fullName: ObjectQuery.IQueryable.ElementType\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.Expression\n  nameWithType: ObjectQuery.IQueryable.Expression\n  fullName: ObjectQuery.IQueryable.Expression\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.Provider\n  nameWithType: ObjectQuery.IQueryable.Provider\n  fullName: ObjectQuery.IQueryable.Provider\n- uid: System.Data.Objects.ObjectQuery`1.Distinct\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Distinct()\n  nameWithType: ObjectQuery<T>.Distinct()\n  fullName: ObjectQuery<T>.Distinct()\n- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Except(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Except(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Except(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: GroupBy(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Include(String)\n  nameWithType: ObjectQuery<T>.Include(String)\n  fullName: ObjectQuery<T>.Include(String)\n- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Intersect(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.Name\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: ObjectQuery<T>.Name\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OfType<TResultType>()\n  nameWithType: ObjectQuery<T>.OfType<TResultType>()\n  fullName: ObjectQuery<T>.OfType<TResultType>()\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OrderBy(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Select(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Select(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Select(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: SelectValue<TResultType>(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Skip(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Top(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Top(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Top(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Union(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Union(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Union(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: UnionAll(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Where(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Where(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Where(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n  fullName: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n  nameWithType: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n  fullName: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  nameWithType: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  fullName: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n  nameWithType: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n  fullName: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Any<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Append<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Append<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Append<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Decimal>)\n  nameWithType: Queryable.Average(IQueryable<Decimal>)\n  fullName: Queryable.Average(IQueryable<Decimal>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Double>)\n  nameWithType: Queryable.Average(IQueryable<Double>)\n  fullName: Queryable.Average(IQueryable<Double>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int32>)\n  nameWithType: Queryable.Average(IQueryable<Int32>)\n  fullName: Queryable.Average(IQueryable<Int32>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int64>)\n  nameWithType: Queryable.Average(IQueryable<Int64>)\n  fullName: Queryable.Average(IQueryable<Int64>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Decimal>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Decimal>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Double>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Double>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int32>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Int32>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int64>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Int64>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Single>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Single>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Single>)\n  nameWithType: Queryable.Average(IQueryable<Single>)\n  fullName: Queryable.Average(IQueryable<Single>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Cast<TResult>(IQueryable)\n  nameWithType: Queryable.Cast<TResult>(IQueryable)\n  fullName: Queryable.Cast<TResult>(IQueryable)\n- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Count<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)\n  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAt<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.First<TSource>(IQueryable<TSource>)\n  fullName: Queryable.First<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Last<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>)\n  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Max<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Max<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Min<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Min<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OfType<TResult>(IQueryable)\n  nameWithType: Queryable.OfType<TResult>(IQueryable)\n  fullName: Queryable.OfType<TResult>(IQueryable)\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Prepend<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Reverse<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Reverse<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Reverse<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Single<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Skip<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipLast<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Decimal>)\n  nameWithType: Queryable.Sum(IQueryable<Decimal>)\n  fullName: Queryable.Sum(IQueryable<Decimal>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Double>)\n  nameWithType: Queryable.Sum(IQueryable<Double>)\n  fullName: Queryable.Sum(IQueryable<Double>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int32>)\n  nameWithType: Queryable.Sum(IQueryable<Int32>)\n  fullName: Queryable.Sum(IQueryable<Int32>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int64>)\n  nameWithType: Queryable.Sum(IQueryable<Int64>)\n  fullName: Queryable.Sum(IQueryable<Int64>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Double>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Double>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int32>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Int32>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int64>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Int64>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Single>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Single>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Single>)\n  nameWithType: Queryable.Sum(IQueryable<Single>)\n  fullName: Queryable.Sum(IQueryable<Single>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Take<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.Take<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.Take<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeLast<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n  nameWithType: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n  fullName: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n- uid: System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)\n  parent: System.Web.UI.WebControls.QueryExtensions\n  isExternal: false\n  name: SortBy<T>(IQueryable<T>, String)\n  nameWithType: QueryExtensions.SortBy<T>(IQueryable<T>, String)\n  fullName: QueryExtensions.SortBy<T>(IQueryable<T>, String)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{TEntity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TEntity>\n  nameWithType: IEnumerable<TEntity>\n  fullName: System.Collections.Generic.IEnumerable<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.IObjectSet`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: IObjectSet<TEntity>\n  nameWithType: IObjectSet<TEntity>\n  fullName: System.Data.Objects.IObjectSet<TEntity>\n- uid: System.Linq.IQueryable`1\n  name: IQueryable<T>\n  nameWithType: IQueryable<T>\n  fullName: System.Linq.IQueryable<T>\n- uid: System.Linq.IQueryable{TEntity}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TEntity>\n  nameWithType: IQueryable<TEntity>\n  fullName: System.Linq.IQueryable<TEntity>\n  spec.csharp:\n  - uid: System.Linq.IQueryable`1\n    name: IQueryable\n    nameWithType: IQueryable\n    fullName: System.Linq.IQueryable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}