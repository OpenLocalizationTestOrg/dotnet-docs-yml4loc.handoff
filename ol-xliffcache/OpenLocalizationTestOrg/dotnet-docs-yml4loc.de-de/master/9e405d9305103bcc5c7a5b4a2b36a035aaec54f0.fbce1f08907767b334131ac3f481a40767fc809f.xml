{"nodes":[{"content":"Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's subject key identifier extension.","nodes":[{"pos":[0,198],"content":"Represents a key identifier clause that identifies a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> security token using the X.509 certificate's subject key identifier extension.","source":"Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's subject key identifier extension."}],"pos":[1231,1430],"yaml":true},{"content":"Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.  \n  \n [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.  \n  \n-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \n  \n-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \n  \n-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  \n  \n <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>","nodes":[{"pos":[0,1000],"content":"Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.","nodes":[{"content":"Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.","pos":[0,1000],"nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.","pos":[0,166],"source":"Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created."},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[167,312]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.","pos":[313,535]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[536,616]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&gt;</ph> class to reference a <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security token using the X.509 certificate's subject key identifier extension.","pos":[617,846],"source":" Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A&gt;</ph> method returns the subject key identifier extension.","pos":[847,1000],"source":" The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension."}]}]},{"pos":[1007,1186],"content":"<ph id=\"ph1\">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> supports the following types of security token references for <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.","source":"[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens."},{"pos":[1196,1266],"content":"<xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>","nodes":[]},{"pos":[1276,1341],"content":"<xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>","nodes":[]},{"pos":[1351,1416],"content":"<xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","nodes":[]},{"pos":[1423,1491],"content":"<xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>","nodes":[]}],"pos":[1441,2945],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> class using the specified subject key identifier.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified subject key identifier.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> class using the specified subject key identifier."}],"pos":[5579,5743],"yaml":true},{"content":"<code>certificateSubject</code> is `null`.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;certificateSubject&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificateSubject</code> is `null`."}],"pos":[6105,6148],"yaml":true},{"content":"Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.","nodes":[{"pos":[0,111],"content":"Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.","nodes":[{"content":"Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.","pos":[0,111]}]}],"pos":[7495,7607],"yaml":true},{"content":"A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension.","nodes":[{"pos":[0,182],"content":"A key identifier clause can be created when the <ph id=\"ph1\">`certificate`</ph> parameter contains the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension&gt;</ph> extension.","source":"A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension."}],"pos":[7618,7801],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> that contains the X.509 certificate.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate."}],"pos":[8067,8191],"yaml":true},{"content":"`true` if a key identifier clause can be created for <code>certificate</code>; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if a key identifier clause can be created for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a key identifier clause can be created for <code>certificate</code>; otherwise, `false`."}],"pos":[8249,8350],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[8552,8588],"yaml":true},{"content":"Gets the subject key identifier.","nodes":[{"pos":[0,32],"content":"Gets the subject key identifier.","nodes":[{"content":"Gets the subject key identifier.","pos":[0,32]}]}],"pos":[9779,9812],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the subject key identifier.","nodes":[{"pos":[0,86],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the subject key identifier.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the subject key identifier."}],"pos":[9957,10044],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.","nodes":[{"pos":[0,147],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.","pos":[0,147]}]}],"pos":[11472,11620],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.","nodes":[{"pos":[0,229],"content":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A&gt;</ph> method compares the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension&gt;</ph> extension for the two X.509 certificates.","pos":[0,229],"source":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates."}]}],"pos":[11631,11861],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare.","nodes":[{"pos":[0,134],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> that contains the X.509 certificate to compare.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare."}],"pos":[12114,12249],"yaml":true},{"content":"`true` if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> has the same subject key identifier as the current instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, `false`."}],"pos":[12307,12425],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[12621,12657],"yaml":true},{"content":"Returns a string that represents the current object.","nodes":[{"pos":[0,52],"content":"Returns a string that represents the current object.","nodes":[{"content":"Returns a string that represents the current object.","pos":[0,52]}]}],"pos":[13734,13787],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> method returns the subject key identifier.","nodes":[{"pos":[0,124],"content":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> method returns the subject key identifier.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A&gt;</ph> method returns the subject key identifier.","pos":[0,124],"source":"The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> method returns the subject key identifier."}]}],"pos":[13798,13923],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the current object.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current object.","source":"A <xref href=\"System.String\"></xref> that represents the current object."}],"pos":[14058,14131],"yaml":true},{"content":"Creates a key identifier clause using the specified X.509 certificate.","nodes":[{"pos":[0,70],"content":"Creates a key identifier clause using the specified X.509 certificate.","nodes":[{"content":"Creates a key identifier clause using the specified X.509 certificate.","pos":[0,70]}]}],"pos":[15852,15923],"yaml":true},{"content":"A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.","nodes":[{"pos":[0,173],"content":"A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;</ph> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.","pos":[0,173],"source":"A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier."}]}],"pos":[15934,16108],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to create the key identifier clause for.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> to create the key identifier clause for.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to create the key identifier clause for."}],"pos":[16445,16573],"yaml":true},{"content":"`true` when a key identifier clause can be created for the specified X.509 certificate; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a key identifier clause can be created for the specified X.509 certificate; otherwise, `false`."}],"pos":[16754,16864],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[17066,17102],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  commentId: T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  id: X509SubjectKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  langs:\n  - csharp\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a key identifier clause that identifies a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token using the X.509 certificate's subject key identifier extension.\n  remarks: \"Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.  \\n  \\n [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  \\n  \\n <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>\"\n  syntax:\n    content: 'public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: X509SubjectKeyIdentifierClause(Byte[])\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  fullName: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\"></xref> class using the specified subject key identifier.\n  syntax:\n    content: public X509SubjectKeyIdentifierClause (byte[] certificateSubject);\n    parameters:\n    - id: ski\n      type: System.Byte[]\n      description: ''\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificateSubject</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: CanCreateFrom(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  fullName: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.\n  remarks: A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension.\n  syntax:\n    content: public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate.\n    return:\n      type: System.Boolean\n      description: '`true` if a key identifier clause can be created for <code>certificate</code>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  id: GetX509SubjectKeyIdentifier\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetX509SubjectKeyIdentifier()\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  fullName: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the subject key identifier.\n  syntax:\n    content: public byte[] GetX509SubjectKeyIdentifier ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the subject key identifier.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.\n  syntax:\n    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that contains the X.509 certificate to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  id: ToString\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: X509SubjectKeyIdentifierClause.ToString()\n  fullName: X509SubjectKeyIdentifierClause.ToString()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a string that represents the current object.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> method returns the subject key identifier.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the current object.\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  commentId: M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  id: TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  langs:\n  - csharp\n  name: TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n  fullName: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a key identifier clause using the specified X.509 certificate.\n  remarks: A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.\n  syntax:\n    content: public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause clause);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to create the key identifier clause for.\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` when a key identifier clause can be created for the specified X.509 certificate; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause(Byte[])\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n  fullName: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: CanCreateFrom(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n  fullName: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: GetX509SubjectKeyIdentifier()\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n  fullName: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: Matches(X509Certificate2)\n  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n  fullName: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: ToString()\n  nameWithType: X509SubjectKeyIdentifierClause.ToString()\n  fullName: X509SubjectKeyIdentifierClause.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n  fullName: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2, X509SubjectKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: X509SubjectKeyIdentifierClause\n  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause\n  fullName: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: CanCreateFrom\n  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom\n  fullName: X509SubjectKeyIdentifierClause.CanCreateFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: GetX509SubjectKeyIdentifier\n  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  fullName: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: X509SubjectKeyIdentifierClause.Matches\n  fullName: X509SubjectKeyIdentifierClause.Matches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: ToString\n  nameWithType: X509SubjectKeyIdentifierClause.ToString\n  fullName: X509SubjectKeyIdentifierClause.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*\n  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  isExternal: false\n  name: TryCreateFrom\n  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom\n  fullName: X509SubjectKeyIdentifierClause.TryCreateFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SubjectKeyIdentifierClause.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifierClause.CanCreateKey\n  fullName: SecurityKeyIdentifierClause.CanCreateKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: ClauseType\n  nameWithType: SecurityKeyIdentifierClause.ClauseType\n  fullName: SecurityKeyIdentifierClause.ClauseType\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CreateKey()\n  nameWithType: SecurityKeyIdentifierClause.CreateKey()\n  fullName: SecurityKeyIdentifierClause.CreateKey()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: DerivationLength\n  nameWithType: SecurityKeyIdentifierClause.DerivationLength\n  fullName: SecurityKeyIdentifierClause.DerivationLength\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: GetDerivationNonce()\n  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()\n  fullName: SecurityKeyIdentifierClause.GetDerivationNonce()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: Id\n  nameWithType: SecurityKeyIdentifierClause.Id\n  fullName: SecurityKeyIdentifierClause.Id\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: BinaryKeyIdentifierClause.GetBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[])\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n"}