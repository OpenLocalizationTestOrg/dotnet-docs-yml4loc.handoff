{"nodes":[{"content":"Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.","nodes":[{"pos":[0,131],"content":"Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.","nodes":[{"content":"Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.","pos":[0,131]}]}],"pos":[1207,1339],"yaml":true},{"content":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","nodes":[{"pos":[0,582],"content":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","nodes":[{"content":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","pos":[0,582],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver&gt;</ph> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.","pos":[0,194],"source":"A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver&gt;</ph> wraps several <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver&gt;</ph> objects.","pos":[195,339],"source":" The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects."},{"content":"The token resolvers to be wrapped are specified in the constructor.","pos":[340,407]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A&gt;</ph> property returns the collection of token resolvers that are wrapped by the aggregate resolver.","pos":[408,582],"source":" The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver."}]}]}],"pos":[1350,1933],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"></xref> class by using the specified list of token resolvers.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"&gt;&lt;/xref&gt;</ph> class by using the specified list of token resolvers.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"></xref> class by using the specified list of token resolvers."}],"pos":[5069,5229],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.","nodes":[{"pos":[0,147],"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A&gt;</ph> property is initialized with the specified list of token resolvers.","pos":[0,147],"source":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers."}]}],"pos":[5240,5388],"yaml":true,"extradata":"MT"},{"content":"A list of the security token resolvers to be wrapped by this instance.","nodes":[{"pos":[0,70],"content":"A list of the security token resolvers to be wrapped by this instance.","nodes":[{"content":"A list of the security token resolvers to be wrapped by this instance.","pos":[0,70]}]}],"pos":[5717,5788],"yaml":true},{"content":"<code>tokenResolvers</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;tokenResolvers&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>tokenResolvers</code> is `null`."}],"pos":[5974,6013],"yaml":true},{"content":"Gets the security token resolvers that are wrapped by this instance.","nodes":[{"pos":[0,68],"content":"Gets the security token resolvers that are wrapped by this instance.","nodes":[{"content":"Gets the security token resolvers that are wrapped by this instance.","pos":[0,68]}]}],"pos":[7036,7105],"yaml":true},{"content":"A read-only collection that contains the token resolvers that are wrapped by this instance.","nodes":[{"pos":[0,91],"content":"A read-only collection that contains the token resolvers that are wrapped by this instance.","nodes":[{"content":"A read-only collection that contains the token resolvers that are wrapped by this instance.","pos":[0,91]}]}],"pos":[7410,7502],"yaml":true},{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","nodes":[{"pos":[0,87],"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","pos":[0,87]}]}],"pos":[9105,9193],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.","nodes":[{"pos":[0,294],"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A&gt;</ph> methods.","pos":[0,294],"source":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods."}]}],"pos":[9204,9499],"yaml":true,"extradata":"MT"},{"content":"The key identifier clause to retrieve the key for.","nodes":[{"pos":[0,50],"content":"The key identifier clause to retrieve the key for.","nodes":[{"content":"The key identifier clause to retrieve the key for.","pos":[0,50]}]}],"pos":[9833,9884],"yaml":true},{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"pos":[0,141],"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","pos":[0,141],"nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause.","pos":[0,101]},{"content":"This parameter is passed uninitialized.","pos":[102,141]}]}]}],"pos":[9969,10111],"yaml":true},{"content":"`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> when a key can be retrieved for the specified key identifier clause; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`."}],"pos":[10169,10267],"yaml":true},{"content":"<code>keyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifierClause</code> is `null`."}],"pos":[10473,10517],"yaml":true},{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","nodes":[{"pos":[0,142],"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","nodes":[{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","pos":[0,142]}]}],"pos":[11964,12107],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","nodes":[{"pos":[0,276],"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt;</ph> methods.","pos":[0,276],"source":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]}],"pos":[12118,12395],"yaml":true,"extradata":"MT"},{"content":"The security key identifier to retrieve the token for.","nodes":[{"pos":[0,54],"content":"The security key identifier to retrieve the token for.","nodes":[{"content":"The security key identifier to retrieve the token for.","pos":[0,54]}]}],"pos":[12703,12758],"yaml":true},{"content":"When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.","nodes":[{"pos":[0,128],"content":"When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.","pos":[0,128],"nodes":[{"content":"When this method returns, contains a token that represents the specified key identifier.","pos":[0,88]},{"content":"This parameter is passed uninitialized.","pos":[89,128]}]}]}],"pos":[12847,12976],"yaml":true},{"content":"`true` when a token can be retrieved for the specified key identifier; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> when a token can be retrieved for the specified key identifier; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a token can be retrieved for the specified key identifier; otherwise, `false`."}],"pos":[13034,13127],"yaml":true},{"content":"<code>keyIdentifier</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifier</code> is `null`."}],"pos":[13327,13365],"yaml":true},{"content":"Attempts to resolve the security token that matches the specified key identifier clause.","nodes":[{"pos":[0,88],"content":"Attempts to resolve the security token that matches the specified key identifier clause.","nodes":[{"content":"Attempts to resolve the security token that matches the specified key identifier clause.","pos":[0,88]}]}],"pos":[14848,14937],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","nodes":[{"pos":[0,276],"content":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A&gt;</ph> methods.","pos":[0,276],"source":"The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods."}]}],"pos":[14948,15225],"yaml":true,"extradata":"MT"},{"content":"The key identifier clause to create a security token for.","nodes":[{"pos":[0,57],"content":"The key identifier clause to create a security token for.","nodes":[{"content":"The key identifier clause to create a security token for.","pos":[0,57]}]}],"pos":[15557,15615],"yaml":true},{"content":"When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"pos":[0,144],"content":"When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.","pos":[0,144],"nodes":[{"content":"When this method returns, contains a security token that represents the specified key identifier clause.","pos":[0,104]},{"content":"This parameter is passed uninitialized.","pos":[105,144]}]}]}],"pos":[15704,15849],"yaml":true},{"content":"`true` when a security token can be retrieved for the specified key identifier clause; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> when a security token can be retrieved for the specified key identifier clause; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a security token can be retrieved for the specified key identifier clause; otherwise, `false`."}],"pos":[15907,16016],"yaml":true},{"content":"<code>keyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifierClause</code> is `null`."}],"pos":[16216,16260],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver\n  commentId: T:System.IdentityModel.Tokens.AggregateTokenResolver\n  id: AggregateTokenResolver\n  children:\n  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: AggregateTokenResolver\n  nameWithType: AggregateTokenResolver\n  fullName: System.IdentityModel.Tokens.AggregateTokenResolver\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.\n  remarks: A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects. The token resolvers to be wrapped are specified in the constructor. The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.\n  syntax:\n    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  commentId: M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  fullName: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AggregateTokenResolver\"></xref> class by using the specified list of token resolvers.\n  remarks: The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.\n  syntax:\n    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);\n    parameters:\n    - id: tokenResolvers\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}\n      description: A list of the security token resolvers to be wrapped by this instance.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenResolvers</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  commentId: P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  id: TokenResolvers\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n  fullName: AggregateTokenResolver.TokenResolvers\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the security token resolvers that are wrapped by this instance.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}\n      description: A read-only collection that contains the token resolvers that are wrapped by this instance.\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  commentId: M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the key that is referenced in the specified key identifier clause.\n  remarks: The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to retrieve the key for.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.\n  remarks: The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The security key identifier to retrieve the token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a token that represents the specified key identifier. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` when a token can be retrieved for the specified key identifier; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to resolve the security token that matches the specified key identifier clause.\n  remarks: The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a security token that represents the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` when a security token can be retrieved for the specified key identifier clause; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n  fullName: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<SecurityTokenResolver>\n  nameWithType: IEnumerable<SecurityTokenResolver>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Selectors.SecurityTokenResolver\n    name: SecurityTokenResolver\n    nameWithType: SecurityTokenResolver\n    fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n  fullName: AggregateTokenResolver.TokenResolvers\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<SecurityTokenResolver>\n  nameWithType: ReadOnlyCollection<SecurityTokenResolver>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Selectors.SecurityTokenResolver\n    name: SecurityTokenResolver\n    nameWithType: SecurityTokenResolver\n    fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: AggregateTokenResolver\n  nameWithType: AggregateTokenResolver.AggregateTokenResolver\n  fullName: AggregateTokenResolver.AggregateTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TokenResolvers\n  nameWithType: AggregateTokenResolver.TokenResolvers\n  fullName: AggregateTokenResolver.TokenResolvers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore\n  fullName: AggregateTokenResolver.TryResolveSecurityKeyCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Tokens.AggregateTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: AggregateTokenResolver.TryResolveTokenCore\n  fullName: AggregateTokenResolver.TryResolveTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/AggregateTokenResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  fullName: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n"}