<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b332e0a6c1700e90221c61a8c51400a4ca2b19f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IO.FileShare.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">393eb6d95d3c9b74aa6da775117cf585ae40e374</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7277f73bdb38bf58abab145946795a9891797a5b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains constants for controlling the kind of access other <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> objects can have to the same file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical use of this enumeration is to define whether two processes can simultaneously read from the same file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.FileShare.Read&gt;</ph> parameter is specified in some of the constructors for <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>, and in some of the <ph id="ph4">`Open`</ph> methods of <ph id="ph5">&lt;xref:System.IO.File&gt;</ph> and <ph id="ph6">&lt;xref:System.IO.FileInfo&gt;</ph> to control how a file is opened.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Allows subsequent deleting of a file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Makes the file handle inheritable by child processes.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is not directly supported by Win32.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Declines sharing of the current file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Any request to open the file (by this process or another process) will fail until the file is closed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Allows subsequent opening of the file for reading.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Allows subsequent opening of the file for reading or writing.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Allows subsequent opening of the file for writing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>