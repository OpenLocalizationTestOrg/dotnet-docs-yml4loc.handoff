<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1af2f973fe8a63f93887a6c0529eac042c6e2599</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.Adapters.ControlAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7e8e3294061a032d358147ae1a39a2bc99d2613</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">000b2a348687163a4cbbcaca373a0643c8859d85</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Customizes rendering for the derived control to which the adapter is attached, to modify the default markup or behavior for specific browsers, and is the base class from which all control adapters inherit.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control adapters are components that override certain <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> class methods and events in its execution lifecycle to allow browser or markup-specific handling.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework maps a single derived control adapter to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object for each client request.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter modifies a control for a specific browser or class of browsers or acts as an arbitrary filter on some capability.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the adapter is defined by the markup language that the browser uses (for example, XHTML or HTML 3.2).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Much of the adaptability in rendering behavior can be encapsulated in the specialized classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is likely that a single adapter can be used for a number of browser class behaviors or that inclusion of the adaptability in the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classes could make the use of a control adapter unnecessary.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter for a control class applies to all controls that inherit from that class, unless more specialized adapters are present.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an adapter for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph> class can be used for all <ph id="ph2">`Validator`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adapters typically do not inherit directly from the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> class, but from one of the target-specific adapter base classes that provide additional functionality specific to the control type and target browser or the particular rendering required.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls themselves do not necessarily require an adapter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If controls are extended through composition, generally the child control adapters are sufficient.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each control has explicit mappings to adapters through the .browser definition files.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, any access to the <ph id="ph1">&lt;xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName&gt;</ph> property uses the <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object extracted from the browser definition files to perform the lookup for the mapping of the adapter to control.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>During processing, the .NET Framework intercepts calls to the overridable methods of a control that could be target-specific.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a control adapter is attached, the .NET Framework calls the associated adapter methods.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter performs rendering for the control through the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If overridden, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> potentially should not call the base class implementation because that performs a call back on the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might cause the rendering to occur twice, once by the adapter and once by the control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> base method calls back on the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt;</ph> method of the control.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, if you override <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>, you should not call the base class implementation unless the rendering you implement is in addition to that provided by <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt;</ph> of the control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must ensure that the .NET Framework performs interception for adapters of the child controls.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by calling the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> base method, which calls the <ph id="ph2">&lt;xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName&gt;</ph> method of the control, from your <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> override.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> methods are called by the control immediately before and after (respectively) the control calls the <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If pre- and post-rendering are the only browser-specific processing tasks required, using <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> might make it unnecessary to override <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior of the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> methods is to call the corresponding methods of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain its own state information, a control adapter can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> are called when the private control and view states are saved and loaded, respectively.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> base methods call back on the corresponding <ph id="ph5">&lt;xref:System.Web.UI.Control&gt;</ph> class methods.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, any of these <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> methods that are overridden must call their base methods; otherwise, the event associated with the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class method will not be raised.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls and adapters optionally implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interfaces.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework determines whether an adapter exists and whether the adapter implements these interfaces.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it does, the adapter should override the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> methods, as necessary.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the postback data is not recognized in the adapter, it must call back on the control to process it.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent event handlers also must call back on the control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework internally constructs this adapter when it creates the corresponding <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Called prior to the rendering of a control.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In a derived adapter class, generates opening tags that are required by a specific target but not needed by HTML browsers.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method is called just before the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method, and is used to perform target-specific preprocessing before the rendering of the control.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method in combination with the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method to ensure opening and closing tag consistency.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> containing methods to render the target-specific output.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a reference to the browser capabilities of the client making the current HTTP request.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object determines the client browser capabilities from the <ph id="ph2">&lt;xref:System.Web.HttpBrowserCapabilities&gt;</ph> object that is returned by the <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object to render browser-specific markup or otherwise modify the behavior of the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpBrowserCapabilities"&gt;&lt;/xref&gt;</ph> specifying client browser and markup capabilities.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a reference to the control to which this control adapter is attached.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a derived control adapter is attached to a control, the .NET Framework calls certain adapter members instead of the control members.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.Control"&gt;&lt;/xref&gt;</ph> to which this <ph id="ph2">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;&lt;/xref&gt;</ph> is attached.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Creates the target-specific child controls for a composite control.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a derived control adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> method is overridden, the override is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A&gt;</ph> can be used to create a target-specific child control set.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about combining controls to create a new control, see <bpt id="p1">[</bpt>Composite Controls<ept id="p1">](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Called after the rendering of a control.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In a derived adapter class, generates closing tags that are required by a specific target but not needed by HTML browsers.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method is called just after the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method, and is used to perform target-specific postprocessing after the rendering of the control.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A&gt;</ph> method in combination with the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A&gt;</ph> method to ensure opening and closing tag consistency.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> containing methods to render the target-specific output.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Loads adapter control state information that was saved by <ph id="ph1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState"&gt;&lt;/xref&gt;</ph> during a previous request to the page where the control associated with this control adapter resides.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control state is the essential state information needed even if view state is disabled.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an adapter needs to maintain its own control state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a composite control consisting of a large textual display and a group of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controls might render as a single view on desktop computer browsers.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>On other browsers, it might split its rendering—one view for the textual display and the other for the radio button group.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter would need to maintain its own target-specific information about the currently active view.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName&gt;</ph> method, in the <ph id="ph3">`LoadState`</ph> lifecycle stage.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter control state is separate and in addition to the control state of the control.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the adapter's control state information as a <ph id="ph2">&lt;xref href="System.Web.UI.StateBag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Loads adapter view state information that was saved by <ph id="ph1">&lt;xref href="System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState"&gt;&lt;/xref&gt;</ph> during a previous request to the page where the control associated with this control adapter resides.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an adapter needs to maintain its own view state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the view state of the associated control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter would need to maintain the data for the views that are not currently active in view state.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> method is called immediately before the <ph id="ph2">&lt;xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName&gt;</ph> method in the <ph id="ph3">`LoadState`</ph> lifecycle stage.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter view state is separate and in addition to the view state of the control.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the adapter view state information as a <ph id="ph2">&lt;xref href="System.Web.UI.StateBag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.Control.OnInit(System.EventArgs)"&gt;&lt;/xref&gt;</ph> method for the associated control.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A&gt;</ph> to perform target-specific processing in the <ph id="ph2">`Initialize`</ph> stage of the control lifecycle.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, these are functions that are performed when a control is created.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.Control.OnLoad(System.EventArgs)"&gt;&lt;/xref&gt;</ph> method for the associated control.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A&gt;</ph> method to perform target-specific processing in the <ph id="ph2">`Load`</ph> stage of the control lifecycle.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, these are functions that should be performed for each client request.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.Control.OnPreRender(System.EventArgs)"&gt;&lt;/xref&gt;</ph> method for the associated control.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A&gt;</ph> method to perform target-specific processing in the <ph id="ph2">`PreRender`</ph> stage of the control lifecycle.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, these are functions that immediately precede rendering of the control output.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.Control.OnUnload(System.EventArgs)"&gt;&lt;/xref&gt;</ph> method for the associated control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is an adapter attached to a <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> method is overridden, the override method is called instead of the <ph id="ph3">&lt;xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A&gt;</ph> method to do target-specific processing in the <ph id="ph2">`Unload`</ph> stage of the control lifecycle.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, these are cleanup functions that precede disposition of the control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets a reference to the page where the control associated with this adapter resides.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Page%2A&gt;</ph> property provides access to the <ph id="ph2">&lt;xref:System.Web.UI.Page?displayProperty=fullName&gt;</ph> object where the control is situated.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.Page"&gt;&lt;/xref&gt;</ph> that provides access to the page instance where the associated control is situated.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets a reference to the page adapter for the page where the associated control resides.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> property provides access to the <ph id="ph2">&lt;xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName&gt;</ph> object for the <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> object where the <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> object associated with the current <ph id="ph5">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object is situated.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A&gt;</ph> property can be used to access other items at the page adapter level, such as common target-specific functions that could apply to several control types on the page.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.Adapters.PageAdapter"&gt;&lt;/xref&gt;</ph> for the page where the control associated with the current <ph id="ph2">&lt;xref href="System.Web.UI.Adapters.ControlAdapter"&gt;&lt;/xref&gt;</ph> is situated.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Generates the target-specific markup for the control to which the control adapter is attached.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method to generate target-specific markup to send to the client browser.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.Render%2A&gt;</ph> method is called in place of the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A?displayProperty=fullName&gt;</ph> method if a <ph id="ph3">&lt;xref:System.Web.UI.Adapters.ControlAdapter&gt;</ph> object is attached to a <ph id="ph4">&lt;xref:System.Web.UI.Control&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> to use to render the target-specific output.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Generates the target-specific markup for the child controls in a composite control to which the control adapter is attached.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A&gt;</ph> method when it is necessary to generate target-specific markup for the child control set of a composite control, in addition to the markup for the individual child controls.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> to use to render the target-specific output.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Saves control state information for the control adapter.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control state is the essential state information needed even if view state is disabled.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an adapter needs to maintain its own control state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a composite control consisting of a large textual display and a group of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RadioButton&gt;</ph> controls might render as a single view on desktop computer browsers.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>On other browsers, it might split its rendering—one view for the textual display and the other for the radio button group.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter would need to maintain its own target-specific information about the currently active view.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName&gt;</ph> method in the <ph id="ph3">`SaveState`</ph> lifecycle stage.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter control state is separate and in addition to the control state of the control.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the adapter's control state information as a <ph id="ph2">&lt;xref href="System.Web.UI.StateBag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Saves view state information for the control adapter.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an adapter needs to maintain its own view state information, it can override the <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the associated view state of the control.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter would need to maintain the data for the views that are not currently active in view state.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A&gt;</ph> method is called immediately before the <ph id="ph2">&lt;xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName&gt;</ph> method in the <ph id="ph3">`SaveState`</ph> lifecycle stage.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The adapter view state is separate and in addition to the view state of the control.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the adapter view state information as a <ph id="ph2">&lt;xref href="System.Web.UI.StateBag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>