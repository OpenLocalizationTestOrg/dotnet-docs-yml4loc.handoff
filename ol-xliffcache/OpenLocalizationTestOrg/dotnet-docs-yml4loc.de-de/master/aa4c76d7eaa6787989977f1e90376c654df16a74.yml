### YamlMime:ManagedReference
items:
- uid: System.Data.Services.Client.ChangeOperationResponse
  commentId: T:System.Data.Services.Client.ChangeOperationResponse
  id: ChangeOperationResponse
  children:
  - System.Data.Services.Client.ChangeOperationResponse.Descriptor
  langs:
  - csharp
  name: ChangeOperationResponse
  nameWithType: ChangeOperationResponse
  fullName: System.Data.Services.Client.ChangeOperationResponse
  type: Class
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: Results returned after a call to <xref href="System.Data.Services.Client.DataServiceContext.SaveChanges"></xref> when enumerating operation responses returned by the <xref href="System.Data.Services.Client.DataServiceResponse"></xref> class.
  remarks: "<xref:System.Data.Services.Client.ChangeOperationResponse> objects are not intended to be constructed directly by a user of this library. Instead, references are returned when enumerating the operation responses returned via the enumerator on the <xref:System.Data.Services.Client.DataServiceResponse> class.  \n  \n <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> submits pending changes to the data service collected by the <xref:System.Data.Services.Client.DataServiceContext> since the last call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. Changes are added to the context by calling <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A>, <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>, and similar methods.  \n  \n <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> returns a <xref:System.Data.Services.Client.DataServiceResponse> that represents the response to all operations sent to the data service. The <xref:System.Data.Services.Client.DataServiceResponse> object includes a sequence of <xref:System.Data.Services.Client.ChangeOperationResponse> objects that, in turn, contain a sequence of <xref:System.Data.Services.Client.EntityDescriptor> or <xref:System.Data.Services.Client.LinkDescriptor> instances that represent the changes that were persisted or attempted."
  example:
  - "The following code shows how to process the results of a call to <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  \n  \n```  \nDataServiceContext service = new DataServiceContext(new Uri(\"http://myserviceroot\"));  \n  \n// Do insert, update, delete, or attach operations.  \n  \nDataServiceResponse dsr;  \n  \ntry  \n{  \n    dsr = service.SaveChanges(SaveChangesOptions.Batch);    \n   // Or service.SaveChanges(SaveChangesOptions.ContinueOnError);   \n   //Or service.SaveChanges();  \n   // If there are no errors during save changes, process the results:  \n  \n    if (dsr.IsBatchResponse)  \n    {  \n           /*inspect HTTP artifacts associated with the entire batch:  \n                             dsr.BatchHeaders, dsr.BatchStatusCode*/ }  \n  \n    foreach (ChangeOperationResponse cor in dsr)  \n    {  \n  \n            if (cor.Descriptor is EntityDescriptor)  \n            {  \n                EntityDescriptor ed = (EntityDescriptor)cor.Descriptor;  \n                // This should be the case if  \n                // SaveChanges did not throw an exception.    \n  \n                // After an entity is processed by SaveChanges,  \n                // it is always moved to the unchanged state.  \n                System.Diagnostics.Debug.Assert(  \n                           ed.State == EntityStates.Unchanged);    \n                // This shows that the state should be unchanged if  \n                // the result is success.  \n  \n                //process the entity in the response payload: ed.Entity  \n            }  \n            else if (cor.Descriptor is LinkDescriptor)  \n            {  \n                LinkDescriptor ld = (LinkDescriptor)cor.Descriptor;  \n               // This should be the case if SaveChanges did not throw an exception.  \n  \n               // After an entity is processed by SaveChanges it  \n               // is always moved to the unchanged state.  \n                System.Diagnostics.Debug.Assert(  \n                            ld.State == EntityStates.Unchanged);    \n                // The state should be unchanged if the result is success.  \n  \n                //process the link in the response payload: ld.Source,  \n                // ld.SourceProperty, or ld.Target.  \n            }  \n     }  \n  \n}  \ncatch (DataServiceSaveException se)  \n{  \n    // Error while saving changes  \n    dsr = se.Response;  \n  \n    if (dsr.IsBatchResponse)   \n    {   \n        /*inspect HTTP artifacts associated with the entire batch:  \n             dsr.BatchHeaders, dsr.BatchStatusCode*/   \n}      \n}  \n  \n    foreach (ChangeOperationResponse cor in dsr)  \n    {  \n        if (cor.Error != null)  \n        {  \n            //process error  \n        }  \n        else  \n        {  \n            // same success case processing as in the loop over DSRs results in   \n            // the try block. You could put that processing in a method   \n            // and call it from here.      \n        }  \n    }  \n  \n}  \n  \n catch(Exception)  \n {  \n    // Error while saving changes, but not thrown by the client library.  \n  \n    // Process ArgumentException, InvalidOperationException, or similar.  \n}  \n}  \n  \n```"
  syntax:
    content: 'public sealed class ChangeOperationResponse : System.Data.Services.Client.OperationResponse'
  inheritance:
  - System.Object
  - System.Data.Services.Client.OperationResponse
  implements: []
  inheritedMembers:
  - System.Data.Services.Client.OperationResponse.Error
  - System.Data.Services.Client.OperationResponse.Headers
  - System.Data.Services.Client.OperationResponse.StatusCode
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services.Client/ChangeOperationResponse.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Services.Client.ChangeOperationResponse.Descriptor
  commentId: P:System.Data.Services.Client.ChangeOperationResponse.Descriptor
  id: Descriptor
  parent: System.Data.Services.Client.ChangeOperationResponse
  langs:
  - csharp
  name: Descriptor
  nameWithType: ChangeOperationResponse.Descriptor
  fullName: ChangeOperationResponse.Descriptor
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: Gets the <xref href="System.Data.Services.Client.EntityDescriptor"></xref> or <xref href="System.Data.Services.Client.LinkDescriptor"></xref> modified by a change operation.
  syntax:
    content: public System.Data.Services.Client.Descriptor Descriptor { get; }
    return:
      type: System.Data.Services.Client.Descriptor
      description: An <xref href="System.Data.Services.Client.EntityDescriptor"></xref> or <xref href="System.Data.Services.Client.LinkDescriptor"></xref> modified by a change operation.
  overload: System.Data.Services.Client.ChangeOperationResponse.Descriptor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services.Client/ChangeOperationResponse.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Data.Services.Client.OperationResponse
  parent: System.Data.Services.Client
  isExternal: false
  name: OperationResponse
  nameWithType: OperationResponse
  fullName: System.Data.Services.Client.OperationResponse
- uid: System.Data.Services.Client.ChangeOperationResponse.Descriptor
  parent: System.Data.Services.Client.ChangeOperationResponse
  isExternal: false
  name: Descriptor
  nameWithType: ChangeOperationResponse.Descriptor
  fullName: ChangeOperationResponse.Descriptor
- uid: System.Data.Services.Client.Descriptor
  parent: System.Data.Services.Client
  isExternal: false
  name: Descriptor
  nameWithType: Descriptor
  fullName: System.Data.Services.Client.Descriptor
- uid: System.Data.Services.Client.ChangeOperationResponse.Descriptor*
  parent: System.Data.Services.Client.ChangeOperationResponse
  isExternal: false
  name: Descriptor
  nameWithType: ChangeOperationResponse.Descriptor
  fullName: ChangeOperationResponse.Descriptor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services.Client/ChangeOperationResponse.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Data.Services.Client.OperationResponse.Error
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Error
  nameWithType: OperationResponse.Error
  fullName: OperationResponse.Error
- uid: System.Data.Services.Client.OperationResponse.Headers
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Headers
  nameWithType: OperationResponse.Headers
  fullName: OperationResponse.Headers
- uid: System.Data.Services.Client.OperationResponse.StatusCode
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: StatusCode
  nameWithType: OperationResponse.StatusCode
  fullName: OperationResponse.StatusCode
