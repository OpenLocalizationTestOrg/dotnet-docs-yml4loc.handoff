{"nodes":[{"content":"Provides the base functionality for creating event providers that require buffering.","nodes":[{"pos":[0,84],"content":"Provides the base functionality for creating event providers that require buffering.","nodes":[{"content":"Provides the base functionality for creating event providers that require buffering.","pos":[0,84]}]}],"pos":[1081,1166],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.BufferedWebEventProvider> class to create your own custom buffered provider.  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","nodes":[{"pos":[0,378],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,378],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]}]}]},{"pos":[385,567],"content":"If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.BufferedWebEventProvider> class to create your own custom buffered provider.","nodes":[{"content":"If you want to customize the health-event processing, you can derive from the <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph> class to create your own custom buffered provider.","pos":[0,182],"source":"If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.BufferedWebEventProvider> class to create your own custom buffered provider."}]},{"pos":[575,1085],"content":"[!NOTE]\n In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","leadings":["","> "],"nodes":[{"content":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).","pos":[8,508],"nodes":[{"content":"In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph1\">`healthMonitoring`</ph> configuration section.","pos":[1,210],"source":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[211,311]},{"content":"For an example of creating a custom provider, see <bpt id=\"p1\">[</bpt>How to: Implement the Health Monitoring Custom Provider Example<ept id=\"p1\">](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)</ept>.","pos":[312,500],"source":" For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)."}]}]}],"pos":[1177,2270],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Management.BufferedWebEventProvider\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.BufferedWebEventProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Management.BufferedWebEventProvider\"></xref> class."}],"pos":[6115,6224],"yaml":true},{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.TraceWebEventProvider> object, but you can call this constructor when implementing your own provider type that inherits from this class.","nodes":[{"pos":[0,280],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.TraceWebEventProvider> object, but you can call this constructor when implementing your own provider type that inherits from this class.","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.TraceWebEventProvider> object, but you can call this constructor when implementing your own provider type that inherits from this class.","pos":[0,280],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to instantiate a <ph id=\"ph1\">&lt;xref:System.Web.Management.TraceWebEventProvider&gt;</ph> object, but you can call this constructor when implementing your own provider type that inherits from this class.","pos":[77,280],"source":" You will never use it to instantiate a <xref:System.Web.Management.TraceWebEventProvider> object, but you can call this constructor when implementing your own provider type that inherits from this class."}]}]}],"pos":[6235,6516],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating the buffering mode used by the provider.","nodes":[{"pos":[0,64],"content":"Gets a value indicating the buffering mode used by the provider.","nodes":[{"content":"Gets a value indicating the buffering mode used by the provider.","pos":[0,64]}]}],"pos":[8170,8235],"yaml":true},{"content":"The <xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> property contains the value defined by the `bufferMode` attribute in the `providers` element of the `healthMonitoring` section.  \n  \n The following configuration-file excerpt shows how the name of the buffer mode should be defined in the `healthMonitoring` section.  \n  \n```  \n<bufferModes>  \n  <add name =\"Custom Notification\" />  \n</bufferModes>  \n```","nodes":[{"pos":[0,199],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A&gt;</ph> property contains the value defined by the <ph id=\"ph2\">`bufferMode`</ph> attribute in the <ph id=\"ph3\">`providers`</ph> element of the <ph id=\"ph4\">`healthMonitoring`</ph> section.","source":"The <xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> property contains the value defined by the `bufferMode` attribute in the `providers` element of the `healthMonitoring` section."},{"pos":[206,337],"content":"The following configuration-file excerpt shows how the name of the buffer mode should be defined in the <ph id=\"ph1\">`healthMonitoring`</ph> section.","source":"The following configuration-file excerpt shows how the name of the buffer mode should be defined in the `healthMonitoring` section."}],"pos":[8246,8684],"yaml":true,"extradata":"MT"},{"content":"The name of the buffering mode.","nodes":[{"pos":[0,31],"content":"The name of the buffering mode.","nodes":[{"content":"The name of the buffering mode.","pos":[0,31]}]}],"pos":[9334,9366],"yaml":true},{"content":"Moves the events from the provider's buffer into the event log.","nodes":[{"pos":[0,63],"content":"Moves the events from the provider's buffer into the event log.","nodes":[{"content":"Moves the events from the provider's buffer into the event log.","pos":[0,63]}]}],"pos":[10419,10483],"yaml":true},{"content":"When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.","nodes":[{"pos":[0,273],"content":"When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.","nodes":[{"content":"When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.","pos":[0,273],"nodes":[{"content":"When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer.","pos":[0,201]},{"content":"The time of the last write is reset to the time of the flushing action.","pos":[202,273]}]}]}],"pos":[10494,10768],"yaml":true,"extradata":"MT"},{"content":"Sets the initial values for this object.","nodes":[{"pos":[0,40],"content":"Sets the initial values for this object.","nodes":[{"content":"Sets the initial values for this object.","pos":[0,40]}]}],"pos":[12727,12768],"yaml":true},{"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.BufferedWebEventProvider> with the configuration settings and name specified in the configuration file.","nodes":[{"pos":[0,360],"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.BufferedWebEventProvider> with the configuration settings and name specified in the configuration file.","nodes":[{"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.BufferedWebEventProvider> with the configuration settings and name specified in the configuration file.","pos":[0,360],"nodes":[{"content":"ASP.NET calls the <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A&gt;</ph> method after calling the <ph id=\"ph2\">&lt;xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A&gt;</ph> constructor.","pos":[0,188],"source":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> constructor."},{"content":"This method is called to initialize the <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider&gt;</ph> with the configuration settings and name specified in the configuration file.","pos":[189,360],"source":" This method is called to initialize the <xref:System.Web.Management.BufferedWebEventProvider> with the configuration settings and name specified in the configuration file."}]}]}],"pos":[12779,13140],"yaml":true,"extradata":"MT"},{"content":"The name used in the configuration file to identify this provider.","nodes":[{"pos":[0,66],"content":"The name used in the configuration file to identify this provider.","nodes":[{"content":"The name used in the configuration file to identify this provider.","pos":[0,66]}]}],"pos":[13879,13946],"yaml":true},{"content":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file.","nodes":[{"pos":[0,157],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> that specifies the attributes assigned for this provider in the configuration file.","source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file."}],"pos":[14045,14203],"yaml":true},{"content":"Processes the event passed to the provider.","nodes":[{"pos":[0,43],"content":"Processes the event passed to the provider.","nodes":[{"content":"Processes the event passed to the provider.","pos":[0,43]}]}],"pos":[15442,15486],"yaml":true},{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event. If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.","nodes":[{"pos":[0,215],"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event. If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.","nodes":[{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event. If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.","pos":[0,215],"nodes":[{"content":"This is the method that ASP.NET health monitoring calls to start the processing of the event.","pos":[0,93]},{"content":"If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.","pos":[94,215]}]}]}],"pos":[15497,15713],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebBaseEvent\"&gt;&lt;/xref&gt;</ph> object to process.","source":"The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process."}],"pos":[16466,16545],"yaml":true},{"content":"Processes the buffered events.","nodes":[{"pos":[0,30],"content":"Processes the buffered events.","nodes":[{"content":"Processes the buffered events.","pos":[0,30]}]}],"pos":[17882,17913],"yaml":true},{"content":"The <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> method processes the messages that have been buffered. ASP.NET health monitoring calls the method when the flushing of the buffer is required. The intervals at which flushing is required is determined by the parameter value of the `bufferMode` attribute in the `providers` element in the `healthMonitoring` configuration section.","nodes":[{"pos":[0,408],"content":"The <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> method processes the messages that have been buffered. ASP.NET health monitoring calls the method when the flushing of the buffer is required. The intervals at which flushing is required is determined by the parameter value of the `bufferMode` attribute in the `providers` element in the `healthMonitoring` configuration section.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A&gt;</ph> method processes the messages that have been buffered.","pos":[0,133],"source":"The <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> method processes the messages that have been buffered."},{"content":"ASP.NET health monitoring calls the method when the flushing of the buffer is required.","pos":[134,221]},{"content":"The intervals at which flushing is required is determined by the parameter value of the <ph id=\"ph1\">`bufferMode`</ph> attribute in the <ph id=\"ph2\">`providers`</ph> element in the <ph id=\"ph3\">`healthMonitoring`</ph> configuration section.","pos":[222,408],"source":" The intervals at which flushing is required is determined by the parameter value of the `bufferMode` attribute in the `providers` element in the `healthMonitoring` configuration section."}]}],"pos":[17924,18333],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains buffering information.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventBufferFlushInfo\"&gt;&lt;/xref&gt;</ph> that contains buffering information.","source":"A <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains buffering information."}],"pos":[19114,19220],"yaml":true},{"content":"Performs tasks associated with shutting down the provider.","nodes":[{"pos":[0,58],"content":"Performs tasks associated with shutting down the provider.","nodes":[{"content":"Performs tasks associated with shutting down the provider.","pos":[0,58]}]}],"pos":[20298,20357],"yaml":true},{"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.","nodes":[{"pos":[0,274],"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.","nodes":[{"content":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.","pos":[0,274],"nodes":[{"content":"ASP.NET calls the <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A&gt;</ph> method when the application domain hosting the Web application terminates.","pos":[0,158],"source":"ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates."},{"content":"The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.","pos":[159,274]}]}]}],"pos":[20368,20643],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the provider is in buffered mode.","nodes":[{"pos":[0,65],"content":"Gets a value indicating whether the provider is in buffered mode.","nodes":[{"content":"Gets a value indicating whether the provider is in buffered mode.","pos":[0,65]}]}],"pos":[21808,21874],"yaml":true},{"content":"The <xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> property contains the value defined by the `buffer` attribute in the `providers` element of the `healthMonitoring` section.","nodes":[{"pos":[0,197],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A&gt;</ph> property contains the value defined by the <ph id=\"ph2\">`buffer`</ph> attribute in the <ph id=\"ph3\">`providers`</ph> element of the <ph id=\"ph4\">`healthMonitoring`</ph> section.","source":"The <xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> property contains the value defined by the `buffer` attribute in the `providers` element of the `healthMonitoring` section."}],"pos":[21885,22083],"yaml":true,"extradata":"MT"},{"content":"`true` if the provider is in buffered mode; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,86],"content":"`true` if the provider is in buffered mode; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the provider is in buffered mode; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` if the provider is in buffered mode; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[64,86],"source":" The default is `true`."}]}],"pos":[22736,22825],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.BufferedWebEventProvider\n  commentId: T:System.Web.Management.BufferedWebEventProvider\n  id: BufferedWebEventProvider\n  children:\n  - System.Web.Management.BufferedWebEventProvider.#ctor\n  - System.Web.Management.BufferedWebEventProvider.BufferMode\n  - System.Web.Management.BufferedWebEventProvider.Flush\n  - System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  - System.Web.Management.BufferedWebEventProvider.Shutdown\n  - System.Web.Management.BufferedWebEventProvider.UseBuffering\n  langs:\n  - csharp\n  name: BufferedWebEventProvider\n  nameWithType: BufferedWebEventProvider\n  fullName: System.Web.Management.BufferedWebEventProvider\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Provides the base functionality for creating event providers that require buffering.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.BufferedWebEventProvider> class to create your own custom buffered provider.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).\"\n  example:\n  - \"The following code example shows how to derive from the <xref:System.Web.Management.BufferedWebEventProvider> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#1)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#1)]  \\n  \\n The following configuration file excerpt shows a `healthMonitoring` configuration section that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \\n  \\n```  \\n<healthMonitoring    \\n  heartBeatInterval=\\\"0\\\" enabled=\\\"true\\\">  \\n  \\n  <bufferModes>  \\n    <add name =\\\"Custom Notification\\\"  \\n      maxBufferSize=\\\"10\\\"  \\n      maxFlushSize=\\\"5\\\"  \\n      urgentFlushThreshold=\\\"10\\\"  \\n      regularFlushInterval=\\\"Infinite\\\"  \\n      urgentFlushInterval=\\\"00:00:30\\\"  \\n      maxBufferThreads=\\\"1\\\"  \\n/>  \\n  </bufferModes>  \\n  \\n  <providers>  \\n    <clear/>  \\n    <add name=\\\"SampleBufferedWebEventProvider\\\"   \\n      type=\\\"SamplesAspNet.SampleBufferedWebEventProvider, bufferedwebeventprovider, Version=1.0.1785.14700, Culture=neutral, PublicKeyToken=d31491bf33b55954, processorArchitecture=MSIL\\\"   \\n      buffer=\\\"true\\\"  \\n      bufferMode=\\\"Custom Notification\\\"  \\n/>  \\n  </providers>  \\n  \\n  <profiles>  \\n    <add name=\\\"Custom\\\"   \\n      minInstances=\\\"1\\\"   \\n      maxLimit=\\\"Infinite\\\"   \\n      minInterval=\\\"00:00:00\\\" />  \\n  </profiles>  \\n  \\n  <rules>  \\n    <clear />  \\n      <add name=\\\"Custom Buffered Web Event Provider\\\"   \\n        eventName=\\\"All Events\\\"  \\n        provider=\\\"SampleBufferedWebEventProvider\\\"   \\n        profile=\\\"Custom\\\" />  \\n  </rules>  \\n  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public abstract class BufferedWebEventProvider : System.Web.Management.WebEventProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Management.WebEventProvider\n  derivedClasses:\n  - System.Web.Management.MailWebEventProvider\n  - System.Web.Management.SqlWebEventProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.#ctor\n  commentId: M:System.Web.Management.BufferedWebEventProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: BufferedWebEventProvider()\n  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()\n  fullName: BufferedWebEventProvider.BufferedWebEventProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.BufferedWebEventProvider\"></xref> class.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <xref:System.Web.Management.TraceWebEventProvider> object, but you can call this constructor when implementing your own provider type that inherits from this class.\n  example:\n  - \"The following code example shows how to use this constructor in a custom event provider.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#8)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#8)]\"\n  syntax:\n    content: protected BufferedWebEventProvider ();\n    parameters: []\n  overload: System.Web.Management.BufferedWebEventProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.BufferMode\n  commentId: P:System.Web.Management.BufferedWebEventProvider.BufferMode\n  id: BufferMode\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: BufferMode\n  nameWithType: BufferedWebEventProvider.BufferMode\n  fullName: BufferedWebEventProvider.BufferMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets a value indicating the buffering mode used by the provider.\n  remarks: \"The <xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> property contains the value defined by the `bufferMode` attribute in the `providers` element of the `healthMonitoring` section.  \\n  \\n The following configuration-file excerpt shows how the name of the buffer mode should be defined in the `healthMonitoring` section.  \\n  \\n```  \\n<bufferModes>  \\n  <add name =\\\"Custom Notification\\\" />  \\n</bufferModes>  \\n```\"\n  example:\n  - \"The following code example shows how to use the <xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> property.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#4)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#4)]\"\n  syntax:\n    content: public string BufferMode { get; }\n    return:\n      type: System.String\n      description: The name of the buffering mode.\n  overload: System.Web.Management.BufferedWebEventProvider.BufferMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.Flush\n  commentId: M:System.Web.Management.BufferedWebEventProvider.Flush\n  id: Flush\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: BufferedWebEventProvider.Flush()\n  fullName: BufferedWebEventProvider.Flush()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Moves the events from the provider's buffer into the event log.\n  remarks: When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.\n  example:\n  - \"The following code example shows how to use the <xref:System.Web.Management.BufferedWebEventProvider.Flush%2A> method.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#9)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#9)]\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Web.Management.BufferedWebEventProvider.Flush*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: Initialize(String, NameValueCollection)\n  nameWithType: BufferedWebEventProvider.Initialize(String, NameValueCollection)\n  fullName: BufferedWebEventProvider.Initialize(String, NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Sets the initial values for this object.\n  remarks: ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> constructor. This method is called to initialize the <xref:System.Web.Management.BufferedWebEventProvider> with the configuration settings and name specified in the configuration file.\n  example:\n  - \"The following code example shows how to use the <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> method.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#2)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#2)]\"\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used in the configuration file to identify this provider.\n    - id: config\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> that specifies the attributes assigned for this provider in the configuration file.\n  overload: System.Web.Management.BufferedWebEventProvider.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  commentId: M:System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  id: ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Processes the event passed to the provider.\n  remarks: This is the method that ASP.NET health monitoring calls to start the processing of the event. If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.\n  example:\n  - \"The following code example shows how to implement the <xref:System.Web.Management.BufferedWebEventProvider.ProcessEvent%2A> method.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#5)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#5)]\"\n  syntax:\n    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);\n    parameters:\n    - id: eventRaised\n      type: System.Web.Management.WebBaseEvent\n      description: The <xref href=\"System.Web.Management.WebBaseEvent\"></xref> object to process.\n  overload: System.Web.Management.BufferedWebEventProvider.ProcessEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  commentId: M:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  id: ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: ProcessEventFlush(WebEventBufferFlushInfo)\n  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  fullName: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Processes the buffered events.\n  remarks: The <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> method processes the messages that have been buffered. ASP.NET health monitoring calls the method when the flushing of the buffer is required. The intervals at which flushing is required is determined by the parameter value of the `bufferMode` attribute in the `providers` element in the `healthMonitoring` configuration section.\n  example:\n  - \"The following code example shows how to implement the <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> method.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#6)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#6)]\"\n  syntax:\n    content: public abstract void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);\n    parameters:\n    - id: flushInfo\n      type: System.Web.Management.WebEventBufferFlushInfo\n      description: A <xref href=\"System.Web.Management.WebEventBufferFlushInfo\"></xref> that contains buffering information.\n  overload: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.Shutdown\n  commentId: M:System.Web.Management.BufferedWebEventProvider.Shutdown\n  id: Shutdown\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: BufferedWebEventProvider.Shutdown()\n  fullName: BufferedWebEventProvider.Shutdown()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Performs tasks associated with shutting down the provider.\n  remarks: ASP.NET calls the <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.\n  syntax:\n    content: public override void Shutdown ();\n    parameters: []\n  overload: System.Web.Management.BufferedWebEventProvider.Shutdown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering\n  commentId: P:System.Web.Management.BufferedWebEventProvider.UseBuffering\n  id: UseBuffering\n  parent: System.Web.Management.BufferedWebEventProvider\n  langs:\n  - csharp\n  name: UseBuffering\n  nameWithType: BufferedWebEventProvider.UseBuffering\n  fullName: BufferedWebEventProvider.UseBuffering\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets a value indicating whether the provider is in buffered mode.\n  remarks: The <xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> property contains the value defined by the `buffer` attribute in the `providers` element of the `healthMonitoring` section.\n  example:\n  - \"The following code example shows how to use the <xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> property.  \\n  \\n [!code-csharp[System.Web.Management.BufferedWebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#3)]\\n [!code-vb[System.Web.Management.BufferedWebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#3)]\"\n  syntax:\n    content: public bool UseBuffering { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the provider is in buffered mode; otherwise, `false`. The default is `true`.'\n  overload: System.Web.Management.BufferedWebEventProvider.UseBuffering*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Management.WebEventProvider\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventProvider\n  nameWithType: WebEventProvider\n  fullName: System.Web.Management.WebEventProvider\n- uid: System.Web.Management.BufferedWebEventProvider.#ctor\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: BufferedWebEventProvider()\n  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()\n  fullName: BufferedWebEventProvider.BufferedWebEventProvider()\n- uid: System.Web.Management.BufferedWebEventProvider.BufferMode\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: BufferMode\n  nameWithType: BufferedWebEventProvider.BufferMode\n  fullName: BufferedWebEventProvider.BufferMode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Management.BufferedWebEventProvider.Flush\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Flush()\n  nameWithType: BufferedWebEventProvider.Flush()\n  fullName: BufferedWebEventProvider.Flush()\n- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: BufferedWebEventProvider.Initialize(String, NameValueCollection)\n  fullName: BufferedWebEventProvider.Initialize(String, NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: ProcessEvent(WebBaseEvent)\n  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)\n  fullName: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)\n- uid: System.Web.Management.WebBaseEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebBaseEvent\n  nameWithType: WebBaseEvent\n  fullName: System.Web.Management.WebBaseEvent\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: ProcessEventFlush(WebEventBufferFlushInfo)\n  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n  fullName: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)\n- uid: System.Web.Management.WebEventBufferFlushInfo\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventBufferFlushInfo\n  nameWithType: WebEventBufferFlushInfo\n  fullName: System.Web.Management.WebEventBufferFlushInfo\n- uid: System.Web.Management.BufferedWebEventProvider.Shutdown\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Shutdown()\n  nameWithType: BufferedWebEventProvider.Shutdown()\n  fullName: BufferedWebEventProvider.Shutdown()\n- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: UseBuffering\n  nameWithType: BufferedWebEventProvider.UseBuffering\n  fullName: BufferedWebEventProvider.UseBuffering\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Management.BufferedWebEventProvider.#ctor*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: BufferedWebEventProvider\n  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider\n  fullName: BufferedWebEventProvider.BufferedWebEventProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.BufferMode*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: BufferMode\n  nameWithType: BufferedWebEventProvider.BufferMode\n  fullName: BufferedWebEventProvider.BufferMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.Flush*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Flush\n  nameWithType: BufferedWebEventProvider.Flush\n  fullName: BufferedWebEventProvider.Flush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.Initialize*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: BufferedWebEventProvider.Initialize\n  fullName: BufferedWebEventProvider.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: ProcessEvent\n  nameWithType: BufferedWebEventProvider.ProcessEvent\n  fullName: BufferedWebEventProvider.ProcessEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: ProcessEventFlush\n  nameWithType: BufferedWebEventProvider.ProcessEventFlush\n  fullName: BufferedWebEventProvider.ProcessEventFlush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.Shutdown*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: Shutdown\n  nameWithType: BufferedWebEventProvider.Shutdown\n  fullName: BufferedWebEventProvider.Shutdown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering*\n  parent: System.Web.Management.BufferedWebEventProvider\n  isExternal: false\n  name: UseBuffering\n  nameWithType: BufferedWebEventProvider.UseBuffering\n  fullName: BufferedWebEventProvider.UseBuffering\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/BufferedWebEventProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n"}