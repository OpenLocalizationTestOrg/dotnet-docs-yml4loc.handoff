{"nodes":[{"content":"Represents a base class used to implement all security tokens.","nodes":[{"pos":[0,62],"content":"Represents a base class used to implement all security tokens.","nodes":[{"content":"Represents a base class used to implement all security tokens.","pos":[0,62]}]}],"pos":[1088,1151],"yaml":true},{"content":"Use a security token to provide authentication credentials or to protect a message.  \n  \n A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.  \n  \n Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions. The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler’s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.  \n  \n WIF ships with support for the following types of security tokens:  \n  \n-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \n  \n-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \n  \n-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message  \n  \n-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.  \n  \n-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.  \n  \n-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.  \n  \n-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.  \n  \n-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.  \n  \n-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.  \n  \n Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.  \n  \n Broadly speaking security tokens fall into three major categories:  \n  \n-   Tokens that carry or reference cryptographic key material. For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.  \n  \n-   Tokens that represent credentials for users that have already been authenticated. For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.  \n  \n-   Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol. These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.  \n  \n A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.  \n  \n To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class. When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.","nodes":[{"pos":[0,83],"content":"Use a security token to provide authentication credentials or to protect a message.","nodes":[{"content":"Use a security token to provide authentication credentials or to protect a message.","pos":[0,83]}]},{"pos":[90,395],"content":"A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.","nodes":[{"content":"A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.","pos":[0,305],"nodes":[{"content":"A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject.","pos":[0,213]},{"content":"All security tokens derive from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> class.","pos":[214,305],"source":" All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class."}]}]},{"pos":[402,1349],"content":"Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions. The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler’s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.","nodes":[{"content":"Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions. The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler’s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.","pos":[0,947],"nodes":[{"content":"Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code.","pos":[0,206]},{"content":"In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> base class.","pos":[207,419],"source":" In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class."},{"content":"Validating a token involves not just ensuring that the token is valid, but also returning a <ph id=\"ph1\">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> instance from the token that can be used in making authentication and authorization decisions.","pos":[420,651],"source":" Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> is constructed by the token handler’s implementation of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A&gt;</ph> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.","pos":[652,947],"source":" The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler’s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself."}]}]},{"pos":[1356,1422],"content":"WIF ships with support for the following types of security tokens:","nodes":[{"content":"WIF ships with support for the following types of security tokens:","pos":[0,66]}]},{"pos":[1432,1692],"content":"<xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","nodes":[{"content":"<xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","pos":[0,260],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.Saml2SecurityToken&gt;</ph>: Represents a security token that is based upon a SAML 2.0 Assertion.","pos":[0,123],"source":"<xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion."},{"content":"This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","pos":[124,260]}]}]},{"pos":[1702,1962],"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","nodes":[{"content":"<xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","pos":[0,260],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph>:  Represents a security token that is based upon a SAML 1.1 Assertion.","pos":[0,123],"source":"<xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion."},{"content":"This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).","pos":[124,260]}]}]},{"pos":[1972,2215],"content":"<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken&gt;</ph>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message","pos":[0,243],"source":"<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message"}]},{"pos":[2225,2369],"content":"<xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.RsaSecurityToken&gt;</ph>: Represents a security token that is based upon key that is created using the RSA algorithm.","pos":[0,144],"source":"<xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm."}]},{"pos":[2379,2506],"content":"<xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>: Represents a security token that contains information about a session.","pos":[0,127],"source":"<xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session."}]},{"pos":[2516,2643],"content":"<xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph>: Represents a security token that is based on a username and password.","pos":[0,127],"source":"<xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password."}]},{"pos":[2653,2804],"content":"<xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.WindowsSecurityToken&gt;</ph>: Represents a security token that is based on the identity of a Windows domain or user account.","pos":[0,151],"source":"<xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account."}]},{"pos":[2814,2934],"content":"<xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph>: Represents a security token that is based on an X.509 certificate.","pos":[0,120],"source":"<xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate."}]},{"pos":[2944,3144],"content":"<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.","pos":[0,200],"source":"<xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account."}]},{"pos":[3151,3348],"content":"Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.","nodes":[{"content":"Two other security token classes, <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.GenericXmlSecurityToken&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.EncryptedSecurityToken&gt;</ph>, can be used to help handle general cases.","pos":[0,197],"source":"Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases."}]},{"pos":[3355,3421],"content":"Broadly speaking security tokens fall into three major categories:","nodes":[{"content":"Broadly speaking security tokens fall into three major categories:","pos":[0,66]}]},{"pos":[3431,3653],"content":"Tokens that carry or reference cryptographic key material. For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.","nodes":[{"content":"Tokens that carry or reference cryptographic key material. For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.","pos":[0,222],"nodes":[{"content":"Tokens that carry or reference cryptographic key material.","pos":[0,58]},{"content":"For example the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.RsaSecurityToken&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> types are often used for this purpose.","pos":[59,222],"source":" For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose."}]}]},{"pos":[3663,4002],"content":"Tokens that represent credentials for users that have already been authenticated. For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.","nodes":[{"content":"Tokens that represent credentials for users that have already been authenticated. For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.","pos":[0,339],"nodes":[{"content":"Tokens that represent credentials for users that have already been authenticated.","pos":[0,81]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.WindowsSecurityToken&gt;</ph>, and, in the case of a user authenticated using a certificate, the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> types.","pos":[82,339],"source":" For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types."}]}]},{"pos":[4012,4412],"content":"Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol. These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.","nodes":[{"content":"Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol.","pos":[0,149]},{"content":"These are typically returned in a <ph id=\"ph1\">`wst:RequestSecurityTokenResponse`</ph> XML fragment.","pos":[150,232],"source":" These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.Saml2SecurityToken&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> types are most often used to represent these tokens.","pos":[233,400],"source":" The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens."}]},{"pos":[4419,4608],"content":"A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.","nodes":[{"content":"A special token type, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.","pos":[0,189],"source":"A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios."}]},{"pos":[4615,5389],"content":"To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class. When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.","nodes":[{"content":"To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class. When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.","pos":[0,774],"nodes":[{"content":"To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token.","pos":[0,170]},{"content":"To add support for new token types, you can derive directly from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> class.","pos":[171,295],"source":" To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class."},{"content":"When you do this, you will also need to create a token handler class by deriving from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph> class.","pos":[296,448],"source":" When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class."},{"content":"Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerTokenResolver&gt;</ph> class as well as one or more custom key identifier clause types by deriving from the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> class.","pos":[449,774],"source":" Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class."}]}]}],"pos":[1162,6592],"yaml":true,"extradata":"MT"},{"content":"Called by constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> class.","nodes":[{"pos":[0,129],"content":"Called by constructors in derived classes to initialize the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> class.","source":"Called by constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> class."}],"pos":[9795,9925],"yaml":true},{"content":"Gets a value that indicates whether this security token is capable of creating the specified key identifier.","nodes":[{"pos":[0,108],"content":"Gets a value that indicates whether this security token is capable of creating the specified key identifier.","nodes":[{"content":"Gets a value that indicates whether this security token is capable of creating the specified key identifier.","pos":[0,108]}]}],"pos":[11186,11295],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \n  \n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.","nodes":[{"pos":[0,295],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.","nodes":[{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.","pos":[0,295],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A&gt;</ph> method to determine whether a security token can create a specific key identifier.","pos":[0,171],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier."},{"content":"To create the key identifier call the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A&gt;</ph> method.","pos":[172,295],"source":" To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method."}]}]},{"pos":[302,431],"content":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.","nodes":[{"content":"The default implementation supports key identifier clauses of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause&gt;</ph>.","pos":[0,129],"source":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>."}]}],"pos":[11306,11742],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> that specifies the key identifier to create.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create."}],"pos":[11959,12083],"yaml":true},{"content":"`true` when <code>T</code> is of type <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is of type <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` when <code>T</code> is of type <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>; otherwise, `false`."}],"pos":[12141,12279],"yaml":true},{"content":"Creates the specified key identifier clause.","nodes":[{"pos":[0,44],"content":"Creates the specified key identifier clause.","nodes":[{"content":"Creates the specified key identifier clause.","pos":[0,44]}]}],"pos":[13478,13523],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \n  \n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.","nodes":[{"pos":[0,295],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.","nodes":[{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.","pos":[0,295],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A&gt;</ph> method to determine whether a security token can create a specific key identifier.","pos":[0,171],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier."},{"content":"To create the key identifier call the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A&gt;</ph> method.","pos":[172,295],"source":" To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method."}]}]},{"pos":[302,596],"content":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.","nodes":[{"content":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.","pos":[0,294],"nodes":[{"content":"The default implementation supports key identifier clauses of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause&gt;</ph>.","pos":[0,129],"source":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>."},{"content":"If a key identifier clause of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause&gt;</ph> cannot be created, a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","pos":[130,294],"source":" If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown."}]}]}],"pos":[13534,14135],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> that specifies the key identifier to create.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create."}],"pos":[14346,14470],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that is a key identifier clause for the security token.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> that is a key identifier clause for the security token.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that is a key identifier clause for the security token."}],"pos":[14515,14650],"yaml":true},{"content":"Gets a unique identifier of the security token.","nodes":[{"pos":[0,47],"content":"Gets a unique identifier of the security token.","nodes":[{"content":"Gets a unique identifier of the security token.","pos":[0,47]}]}],"pos":[15686,15734],"yaml":true},{"content":"Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.","nodes":[{"pos":[0,190],"content":"Typically, when a security token is serialized into XML, the <ph id=\"ph1\">`Id`</ph> attribute for the security token is set to the value of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.Id%2A&gt;</ph> property.","source":"Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property."}],"pos":[15745,15936],"yaml":true,"extradata":"MT"},{"content":"The unique identifier of the security token.","nodes":[{"pos":[0,44],"content":"The unique identifier of the security token.","nodes":[{"content":"The unique identifier of the security token.","pos":[0,44]}]}],"pos":[17157,17202],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.","nodes":[{"pos":[0,124],"content":"Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.","pos":[0,124]}]}],"pos":[18612,18737],"yaml":true},{"content":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>","nodes":[{"pos":[0,128],"content":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>","nodes":[{"content":"The default implementation supports key identifier clauses of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause&gt;</ph>","pos":[0,128],"source":"The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>"}]}],"pos":[18748,18877],"yaml":true,"extradata":"MT"},{"content":"`true` if <code>skiClause</code> is a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> and it has the same unique identifier as the <xref href=\"System.IdentityModel.Tokens.SecurityToken.Id\"></xref> property; otherwise, `false`.","nodes":[{"pos":[0,255],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">skiClause</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> and it has the same unique identifier as the <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken.Id\"&gt;&lt;/xref&gt;</ph> property; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if <code>skiClause</code> is a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> and it has the same unique identifier as the <xref href=\"System.IdentityModel.Tokens.SecurityToken.Id\"></xref> property; otherwise, `false`."}],"pos":[19210,19468],"yaml":true},{"content":"Gets the key for the specified key identifier clause.","nodes":[{"pos":[0,53],"content":"Gets the key for the specified key identifier clause.","nodes":[{"content":"Gets the key for the specified key identifier clause.","pos":[0,53]}]}],"pos":[20902,20956],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.  \n  \n The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`.","nodes":[{"pos":[0,271],"content":"The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A&gt;</ph> to first determine whether the specified key identifier clause is the same as this instance.","pos":[0,271],"source":"The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance."}]},{"pos":[278,576],"content":"The default implementation returns the first element of the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A&gt;</ph> collection if the collection is not empty and if <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A&gt;</ph> returns <ph id=\"ph3\">`true`</ph>; otherwise, it returns <ph id=\"ph4\">`null`</ph>.","source":"The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`."}],"pos":[20967,21548],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that represents the key.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph> that represents the key.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that represents the key."}],"pos":[21941,22029],"yaml":true},{"content":"Gets the cryptographic keys associated with the security token.","nodes":[{"pos":[0,63],"content":"Gets the cryptographic keys associated with the security token.","nodes":[{"content":"Gets the cryptographic keys associated with the security token.","pos":[0,63]}]}],"pos":[23123,23187],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.","nodes":[{"pos":[0,279],"content":"Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.","nodes":[{"content":"Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.","pos":[0,279],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A&gt;</ph> property to set the cryptographic keys for this security token to protect tokens or a SOAP message.","pos":[0,176],"source":"Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message."},{"content":"The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.","pos":[177,279]}]}]}],"pos":[23198,23478],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the set of keys associated with the security token.","nodes":[{"pos":[0,209],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph> that contains the set of keys associated with the security token.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the set of keys associated with the security token."}],"pos":[24880,25090],"yaml":true},{"content":"Gets the first instant in time at which this security token is valid.","nodes":[{"pos":[0,69],"content":"Gets the first instant in time at which this security token is valid.","nodes":[{"content":"Gets the first instant in time at which this security token is valid.","pos":[0,69]}]}],"pos":[26152,26222],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","nodes":[{"pos":[0,488],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","nodes":[{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","pos":[0,488],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> properties to determine the time period in which a <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> token is valid.","pos":[0,249],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> properties represent the first and last instants in time in which the security token is valid, respectively.","pos":[250,488],"source":" The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively."}]}]}],"pos":[26233,26722],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the instant in time at which this security token is first valid.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the instant in time at which this security token is first valid.","source":"A <xref href=\"System.DateTime\"></xref> that represents the instant in time at which this security token is first valid."}],"pos":[28098,28218],"yaml":true},{"content":"Gets the last instant in time at which this security token is valid.","nodes":[{"pos":[0,68],"content":"Gets the last instant in time at which this security token is valid.","nodes":[{"content":"Gets the last instant in time at which this security token is valid.","pos":[0,68]}]}],"pos":[29265,29334],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","nodes":[{"pos":[0,488],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","nodes":[{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.","pos":[0,488],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> properties to determine the time period in which a <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityToken&gt;</ph> token is valid.","pos":[0,249],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> properties represent the first and last instants in time in which the security token is valid, respectively.","pos":[250,488],"source":" The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively."}]}]}],"pos":[29345,29834],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DateTime\"></xref> that represents the last instant in time at which this security token is valid.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that represents the last instant in time at which this security token is valid.","source":"A <xref href=\"System.DateTime\"></xref> that represents the last instant in time at which this security token is valid."}],"pos":[31206,31325],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityToken\n  commentId: T:System.IdentityModel.Tokens.SecurityToken\n  id: SecurityToken\n  children:\n  - System.IdentityModel.Tokens.SecurityToken.#ctor\n  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1\n  - System.IdentityModel.Tokens.SecurityToken.Id\n  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityToken.SecurityKeys\n  - System.IdentityModel.Tokens.SecurityToken.ValidFrom\n  - System.IdentityModel.Tokens.SecurityToken.ValidTo\n  langs:\n  - csharp\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a base class used to implement all security tokens.\n  remarks: \"Use a security token to provide authentication credentials or to protect a message.  \\n  \\n A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.  \\n  \\n Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions. The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler’s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.  \\n  \\n WIF ships with support for the following types of security tokens:  \\n  \\n-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \\n  \\n-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \\n  \\n-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message  \\n  \\n-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.  \\n  \\n-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.  \\n  \\n-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.  \\n  \\n-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.  \\n  \\n-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.  \\n  \\n Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.  \\n  \\n Broadly speaking security tokens fall into three major categories:  \\n  \\n-   Tokens that carry or reference cryptographic key material. For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.  \\n  \\n-   Tokens that represent credentials for users that have already been authenticated. For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.  \\n  \\n-   Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol. These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.  \\n  \\n A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.  \\n  \\n To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class. When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.\"\n  example:\n  - \"The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the implementation of the `SimpleWebToken` class. This class extends <xref:System.IdentityModel.Tokens.SecurityToken>.  \\n  \\n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \\n[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]\"\n  syntax:\n    content: public abstract class SecurityToken\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IdentityModel.Tokens.EncryptedSecurityToken\n  - System.IdentityModel.Tokens.GenericXmlSecurityToken\n  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken\n  - System.IdentityModel.Tokens.RsaSecurityToken\n  - System.IdentityModel.Tokens.Saml2SecurityToken\n  - System.IdentityModel.Tokens.SamlSecurityToken\n  - System.IdentityModel.Tokens.SessionSecurityToken\n  - System.IdentityModel.Tokens.UserNameSecurityToken\n  - System.IdentityModel.Tokens.WindowsSecurityToken\n  - System.IdentityModel.Tokens.X509SecurityToken\n  - System.ServiceModel.Security.Tokens.BinarySecretSecurityToken\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n  - System.ServiceModel.Security.Tokens.SspiSecurityToken\n  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.#ctor\n  commentId: M:System.IdentityModel.Tokens.SecurityToken.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: SecurityToken()\n  nameWithType: SecurityToken.SecurityToken()\n  fullName: SecurityToken.SecurityToken()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called by constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> class.\n  syntax:\n    content: protected SecurityToken ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityToken.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1\n  commentId: M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1\n  id: CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: CanCreateKeyIdentifierClause<T>()\n  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()\n  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this security token is capable of creating the specified key identifier.\n  remarks: \"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \\n  \\n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.\"\n  syntax:\n    content: 'public virtual bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create.\n    return:\n      type: System.Boolean\n      description: '`true` when <code>T</code> is of type <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1\n  commentId: M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1\n  id: CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: CreateKeyIdentifierClause<T>()\n  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()\n  fullName: SecurityToken.CreateKeyIdentifierClause<T>()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates the specified key identifier clause.\n  remarks: \"Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \\n  \\n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.\"\n  syntax:\n    content: 'public virtual T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that specifies the key identifier to create.\n    return:\n      type: T\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that is a key identifier clause for the security token.\n  overload: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.Id\n  commentId: P:System.IdentityModel.Tokens.SecurityToken.Id\n  id: Id\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: Id\n  nameWithType: SecurityToken.Id\n  fullName: SecurityToken.Id\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a unique identifier of the security token.\n  remarks: Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.\n  example:\n  - \"The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.  \\n  \\n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \\n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \\n[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]\"\n  syntax:\n    content: public abstract string Id { get; }\n    return:\n      type: System.String\n      description: The unique identifier of the security token.\n  overload: System.IdentityModel.Tokens.SecurityToken.Id*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.\n  remarks: The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>\n  syntax:\n    content: public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>skiClause</code> is a <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> and it has the same unique identifier as the <xref href=\"System.IdentityModel.Tokens.SecurityToken.Id\"></xref> property; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key for the specified key identifier clause.\n  remarks: \"The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.  \\n  \\n The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`.\"\n  syntax:\n    content: public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: ''\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that represents the key.\n  overload: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys\n  commentId: P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys\n  id: SecurityKeys\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: SecurityKeys\n  nameWithType: SecurityToken.SecurityKeys\n  fullName: SecurityToken.SecurityKeys\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic keys associated with the security token.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.\n  example:\n  - \"The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> property.  \\n  \\n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \\n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \\n[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]\"\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the set of keys associated with the security token.\n  overload: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom\n  commentId: P:System.IdentityModel.Tokens.SecurityToken.ValidFrom\n  id: ValidFrom\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: ValidFrom\n  nameWithType: SecurityToken.ValidFrom\n  fullName: SecurityToken.ValidFrom\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the first instant in time at which this security token is valid.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.\n  example:\n  - \"The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property.  \\n  \\n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \\n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \\n[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  \\n[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]\"\n  syntax:\n    content: public abstract DateTime ValidFrom { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the instant in time at which this security token is first valid.\n  overload: System.IdentityModel.Tokens.SecurityToken.ValidFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo\n  commentId: P:System.IdentityModel.Tokens.SecurityToken.ValidTo\n  id: ValidTo\n  parent: System.IdentityModel.Tokens.SecurityToken\n  langs:\n  - csharp\n  name: ValidTo\n  nameWithType: SecurityToken.ValidTo\n  fullName: SecurityToken.ValidTo\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the last instant in time at which this security token is valid.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.\n  example:\n  - \"The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property.  \\n  \\n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \\n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \\n[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  \\n[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]\"\n  syntax:\n    content: public abstract DateTime ValidTo { get; }\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> that represents the last instant in time at which this security token is valid.\n  overload: System.IdentityModel.Tokens.SecurityToken.ValidTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Tokens.SecurityToken.#ctor\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: SecurityToken()\n  nameWithType: SecurityToken.SecurityToken()\n  fullName: SecurityToken.SecurityToken()\n- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>()\n  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()\n  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>()\n  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()\n  fullName: SecurityToken.CreateKeyIdentifierClause<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.IdentityModel.Tokens.SecurityToken.Id\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: SecurityToken.Id\n  fullName: SecurityToken.Id\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: SecurityToken.SecurityKeys\n  fullName: SecurityToken.SecurityKeys\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<SecurityKey>\n  nameWithType: ReadOnlyCollection<SecurityKey>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKey\n    name: SecurityKey\n    nameWithType: SecurityKey\n    fullName: System.IdentityModel.Tokens.SecurityKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: SecurityToken.ValidFrom\n  fullName: SecurityToken.ValidFrom\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: SecurityToken.ValidTo\n  fullName: SecurityToken.ValidTo\n- uid: System.IdentityModel.Tokens.SecurityToken.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken.SecurityToken\n  fullName: SecurityToken.SecurityToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: CanCreateKeyIdentifierClause<T>\n  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>\n  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: CreateKeyIdentifierClause<T>\n  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>\n  fullName: SecurityToken.CreateKeyIdentifierClause<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.Id*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: Id\n  nameWithType: SecurityToken.Id\n  fullName: SecurityToken.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: MatchesKeyIdentifierClause\n  nameWithType: SecurityToken.MatchesKeyIdentifierClause\n  fullName: SecurityToken.MatchesKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ResolveKeyIdentifierClause\n  nameWithType: SecurityToken.ResolveKeyIdentifierClause\n  fullName: SecurityToken.ResolveKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: SecurityKeys\n  nameWithType: SecurityToken.SecurityKeys\n  fullName: SecurityToken.SecurityKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ValidFrom\n  nameWithType: SecurityToken.ValidFrom\n  fullName: SecurityToken.ValidFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo*\n  parent: System.IdentityModel.Tokens.SecurityToken\n  isExternal: false\n  name: ValidTo\n  nameWithType: SecurityToken.ValidTo\n  fullName: SecurityToken.ValidTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}