<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6b3970b74ed8652caa0a9fd6c666b9d6d76fbef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.Sockets.IPPacketInformation.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d23cc4c79afdbe7e780e097d44dc300c9bbf70ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6677316e838ddaf1e1413553a1869aadbbb203f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Presents the packet information from a call to <ph id="ph1">&lt;xref href="System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the origin information of the packet that was received as a result of calling the <ph id="ph1">&lt;xref href="System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> method or <ph id="ph2">&lt;xref href="System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.IPAddress"&gt;&lt;/xref&gt;</ph> that indicates the origin information of the packet that was received as a result of calling the <ph id="ph2">&lt;xref href="System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> method or <ph id="ph3">&lt;xref href="System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For packets that were sent from a unicast address, the <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation.Address"&gt;&lt;/xref&gt;</ph> property will return the <ph id="ph2">&lt;xref href="System.Net.IPAddress"&gt;&lt;/xref&gt;</ph> of the sender; for multicast or broadcast packets, the <ph id="ph3">&lt;xref href="System.Net.Sockets.IPPacketInformation.Address"&gt;&lt;/xref&gt;</ph> property will return the multicast or broadcast <ph id="ph4">&lt;xref href="System.Net.IPAddress"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The object to compare with this instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">comparand</ph><ept id="p1">&lt;/code&gt;</ept> is an instance of <ph id="ph3">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> and equals the value of the instance; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code is constructed from the values of the <ph id="ph1">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An Int32 hash code.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the network interface information that is associated with a call to <ph id="ph1">&lt;xref href="System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> value, which represents the index of the network interface.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use this index with <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces"&gt;&lt;/xref&gt;</ph> to get more information about the relevant interface.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Tests whether two specified <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instances are equivalent.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operator tests both the <ph id="ph1">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> values for both arguments.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Net.Sockets.IPPacketInformation.Equals%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instance that is to the left of the equality operator.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instance that is to the right of the equality operator.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">packetInformation1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">packetInformation2</ph><ept id="p2">&lt;/code&gt;</ept> are equal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Tests whether two specified <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instances are not equal.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operator tests both the <ph id="ph1">&lt;xref:System.Net.Sockets.IPPacketInformation.Address%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.IPPacketInformation.Interface%2A&gt;</ph> values for both arguments.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Net.Sockets.IPPacketInformation.Compare%28System.Net.Sockets.IPPacketInformation%2CSystem.Net.Sockets.IPPacketInformation%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instance that is to the left of the inequality operator.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.Sockets.IPPacketInformation"&gt;&lt;/xref&gt;</ph> instance that is to the right of the inequality operator.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">packetInformation1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">packetInformation2</ph><ept id="p2">&lt;/code&gt;</ept> are unequal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>