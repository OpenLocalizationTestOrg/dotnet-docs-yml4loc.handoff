### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSA
  commentId: T:System.Security.Cryptography.RSA
  id: RSA
  children:
  - System.Security.Cryptography.RSA.#ctor
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.Int32)
  - System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSA.SignatureAlgorithm
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
  type: Class
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Represents the base class from which all implementations of the <xref href="System.Security.Cryptography.RSA"></xref> algorithm inherit.
  remarks: "Extending this class proves that you are implementing an `RSA` key. This is required for any developer providing a new `RSA` key implementation.  \n  \n The only purpose of this class is as a hierarchy member for identification of the `RSA` algorithm.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RSA : System.Security.Cryptography.AsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  derivedClasses:
  - System.Security.Cryptography.RSACng
  - System.Security.Cryptography.RSACryptoServiceProvider
  - System.Security.Cryptography.RSAOpenSsl
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.#ctor
  commentId: M:System.Security.Cryptography.RSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: RSA.RSA()
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.RSA"></xref> class.
  remarks: This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.
  syntax:
    content: protected RSA ();
    parameters: []
  overload: System.Security.Cryptography.RSA.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.Create
  commentId: M:System.Security.Cryptography.RSA.Create
  id: Create
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create()
  nameWithType: RSA.Create()
  fullName: RSA.Create()
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Creates an instance of the default implementation of the <xref href="System.Security.Cryptography.RSA"></xref> algorithm.
  syntax:
    content: public static System.Security.Cryptography.RSA Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RSA
      description: A new instance of the default implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.Create(System.Int32)
  commentId: M:System.Security.Cryptography.RSA.Create(System.Int32)
  id: Create(System.Int32)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(Int32)
  nameWithType: RSA.Create(Int32)
  fullName: RSA.Create(Int32)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.RSA Create (int keySizeInBits);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: ''
    return:
      type: System.Security.Cryptography.RSA
      description: ''
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)
  commentId: M:System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)
  id: Create(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(RSAParameters)
  nameWithType: RSA.Create(RSAParameters)
  fullName: RSA.Create(RSAParameters)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.RSA Create (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: ''
    return:
      type: System.Security.Cryptography.RSA
      description: ''
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.Create(System.String)
  commentId: M:System.Security.Cryptography.RSA.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: RSA.Create(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Creates an instance of the specified implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  syntax:
    content: public static System.Security.Cryptography.RSA Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: The name of the implementation of <xref href="System.Security.Cryptography.RSA"></xref> to use.
    return:
      type: System.Security.Cryptography.RSA
      description: A new instance of the specified implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Decrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[], RSAEncryptionPadding)
  fullName: RSA.Decrypt(Byte[], RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, decrypts the input data using the specified padding mode.
  syntax:
    content: public virtual byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to decrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The decrypted data.
  overload: System.Security.Cryptography.RSA.Decrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  commentId: M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: RSA.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, decrypts the input data using the private key.
  remarks: In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.
  syntax:
    content: public virtual byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The cipher text to be decrypted.
    return:
      type: System.Byte[]
      description: The resulting decryption of the <code>rgb</code> parameter in plain text.
  overload: System.Security.Cryptography.RSA.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Encrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[], RSAEncryptionPadding)
  fullName: RSA.Encrypt(Byte[], RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, encrypts the input data using the specified padding mode.
  syntax:
    content: public virtual byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to encrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The encrypted data.
  overload: System.Security.Cryptography.RSA.Encrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  commentId: M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: RSA.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, encrypts the input data using the public key.
  remarks: In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.
  syntax:
    content: public virtual byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The plain text to be encrypted.
    return:
      type: System.Byte[]
      description: The resulting encryption of the <code>rgb</code> parameter as cipher text.
  overload: System.Security.Cryptography.RSA.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  commentId: M:System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: RSA.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, exports the <xref href="System.Security.Cryptography.RSAParameters"></xref>.
  syntax:
    content: public abstract System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: '`true` to include private parameters; otherwise, `false`.'
    return:
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for <xref href="System.Security.Cryptography.DSA"></xref>.
  overload: System.Security.Cryptography.RSA.ExportParameters*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  commentId: M:System.Security.Cryptography.RSA.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: RSA.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes an <xref href="System.Security.Cryptography.RSA"></xref> object from the key information from an XML string.
  remarks: "The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key.  \n  \n Use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)."
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: The XML string containing <xref href="System.Security.Cryptography.RSA"></xref> key information.
  overload: System.Security.Cryptography.RSA.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>xmlString</code> parameter is `null`.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The format of the <code>xmlString</code> parameter is not valid.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)
  fullName: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.
  syntax:
    content: protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to be hashed.
    - id: offset
      type: System.Int32
      description: The index of the first byte in <code>data</code> that is to be hashed.
    - id: count
      type: System.Int32
      description: The number of bytes to hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The algorithm to use in hash the data.
    return:
      type: System.Byte[]
      description: The hashed data.
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Stream, HashAlgorithmName)
  nameWithType: RSA.HashData(Stream, HashAlgorithmName)
  fullName: RSA.HashData(Stream, HashAlgorithmName)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.
  syntax:
    content: protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: The binary stream to hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm.
    return:
      type: System.Byte[]
      description: The hashed data.
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  commentId: M:System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: RSA.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, imports the specified <xref href="System.Security.Cryptography.RSAParameters"></xref>.
  syntax:
    content: public abstract void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.ImportParameters*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  commentId: P:System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: RSA.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Gets the name of the key exchange algorithm available with this implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: Returns "RSA".
  overload: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  commentId: P:System.Security.Cryptography.RSA.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: RSA.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Gets the name of the signature algorithm available with this implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: Returns "RSA".
  overload: System.Security.Cryptography.RSA.SignatureAlgorithm*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: The input stream for which to compute the hash.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.
  syntax:
    content: public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The input data for which to compute the hash.
    - id: offset
      type: System.Int32
      description: The offset into the array at which to begin using data.
    - id: count
      type: System.Int32
      description: The number of bytes in the array to use as data.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm to use to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified data.
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than zero.  \n  \n -or-  \n  \n <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.
  syntax:
    content: public virtual byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the data to be signed.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding.
    return:
      type: System.Byte[]
      description: The RSA signature for the specified hash value.
  overload: System.Security.Cryptography.RSA.SignHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  commentId: M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: RSA.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Creates and returns an XML string containing the key of the current <xref href="System.Security.Cryptography.RSA"></xref> object.
  remarks: "The <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object.  \n  \n Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  \n  \n When you pass `true` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n   <P>…</P>  \n   <Q>…</Q>  \n   <DP>…</DP>  \n   <DQ>…</DQ>  \n   <InverseQ>…</InverseQ>  \n   <D>…</D>  \n</RSAKeyValue>  \n```  \n  \n When you pass `false` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n</RSAKeyValue>  \n```"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: '`true` to include a public and private RSA key; `false` to include only the public key.'
    return:
      type: System.String
      description: An XML string containing the key of the current <xref href="System.Security.Cryptography.RSA"></xref> object.
  overload: System.Security.Cryptography.RSA.ToXmlString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The signed data.
    - id: offset
      type: System.Int32
      description: The starting index at which to compute the hash.
    - id: count
      type: System.Int32
      description: The number of bytes to hash.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: '`true` if the signature is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than zero.  \n  \n -or-  \n  \n <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: '`true` if the signature is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.
  syntax:
    content: public bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: The signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value of the data.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: '`true` if the signature is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hashAlgorithm</code>.<xref href="System.Security.Cryptography.HashAlgorithmName.Name"></xref> is `null` or <xref href="System.String.Empty"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  commentId: M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  - mscorlib
  - netstandard
  namespace: System.Security.Cryptography
  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.
  syntax:
    content: public virtual bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash value of the signed data.
    - id: signature
      type: System.Byte[]
      description: The signature data to be verified.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm used to create the hash value.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: '`true` if the signature is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.RSA.VerifyHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: A derived class must override this method.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.RSA.#ctor
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: RSA.RSA()
- uid: System.Security.Cryptography.RSA.Create
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create()
  nameWithType: RSA.Create()
  fullName: RSA.Create()
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.RSA.Create(System.Int32)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(Int32)
  nameWithType: RSA.Create(Int32)
  fullName: RSA.Create(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(RSAParameters)
  nameWithType: RSA.Create(RSAParameters)
  fullName: RSA.Create(RSAParameters)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSA.Create(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: RSA.Create(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[], RSAEncryptionPadding)
  fullName: RSA.Decrypt(Byte[], RSAEncryptionPadding)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: RSA.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt(Byte[], RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[], RSAEncryptionPadding)
  fullName: RSA.Encrypt(Byte[], RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: RSA.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: RSA.ExportParameters(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: RSA.FromXmlString(String)
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)
  fullName: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Stream, HashAlgorithmName)
  nameWithType: RSA.HashData(Stream, HashAlgorithmName)
  fullName: RSA.HashData(Stream, HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: RSA.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: RSA.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: RSA.SignatureAlgorithm
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: RSA.ToXmlString(Boolean)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
  fullName: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.#ctor*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA
  nameWithType: RSA.RSA
  fullName: RSA.RSA
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.Create*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create
  nameWithType: RSA.Create
  fullName: RSA.Create
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.Decrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt
  nameWithType: RSA.Decrypt
  fullName: RSA.Decrypt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.DecryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue
  nameWithType: RSA.DecryptValue
  fullName: RSA.DecryptValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.Encrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt
  nameWithType: RSA.Encrypt
  fullName: RSA.Encrypt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.EncryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue
  nameWithType: RSA.EncryptValue
  fullName: RSA.EncryptValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.ExportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters
  nameWithType: RSA.ExportParameters
  fullName: RSA.ExportParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.FromXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString
  nameWithType: RSA.FromXmlString
  fullName: RSA.FromXmlString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.HashData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData
  nameWithType: RSA.HashData
  fullName: RSA.HashData
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.ImportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters
  nameWithType: RSA.ImportParameters
  fullName: RSA.ImportParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: RSA.KeyExchangeAlgorithm
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: RSA.SignatureAlgorithm
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.SignData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData
  nameWithType: RSA.SignData
  fullName: RSA.SignData
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.SignHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash
  nameWithType: RSA.SignHash
  fullName: RSA.SignHash
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.ToXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString
  nameWithType: RSA.ToXmlString
  fullName: RSA.ToXmlString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.VerifyData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData
  nameWithType: RSA.VerifyData
  fullName: RSA.VerifyData
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Security.Cryptography.RSA.VerifyHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash
  nameWithType: RSA.VerifyHash
  fullName: RSA.VerifyHash
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: AsymmetricAlgorithm.Clear()
  fullName: AsymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: AsymmetricAlgorithm.Dispose()
  fullName: AsymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)
  fullName: AsymmetricAlgorithm.Dispose(Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
  fullName: AsymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: AsymmetricAlgorithm.KeySizeValue
  fullName: AsymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
  fullName: AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue
  fullName: AsymmetricAlgorithm.LegalKeySizesValue
