{"nodes":[{"content":"Provides data for the <xref href=\"System.Console.CancelKeyPress\"></xref> event. This class cannot be inherited.","nodes":[{"pos":[0,111],"content":"Provides data for the <xref href=\"System.Console.CancelKeyPress\"></xref> event. This class cannot be inherited.","nodes":[{"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Console.CancelKeyPress\"&gt;&lt;/xref&gt;</ph> event.","pos":[0,79],"source":"Provides data for the <xref href=\"System.Console.CancelKeyPress\"></xref> event."},{"content":"This class cannot be inherited.","pos":[80,111]}]}],"pos":[484,596],"yaml":true},{"content":"A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers.Control> modifier key and the <xref:System.ConsoleKey.C> console key (Ctrl+C), or the <xref:System.ConsoleModifiers.Control> modifier key and the Break console key (Ctrl+Break). The .NET Framework consequently provides a <xref:System.ConsoleCancelEventArgs> object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled.  \n  \n If the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is set to `true` in the event handler, the process is resumed; otherwise, the process is terminated. By default, the value of the <xref:System.ConsoleCancelEventArgs> property is `false`, and the process terminates.","nodes":[{"pos":[0,525],"content":"A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers.Control> modifier key and the <xref:System.ConsoleKey.C> console key (Ctrl+C), or the <xref:System.ConsoleModifiers.Control> modifier key and the Break console key (Ctrl+Break). The .NET Framework consequently provides a <xref:System.ConsoleCancelEventArgs> object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled.","nodes":[{"content":"A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers.Control> modifier key and the <xref:System.ConsoleKey.C> console key (Ctrl+C), or the <xref:System.ConsoleModifiers.Control> modifier key and the Break console key (Ctrl+Break). The .NET Framework consequently provides a <xref:System.ConsoleCancelEventArgs> object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled.","pos":[0,525],"nodes":[{"content":"A user can interrupt a console application process by simultaneously pressing the <ph id=\"ph1\">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> modifier key and the <ph id=\"ph2\">&lt;xref:System.ConsoleKey.C&gt;</ph> console key (Ctrl+C), or the <ph id=\"ph3\">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> modifier key and the Break console key (Ctrl+Break).","pos":[0,289],"source":"A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers.Control> modifier key and the <xref:System.ConsoleKey.C> console key (Ctrl+C), or the <xref:System.ConsoleModifiers.Control> modifier key and the Break console key (Ctrl+Break)."},{"content":"The .NET Framework consequently provides a <ph id=\"ph1\">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> object to the event handler for the <ph id=\"ph2\">&lt;xref:System.Console.CancelKeyPress?displayProperty=fullName&gt;</ph> event to specify whether the process should be cancelled.","pos":[290,525],"source":" The .NET Framework consequently provides a <xref:System.ConsoleCancelEventArgs> object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled."}]}]},{"pos":[532,810],"content":"If the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is set to `true` in the event handler, the process is resumed; otherwise, the process is terminated. By default, the value of the <xref:System.ConsoleCancelEventArgs> property is `false`, and the process terminates.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> in the event handler, the process is resumed; otherwise, the process is terminated.","pos":[0,163],"source":"If the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is set to `true` in the event handler, the process is resumed; otherwise, the process is terminated."},{"content":"By default, the value of the <ph id=\"ph1\">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, and the process terminates.","pos":[164,278],"source":" By default, the value of the <xref:System.ConsoleCancelEventArgs> property is `false`, and the process terminates."}]}],"pos":[607,1422],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that indicates whether simultaneously pressing the <xref href=\"System.ConsoleModifiers.Control\"></xref> modifier key and the <xref href=\"System.ConsoleKey.C\"></xref> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process. The default is `false`, which terminates the current process.","nodes":[{"pos":[0,324],"content":"Gets or sets a value that indicates whether simultaneously pressing the <xref href=\"System.ConsoleModifiers.Control\"></xref> modifier key and the <xref href=\"System.ConsoleKey.C\"></xref> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process. The default is `false`, which terminates the current process.","nodes":[{"content":"Gets or sets a value that indicates whether simultaneously pressing the <ph id=\"ph1\">&lt;xref href=\"System.ConsoleModifiers.Control\"&gt;&lt;/xref&gt;</ph> modifier key and the <ph id=\"ph2\">&lt;xref href=\"System.ConsoleKey.C\"&gt;&lt;/xref&gt;</ph> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process.","pos":[0,262],"source":"Gets or sets a value that indicates whether simultaneously pressing the <xref href=\"System.ConsoleModifiers.Control\"></xref> modifier key and the <xref href=\"System.ConsoleKey.C\"></xref> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process."},{"content":"The default is <ph id=\"ph1\">`false`</ph>, which terminates the current process.","pos":[263,324],"source":" The default is `false`, which terminates the current process."}]}],"pos":[3682,4007],"yaml":true},{"content":"The <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is automatically initialized to `false` when the handler for the <xref:System.Console.CancelKeyPress> event is invoked. The value of the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property when the event handler finishes determines whether the current process resumes or terminates.  \n  \n In a set operation after Ctrl+C is pressed, specify `true` to indicate that the current process should resume when the event handler concludes, or `false` to indicate that the current process should terminate.","nodes":[{"pos":[0,346],"content":"The <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is automatically initialized to `false` when the handler for the <xref:System.Console.CancelKeyPress> event is invoked. The value of the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property when the event handler finishes determines whether the current process resumes or terminates.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property is automatically initialized to <ph id=\"ph2\">`false`</ph> when the handler for the <ph id=\"ph3\">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is invoked.","pos":[0,179],"source":"The <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is automatically initialized to `false` when the handler for the <xref:System.Console.CancelKeyPress> event is invoked."},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property when the event handler finishes determines whether the current process resumes or terminates.","pos":[180,346],"source":" The value of the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property when the event handler finishes determines whether the current process resumes or terminates."}]},{"pos":[353,562],"content":"In a set operation after Ctrl+C is pressed, specify <ph id=\"ph1\">`true`</ph> to indicate that the current process should resume when the event handler concludes, or <ph id=\"ph2\">`false`</ph> to indicate that the current process should terminate.","source":"In a set operation after Ctrl+C is pressed, specify `true` to indicate that the current process should resume when the event handler concludes, or `false` to indicate that the current process should terminate."}],"pos":[4018,4585],"yaml":true,"extradata":"MT"},{"content":"`true` if the current process should resume when the event handler concludes; `false` if the current process should terminate. The default value is `false`; the current process terminates when the event handler returns. If `true`, the current process continues.","nodes":[{"pos":[0,261],"content":"`true` if the current process should resume when the event handler concludes; `false` if the current process should terminate. The default value is `false`; the current process terminates when the event handler returns. If `true`, the current process continues.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the current process should resume when the event handler concludes; <ph id=\"ph2\">`false`</ph> if the current process should terminate.","pos":[0,126],"source":"`true` if the current process should resume when the event handler concludes; `false` if the current process should terminate."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>; the current process terminates when the event handler returns.","pos":[127,219],"source":" The default value is `false`; the current process terminates when the event handler returns."},{"content":"If <ph id=\"ph1\">`true`</ph>, the current process continues.","pos":[220,261],"source":" If `true`, the current process continues."}]}],"pos":[5208,5472],"yaml":true},{"content":"Gets the combination of modifier and console keys that interrupted the current process.","nodes":[{"pos":[0,87],"content":"Gets the combination of modifier and console keys that interrupted the current process.","nodes":[{"content":"Gets the combination of modifier and console keys that interrupted the current process.","pos":[0,87]}]}],"pos":[6855,6943],"yaml":true},{"content":"One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.","nodes":[{"pos":[0,129],"content":"One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.","nodes":[{"content":"One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.","pos":[0,129],"nodes":[{"content":"One of the enumeration values that specifies the key combination that interrupted the current process.","pos":[0,102]},{"content":"There is no default value.","pos":[103,129]}]}]}],"pos":[7606,7736],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ConsoleCancelEventArgs\n  commentId: T:System.ConsoleCancelEventArgs\n  id: ConsoleCancelEventArgs\n  children:\n  - System.ConsoleCancelEventArgs.Cancel\n  - System.ConsoleCancelEventArgs.SpecialKey\n  langs:\n  - csharp\n  name: ConsoleCancelEventArgs\n  nameWithType: ConsoleCancelEventArgs\n  fullName: System.ConsoleCancelEventArgs\n  type: Class\n  assemblies:\n  - System.Console\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides data for the <xref href=\"System.Console.CancelKeyPress\"></xref> event. This class cannot be inherited.\n  remarks: \"A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers.Control> modifier key and the <xref:System.ConsoleKey.C> console key (Ctrl+C), or the <xref:System.ConsoleModifiers.Control> modifier key and the Break console key (Ctrl+Break). The .NET Framework consequently provides a <xref:System.ConsoleCancelEventArgs> object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled.  \\n  \\n If the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is set to `true` in the event handler, the process is resumed; otherwise, the process is terminated. By default, the value of the <xref:System.ConsoleCancelEventArgs> property is `false`, and the process terminates.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.ConsoleCancelEventArgs> class to handle an event.  \\n  \\n [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]\\n [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]\\n [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]\"\n  syntax:\n    content: 'public sealed class ConsoleCancelEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ConsoleCancelEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ConsoleCancelEventArgs.Cancel\n  commentId: P:System.ConsoleCancelEventArgs.Cancel\n  id: Cancel\n  parent: System.ConsoleCancelEventArgs\n  langs:\n  - csharp\n  name: Cancel\n  nameWithType: ConsoleCancelEventArgs.Cancel\n  fullName: ConsoleCancelEventArgs.Cancel\n  type: Property\n  assemblies:\n  - System.Console\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets or sets a value that indicates whether simultaneously pressing the <xref href=\"System.ConsoleModifiers.Control\"></xref> modifier key and the <xref href=\"System.ConsoleKey.C\"></xref> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process. The default is `false`, which terminates the current process.\n  remarks: \"The <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is automatically initialized to `false` when the handler for the <xref:System.Console.CancelKeyPress> event is invoked. The value of the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property when the event handler finishes determines whether the current process resumes or terminates.  \\n  \\n In a set operation after Ctrl+C is pressed, specify `true` to indicate that the current process should resume when the event handler concludes, or `false` to indicate that the current process should terminate.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property to handle an event.  \\n  \\n [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]\\n [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]\\n [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]\"\n  syntax:\n    content: public bool Cancel { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current process should resume when the event handler concludes; `false` if the current process should terminate. The default value is `false`; the current process terminates when the event handler returns. If `true`, the current process continues.'\n  overload: System.ConsoleCancelEventArgs.Cancel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ConsoleCancelEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ConsoleCancelEventArgs.SpecialKey\n  commentId: P:System.ConsoleCancelEventArgs.SpecialKey\n  id: SpecialKey\n  parent: System.ConsoleCancelEventArgs\n  langs:\n  - csharp\n  name: SpecialKey\n  nameWithType: ConsoleCancelEventArgs.SpecialKey\n  fullName: ConsoleCancelEventArgs.SpecialKey\n  type: Property\n  assemblies:\n  - System.Console\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the combination of modifier and console keys that interrupted the current process.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.ConsoleCancelEventArgs.SpecialKey%2A> property to handle an event.  \\n  \\n [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]\\n [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]\\n [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]\"\n  syntax:\n    content: public ConsoleSpecialKey SpecialKey { get; }\n    return:\n      type: System.ConsoleSpecialKey\n      description: One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.\n  overload: System.ConsoleCancelEventArgs.SpecialKey*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ConsoleCancelEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ConsoleCancelEventArgs.Cancel\n  parent: System.ConsoleCancelEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: ConsoleCancelEventArgs.Cancel\n  fullName: ConsoleCancelEventArgs.Cancel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ConsoleCancelEventArgs.SpecialKey\n  parent: System.ConsoleCancelEventArgs\n  isExternal: false\n  name: SpecialKey\n  nameWithType: ConsoleCancelEventArgs.SpecialKey\n  fullName: ConsoleCancelEventArgs.SpecialKey\n- uid: System.ConsoleSpecialKey\n  parent: System\n  isExternal: false\n  name: ConsoleSpecialKey\n  nameWithType: ConsoleSpecialKey\n  fullName: System.ConsoleSpecialKey\n- uid: System.ConsoleCancelEventArgs.Cancel*\n  parent: System.ConsoleCancelEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: ConsoleCancelEventArgs.Cancel\n  fullName: ConsoleCancelEventArgs.Cancel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ConsoleCancelEventArgs.xml\n- uid: System.ConsoleCancelEventArgs.SpecialKey*\n  parent: System.ConsoleCancelEventArgs\n  isExternal: false\n  name: SpecialKey\n  nameWithType: ConsoleCancelEventArgs.SpecialKey\n  fullName: ConsoleCancelEventArgs.SpecialKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ConsoleCancelEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}