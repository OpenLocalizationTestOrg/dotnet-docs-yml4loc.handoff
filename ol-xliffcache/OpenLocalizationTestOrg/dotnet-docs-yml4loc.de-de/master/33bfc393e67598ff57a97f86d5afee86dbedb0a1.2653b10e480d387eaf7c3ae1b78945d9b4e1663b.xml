{"nodes":[{"content":"Defines the methods, properties, and events that are common to all application objects in an ASP.NET application. This class is the base class for applications that are defined by the user in the Global.asax file.","nodes":[{"pos":[0,213],"content":"Defines the methods, properties, and events that are common to all application objects in an ASP.NET application. This class is the base class for applications that are defined by the user in the Global.asax file.","nodes":[{"content":"Defines the methods, properties, and events that are common to all application objects in an ASP.NET application. This class is the base class for applications that are defined by the user in the Global.asax file.","pos":[0,213],"nodes":[{"content":"Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.","pos":[0,113]},{"content":"This class is the base class for applications that are defined by the user in the Global.asax file.","pos":[114,213]}]}]}],"pos":[7757,7971],"yaml":true},{"content":"Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly. One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime. However, it can process only one request at a time. Thus, member variables can be used to store per-request data.  \n  \n An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file. Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.  \n  \n <xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).  \n  \n> [!NOTE]\n>  When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline. Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.  \n  \n The application events are raised in the following order:  \n  \n1.  <xref:System.Web.HttpApplication.BeginRequest>  \n  \n2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  \n  \n3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  \n  \n4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  \n  \n5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  \n  \n6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  \n  \n7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  \n  \n     After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created. When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised. When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.  \n  \n8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  \n  \n9. <xref:System.Web.HttpApplication.AcquireRequestState>  \n  \n10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  \n  \n11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  \n  \n     The event handler is executed.  \n  \n12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  \n  \n13. <xref:System.Web.HttpApplication.ReleaseRequestState>  \n  \n14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  \n  \n     After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output.  \n  \n15. <xref:System.Web.HttpApplication.UpdateRequestCache>  \n  \n16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  \n  \n17. <xref:System.Web.HttpApplication.LogRequest>.  \n  \n     This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0  \n  \n18. <xref:System.Web.HttpApplication.PostLogRequest>  \n  \n     This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0  \n  \n19. <xref:System.Web.HttpApplication.EndRequest>","nodes":[{"pos":[0,349],"content":"Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly. One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime. However, it can process only one request at a time. Thus, member variables can be used to store per-request data.","nodes":[{"content":"Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly. One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime. However, it can process only one request at a time. Thus, member variables can be used to store per-request data.","pos":[0,349],"nodes":[{"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.","pos":[0,125],"source":"Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly."},{"content":"One instance of the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.","pos":[126,235],"source":" One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime."},{"content":"However, it can process only one request at a time.","pos":[236,287]},{"content":"Thus, member variables can be used to store per-request data.","pos":[288,349]}]}]},{"pos":[356,686],"content":"An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file. Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.","nodes":[{"content":"An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file. Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.","pos":[0,330],"nodes":[{"content":"An application raises events that can be handled by custom modules that implement the <ph id=\"ph1\">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.","pos":[0,191],"source":"An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file."},{"content":"Custom modules that implement the <ph id=\"ph1\">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.","pos":[192,330],"source":" Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder."}]}]},{"pos":[693,894],"content":"<xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,82],"source":"<xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[84,201],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]},{"pos":[902,1159],"content":"[!NOTE]\n When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline. Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.","leadings":["","> "],"nodes":[{"content":" When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline. Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.","pos":[8,255],"nodes":[{"content":"When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.","pos":[1,140]},{"content":"Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.","pos":[141,247]}]}]},{"pos":[1166,1223],"content":"The application events are raised in the following order:","nodes":[{"content":"The application events are raised in the following order:","pos":[0,57]}]},{"pos":[1233,1279],"content":"<xref:System.Web.HttpApplication.BeginRequest>","nodes":[]},{"pos":[1289,1342],"content":"<xref:System.Web.HttpApplication.AuthenticateRequest>","nodes":[]},{"pos":[1352,1409],"content":"<xref:System.Web.HttpApplication.PostAuthenticateRequest>","nodes":[]},{"pos":[1419,1469],"content":"<xref:System.Web.HttpApplication.AuthorizeRequest>","nodes":[]},{"pos":[1479,1533],"content":"<xref:System.Web.HttpApplication.PostAuthorizeRequest>","nodes":[]},{"pos":[1543,1596],"content":"<xref:System.Web.HttpApplication.ResolveRequestCache>","nodes":[]},{"pos":[1606,1663],"content":"<xref:System.Web.HttpApplication.PostResolveRequestCache>","nodes":[]},{"pos":[1674,2187],"content":"After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created. When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised. When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.","nodes":[{"content":"After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created. When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised. When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.","pos":[0,513],"nodes":[{"content":"After the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.","pos":[0,234],"source":"After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created."},{"content":"When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.","pos":[235,404],"source":" When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised."},{"content":"When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.","pos":[405,513]}]}]},{"pos":[2197,2252],"content":"<xref:System.Web.HttpApplication.PostMapRequestHandler>","nodes":[]},{"pos":[2261,2314],"content":"<xref:System.Web.HttpApplication.AcquireRequestState>","nodes":[]},{"pos":[2324,2381],"content":"<xref:System.Web.HttpApplication.PostAcquireRequestState>","nodes":[]},{"pos":[2391,2449],"content":"<xref:System.Web.HttpApplication.PreRequestHandlerExecute>","nodes":[]},{"pos":[2460,2490],"content":"The event handler is executed.","nodes":[{"content":"The event handler is executed.","pos":[0,30]}]},{"pos":[2500,2559],"content":"<xref:System.Web.HttpApplication.PostRequestHandlerExecute>","nodes":[]},{"pos":[2569,2622],"content":"<xref:System.Web.HttpApplication.ReleaseRequestState>","nodes":[]},{"pos":[2632,2689],"content":"<xref:System.Web.HttpApplication.PostReleaseRequestState>","nodes":[]},{"pos":[2700,2838],"content":"After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output.","nodes":[{"content":"After the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.","pos":[0,138],"source":"After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output."}]},{"pos":[2848,2900],"content":"<xref:System.Web.HttpApplication.UpdateRequestCache>","nodes":[]},{"pos":[2910,2966],"content":"<xref:System.Web.HttpApplication.PostUpdateRequestCache>","nodes":[]},{"pos":[2976,3021],"content":"<xref:System.Web.HttpApplication.LogRequest>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.","pos":[0,45],"source":"<xref:System.Web.HttpApplication.LogRequest>."}]},{"pos":[3032,3118],"content":"This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0","nodes":[{"content":"This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0","pos":[0,86]}]},{"pos":[3128,3176],"content":"<xref:System.Web.HttpApplication.PostLogRequest>","nodes":[]},{"pos":[3187,3270],"content":"This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0","nodes":[{"content":"This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0","pos":[0,83]}]},{"pos":[3280,3324],"content":"<xref:System.Web.HttpApplication.EndRequest>","nodes":[]}],"pos":[7982,11366],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.HttpApplication\"></xref> class.","nodes":[{"pos":[0,88],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.HttpApplication\"></xref> class."}],"pos":[15224,15313],"yaml":true},{"content":"Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.","nodes":[{"pos":[0,120],"content":"Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.","nodes":[{"content":"Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.","pos":[0,120]}]}],"pos":[16357,16478],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,115],"content":"The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.","pos":[0,115],"source":"The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created."}]},{"pos":[122,269],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[16489,16763],"yaml":true,"extradata":"MT"},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request."}],"pos":[18333,18568],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[18788,18954],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[19025,19187],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request."}],"pos":[20592,20827],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[21089,21255],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[21334,21496],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,116],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[21557,21674],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request."}],"pos":[23013,23248],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>."}],"pos":[23468,23634],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>."}],"pos":[23705,23867],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request."}],"pos":[25272,25507],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>."}],"pos":[25769,25935],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>."}],"pos":[26014,26176],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.","nodes":[{"pos":[0,116],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>."}],"pos":[26237,26354],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,228],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request."}],"pos":[27675,27904],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>."}],"pos":[28121,28284],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.","nodes":[{"pos":[0,158],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>."}],"pos":[28355,28514],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,228],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request."}],"pos":[29898,30127],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>."}],"pos":[30386,30549],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.","nodes":[{"pos":[0,158],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.AuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>."}],"pos":[30628,30787],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.","nodes":[{"pos":[0,116],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.AcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>."}],"pos":[30848,30965],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,220],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request."}],"pos":[32259,32480],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.","nodes":[{"pos":[0,158],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>."}],"pos":[32693,32852],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>."}],"pos":[32923,33078],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,220],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request."}],"pos":[34434,34655],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.","nodes":[{"pos":[0,158],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>."}],"pos":[34910,35069],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>."}],"pos":[35148,35303],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.","nodes":[{"pos":[0,109],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.BeginRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>."}],"pos":[35364,35474],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,216],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request."}],"pos":[36818,37035],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>."}],"pos":[37288,37445],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>."}],"pos":[37524,37677],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.","nodes":[{"pos":[0,107],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>."}],"pos":[37738,37846],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,216],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request."}],"pos":[39122,39339],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>."}],"pos":[39550,39707],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>."}],"pos":[39778,39931],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,216],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request."}],"pos":[41207,41424],"yaml":true},{"content":"<xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,225],"content":"<xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,106],"source":"<xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[108,225],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[41435,41661],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>."}],"pos":[41872,42029],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>."}],"pos":[42100,42253],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,216],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request."}],"pos":[43595,43812],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>."}],"pos":[44065,44222],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>."}],"pos":[44301,44454],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.","nodes":[{"pos":[0,107],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>."}],"pos":[44515,44623],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request.","nodes":[{"pos":[0,230],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request."}],"pos":[45941,46172],"yaml":true},{"content":"<xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,232],"content":"<xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,113],"source":"<xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[115,232],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[46183,46416],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>."}],"pos":[46634,46798],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>."}],"pos":[46869,47029],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request.","nodes":[{"pos":[0,230],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request."}],"pos":[48420,48651],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>."}],"pos":[48911,49075],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>."}],"pos":[49154,49314],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.","nodes":[{"pos":[0,114],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.MapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>."}],"pos":[49375,49490],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request."}],"pos":[50851,51094],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>."}],"pos":[51318,51488],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>."}],"pos":[51559,51725],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request."}],"pos":[53158,53401],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>."}],"pos":[53667,53837],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>."}],"pos":[53916,54082],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.","nodes":[{"pos":[0,120],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>."}],"pos":[54143,54264],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event handlers for the current request."}],"pos":[55631,55874],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>."}],"pos":[56098,56268],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>."}],"pos":[56339,56505],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,236],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request."}],"pos":[57938,58175],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[58441,58608],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[58687,58850],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,117],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[58911,59029],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,230],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request."}],"pos":[60444,60675],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[60938,61105],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[61184,61347],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,117],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[61408,61526],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,236],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request."}],"pos":[62872,63109],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[63330,63497],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>."}],"pos":[63568,63731],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,224],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request."}],"pos":[65041,65266],"yaml":true},{"content":"<xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,229],"content":"<xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,110],"source":"<xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[112,229],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[65277,65507],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>."}],"pos":[65722,65883],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>."}],"pos":[65954,66111],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request.","nodes":[{"pos":[0,224],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request."}],"pos":[67481,67706],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>."}],"pos":[67963,68124],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>."}],"pos":[68203,68360],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.","nodes":[{"pos":[0,111],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostLogRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>."}],"pos":[68421,68533],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request.","nodes":[{"pos":[0,238],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request."}],"pos":[69879,70118],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>."}],"pos":[70340,70508],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>."}],"pos":[70579,70743],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request.","nodes":[{"pos":[0,238],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request."}],"pos":[72162,72401],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>."}],"pos":[72665,72833],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>."}],"pos":[72912,73076],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> collection.","nodes":[{"pos":[0,129],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"&gt;&lt;/xref&gt;</ph> collection.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> collection."}],"pos":[73137,73267],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request."}],"pos":[74632,74875],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>."}],"pos":[75099,75269],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>."}],"pos":[75340,75506],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request."}],"pos":[76939,77182],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>."}],"pos":[77448,77618],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>."}],"pos":[77697,77863],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.","nodes":[{"pos":[0,120],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>."}],"pos":[77924,78045],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request.","nodes":[{"pos":[0,246],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request."}],"pos":[79424,79671],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>."}],"pos":[79897,80069],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>."}],"pos":[80140,80308],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request.","nodes":[{"pos":[0,246],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request."}],"pos":[81755,82002],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>."}],"pos":[82270,82442],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>."}],"pos":[82521,82689],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,122],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>."}],"pos":[82750,82873],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request."}],"pos":[84308,84551],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>."}],"pos":[84817,84987],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>."}],"pos":[85066,85232],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.","nodes":[{"pos":[0,120],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>."}],"pos":[85293,85414],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request."}],"pos":[86781,87024],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>."}],"pos":[87248,87418],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>."}],"pos":[87489,87655],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,240],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request."}],"pos":[89016,89257],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.","nodes":[{"pos":[0,168],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>."}],"pos":[89480,89649],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>."}],"pos":[89720,89885],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,240],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request."}],"pos":[91311,91552],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the event.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the event.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the event."}],"pos":[91817,91921],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>."}],"pos":[92000,92165],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.","nodes":[{"pos":[0,119],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>."}],"pos":[92226,92346],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request.","nodes":[{"pos":[0,244],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request."}],"pos":[93718,93963],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>."}],"pos":[94188,94359],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>."}],"pos":[94430,94597],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request.","nodes":[{"pos":[0,244],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request."}],"pos":[96037,96282],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>."}],"pos":[96549,96720],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>."}],"pos":[96799,96966],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> collection.","nodes":[{"pos":[0,132],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"&gt;&lt;/xref&gt;</ph> collection.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> collection."}],"pos":[97027,97160],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request."}],"pos":[98504,98739],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>."}],"pos":[98959,99125],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>."}],"pos":[99196,99358],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request.","nodes":[{"pos":[0,234],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request."}],"pos":[100763,100998],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>."}],"pos":[101260,101426],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>."}],"pos":[101505,101667],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.","nodes":[{"pos":[0,116],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ReleaseRequestState\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>."}],"pos":[101728,101845],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handler to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request."}],"pos":[103184,103427],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>."}],"pos":[103647,103813],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>."}],"pos":[103884,104046],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,242],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handler to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request."}],"pos":[105451,105694],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.","nodes":[{"pos":[0,165],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>."}],"pos":[105956,106122],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>."}],"pos":[106201,106363],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.","nodes":[{"pos":[0,116],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.ResolveRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>."}],"pos":[106424,106541],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,232],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request."}],"pos":[107874,108107],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>."}],"pos":[108326,108491],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>."}],"pos":[108562,108723],"yaml":true},{"content":"Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request.","nodes":[{"pos":[0,232],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph> event handlers for the current request.","source":"Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request."}],"pos":[110121,110354],"yaml":true},{"content":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>."}],"pos":[110615,110780],"yaml":true},{"content":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>."}],"pos":[110859,111020],"yaml":true},{"content":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.","nodes":[{"pos":[0,115],"content":"The associated state to add to the asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.UpdateRequestCache\"&gt;&lt;/xref&gt;</ph>.","source":"The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>."}],"pos":[111081,111197],"yaml":true},{"content":"Gets the current state of an application.","nodes":[{"pos":[0,41],"content":"Gets the current state of an application.","nodes":[{"content":"Gets the current state of an application.","pos":[0,41]}]}],"pos":[112150,112192],"yaml":true},{"content":"The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.","nodes":[{"pos":[0,235],"content":"The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.","nodes":[{"content":"The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.","pos":[0,235]}]}],"pos":[112203,112439],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpApplicationState\"></xref> for the current request.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpApplicationState\"></xref> for the current request."}],"pos":[112654,112736],"yaml":true},{"content":"Occurs when a security module has established the identity of the user.","nodes":[{"pos":[0,71],"content":"Occurs when a security module has established the identity of the user.","nodes":[{"content":"Occurs when a security module has established the identity of the user.","pos":[0,71]}]}],"pos":[113782,113854],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,337],"content":"The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.","nodes":[{"content":"The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.","pos":[0,337],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.","pos":[0,155],"source":"The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request."},{"content":"Subscribing to the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.","pos":[156,337],"source":" Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler."}]}]},{"pos":[344,491],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[113865,114361],"yaml":true,"extradata":"MT"},{"content":"Occurs when a security module has verified user authorization.","nodes":[{"pos":[0,62],"content":"Occurs when a security module has verified user authorization.","nodes":[{"content":"Occurs when a security module has verified user authorization.","pos":[0,62]}]}],"pos":[115408,115471],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,311],"content":"The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.","nodes":[{"content":"The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.","pos":[0,311],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.","pos":[0,117],"source":"The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request."},{"content":"Subscribing to the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.","pos":[118,311],"source":" Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler."}]}]},{"pos":[318,465],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[115482,115952],"yaml":true,"extradata":"MT"},{"content":"Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","nodes":[{"pos":[0,101],"content":"Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","nodes":[{"content":"Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","pos":[0,101]}]}],"pos":[116972,117074],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request. This event is always raised and is always the first event to occur during the processing of a request.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,206],"content":"The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request. This event is always raised and is always the first event to occur during the processing of a request.","nodes":[{"content":"The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request. This event is always raised and is always the first event to occur during the processing of a request.","pos":[0,206],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.","pos":[0,103],"source":"The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request."},{"content":"This event is always raised and is always the first event to occur during the processing of a request.","pos":[104,206]}]}]},{"pos":[213,360],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[117085,117450],"yaml":true,"extradata":"MT"},{"content":"Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event.","nodes":[{"pos":[0,180],"content":"Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;&lt;/xref&gt;</ph> event.","source":"Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event."}],"pos":[118491,118672],"yaml":true},{"content":"Gets HTTP-specific information about the current request.","nodes":[{"pos":[0,57],"content":"Gets HTTP-specific information about the current request.","nodes":[{"content":"Gets HTTP-specific information about the current request.","pos":[0,57]}]}],"pos":[119662,119720],"yaml":true},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[119913,119986],"yaml":true},{"content":"Disposes the <xref href=\"System.Web.HttpApplication\"></xref> instance.","nodes":[{"pos":[0,70],"content":"Disposes the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;&lt;/xref&gt;</ph> instance.","source":"Disposes the <xref href=\"System.Web.HttpApplication\"></xref> instance."}],"pos":[120963,121034],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes.  \n  \n The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event.","nodes":[{"pos":[0,303],"content":"The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id=\"ph5\">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.","pos":[0,303],"source":"The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes."}]},{"pos":[310,611],"content":"The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id=\"ph3\">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id=\"ph4\">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.","pos":[0,301],"source":"The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event."}]}],"pos":[121045,121661],"yaml":true,"extradata":"MT"},{"content":"Occurs when the application is disposed.","nodes":[{"pos":[0,40],"content":"Occurs when the application is disposed.","nodes":[{"content":"Occurs when the application is disposed.","pos":[0,40]}]}],"pos":[122646,122687],"yaml":true},{"content":"When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event. The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,385],"content":"When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event. The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.","nodes":[{"content":"When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event. The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.","pos":[0,385],"nodes":[{"content":"When you create a <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.","pos":[0,118],"source":"When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event."},{"content":"To associate the event with your event handler, add an instance of the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.","pos":[119,255],"source":" To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event."},{"content":"The event handler is called whenever the event occurs, unless you remove the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.","pos":[256,385],"source":" The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate."}]}]},{"pos":[392,539],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[122698,123242],"yaml":true,"extradata":"MT"},{"content":"Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","nodes":[{"pos":[0,100],"content":"Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","nodes":[{"content":"Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.","pos":[0,100]}]}],"pos":[124242,124343],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,151],"content":"The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.","pos":[0,151],"source":"The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called."}]},{"pos":[158,305],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[124354,124664],"yaml":true,"extradata":"MT"},{"content":"Occurs when an unhandled exception is thrown.","nodes":[{"pos":[0,45],"content":"Occurs when an unhandled exception is thrown.","nodes":[{"content":"Occurs when an unhandled exception is thrown.","pos":[0,45]}]}],"pos":[125636,125682],"yaml":true},{"content":"The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method. If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n> [!NOTE]\n>  If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services. The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called. To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,358],"content":"The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method. If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.","nodes":[{"content":"The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method. If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.","pos":[0,358],"nodes":[{"content":"The exception that raises the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id=\"ph2\">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.","pos":[0,168],"source":"The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method."},{"content":"If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id=\"ph1\">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.","pos":[169,358],"source":" If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method."}]}]},{"pos":[366,866],"content":"[!NOTE]\n If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services. The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called. To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.","leadings":["","> "],"nodes":[{"content":" If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services. The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called. To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.","pos":[8,498],"nodes":[{"content":"If your Web application contains XML Web services, you cannot use the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.","pos":[1,165],"source":" If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services."},{"content":"The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.","pos":[166,357],"source":" The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called."},{"content":"To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.","pos":[358,490]}]}]},{"pos":[873,1020],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[125693,126721],"yaml":true,"extradata":"MT"},{"content":"Gets the list of event handler delegates that process all application events.","nodes":[{"pos":[0,77],"content":"Gets the list of event handler delegates that process all application events.","nodes":[{"content":"Gets the list of event handler delegates that process all application events.","pos":[0,77]}]}],"pos":[127697,127775],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.EventHandlerList\"></xref> that contains the names of the event handler delegates.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.EventHandlerList\"&gt;&lt;/xref&gt;</ph> that contains the names of the event handler delegates.","source":"An <xref href=\"System.ComponentModel.EventHandlerList\"></xref> that contains the names of the event handler delegates."}],"pos":[127945,128064],"yaml":true},{"content":"Gets the name of the default output-cache provider that is configured for a Web site.","nodes":[{"pos":[0,85],"content":"Gets the name of the default output-cache provider that is configured for a Web site.","nodes":[{"content":"Gets the name of the default output-cache provider that is configured for a Web site.","pos":[0,85]}]}],"pos":[129194,129280],"yaml":true},{"content":"You can override this method and use it to return the name of any output-cache provider that is configured for a Web site. ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.  \n  \n By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache. You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`.  \n  \n In addition, you can select different output-cache providers for individual control and for individual requests. The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:  \n  \n```  \n<%@ OutputCache Duration=\"60\" VaryByParam=\"None\"   \n    providerName=\"DiskCache\" %>  \n```  \n  \n To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request. For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).","nodes":[{"pos":[0,250],"content":"You can override this method and use it to return the name of any output-cache provider that is configured for a Web site. ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.","nodes":[{"content":"You can override this method and use it to return the name of any output-cache provider that is configured for a Web site. ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.","pos":[0,250],"nodes":[{"content":"You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.","pos":[0,122]},{"content":"ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.","pos":[123,250]}]}]},{"pos":[257,508],"content":"By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache. You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`.","nodes":[{"content":"By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.","pos":[0,104]},{"content":"You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id=\"ph1\">`defaultProvider`</ph>.","pos":[105,251],"source":" You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`."}]},{"pos":[515,854],"content":"In addition, you can select different output-cache providers for individual control and for individual requests. The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:","nodes":[{"content":"In addition, you can select different output-cache providers for individual control and for individual requests.","pos":[0,112]},{"content":"The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id=\"ph1\">`providerName`</ph> attribute in a page or control directive, as shown in the following example:","pos":[113,339],"source":" The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:"}]},{"pos":[962,1276],"content":"To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request. For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).","nodes":[{"content":"To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.","pos":[0,188]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Caching Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.","pos":[189,314],"source":" For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)."}]}],"pos":[129291,130587],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.","source":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests."}],"pos":[131557,131697],"yaml":true},{"content":"The name of the default provider.","nodes":[{"pos":[0,33],"content":"The name of the default provider.","nodes":[{"content":"The name of the default provider.","pos":[0,33]}]}],"pos":[131754,131788],"yaml":true},{"content":"<code>context</code> is `null` or is an empty string.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or is an empty string.","source":"<code>context</code> is `null` or is an empty string."}],"pos":[132009,132063],"yaml":true},{"content":"Provides an application-wide implementation of the <xref href=\"System.Web.UI.PartialCachingAttribute.VaryByCustom\"></xref> property.","nodes":[{"pos":[0,132],"content":"Provides an application-wide implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.PartialCachingAttribute.VaryByCustom\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides an application-wide implementation of the <xref href=\"System.Web.UI.PartialCachingAttribute.VaryByCustom\"></xref> property."}],"pos":[133165,133298],"yaml":true},{"content":"You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request. The implementation has to call the base class for custom values that it does not recognize. For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).","nodes":[{"pos":[0,419],"content":"You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request. The implementation has to call the base class for custom values that it does not recognize. For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).","nodes":[{"content":"You can override <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.","pos":[0,172],"source":"You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request."},{"content":"The implementation has to call the base class for custom values that it does not recognize.","pos":[173,264]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id=\"p1\">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.","pos":[265,419],"source":" For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)."}]}],"pos":[133309,133731],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpContext\"></xref> object that contains information about the current Web request.","nodes":[{"pos":[0,110],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> object that contains information about the current Web request.","source":"An <xref href=\"System.Web.HttpContext\"></xref> object that contains information about the current Web request."}],"pos":[133935,134046],"yaml":true},{"content":"The custom string that specifies which cached response is used to respond to the current request.","nodes":[{"pos":[0,97],"content":"The custom string that specifies which cached response is used to respond to the current request.","nodes":[{"content":"The custom string that specifies which cached response is used to respond to the current request.","pos":[0,97]}]}],"pos":[134108,134206],"yaml":true},{"content":"If the value of the <code>custom</code> parameter is `\"browser\"`, the browser's <xref href=\"System.Web.Configuration.HttpCapabilitiesBase.Type\"></xref>; otherwise, `null`.","nodes":[{"pos":[0,171],"content":"If the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">custom</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`\"browser\"`</ph>, the browser's <ph id=\"ph3\">&lt;xref href=\"System.Web.Configuration.HttpCapabilitiesBase.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`null`</ph>.","source":"If the value of the <code>custom</code> parameter is `\"browser\"`, the browser's <xref href=\"System.Web.Configuration.HttpCapabilitiesBase.Type\"></xref>; otherwise, `null`."}],"pos":[134263,134435],"yaml":true},{"content":"Executes custom initialization code after all event handler modules have been added.","nodes":[{"pos":[0,84],"content":"Executes custom initialization code after all event handler modules have been added.","nodes":[{"content":"Executes custom initialization code after all event handler modules have been added.","pos":[0,84]}]}],"pos":[135343,135428],"yaml":true},{"content":"In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code.","nodes":[{"pos":[0,133],"content":"In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code.","nodes":[{"content":"In a derived class, you can override the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.","pos":[0,133],"source":"In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code."}]}],"pos":[135439,135573],"yaml":true,"extradata":"MT"},{"content":"Occurs just before ASP.NET performs any logging for the current request.","nodes":[{"pos":[0,72],"content":"Occurs just before ASP.NET performs any logging for the current request.","nodes":[{"content":"Occurs just before ASP.NET performs any logging for the current request.","pos":[0,72]}]}],"pos":[136564,136637],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs. You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n <xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,224],"content":"The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs. You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.","nodes":[{"content":"The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs. You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.","pos":[0,89],"source":"The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs."},{"content":"You can provide an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.","pos":[90,224],"source":" You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request."}]}]},{"pos":[231,378],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[385,597],"content":"<xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,93],"source":"<xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[95,212],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[136648,137252],"yaml":true,"extradata":"MT"},{"content":"Occurs when the handler is selected to respond to the request.","nodes":[{"pos":[0,62],"content":"Occurs when the handler is selected to respond to the request.","nodes":[{"content":"Occurs when the handler is selected to respond to the request.","pos":[0,62]}]}],"pos":[139035,139098],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request. For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n <xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,289],"content":"The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request. For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.","pos":[0,157],"source":"The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Register HTTP Handlers<ept id=\"p1\">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.","pos":[158,289],"source":" For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)."}]},{"pos":[296,443],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[450,669],"content":"<xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,100],"source":"<xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[102,219],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[139109,139785],"yaml":true,"extradata":"MT"},{"content":"Gets the collection of modules for the current application.","nodes":[{"pos":[0,59],"content":"Gets the collection of modules for the current application.","nodes":[{"content":"Gets the collection of modules for the current application.","pos":[0,59]}]}],"pos":[140779,140839],"yaml":true},{"content":"An <xref href=\"System.Web.HttpModuleCollection\"></xref> that contains the names of the modules for the application.","nodes":[{"pos":[0,115],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpModuleCollection\"&gt;&lt;/xref&gt;</ph> that contains the names of the modules for the application.","source":"An <xref href=\"System.Web.HttpModuleCollection\"></xref> that contains the names of the modules for the application."}],"pos":[141050,141166],"yaml":true},{"content":"Occurs when the request state (for example, session state) that is associated with the current request has been obtained.","nodes":[{"pos":[0,121],"content":"Occurs when the request state (for example, session state) that is associated with the current request has been obtained.","nodes":[{"content":"Occurs when the request state (for example, session state) that is associated with the current request has been obtained.","pos":[0,121]}]}],"pos":[142232,142354],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,362],"content":"The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.","nodes":[{"content":"The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.","pos":[0,362],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.","pos":[0,161],"source":"The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred."},{"content":"Functionality that subscribes to the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.","pos":[162,362],"source":" Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>."}]}]},{"pos":[369,516],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[142365,142886],"yaml":true,"extradata":"MT"},{"content":"Occurs when a security module has established the identity of the user.","nodes":[{"pos":[0,71],"content":"Occurs when a security module has established the identity of the user.","nodes":[{"content":"Occurs when a security module has established the identity of the user.","pos":[0,71]}]}],"pos":[143979,144051],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,366],"content":"The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.","nodes":[{"content":"The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.","pos":[0,366],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.","pos":[0,161],"source":"The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred."},{"content":"Functionality that subscribes to the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.","pos":[162,366],"source":" Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>."}]}]},{"pos":[373,520],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[144062,144587],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user for the current request has been authorized.","nodes":[{"pos":[0,65],"content":"Occurs when the user for the current request has been authorized.","nodes":[{"content":"Occurs when the user for the current request has been authorized.","pos":[0,65]}]}],"pos":[145662,145728],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,313],"content":"The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.","nodes":[{"content":"The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.","pos":[0,313],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.","pos":[0,121],"source":"The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request."},{"content":"Subscribing to the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.","pos":[122,313],"source":" Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler."}]}]},{"pos":[320,467],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[145739,146211],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET has completed processing all the event handlers for the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event.","nodes":[{"pos":[0,141],"content":"Occurs when ASP.NET has completed processing all the event handlers for the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplication.LogRequest\"&gt;&lt;/xref&gt;</ph> event.","source":"Occurs when ASP.NET has completed processing all the event handlers for the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event."}],"pos":[147247,147389],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n <xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[154,370],"content":"<xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,97],"source":"<xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[99,216],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[147400,147775],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET has mapped the current request to the appropriate event handler.","nodes":[{"pos":[0,84],"content":"Occurs when ASP.NET has mapped the current request to the appropriate event handler.","nodes":[{"content":"Occurs when ASP.NET has mapped the current request to the appropriate event handler.","pos":[0,84]}]}],"pos":[148847,148932],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[148943,149093],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.","nodes":[{"pos":[0,114],"content":"Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.","nodes":[{"content":"Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.","pos":[0,114]}]}],"pos":[150184,150299],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[150310,150460],"yaml":true,"extradata":"MT"},{"content":"Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.","nodes":[{"pos":[0,101],"content":"Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.","nodes":[{"content":"Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.","pos":[0,101]}]}],"pos":[151565,151667],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[151678,151828],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.","nodes":[{"pos":[0,130],"content":"Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.","nodes":[{"content":"Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.","pos":[0,130]}]}],"pos":[152923,153054],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[153065,153215],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.","nodes":[{"pos":[0,134],"content":"Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.","nodes":[{"content":"Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.","pos":[0,134]}]}],"pos":[154302,154437],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred. When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,317],"content":"The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred. When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.","nodes":[{"content":"The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred. When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.","pos":[0,317],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.","pos":[0,159],"source":"The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.","pos":[160,317],"source":" When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized."}]}]},{"pos":[324,471],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[154448,154924],"yaml":true,"extradata":"MT"},{"content":"Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).","nodes":[{"pos":[0,105],"content":"Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).","nodes":[{"content":"Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).","pos":[0,105]}]}],"pos":[156022,156128],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[156139,156289],"yaml":true,"extradata":"MT"},{"content":"Occurs just before ASP.NET sends content to the client.","nodes":[{"pos":[0,55],"content":"Occurs just before ASP.NET sends content to the client.","nodes":[{"content":"Occurs just before ASP.NET sends content to the client.","pos":[0,55]}]}],"pos":[157371,157427],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,91],"content":"The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.","pos":[0,91],"source":"The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times."}]},{"pos":[98,245],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[157438,157688],"yaml":true,"extradata":"MT"},{"content":"Occurs just before ASP.NET sends HTTP headers to the client.","nodes":[{"pos":[0,60],"content":"Occurs just before ASP.NET sends HTTP headers to the client.","nodes":[{"content":"Occurs just before ASP.NET sends HTTP headers to the client.","pos":[0,60]}]}],"pos":[158767,158828],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[158839,158989],"yaml":true,"extradata":"MT"},{"content":"Registers an application module.","nodes":[{"pos":[0,32],"content":"Registers an application module.","nodes":[{"content":"Registers an application module.","pos":[0,32]}]}],"pos":[160084,160117],"yaml":true},{"content":"The type of the module.","nodes":[{"pos":[0,23],"content":"The type of the module.","nodes":[{"content":"The type of the module.","pos":[0,23]}]}],"pos":[160273,160297],"yaml":true},{"content":"Occurs after ASP.NET finishes executing all request event handlers. This event causes state modules to save the current state data.","nodes":[{"pos":[0,131],"content":"Occurs after ASP.NET finishes executing all request event handlers. This event causes state modules to save the current state data.","nodes":[{"content":"Occurs after ASP.NET finishes executing all request event handlers. This event causes state modules to save the current state data.","pos":[0,131],"nodes":[{"content":"Occurs after ASP.NET finishes executing all request event handlers.","pos":[0,67]},{"content":"This event causes state modules to save the current state data.","pos":[68,131]}]}]}],"pos":[161281,161413],"yaml":true},{"content":"When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,176],"content":"When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.","pos":[0,176],"source":"When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state."}]},{"pos":[183,330],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[161424,161759],"yaml":true,"extradata":"MT"},{"content":"Gets the intrinsic request object for the current request.","nodes":[{"pos":[0,58],"content":"Gets the intrinsic request object for the current request.","nodes":[{"content":"Gets the intrinsic request object for the current request.","pos":[0,58]}]}],"pos":[162755,162814],"yaml":true},{"content":"The <xref href=\"System.Web.HttpRequest\"></xref> object that the application is processing.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;&lt;/xref&gt;</ph> object that the application is processing.","source":"The <xref href=\"System.Web.HttpRequest\"></xref> object that the application is processing."}],"pos":[163007,163098],"yaml":true},{"content":"The <xref href=\"System.Web.HttpRequest\"></xref> object is `null`.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpRequest\"&gt;&lt;/xref&gt;</ph> object is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Web.HttpRequest\"></xref> object is `null`."}],"pos":[163254,163320],"yaml":true},{"content":"Occurs when the managed objects that are associated with the request have been released.","nodes":[{"pos":[0,88],"content":"Occurs when the managed objects that are associated with the request have been released.","nodes":[{"content":"Occurs when the managed objects that are associated with the request have been released.","pos":[0,88]}]}],"pos":[164279,164368],"yaml":true},{"content":"The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called. It enables modules to clean up resources after all managed modules and handlers have executed. Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.","nodes":[{"pos":[0,370],"content":"The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called. It enables modules to clean up resources after all managed modules and handlers have executed. Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.","nodes":[{"content":"The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called. It enables modules to clean up resources after all managed modules and handlers have executed. Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.","pos":[0,370],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.","pos":[0,151],"source":"The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called."},{"content":"It enables modules to clean up resources after all managed modules and handlers have executed.","pos":[152,246]},{"content":"Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.","pos":[247,370]}]}]}],"pos":[164379,164750],"yaml":true,"extradata":"MT"},{"content":"Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).","nodes":[{"pos":[0,195],"content":"Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).","nodes":[{"content":"Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).","pos":[0,195]}]}],"pos":[165812,166008],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[166019,166169],"yaml":true,"extradata":"MT"},{"content":"Gets the intrinsic response object for the current request.","nodes":[{"pos":[0,59],"content":"Gets the intrinsic response object for the current request.","nodes":[{"content":"Gets the intrinsic response object for the current request.","pos":[0,59]}]}],"pos":[167171,167231],"yaml":true},{"content":"The <xref href=\"System.Web.HttpResponse\"></xref> object that the application is processing.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;&lt;/xref&gt;</ph> object that the application is processing.","source":"The <xref href=\"System.Web.HttpResponse\"></xref> object that the application is processing."}],"pos":[167427,167519],"yaml":true},{"content":"The <xref href=\"System.Web.HttpResponse\"></xref> object is `null`.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;&lt;/xref&gt;</ph> object is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Web.HttpResponse\"></xref> object is `null`."}],"pos":[167676,167743],"yaml":true},{"content":"Gets the intrinsic server object for the current request.","nodes":[{"pos":[0,57],"content":"Gets the intrinsic server object for the current request.","nodes":[{"content":"Gets the intrinsic server object for the current request.","pos":[0,57]}]}],"pos":[168645,168703],"yaml":true},{"content":"The <xref href=\"System.Web.HttpServerUtility\"></xref> object that the application is processing.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpServerUtility\"&gt;&lt;/xref&gt;</ph> object that the application is processing.","source":"The <xref href=\"System.Web.HttpServerUtility\"></xref> object that the application is processing."}],"pos":[168907,169004],"yaml":true},{"content":"Gets the intrinsic session object that provides access to session data.","nodes":[{"pos":[0,71],"content":"Gets the intrinsic session object that provides access to session data.","nodes":[{"content":"Gets the intrinsic session object that provides access to session data.","pos":[0,71]}]}],"pos":[169976,170048],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object for the current session.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState\"&gt;&lt;/xref&gt;</ph> object for the current session.","source":"The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object for the current session."}],"pos":[170277,170375],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object is `null`.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState\"&gt;&lt;/xref&gt;</ph> object is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object is `null`."}],"pos":[170531,170615],"yaml":true},{"content":"Gets or sets a site interface for an <xref href=\"System.ComponentModel.IComponent\"></xref> implementation.","nodes":[{"pos":[0,106],"content":"Gets or sets a site interface for an <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Gets or sets a site interface for an <xref href=\"System.ComponentModel.IComponent\"></xref> implementation."}],"pos":[171505,171612],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ISite\"></xref> object that allows a container to manage and communicate with its child components.","nodes":[{"pos":[0,135],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ISite\"&gt;&lt;/xref&gt;</ph> object that allows a container to manage and communicate with its child components.","source":"An <xref href=\"System.ComponentModel.ISite\"></xref> object that allows a container to manage and communicate with its child components."}],"pos":[171817,171953],"yaml":true},{"content":"Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.","nodes":[{"pos":[0,166],"content":"Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.","nodes":[{"content":"Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.","pos":[0,166]}]}],"pos":[172986,173153],"yaml":true},{"content":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,147],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[173164,173314],"yaml":true,"extradata":"MT"},{"content":"Gets the intrinsic user object for the current request.","nodes":[{"pos":[0,55],"content":"Gets the intrinsic user object for the current request.","nodes":[{"content":"Gets the intrinsic user object for the current request.","pos":[0,55]}]}],"pos":[174291,174347],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that represents the current authenticated or anonymous user.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IPrincipal\"&gt;&lt;/xref&gt;</ph> object that represents the current authenticated or anonymous user.","source":"The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that represents the current authenticated or anonymous user."}],"pos":[174565,174695],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object is `null`.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IPrincipal\"&gt;&lt;/xref&gt;</ph> object is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object is `null`."}],"pos":[174848,174928],"yaml":true},{"content":"Initiates an asynchronous call to the HTTP event handler.","nodes":[{"pos":[0,57],"content":"Initiates an asynchronous call to the HTTP event handler.","nodes":[{"content":"Initiates an asynchronous call to the HTTP event handler.","pos":[0,57]}]}],"pos":[176346,176404],"yaml":true},{"content":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.","source":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests."}],"pos":[176636,176776],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> to call when the asynchronous method call is complete. If the <code>cb</code> parameter is `null`, the delegate is not called.","nodes":[{"pos":[0,172],"content":"The <xref href=\"System.AsyncCallback\"></xref> to call when the asynchronous method call is complete. If the <code>cb</code> parameter is `null`, the delegate is not called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> to call when the asynchronous method call is complete.","pos":[0,100],"source":"The <xref href=\"System.AsyncCallback\"></xref> to call when the asynchronous method call is complete."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, the delegate is not called.","pos":[101,172],"source":" If the <code>cb</code> parameter is `null`, the delegate is not called."}]}],"pos":[176841,177014],"yaml":true},{"content":"Any extra data that is required to process the request.","nodes":[{"pos":[0,55],"content":"Any extra data that is required to process the request.","nodes":[{"content":"Any extra data that is required to process the request.","pos":[0,55]}]}],"pos":[177079,177135],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process.","nodes":[{"pos":[0,102],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that contains information about the status of the process.","source":"An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process."}],"pos":[177198,177301],"yaml":true},{"content":"Provides an asynchronous process `End` method when the process finishes.","nodes":[{"pos":[0,72],"content":"Provides an asynchronous process <ph id=\"ph1\">`End`</ph> method when the process finishes.","source":"Provides an asynchronous process `End` method when the process finishes."}],"pos":[178568,178641],"yaml":true},{"content":"You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process.","nodes":[{"pos":[0,185],"content":"You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.","pos":[0,185],"source":"You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process."}]}],"pos":[178652,178838],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process.","nodes":[{"pos":[0,102],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that contains information about the status of the process.","source":"An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process."}],"pos":[179009,179112],"yaml":true},{"content":"Gets a `Boolean` value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> object.","nodes":[{"pos":[0,122],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> value indicating whether another request can use the <ph id=\"ph2\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a `Boolean` value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> object."}],"pos":[180202,180325],"yaml":true},{"content":"To explicitly set the `IsReusable` property to `true` or `false`, provide code that overrides the `IsReusable` property accessor.","nodes":[{"pos":[0,129],"content":"To explicitly set the <ph id=\"ph1\">`IsReusable`</ph> property to <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph>, provide code that overrides the <ph id=\"ph4\">`IsReusable`</ph> property accessor.","source":"To explicitly set the `IsReusable` property to `true` or `false`, provide code that overrides the `IsReusable` property accessor."}],"pos":[180336,180466],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> object is reusable; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> object is reusable; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> object is reusable; otherwise, `false`."}],"pos":[180596,180697],"yaml":true},{"content":"Enables processing of HTTP Web requests by a custom HTTP handler that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface.","nodes":[{"pos":[0,140],"content":"Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id=\"ph1\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> interface.","source":"Enables processing of HTTP Web requests by a custom HTTP handler that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface."}],"pos":[181908,182049],"yaml":true},{"content":"Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request. The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request.","nodes":[{"pos":[0,306],"content":"Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request. The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request.","nodes":[{"content":"Classes that inherit the <ph id=\"ph1\">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id=\"ph3\">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.","pos":[0,201],"source":"Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request."},{"content":"The object provides access to the intrinsic <ph id=\"ph1\">`Request`</ph>, <ph id=\"ph2\">`Response`</ph>, and <ph id=\"ph3\">`Server`</ph> objects for the request.","pos":[202,306],"source":" The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request."}]}],"pos":[182060,182367],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to the intrinsic server objects that are used to service HTTP requests.","nodes":[{"pos":[0,143],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.","source":"An <xref href=\"System.Web.HttpContext\"></xref> that provides references to the intrinsic server objects that are used to service HTTP requests."}],"pos":[182545,182689],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[182876,182890],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpApplication\n  commentId: T:System.Web.HttpApplication\n  id: HttpApplication\n  children:\n  - System.Web.HttpApplication.#ctor\n  - System.Web.HttpApplication.AcquireRequestState\n  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  - System.Web.HttpApplication.Application\n  - System.Web.HttpApplication.AuthenticateRequest\n  - System.Web.HttpApplication.AuthorizeRequest\n  - System.Web.HttpApplication.BeginRequest\n  - System.Web.HttpApplication.CompleteRequest\n  - System.Web.HttpApplication.Context\n  - System.Web.HttpApplication.Dispose\n  - System.Web.HttpApplication.Disposed\n  - System.Web.HttpApplication.EndRequest\n  - System.Web.HttpApplication.Error\n  - System.Web.HttpApplication.Events\n  - System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)\n  - System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)\n  - System.Web.HttpApplication.Init\n  - System.Web.HttpApplication.LogRequest\n  - System.Web.HttpApplication.MapRequestHandler\n  - System.Web.HttpApplication.Modules\n  - System.Web.HttpApplication.PostAcquireRequestState\n  - System.Web.HttpApplication.PostAuthenticateRequest\n  - System.Web.HttpApplication.PostAuthorizeRequest\n  - System.Web.HttpApplication.PostLogRequest\n  - System.Web.HttpApplication.PostMapRequestHandler\n  - System.Web.HttpApplication.PostReleaseRequestState\n  - System.Web.HttpApplication.PostRequestHandlerExecute\n  - System.Web.HttpApplication.PostResolveRequestCache\n  - System.Web.HttpApplication.PostUpdateRequestCache\n  - System.Web.HttpApplication.PreRequestHandlerExecute\n  - System.Web.HttpApplication.PreSendRequestContent\n  - System.Web.HttpApplication.PreSendRequestHeaders\n  - System.Web.HttpApplication.RegisterModule(System.Type)\n  - System.Web.HttpApplication.ReleaseRequestState\n  - System.Web.HttpApplication.Request\n  - System.Web.HttpApplication.RequestCompleted\n  - System.Web.HttpApplication.ResolveRequestCache\n  - System.Web.HttpApplication.Response\n  - System.Web.HttpApplication.Server\n  - System.Web.HttpApplication.Session\n  - System.Web.HttpApplication.Site\n  - System.Web.HttpApplication.UpdateRequestCache\n  - System.Web.HttpApplication.User\n  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  - System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable\n  - System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)\n  langs:\n  - csharp\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Defines the methods, properties, and events that are common to all application objects in an ASP.NET application. This class is the base class for applications that are defined by the user in the Global.asax file.\n  remarks: \"Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly. One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime. However, it can process only one request at a time. Thus, member variables can be used to store per-request data.  \\n  \\n An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file. Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.  \\n  \\n <xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).  \\n  \\n> [!NOTE]\\n>  When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline. Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.  \\n  \\n The application events are raised in the following order:  \\n  \\n1.  <xref:System.Web.HttpApplication.BeginRequest>  \\n  \\n2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  \\n  \\n3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  \\n  \\n4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  \\n  \\n5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  \\n  \\n6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  \\n  \\n7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  \\n  \\n     After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created. When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised. When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.  \\n  \\n8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  \\n  \\n9. <xref:System.Web.HttpApplication.AcquireRequestState>  \\n  \\n10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  \\n  \\n11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  \\n  \\n     The event handler is executed.  \\n  \\n12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  \\n  \\n13. <xref:System.Web.HttpApplication.ReleaseRequestState>  \\n  \\n14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  \\n  \\n     After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output.  \\n  \\n15. <xref:System.Web.HttpApplication.UpdateRequestCache>  \\n  \\n16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  \\n  \\n17. <xref:System.Web.HttpApplication.LogRequest>.  \\n  \\n     This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0  \\n  \\n18. <xref:System.Web.HttpApplication.PostLogRequest>  \\n  \\n     This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0  \\n  \\n19. <xref:System.Web.HttpApplication.EndRequest>\"\n  example:\n  - \"The following two examples demonstrate how to use the <xref:System.Web.HttpApplication> class and its events. The first example demonstrates how to create a custom HTTP module and connect an event to it. The second example demonstrates how to modify the Web.config file.  \\n  \\n The following example demonstrates how to create a custom HTTP module and connect the <xref:System.Web.HttpApplication.AcquireRequestState> event to the HTTP module. HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests. Any HTTP module that subscribes to an <xref:System.Web.HttpApplication> event must implement the <xref:System.Web.IHttpModule> interface.  \\n  \\n [!code-csharp[System.Web.HttpApplication1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpApplication1/cs/source.cs#1)]\\n [!code-vb[System.Web.HttpApplication1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpApplication1/vb/source.vb#1)]  \\n  \\n Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module. The following example shows the appropriate configuration setting in the `httpModules` section of the Web.config file. The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.  \\n  \\n```csharp  \\n<configuration>  \\n  <system.web>  \\n    <httpModules>  \\n      <add type=\\\"Samples.AspNet.CS.CustomHTTPModule\\\"  \\n        name=\\\"CustomHttpModule\\\" />  \\n      </httpModules>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n```vb  \\n<configuration>  \\n  <system.web>  \\n    <httpModules>  \\n      <add type=\\\"Samples.AspNet.VB.CustomHTTPModule\\\"  \\n        name=\\\"CustomHttpModule\\\" />  \\n      </httpModules>  \\n  </system.web>  \\n</configuration>  \\n```  \\n  \\n The following setting applies to IIS 7.0 Integrated mode.  \\n  \\n```csharp  \\n<configuration>  \\n  <system.webServer>  \\n    <modules>  \\n      <add type=\\\"Samples.AspNet.CS.CustomHTTPModule\\\"  \\n        name=\\\"CustomHttpModule\\\" />  \\n      </modules>  \\n  </system.webServer>  \\n</configuration>  \\n```  \\n  \\n```vb  \\n<configuration>  \\n  <system.webServer>  \\n    <modules>  \\n      <add type=\\\"Samples.AspNet.VB.CustomHTTPModule\\\"  \\n        name=\\\"CustomHttpModule\\\" />  \\n      <modules>  \\n  </system.webServer>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.IComponent\n  - System.IDisposable\n  - System.Web.IHttpAsyncHandler\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.#ctor\n  commentId: M:System.Web.HttpApplication.#ctor\n  id: '#ctor'\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: HttpApplication()\n  nameWithType: HttpApplication.HttpApplication()\n  fullName: HttpApplication.HttpApplication()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpApplication\"></xref> class.\n  syntax:\n    content: public HttpApplication ();\n    parameters: []\n  overload: System.Web.HttpApplication.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AcquireRequestState\n  commentId: E:System.Web.HttpApplication.AcquireRequestState\n  id: AcquireRequestState\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AcquireRequestState\n  nameWithType: HttpApplication.AcquireRequestState\n  fullName: HttpApplication.AcquireRequestState\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.\n  remarks: \"The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - For an example of handling the <xref:System.Web.HttpApplication.AcquireRequestState> event, see the <xref:System.Web.HttpApplication> overview topic.\n  syntax:\n    content: public event EventHandler AcquireRequestState;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AuthenticateRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.AuthorizeRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.AcquireRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.BeginRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnEndRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnEndRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request.\n  remarks: <xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  syntax:\n    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnLogRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.LogRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnLogRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request.\n  remarks: <xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  syntax:\n    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.\n  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.MapRequestHandler\"></xref>.\n  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAcquireRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthenticateRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostAuthorizeRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request.\n  remarks: <xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  syntax:\n    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostLogRequest\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostMapRequestHandler\"></xref> collection.\n  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostReleaseRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostRequestHandlerExecute\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostResolveRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the event.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PostUpdateRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.\n  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.PreRequestHandlerExecute\"></xref> collection.\n  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ReleaseRequestState\"></xref>.\n  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handler to the collection of asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.ResolveRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);\n    parameters:\n    - id: bh\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.\n    - id: eh\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds the specified <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event to the collection of asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref> event handlers for the current request.\n  syntax:\n    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);\n    parameters:\n    - id: beginHandler\n      type: System.Web.BeginEventHandler\n      description: The <xref href=\"System.Web.BeginEventHandler\"></xref> that starts asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.\n    - id: endHandler\n      type: System.Web.EndEventHandler\n      description: The <xref href=\"System.Web.EndEventHandler\"></xref> that ends asynchronous processing of the <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.\n    - id: state\n      type: System.Object\n      description: The associated state to add to the asynchronous <xref href=\"System.Web.HttpApplication.UpdateRequestCache\"></xref>.\n  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Application\n  commentId: P:System.Web.HttpApplication.Application\n  id: Application\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Application\n  nameWithType: HttpApplication.Application\n  fullName: HttpApplication.Application\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the current state of an application.\n  remarks: The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpApplicationState Application { get; }\n    return:\n      type: System.Web.HttpApplicationState\n      description: The <xref href=\"System.Web.HttpApplicationState\"></xref> for the current request.\n  overload: System.Web.HttpApplication.Application*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AuthenticateRequest\n  commentId: E:System.Web.HttpApplication.AuthenticateRequest\n  id: AuthenticateRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AuthenticateRequest\n  nameWithType: HttpApplication.AuthenticateRequest\n  fullName: HttpApplication.AuthenticateRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when a security module has established the identity of the user.\n  remarks: \"The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler AuthenticateRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.AuthorizeRequest\n  commentId: E:System.Web.HttpApplication.AuthorizeRequest\n  id: AuthorizeRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: AuthorizeRequest\n  nameWithType: HttpApplication.AuthorizeRequest\n  fullName: HttpApplication.AuthorizeRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when a security module has verified user authorization.\n  remarks: \"The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler AuthorizeRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.BeginRequest\n  commentId: E:System.Web.HttpApplication.BeginRequest\n  id: BeginRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: BeginRequest\n  nameWithType: HttpApplication.BeginRequest\n  fullName: HttpApplication.BeginRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.\n  remarks: \"The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request. This event is always raised and is always the first event to occur during the processing of a request.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler BeginRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.CompleteRequest\n  commentId: M:System.Web.HttpApplication.CompleteRequest\n  id: CompleteRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: CompleteRequest()\n  nameWithType: HttpApplication.CompleteRequest()\n  fullName: HttpApplication.CompleteRequest()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event.\n  syntax:\n    content: public void CompleteRequest ();\n    parameters: []\n  overload: System.Web.HttpApplication.CompleteRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Context\n  commentId: P:System.Web.HttpApplication.Context\n  id: Context\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Context\n  nameWithType: HttpApplication.Context\n  fullName: HttpApplication.Context\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets HTTP-specific information about the current request.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpContext Context { get; }\n    return:\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n  overload: System.Web.HttpApplication.Context*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Dispose\n  commentId: M:System.Web.HttpApplication.Dispose\n  id: Dispose\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HttpApplication.Dispose()\n  fullName: HttpApplication.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Disposes the <xref href=\"System.Web.HttpApplication\"></xref> instance.\n  remarks: \"The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes.  \\n  \\n The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event.\"\n  syntax:\n    content: public virtual void Dispose ();\n    parameters: []\n  overload: System.Web.HttpApplication.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Disposed\n  commentId: E:System.Web.HttpApplication.Disposed\n  id: Disposed\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Disposed\n  nameWithType: HttpApplication.Disposed\n  fullName: HttpApplication.Disposed\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the application is disposed.\n  remarks: \"When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event. The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler Disposed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.EndRequest\n  commentId: E:System.Web.HttpApplication.EndRequest\n  id: EndRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: EndRequest\n  nameWithType: HttpApplication.EndRequest\n  fullName: HttpApplication.EndRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.\n  remarks: \"The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler EndRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Error\n  commentId: E:System.Web.HttpApplication.Error\n  id: Error\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Error\n  nameWithType: HttpApplication.Error\n  fullName: HttpApplication.Error\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when an unhandled exception is thrown.\n  remarks: \"The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method. If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \\n  \\n> [!NOTE]\\n>  If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services. The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called. To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler Error;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Events\n  commentId: P:System.Web.HttpApplication.Events\n  id: Events\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Events\n  nameWithType: HttpApplication.Events\n  fullName: HttpApplication.Events\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the list of event handler delegates that process all application events.\n  syntax:\n    content: protected System.ComponentModel.EventHandlerList Events { get; }\n    return:\n      type: System.ComponentModel.EventHandlerList\n      description: An <xref href=\"System.ComponentModel.EventHandlerList\"></xref> that contains the names of the event handler delegates.\n  overload: System.Web.HttpApplication.Events*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)\n  commentId: M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)\n  id: GetOutputCacheProviderName(System.Web.HttpContext)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: GetOutputCacheProviderName(HttpContext)\n  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)\n  fullName: HttpApplication.GetOutputCacheProviderName(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the name of the default output-cache provider that is configured for a Web site.\n  remarks: \"You can override this method and use it to return the name of any output-cache provider that is configured for a Web site. ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.  \\n  \\n By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache. You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`.  \\n  \\n In addition, you can select different output-cache providers for individual control and for individual requests. The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:  \\n  \\n```  \\n<%@ OutputCache Duration=\\\"60\\\" VaryByParam=\\\"None\\\"   \\n    providerName=\\\"DiskCache\\\" %>  \\n```  \\n  \\n To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request. For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).\"\n  example:\n  - \"The following example shows how to programmatically specify the cache provider named `DiskCache` for any HTTP request that goes to the Advanced.aspx page.  \\n\\n```csharp  \\npublic override string GetOutputCacheProviderName(HttpContext context)  \\n{  \\n    if (context.Request.Path.EndsWith(\\\"Advanced.aspx\\\"))  \\n        return \\\"DiskCache\\\";  \\n    else  \\n        return base.GetOutputCacheProviderName(context);  \\n}  \\n```  \\n\\n```vb  \\nPublic Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  \\n        As HttpContext) As String   \\n    If context.Request.Path.EndsWith(\\\"Advanced.aspx\\\") Then   \\n        Return \\\"DiskCache\\\"   \\n    Else   \\n        Return MyBase.GetOutputCacheProviderName(context)   \\n    End If   \\nEnd Sub  \\n```\"\n  syntax:\n    content: public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests.\n    return:\n      type: System.String\n      description: The name of the default provider.\n  overload: System.Web.HttpApplication.GetOutputCacheProviderName*\n  exceptions:\n  - type: System.Configuration.Provider.ProviderException\n    commentId: T:System.Configuration.Provider.ProviderException\n    description: <code>context</code> is `null` or is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)\n  commentId: M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)\n  id: GetVaryByCustomString(System.Web.HttpContext,System.String)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: GetVaryByCustomString(HttpContext, String)\n  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext, String)\n  fullName: HttpApplication.GetVaryByCustomString(HttpContext, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an application-wide implementation of the <xref href=\"System.Web.UI.PartialCachingAttribute.VaryByCustom\"></xref> property.\n  remarks: 'You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request. The implementation has to call the base class for custom values that it does not recognize. For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).'\n  syntax:\n    content: public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> object that contains information about the current Web request.\n    - id: custom\n      type: System.String\n      description: The custom string that specifies which cached response is used to respond to the current request.\n    return:\n      type: System.String\n      description: If the value of the <code>custom</code> parameter is `\"browser\"`, the browser's <xref href=\"System.Web.Configuration.HttpCapabilitiesBase.Type\"></xref>; otherwise, `null`.\n  overload: System.Web.HttpApplication.GetVaryByCustomString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Init\n  commentId: M:System.Web.HttpApplication.Init\n  id: Init\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Init()\n  nameWithType: HttpApplication.Init()\n  fullName: HttpApplication.Init()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Executes custom initialization code after all event handler modules have been added.\n  remarks: In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code.\n  syntax:\n    content: public virtual void Init ();\n    parameters: []\n  overload: System.Web.HttpApplication.Init*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.LogRequest\n  commentId: E:System.Web.HttpApplication.LogRequest\n  id: LogRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: LogRequest\n  nameWithType: HttpApplication.LogRequest\n  fullName: HttpApplication.LogRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs just before ASP.NET performs any logging for the current request.\n  remarks: \"The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs. You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n <xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following example demonstrates how to provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event. The event handler also handles several other events. Therefore, the <xref:System.Web.HttpContext.CurrentNotification%2A> and <xref:System.Web.HttpContext.IsPostNotification%2A> properties are used to determine what code to run.  \\n  \\n [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]\\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]\"\n  syntax:\n    content: public event EventHandler LogRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.MapRequestHandler\n  commentId: E:System.Web.HttpApplication.MapRequestHandler\n  id: MapRequestHandler\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: MapRequestHandler\n  nameWithType: HttpApplication.MapRequestHandler\n  fullName: HttpApplication.MapRequestHandler\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the handler is selected to respond to the request.\n  remarks: \"The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request. For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n <xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public event EventHandler MapRequestHandler;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Modules\n  commentId: P:System.Web.HttpApplication.Modules\n  id: Modules\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Modules\n  nameWithType: HttpApplication.Modules\n  fullName: HttpApplication.Modules\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the collection of modules for the current application.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpModuleCollection Modules { get; }\n    return:\n      type: System.Web.HttpModuleCollection\n      description: An <xref href=\"System.Web.HttpModuleCollection\"></xref> that contains the names of the modules for the application.\n  overload: System.Web.HttpApplication.Modules*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostAcquireRequestState\n  commentId: E:System.Web.HttpApplication.PostAcquireRequestState\n  id: PostAcquireRequestState\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostAcquireRequestState\n  nameWithType: HttpApplication.PostAcquireRequestState\n  fullName: HttpApplication.PostAcquireRequestState\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the request state (for example, session state) that is associated with the current request has been obtained.\n  remarks: \"The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PostAcquireRequestState;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostAuthenticateRequest\n  commentId: E:System.Web.HttpApplication.PostAuthenticateRequest\n  id: PostAuthenticateRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostAuthenticateRequest\n  nameWithType: HttpApplication.PostAuthenticateRequest\n  fullName: HttpApplication.PostAuthenticateRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when a security module has established the identity of the user.\n  remarks: \"The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred. Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PostAuthenticateRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostAuthorizeRequest\n  commentId: E:System.Web.HttpApplication.PostAuthorizeRequest\n  id: PostAuthorizeRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostAuthorizeRequest\n  nameWithType: HttpApplication.PostAuthorizeRequest\n  fullName: HttpApplication.PostAuthorizeRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the user for the current request has been authorized.\n  remarks: \"The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request. Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PostAuthorizeRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostLogRequest\n  commentId: E:System.Web.HttpApplication.PostLogRequest\n  id: PostLogRequest\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostLogRequest\n  nameWithType: HttpApplication.PostLogRequest\n  fullName: HttpApplication.PostLogRequest\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET has completed processing all the event handlers for the <xref href=\"System.Web.HttpApplication.LogRequest\"></xref> event.\n  remarks: \"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n <xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public event EventHandler PostLogRequest;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostMapRequestHandler\n  commentId: E:System.Web.HttpApplication.PostMapRequestHandler\n  id: PostMapRequestHandler\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostMapRequestHandler\n  nameWithType: HttpApplication.PostMapRequestHandler\n  fullName: HttpApplication.PostMapRequestHandler\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET has mapped the current request to the appropriate event handler.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PostMapRequestHandler;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostReleaseRequestState\n  commentId: E:System.Web.HttpApplication.PostReleaseRequestState\n  id: PostReleaseRequestState\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostReleaseRequestState\n  nameWithType: HttpApplication.PostReleaseRequestState\n  fullName: HttpApplication.PostReleaseRequestState\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PostReleaseRequestState;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostRequestHandlerExecute\n  commentId: E:System.Web.HttpApplication.PostRequestHandlerExecute\n  id: PostRequestHandlerExecute\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostRequestHandlerExecute\n  nameWithType: HttpApplication.PostRequestHandlerExecute\n  fullName: HttpApplication.PostRequestHandlerExecute\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PostRequestHandlerExecute;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostResolveRequestCache\n  commentId: E:System.Web.HttpApplication.PostResolveRequestCache\n  id: PostResolveRequestCache\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostResolveRequestCache\n  nameWithType: HttpApplication.PostResolveRequestCache\n  fullName: HttpApplication.PostResolveRequestCache\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PostResolveRequestCache;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PostUpdateRequestCache\n  commentId: E:System.Web.HttpApplication.PostUpdateRequestCache\n  id: PostUpdateRequestCache\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PostUpdateRequestCache\n  nameWithType: HttpApplication.PostUpdateRequestCache\n  fullName: HttpApplication.PostUpdateRequestCache\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.\n  remarks: \"The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred. When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PostUpdateRequestCache;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PreRequestHandlerExecute\n  commentId: E:System.Web.HttpApplication.PreRequestHandlerExecute\n  id: PreRequestHandlerExecute\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PreRequestHandlerExecute\n  nameWithType: HttpApplication.PreRequestHandlerExecute\n  fullName: HttpApplication.PreRequestHandlerExecute\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PreRequestHandlerExecute;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PreSendRequestContent\n  commentId: E:System.Web.HttpApplication.PreSendRequestContent\n  id: PreSendRequestContent\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PreSendRequestContent\n  nameWithType: HttpApplication.PreSendRequestContent\n  fullName: HttpApplication.PreSendRequestContent\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs just before ASP.NET sends content to the client.\n  remarks: \"The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler PreSendRequestContent;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.PreSendRequestHeaders\n  commentId: E:System.Web.HttpApplication.PreSendRequestHeaders\n  id: PreSendRequestHeaders\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: PreSendRequestHeaders\n  nameWithType: HttpApplication.PreSendRequestHeaders\n  fullName: HttpApplication.PreSendRequestHeaders\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs just before ASP.NET sends HTTP headers to the client.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler PreSendRequestHeaders;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.RegisterModule(System.Type)\n  commentId: M:System.Web.HttpApplication.RegisterModule(System.Type)\n  id: RegisterModule(System.Type)\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: RegisterModule(Type)\n  nameWithType: HttpApplication.RegisterModule(Type)\n  fullName: HttpApplication.RegisterModule(Type)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Registers an application module.\n  syntax:\n    content: public static void RegisterModule (Type moduleType);\n    parameters:\n    - id: moduleType\n      type: System.Type\n      description: The type of the module.\n  overload: System.Web.HttpApplication.RegisterModule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.ReleaseRequestState\n  commentId: E:System.Web.HttpApplication.ReleaseRequestState\n  id: ReleaseRequestState\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: ReleaseRequestState\n  nameWithType: HttpApplication.ReleaseRequestState\n  fullName: HttpApplication.ReleaseRequestState\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs after ASP.NET finishes executing all request event handlers. This event causes state modules to save the current state data.\n  remarks: \"When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler ReleaseRequestState;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Request\n  commentId: P:System.Web.HttpApplication.Request\n  id: Request\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Request\n  nameWithType: HttpApplication.Request\n  fullName: HttpApplication.Request\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the intrinsic request object for the current request.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpRequest Request { get; }\n    return:\n      type: System.Web.HttpRequest\n      description: The <xref href=\"System.Web.HttpRequest\"></xref> object that the application is processing.\n  overload: System.Web.HttpApplication.Request*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.HttpRequest\"></xref> object is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.RequestCompleted\n  commentId: E:System.Web.HttpApplication.RequestCompleted\n  id: RequestCompleted\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: RequestCompleted\n  nameWithType: HttpApplication.RequestCompleted\n  fullName: HttpApplication.RequestCompleted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when the managed objects that are associated with the request have been released.\n  remarks: The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called. It enables modules to clean up resources after all managed modules and handlers have executed. Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.\n  syntax:\n    content: public event EventHandler RequestCompleted;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.ResolveRequestCache\n  commentId: E:System.Web.HttpApplication.ResolveRequestCache\n  id: ResolveRequestCache\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: ResolveRequestCache\n  nameWithType: HttpApplication.ResolveRequestCache\n  fullName: HttpApplication.ResolveRequestCache\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler ResolveRequestCache;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Response\n  commentId: P:System.Web.HttpApplication.Response\n  id: Response\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Response\n  nameWithType: HttpApplication.Response\n  fullName: HttpApplication.Response\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the intrinsic response object for the current request.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpResponse Response { get; }\n    return:\n      type: System.Web.HttpResponse\n      description: The <xref href=\"System.Web.HttpResponse\"></xref> object that the application is processing.\n  overload: System.Web.HttpApplication.Response*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.HttpResponse\"></xref> object is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Server\n  commentId: P:System.Web.HttpApplication.Server\n  id: Server\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Server\n  nameWithType: HttpApplication.Server\n  fullName: HttpApplication.Server\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the intrinsic server object for the current request.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.HttpServerUtility Server { get; }\n    return:\n      type: System.Web.HttpServerUtility\n      description: The <xref href=\"System.Web.HttpServerUtility\"></xref> object that the application is processing.\n  overload: System.Web.HttpApplication.Server*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Session\n  commentId: P:System.Web.HttpApplication.Session\n  id: Session\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Session\n  nameWithType: HttpApplication.Session\n  fullName: HttpApplication.Session\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the intrinsic session object that provides access to session data.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Web.SessionState.HttpSessionState Session { get; }\n    return:\n      type: System.Web.SessionState.HttpSessionState\n      description: The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object for the current session.\n  overload: System.Web.HttpApplication.Session*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Web.SessionState.HttpSessionState\"></xref> object is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.Site\n  commentId: P:System.Web.HttpApplication.Site\n  id: Site\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: Site\n  nameWithType: HttpApplication.Site\n  fullName: HttpApplication.Site\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a site interface for an <xref href=\"System.ComponentModel.IComponent\"></xref> implementation.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.ComponentModel.ISite Site { get; set; }\n    return:\n      type: System.ComponentModel.ISite\n      description: An <xref href=\"System.ComponentModel.ISite\"></xref> object that allows a container to manage and communicate with its child components.\n  overload: System.Web.HttpApplication.Site*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.UpdateRequestCache\n  commentId: E:System.Web.HttpApplication.UpdateRequestCache\n  id: UpdateRequestCache\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: UpdateRequestCache\n  nameWithType: HttpApplication.UpdateRequestCache\n  fullName: HttpApplication.UpdateRequestCache\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.\n  remarks: 'For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event EventHandler UpdateRequestCache;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.User\n  commentId: P:System.Web.HttpApplication.User\n  id: User\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: User\n  nameWithType: HttpApplication.User\n  fullName: HttpApplication.User\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the intrinsic user object for the current request.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Security.Principal.IPrincipal User { get; }\n    return:\n      type: System.Security.Principal.IPrincipal\n      description: The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object that represents the current authenticated or anonymous user.\n  overload: System.Web.HttpApplication.User*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref href=\"System.Security.Principal.IPrincipal\"></xref> object is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  id: System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  isEii: true\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  nameWithType: HttpApplication.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  fullName: HttpApplication.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initiates an asynchronous call to the HTTP event handler.\n  syntax:\n    content: IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> that provides references to intrinsic server objects that are used to service HTTP requests.\n    - id: cb\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> to call when the asynchronous method call is complete. If the <code>cb</code> parameter is `null`, the delegate is not called.\n    - id: extraData\n      type: System.Object\n      description: Any extra data that is required to process the request.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process.\n  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  id: System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  isEii: true\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  nameWithType: HttpApplication.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  fullName: HttpApplication.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Provides an asynchronous process `End` method when the process finishes.\n  remarks: You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process.\n  syntax:\n    content: void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that contains information about the status of the process.\n  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable\n  commentId: P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable\n  id: System#Web#IHttpHandler#IsReusable\n  isEii: true\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: IHttpHandler.IsReusable\n  nameWithType: HttpApplication.IHttpHandler.IsReusable\n  fullName: HttpApplication.IHttpHandler.IsReusable\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a `Boolean` value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> object.\n  remarks: To explicitly set the `IsReusable` property to `true` or `false`, provide code that overrides the `IsReusable` property accessor.\n  syntax:\n    content: bool System.Web.IHttpHandler.IsReusable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> object is reusable; otherwise, `false`.'\n  overload: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)\n  commentId: M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)\n  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)\n  isEii: true\n  parent: System.Web.HttpApplication\n  langs:\n  - csharp\n  name: IHttpHandler.ProcessRequest(HttpContext)\n  nameWithType: HttpApplication.IHttpHandler.ProcessRequest(HttpContext)\n  fullName: HttpApplication.IHttpHandler.ProcessRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Enables processing of HTTP Web requests by a custom HTTP handler that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface.\n  remarks: Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request. The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request.\n  syntax:\n    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> that provides references to the intrinsic server objects that are used to service HTTP requests.\n  overload: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: In all cases.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.Provider.ProviderException\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderException\n  nameWithType: ProviderException\n  fullName: System.Configuration.Provider.ProviderException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.Web.HttpApplication.#ctor\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: HttpApplication()\n  nameWithType: HttpApplication.HttpApplication()\n  fullName: HttpApplication.HttpApplication()\n- uid: System.Web.HttpApplication.AcquireRequestState\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AcquireRequestState\n  nameWithType: HttpApplication.AcquireRequestState\n  fullName: HttpApplication.AcquireRequestState\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.BeginEventHandler\n  parent: System.Web\n  isExternal: false\n  name: BeginEventHandler\n  nameWithType: BeginEventHandler\n  fullName: System.Web.BeginEventHandler\n- uid: System.Web.EndEventHandler\n  parent: System.Web\n  isExternal: false\n  name: EndEventHandler\n  nameWithType: EndEventHandler\n  fullName: System.Web.EndEventHandler\n- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnEndRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n  fullName: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler)\n- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n  fullName: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler, EndEventHandler, Object)\n- uid: System.Web.HttpApplication.Application\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Application\n  nameWithType: HttpApplication.Application\n  fullName: HttpApplication.Application\n- uid: System.Web.HttpApplicationState\n  parent: System.Web\n  isExternal: false\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n- uid: System.Web.HttpApplication.AuthenticateRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AuthenticateRequest\n  nameWithType: HttpApplication.AuthenticateRequest\n  fullName: HttpApplication.AuthenticateRequest\n- uid: System.Web.HttpApplication.AuthorizeRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AuthorizeRequest\n  nameWithType: HttpApplication.AuthorizeRequest\n  fullName: HttpApplication.AuthorizeRequest\n- uid: System.Web.HttpApplication.BeginRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: BeginRequest\n  nameWithType: HttpApplication.BeginRequest\n  fullName: HttpApplication.BeginRequest\n- uid: System.Web.HttpApplication.CompleteRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: CompleteRequest()\n  nameWithType: HttpApplication.CompleteRequest()\n  fullName: HttpApplication.CompleteRequest()\n- uid: System.Web.HttpApplication.Context\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Context\n  nameWithType: HttpApplication.Context\n  fullName: HttpApplication.Context\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.HttpApplication.Dispose\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpApplication.Dispose()\n  fullName: HttpApplication.Dispose()\n- uid: System.Web.HttpApplication.Disposed\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Disposed\n  nameWithType: HttpApplication.Disposed\n  fullName: HttpApplication.Disposed\n- uid: System.Web.HttpApplication.EndRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: EndRequest\n  nameWithType: HttpApplication.EndRequest\n  fullName: HttpApplication.EndRequest\n- uid: System.Web.HttpApplication.Error\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Error\n  nameWithType: HttpApplication.Error\n  fullName: HttpApplication.Error\n- uid: System.Web.HttpApplication.Events\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Events\n  nameWithType: HttpApplication.Events\n  fullName: HttpApplication.Events\n- uid: System.ComponentModel.EventHandlerList\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventHandlerList\n  nameWithType: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: GetOutputCacheProviderName(HttpContext)\n  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)\n  fullName: HttpApplication.GetOutputCacheProviderName(HttpContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: GetVaryByCustomString(HttpContext, String)\n  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext, String)\n  fullName: HttpApplication.GetVaryByCustomString(HttpContext, String)\n- uid: System.Web.HttpApplication.Init\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Init()\n  nameWithType: HttpApplication.Init()\n  fullName: HttpApplication.Init()\n- uid: System.Web.HttpApplication.LogRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: LogRequest\n  nameWithType: HttpApplication.LogRequest\n  fullName: HttpApplication.LogRequest\n- uid: System.Web.HttpApplication.MapRequestHandler\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: MapRequestHandler\n  nameWithType: HttpApplication.MapRequestHandler\n  fullName: HttpApplication.MapRequestHandler\n- uid: System.Web.HttpApplication.Modules\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Modules\n  nameWithType: HttpApplication.Modules\n  fullName: HttpApplication.Modules\n- uid: System.Web.HttpModuleCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpModuleCollection\n  nameWithType: HttpModuleCollection\n  fullName: System.Web.HttpModuleCollection\n- uid: System.Web.HttpApplication.PostAcquireRequestState\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostAcquireRequestState\n  nameWithType: HttpApplication.PostAcquireRequestState\n  fullName: HttpApplication.PostAcquireRequestState\n- uid: System.Web.HttpApplication.PostAuthenticateRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostAuthenticateRequest\n  nameWithType: HttpApplication.PostAuthenticateRequest\n  fullName: HttpApplication.PostAuthenticateRequest\n- uid: System.Web.HttpApplication.PostAuthorizeRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostAuthorizeRequest\n  nameWithType: HttpApplication.PostAuthorizeRequest\n  fullName: HttpApplication.PostAuthorizeRequest\n- uid: System.Web.HttpApplication.PostLogRequest\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostLogRequest\n  nameWithType: HttpApplication.PostLogRequest\n  fullName: HttpApplication.PostLogRequest\n- uid: System.Web.HttpApplication.PostMapRequestHandler\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostMapRequestHandler\n  nameWithType: HttpApplication.PostMapRequestHandler\n  fullName: HttpApplication.PostMapRequestHandler\n- uid: System.Web.HttpApplication.PostReleaseRequestState\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostReleaseRequestState\n  nameWithType: HttpApplication.PostReleaseRequestState\n  fullName: HttpApplication.PostReleaseRequestState\n- uid: System.Web.HttpApplication.PostRequestHandlerExecute\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostRequestHandlerExecute\n  nameWithType: HttpApplication.PostRequestHandlerExecute\n  fullName: HttpApplication.PostRequestHandlerExecute\n- uid: System.Web.HttpApplication.PostResolveRequestCache\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostResolveRequestCache\n  nameWithType: HttpApplication.PostResolveRequestCache\n  fullName: HttpApplication.PostResolveRequestCache\n- uid: System.Web.HttpApplication.PostUpdateRequestCache\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PostUpdateRequestCache\n  nameWithType: HttpApplication.PostUpdateRequestCache\n  fullName: HttpApplication.PostUpdateRequestCache\n- uid: System.Web.HttpApplication.PreRequestHandlerExecute\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PreRequestHandlerExecute\n  nameWithType: HttpApplication.PreRequestHandlerExecute\n  fullName: HttpApplication.PreRequestHandlerExecute\n- uid: System.Web.HttpApplication.PreSendRequestContent\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PreSendRequestContent\n  nameWithType: HttpApplication.PreSendRequestContent\n  fullName: HttpApplication.PreSendRequestContent\n- uid: System.Web.HttpApplication.PreSendRequestHeaders\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: PreSendRequestHeaders\n  nameWithType: HttpApplication.PreSendRequestHeaders\n  fullName: HttpApplication.PreSendRequestHeaders\n- uid: System.Web.HttpApplication.RegisterModule(System.Type)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: RegisterModule(Type)\n  nameWithType: HttpApplication.RegisterModule(Type)\n  fullName: HttpApplication.RegisterModule(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.HttpApplication.ReleaseRequestState\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: ReleaseRequestState\n  nameWithType: HttpApplication.ReleaseRequestState\n  fullName: HttpApplication.ReleaseRequestState\n- uid: System.Web.HttpApplication.Request\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Request\n  nameWithType: HttpApplication.Request\n  fullName: HttpApplication.Request\n- uid: System.Web.HttpRequest\n  parent: System.Web\n  isExternal: false\n  name: HttpRequest\n  nameWithType: HttpRequest\n  fullName: System.Web.HttpRequest\n- uid: System.Web.HttpApplication.RequestCompleted\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: RequestCompleted\n  nameWithType: HttpApplication.RequestCompleted\n  fullName: HttpApplication.RequestCompleted\n- uid: System.Web.HttpApplication.ResolveRequestCache\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: ResolveRequestCache\n  nameWithType: HttpApplication.ResolveRequestCache\n  fullName: HttpApplication.ResolveRequestCache\n- uid: System.Web.HttpApplication.Response\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Response\n  nameWithType: HttpApplication.Response\n  fullName: HttpApplication.Response\n- uid: System.Web.HttpResponse\n  parent: System.Web\n  isExternal: false\n  name: HttpResponse\n  nameWithType: HttpResponse\n  fullName: System.Web.HttpResponse\n- uid: System.Web.HttpApplication.Server\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Server\n  nameWithType: HttpApplication.Server\n  fullName: HttpApplication.Server\n- uid: System.Web.HttpServerUtility\n  parent: System.Web\n  isExternal: false\n  name: HttpServerUtility\n  nameWithType: HttpServerUtility\n  fullName: System.Web.HttpServerUtility\n- uid: System.Web.HttpApplication.Session\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Session\n  nameWithType: HttpApplication.Session\n  fullName: HttpApplication.Session\n- uid: System.Web.SessionState.HttpSessionState\n  parent: System.Web.SessionState\n  isExternal: false\n  name: HttpSessionState\n  nameWithType: HttpSessionState\n  fullName: System.Web.SessionState.HttpSessionState\n- uid: System.Web.HttpApplication.Site\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Site\n  nameWithType: HttpApplication.Site\n  fullName: HttpApplication.Site\n- uid: System.ComponentModel.ISite\n  parent: System.ComponentModel\n  isExternal: false\n  name: ISite\n  nameWithType: ISite\n  fullName: System.ComponentModel.ISite\n- uid: System.Web.HttpApplication.UpdateRequestCache\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: UpdateRequestCache\n  nameWithType: HttpApplication.UpdateRequestCache\n  fullName: HttpApplication.UpdateRequestCache\n- uid: System.Web.HttpApplication.User\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: User\n  nameWithType: HttpApplication.User\n  fullName: HttpApplication.User\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  nameWithType: HttpApplication.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n  fullName: HttpApplication.IHttpAsyncHandler.BeginProcessRequest(HttpContext, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  nameWithType: HttpApplication.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n  fullName: HttpApplication.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: IHttpHandler.IsReusable\n  nameWithType: HttpApplication.IHttpHandler.IsReusable\n  fullName: HttpApplication.IHttpHandler.IsReusable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: IHttpHandler.ProcessRequest(HttpContext)\n  nameWithType: HttpApplication.IHttpHandler.ProcessRequest(HttpContext)\n  fullName: HttpApplication.IHttpHandler.ProcessRequest(HttpContext)\n- uid: System.Web.HttpApplication.AddOnLogRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnLogRequestAsync\n  nameWithType: HttpApplication.AddOnLogRequestAsync\n  fullName: HttpApplication.AddOnLogRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnMapRequestHandlerAsync\n  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync\n  fullName: HttpApplication.AddOnMapRequestHandlerAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostLogRequestAsync\n  nameWithType: HttpApplication.AddOnPostLogRequestAsync\n  fullName: HttpApplication.AddOnPostLogRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.#ctor*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication.HttpApplication\n  fullName: HttpApplication.HttpApplication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAcquireRequestStateAsync\n  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync\n  fullName: HttpApplication.AddOnAcquireRequestStateAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthenticateRequestAsync\n  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync\n  fullName: HttpApplication.AddOnAuthenticateRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnAuthorizeRequestAsync\n  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync\n  fullName: HttpApplication.AddOnAuthorizeRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnBeginRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnBeginRequestAsync\n  nameWithType: HttpApplication.AddOnBeginRequestAsync\n  fullName: HttpApplication.AddOnBeginRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnEndRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnEndRequestAsync\n  nameWithType: HttpApplication.AddOnEndRequestAsync\n  fullName: HttpApplication.AddOnEndRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAcquireRequestStateAsync\n  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync\n  fullName: HttpApplication.AddOnPostAcquireRequestStateAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthenticateRequestAsync\n  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync\n  fullName: HttpApplication.AddOnPostAuthenticateRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostAuthorizeRequestAsync\n  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync\n  fullName: HttpApplication.AddOnPostAuthorizeRequestAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostMapRequestHandlerAsync\n  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync\n  fullName: HttpApplication.AddOnPostMapRequestHandlerAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostReleaseRequestStateAsync\n  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync\n  fullName: HttpApplication.AddOnPostReleaseRequestStateAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostRequestHandlerExecuteAsync\n  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync\n  fullName: HttpApplication.AddOnPostRequestHandlerExecuteAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostResolveRequestCacheAsync\n  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync\n  fullName: HttpApplication.AddOnPostResolveRequestCacheAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPostUpdateRequestCacheAsync\n  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync\n  fullName: HttpApplication.AddOnPostUpdateRequestCacheAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnPreRequestHandlerExecuteAsync\n  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync\n  fullName: HttpApplication.AddOnPreRequestHandlerExecuteAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnReleaseRequestStateAsync\n  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync\n  fullName: HttpApplication.AddOnReleaseRequestStateAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnResolveRequestCacheAsync\n  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync\n  fullName: HttpApplication.AddOnResolveRequestCacheAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: AddOnUpdateRequestCacheAsync\n  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync\n  fullName: HttpApplication.AddOnUpdateRequestCacheAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Application*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Application\n  nameWithType: HttpApplication.Application\n  fullName: HttpApplication.Application\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.CompleteRequest*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: CompleteRequest\n  nameWithType: HttpApplication.CompleteRequest\n  fullName: HttpApplication.CompleteRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Context*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Context\n  nameWithType: HttpApplication.Context\n  fullName: HttpApplication.Context\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Dispose*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Dispose\n  nameWithType: HttpApplication.Dispose\n  fullName: HttpApplication.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Events*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Events\n  nameWithType: HttpApplication.Events\n  fullName: HttpApplication.Events\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.GetOutputCacheProviderName*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: GetOutputCacheProviderName\n  nameWithType: HttpApplication.GetOutputCacheProviderName\n  fullName: HttpApplication.GetOutputCacheProviderName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.GetVaryByCustomString*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: GetVaryByCustomString\n  nameWithType: HttpApplication.GetVaryByCustomString\n  fullName: HttpApplication.GetVaryByCustomString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Init*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Init\n  nameWithType: HttpApplication.Init\n  fullName: HttpApplication.Init\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Modules*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Modules\n  nameWithType: HttpApplication.Modules\n  fullName: HttpApplication.Modules\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.RegisterModule*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: RegisterModule\n  nameWithType: HttpApplication.RegisterModule\n  fullName: HttpApplication.RegisterModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Request*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Request\n  nameWithType: HttpApplication.Request\n  fullName: HttpApplication.Request\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Response*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Response\n  nameWithType: HttpApplication.Response\n  fullName: HttpApplication.Response\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Server*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Server\n  nameWithType: HttpApplication.Server\n  fullName: HttpApplication.Server\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Session*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Session\n  nameWithType: HttpApplication.Session\n  fullName: HttpApplication.Session\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.Site*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: Site\n  nameWithType: HttpApplication.Site\n  fullName: HttpApplication.Site\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.User*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: User\n  nameWithType: HttpApplication.User\n  fullName: HttpApplication.User\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: System.Web.IHttpAsyncHandler.BeginProcessRequest\n  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest\n  fullName: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: System.Web.IHttpAsyncHandler.EndProcessRequest\n  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest\n  fullName: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: System.Web.IHttpHandler.IsReusable\n  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable\n  fullName: HttpApplication.System.Web.IHttpHandler.IsReusable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*\n  parent: System.Web.HttpApplication\n  isExternal: false\n  name: System.Web.IHttpHandler.ProcessRequest\n  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest\n  fullName: HttpApplication.System.Web.IHttpHandler.ProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplication.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Web.IHttpAsyncHandler\n  parent: System.Web\n  isExternal: false\n  name: IHttpAsyncHandler\n  nameWithType: IHttpAsyncHandler\n  fullName: System.Web.IHttpAsyncHandler\n"}