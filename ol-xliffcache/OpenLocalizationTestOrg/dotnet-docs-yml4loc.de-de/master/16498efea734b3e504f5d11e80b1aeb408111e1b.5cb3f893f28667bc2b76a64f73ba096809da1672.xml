{"nodes":[{"content":"Represents an execution loop in the <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.","nodes":[{"pos":[0,93],"content":"Represents an execution loop in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph>.","source":"Represents an execution loop in the <xref href=\"System.Windows.Threading.Dispatcher\"></xref>."}],"pos":[568,662],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherFrame> objects typically fall into two categories:  \n  \n-   Long running, general purpose frames that exit only when instructed to.  These frames should exit when they are requested.  \n  \n-   Short running, very specific frames that exit when an important criteria is met.  These frames may consider not to exit when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.  \n  \n<a name=\"xamlTextUsage_DispatcherFrame\"></a>   \n## XAML Text Usage  \n You cannot use this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,91],"content":"<xref:System.Windows.Threading.DispatcherFrame> objects typically fall into two categories:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherFrame&gt;</ph> objects typically fall into two categories:","pos":[0,91],"source":"<xref:System.Windows.Threading.DispatcherFrame> objects typically fall into two categories:"}]},{"pos":[101,223],"content":"Long running, general purpose frames that exit only when instructed to.  These frames should exit when they are requested.","nodes":[{"content":"Long running, general purpose frames that exit only when instructed to.  These frames should exit when they are requested.","pos":[0,122],"nodes":[{"content":"Long running, general purpose frames that exit only when instructed to.","pos":[0,71]},{"content":"These frames should exit when they are requested.","pos":[73,122]}]}]},{"pos":[233,490],"content":"Short running, very specific frames that exit when an important criteria is met.  These frames may consider not to exit when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.","nodes":[{"content":"Short running, very specific frames that exit when an important criteria is met.  These frames may consider not to exit when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.","pos":[0,257],"nodes":[{"content":"Short running, very specific frames that exit when an important criteria is met.","pos":[0,80]},{"content":"These frames may consider not to exit when they are requested in favor of waiting for their exit criteria to be met.","pos":[82,198]},{"content":"These frames should have a time-out associated with them.","pos":[200,257]}]}]},{"pos":[547,562],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]},{"pos":[566,665],"content":"You cannot use this managed class in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"You cannot use this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[673,1351],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherFrame\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class."}],"pos":[3630,3733],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class, by using the specified exit request flag.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherFrame\"&gt;&lt;/xref&gt;</ph> class, by using the specified exit request flag.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class, by using the specified exit request flag."}],"pos":[4905,5050],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherFrame> typically fall into two categories:  \n  \n-   Long running, general purpose frames, that exit only when instructed to.  These frames should exit when they are requested.  \n  \n-   Short running, very specific frames that exit when an important criteria is met.  These frames may consider not exiting when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.  \n  \n-  \n  \n-   At application shutdown, all frames are request to exit.","nodes":[{"pos":[0,83],"content":"<xref:System.Windows.Threading.DispatcherFrame> typically fall into two categories:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherFrame&gt;</ph> typically fall into two categories:","pos":[0,83],"source":"<xref:System.Windows.Threading.DispatcherFrame> typically fall into two categories:"}]},{"pos":[93,216],"content":"Long running, general purpose frames, that exit only when instructed to.  These frames should exit when they are requested.","nodes":[{"content":"Long running, general purpose frames, that exit only when instructed to.  These frames should exit when they are requested.","pos":[0,123],"nodes":[{"content":"Long running, general purpose frames, that exit only when instructed to.","pos":[0,72]},{"content":"These frames should exit when they are requested.","pos":[74,123]}]}]},{"pos":[226,483],"content":"Short running, very specific frames that exit when an important criteria is met.  These frames may consider not exiting when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.","nodes":[{"content":"Short running, very specific frames that exit when an important criteria is met.  These frames may consider not exiting when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.","pos":[0,257],"nodes":[{"content":"Short running, very specific frames that exit when an important criteria is met.","pos":[0,80]},{"content":"These frames may consider not exiting when they are requested in favor of waiting for their exit criteria to be met.","pos":[82,198]},{"content":"These frames should have a time-out associated with them.","pos":[200,257]}]}]},{"pos":[500,556],"content":"At application shutdown, all frames are request to exit.","nodes":[{"content":"At application shutdown, all frames are request to exit.","pos":[0,56]}]}],"pos":[5061,5628],"yaml":true,"extradata":"MT"},{"content":"Indicates whether this frame will exit when all frames are requested to exit.","nodes":[{"pos":[0,77],"content":"Indicates whether this frame will exit when all frames are requested to exit.","nodes":[{"content":"Indicates whether this frame will exit when all frames are requested to exit.","pos":[0,77]}]}],"pos":[5790,5868],"yaml":true},{"content":"Gets or sets a value that indicates whether this <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> should continue.","nodes":[{"pos":[0,127],"content":"Gets or sets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherFrame\"&gt;&lt;/xref&gt;</ph> should continue.","source":"Gets or sets a value that indicates whether this <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> should continue."}],"pos":[6879,7007],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherFrame.Continue%2A> is queried at the top of each dispatcher loop.  \n  \n At application shutdown, all frames are request to exit.  \n  \n<a name=\"xamlTextUsage_Continue\"></a>   \n## XAML Text Usage  \n Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,106],"content":"<xref:System.Windows.Threading.DispatcherFrame.Continue%2A> is queried at the top of each dispatcher loop.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherFrame.Continue%2A&gt;</ph> is queried at the top of each dispatcher loop.","pos":[0,106],"source":"<xref:System.Windows.Threading.DispatcherFrame.Continue%2A> is queried at the top of each dispatcher loop."}]},{"pos":[113,169],"content":"At application shutdown, all frames are request to exit.","nodes":[{"content":"At application shutdown, all frames are request to exit.","pos":[0,56]}]},{"pos":[219,234],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]},{"pos":[238,439],"content":"Members of this class are either not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, or cannot be used in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[7018,7468],"yaml":true,"extradata":"MT"},{"content":"`true` if the frame should continue; otherwise, `false`.  The default value is `true`.","nodes":[{"pos":[0,86],"content":"`true` if the frame should continue; otherwise, `false`.  The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the frame should continue; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if the frame should continue; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[58,86],"source":"  The default value is `true`."}]}],"pos":[8300,8389],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherFrame\n  commentId: T:System.Windows.Threading.DispatcherFrame\n  id: DispatcherFrame\n  children:\n  - System.Windows.Threading.DispatcherFrame.#ctor\n  - System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)\n  - System.Windows.Threading.DispatcherFrame.Continue\n  langs:\n  - csharp\n  name: DispatcherFrame\n  nameWithType: DispatcherFrame\n  fullName: System.Windows.Threading.DispatcherFrame\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Represents an execution loop in the <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.\n  remarks: \"<xref:System.Windows.Threading.DispatcherFrame> objects typically fall into two categories:  \\n  \\n-   Long running, general purpose frames that exit only when instructed to.  These frames should exit when they are requested.  \\n  \\n-   Short running, very specific frames that exit when an important criteria is met.  These frames may consider not to exit when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.  \\n  \\n<a name=\\\"xamlTextUsage_DispatcherFrame\\\"></a>   \\n## XAML Text Usage  \\n You cannot use this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \\n  \\n [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]\\n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]\"\n  syntax:\n    content: 'public class DispatcherFrame : System.Windows.Threading.DispatcherObject'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherFrame.#ctor\n  commentId: M:System.Windows.Threading.DispatcherFrame.#ctor\n  id: '#ctor'\n  parent: System.Windows.Threading.DispatcherFrame\n  langs:\n  - csharp\n  name: DispatcherFrame()\n  nameWithType: DispatcherFrame.DispatcherFrame()\n  fullName: DispatcherFrame.DispatcherFrame()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class.\n  syntax:\n    content: public DispatcherFrame ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherFrame.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)\n  commentId: M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Windows.Threading.DispatcherFrame\n  langs:\n  - csharp\n  name: DispatcherFrame(Boolean)\n  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)\n  fullName: DispatcherFrame.DispatcherFrame(Boolean)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> class, by using the specified exit request flag.\n  remarks: \"<xref:System.Windows.Threading.DispatcherFrame> typically fall into two categories:  \\n  \\n-   Long running, general purpose frames, that exit only when instructed to.  These frames should exit when they are requested.  \\n  \\n-   Short running, very specific frames that exit when an important criteria is met.  These frames may consider not exiting when they are requested in favor of waiting for their exit criteria to be met.  These frames should have a time-out associated with them.  \\n  \\n-  \\n  \\n-   At application shutdown, all frames are request to exit.\"\n  syntax:\n    content: public DispatcherFrame (bool exitWhenRequested);\n    parameters:\n    - id: exitWhenRequested\n      type: System.Boolean\n      description: Indicates whether this frame will exit when all frames are requested to exit.\n  overload: System.Windows.Threading.DispatcherFrame.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherFrame.Continue\n  commentId: P:System.Windows.Threading.DispatcherFrame.Continue\n  id: Continue\n  parent: System.Windows.Threading.DispatcherFrame\n  langs:\n  - csharp\n  name: Continue\n  nameWithType: DispatcherFrame.Continue\n  fullName: DispatcherFrame.Continue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets a value that indicates whether this <xref href=\"System.Windows.Threading.DispatcherFrame\"></xref> should continue.\n  remarks: \"<xref:System.Windows.Threading.DispatcherFrame.Continue%2A> is queried at the top of each dispatcher loop.  \\n  \\n At application shutdown, all frames are request to exit.  \\n  \\n<a name=\\\"xamlTextUsage_Continue\\\"></a>   \\n## XAML Text Usage  \\n Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \\n  \\n [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]\\n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]\"\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool Continue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the frame should continue; otherwise, `false`.  The default value is `true`.'\n  overload: System.Windows.Threading.DispatcherFrame.Continue*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Threading.DispatcherObject\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherObject\n  nameWithType: DispatcherObject\n  fullName: System.Windows.Threading.DispatcherObject\n- uid: System.Windows.Threading.DispatcherFrame.#ctor\n  parent: System.Windows.Threading.DispatcherFrame\n  isExternal: false\n  name: DispatcherFrame()\n  nameWithType: DispatcherFrame.DispatcherFrame()\n  fullName: DispatcherFrame.DispatcherFrame()\n- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)\n  parent: System.Windows.Threading.DispatcherFrame\n  isExternal: false\n  name: DispatcherFrame(Boolean)\n  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)\n  fullName: DispatcherFrame.DispatcherFrame(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Threading.DispatcherFrame.Continue\n  parent: System.Windows.Threading.DispatcherFrame\n  isExternal: false\n  name: Continue\n  nameWithType: DispatcherFrame.Continue\n  fullName: DispatcherFrame.Continue\n- uid: System.Windows.Threading.DispatcherFrame.#ctor*\n  parent: System.Windows.Threading.DispatcherFrame\n  isExternal: false\n  name: DispatcherFrame\n  nameWithType: DispatcherFrame.DispatcherFrame\n  fullName: DispatcherFrame.DispatcherFrame\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n- uid: System.Windows.Threading.DispatcherFrame.Continue*\n  parent: System.Windows.Threading.DispatcherFrame\n  isExternal: false\n  name: Continue\n  nameWithType: DispatcherFrame.Continue\n  fullName: DispatcherFrame.Continue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherFrame.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n"}