<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d53b17d80c11a7d874676fec9715ef5e93d93ae</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.DataRow.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cccfebb4a6b2f4ec67612ffecbf3f9870551f455</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3af88a8e233de870d64dcb226c2eda25e82f9697</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a row of data in a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects are primary components of a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> object and its properties and methods to retrieve and evaluate; and insert, delete, and update the values in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> represents the actual <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Data.DataColumnCollection&gt;</ph> contains the <ph id="ph5">&lt;xref:System.Data.DataColumn&gt;</ph> objects that describe the schema of the <ph id="ph6">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the overloaded <ph id="ph1">&lt;xref:System.Data.DataRow.Item%2A&gt;</ph> property to return or set the value of a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataRow.IsNull%2A&gt;</ph> properties to determine the status of a particular row value, and the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property to determine the state of the row relative to its parent <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>After creating a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method to add the new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, call the <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object to confirm the addition.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about adding data to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, see <bpt id="p1">[</bpt>Adding Data to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can delete a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> from the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> by calling the <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Data.DataRowCollection&gt;</ph>, or by calling the <ph id="ph5">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Data.DataRow&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowCollection.Remove%2A&gt;</ph> method removes the row from the collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> marks the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> for removal.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual removal occurs when you call <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling <ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph>, you can programmatically check which rows are marked for removal before actually deleting them.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>DataRow Deletion<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the DataRow.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Constructs a row from the builder.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Only for internal usage..</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>builder</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Commits all the changes made to this row since the last time <ph id="ph1">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> was called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When invoking <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method is implicitly called to end any edits.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of the row was Added or Modified, the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> becomes Unchanged.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> was Deleted, the row is removed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method for more information.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> class also has an <ph id="ph2">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method which affects changes made to the whole table.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and a code example that demonstrates how to accept and reject changes to individual data rows, see <bpt id="p1">[</bpt>AcceptChanges and RejectChanges<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Starts an edit operation on a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method to put a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> into edit mode.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this mode, events are temporarily suspended, letting the user make changes to more than one row without triggering validation rules.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you must make sure that the value of the column for a total amount is equal to the values for the debit and credit columns in a row, you can put each row into edit mode to suspend the validation of the row values until the user tries to commit the values.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method is called implicitly when the user changes the value of a data-bound control; the <ph id="ph2">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method is called implicitly when you invoke the <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method for the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>While in this edit mode, the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> stores representations of the original and new proposed values.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, as long as the <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method has not been called, you can retrieve either the original or proposed version by passing either <ph id="ph2">`DataRowVersion.Original`</ph> or <ph id="ph3">`DataRowVersion.Proposed`</ph> for the <ph id="ph4">`version`</ph> parameter of the <ph id="ph5">&lt;xref:System.Data.DataRow.Item%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also cancel any edits at this point by invoking the <ph id="ph1">&lt;xref:System.Data.DataRow.CancelEdit%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see if the row contains an original or proposed value, call the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method temporarily suspends <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> events, but the <ph id="ph3">`delete`</ph> operation does not.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The method was called inside the <ph id="ph1">&lt;xref href="System.Data.DataTable.RowChanging"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The method was called upon a deleted row.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Cancels the current edit on the row.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method for more information.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The method was called inside the <ph id="ph1">&lt;xref href="System.Data.DataTable.RowChanging"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Clears the errors for the row.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This includes the <ph id="ph1">&lt;xref href="System.Data.DataRow.RowError"&gt;&lt;/xref&gt;</ph> and errors set with <ph id="ph2">&lt;xref href="System.Data.DataRow.SetColumnError(System.Int32,System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataRow.GetColumnError%2A&gt;</ph> to set and return errors for individual columns.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property to set an error that applies to the whole row.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Deletes the <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of the row is Added, the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> becomes <ph id="ph3">`Detached`</ph> and the row is removed from the table when you call <ph id="ph4">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> becomes <ph id="ph2">`Deleted`</ph> after you use the <ph id="ph3">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> method on an existing <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>It remains <ph id="ph1">`Deleted`</ph> until you call <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this time, the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> is removed from the table.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> should not be called in a foreach loop while iterating through a <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.Delete%2A&gt;</ph> modifies the state of the collection.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deleted row can be undeleted by invoking <ph id="ph1">&lt;xref:System.Data.DataRow.RejectChanges%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method temporarily suspends <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> events, but the delete operation does not.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> has already been deleted.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Ends the edit occurring on the row.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The method was called inside the <ph id="ph1">&lt;xref href="System.Data.DataTable.RowChanging"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The edit broke a constraint.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The row belongs to the table and the edit tried to change the value of a read-only column.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The edit tried to put a null value into a column where <ph id="ph1">&lt;xref href="System.Data.DataColumn.AllowDBNull"&gt;&lt;/xref&gt;</ph> is false.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the child rows of this <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects that is returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The relation is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The row does not have this version of data.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the child rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects that is returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the child rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects that is returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowVersion.Default&gt;</ph> is specified, the version that is used depends on the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of the row on which <ph id="ph3">`GetChildRows`</ph> is invoked.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row on which <ph id="ph1">`GetChildRows`</ph> is invoked has a <ph id="ph2">`RowState`</ph> of <ph id="ph3">`Modified`</ph>, <ph id="ph4">`New`</ph>, or <ph id="ph5">`Unchanged`</ph>, the <ph id="ph6">&lt;xref:System.Data.DataRowVersion.Current&gt;</ph> version of the row is used for fetching related child rows with matching values in their Current versions.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row on which <ph id="ph1">`GetChildRows`</ph> is invoked has a <ph id="ph2">`RowState`</ph> of <ph id="ph3">`Deleted`</ph>, the <ph id="ph4">&lt;xref:System.Data.DataRowVersion.Original&gt;</ph> version of the row is used for fetching related child rows with matching values in their original versions.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values specifying the version of the data to get.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The row does not have the requested <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the child rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects that is returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowVersion.Default&gt;</ph> is specified, the version that is used depends on the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of the row on which <ph id="ph3">`GetChildRows`</ph> is invoked.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row on which <ph id="ph1">`GetChildRows`</ph> is invoked has a <ph id="ph2">`RowState`</ph> of <ph id="ph3">`Modified`</ph>, <ph id="ph4">`New`</ph>, or <ph id="ph5">`Unchanged`</ph>, the <ph id="ph6">&lt;xref:System.Data.DataRowVersion.Current&gt;</ph> version of the row is used for fetching related child rows with matching values in their Current versions.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row on which <ph id="ph1">`GetChildRows`</ph> is invoked has a <ph id="ph2">`RowState`</ph> of <ph id="ph3">`Deleted`</ph>, the <ph id="ph4">&lt;xref:System.Data.DataRowVersion.Original&gt;</ph> version of the row is used for fetching related child rows with matching values in their original versions.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values specifying the version of the data to get.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The row does not have the requested <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the error description for a column, specified by name.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method to set column errors.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The text of the error description.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the error description of the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method to set column errors.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> returns all rows with errors.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The text of the error description.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets the error description for the column specified by index.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method to set column errors.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The text of the error description.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnIndex</ph><ept id="p1">&lt;/code&gt;</ept> argument is out of range.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets an array of columns that have errors.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> lets you reduce the number of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects that must be processed for errors by returning only those columns that have an error.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors can be set to individual columns with the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>To further reduce the number of processing, examine the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> class to determine whether a <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> has errors before invoking <ph id="ph4">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method to clear all errors on the row.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> objects that contain errors.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> of the current row.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to the <ph id="ph2">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The row is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A child row has multiple parents.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This row does not belong to the child table of the <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The row does not belong to a table.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> of the current row.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A child row has multiple parents.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values specifying the version of the data to get.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> of the current row.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The row is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this table's parent relations.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A child row has multiple parents.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The relation's child table is not the table the row belongs to.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The row does not belong to a table.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The row does not have this version of data.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Gets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> of the current row.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A child row has multiple parents.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The row does not have the requested <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets the parent rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values specifying the version of the data to get.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> does not belong to this row's <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The row is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The relation's child table is not the table the row belongs to.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The row does not belong to a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The row does not have the requested <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Gets the parent rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> does not belong to this row's <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The row is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The relation's child table is not the table the row belongs to.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The row does not belong to a <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Gets the parent rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets the parent rows of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph2">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the collection of all parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects for the data set is returned by the <ph id="ph3">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, returned by the <ph id="ph3">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasVersion%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Data.DataRowVersion&gt;</ph> that you want exists.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataRelation.RelationName"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values specifying the version of the data to get.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> objects or an array of length zero.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The relation and row do not belong to the same table.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relation</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The row does not have the requested <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there are errors in a row.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HasErrors`</ph> returns <ph id="ph2">`true`</ph> if any <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> object in the row contains an error, or if the <ph id="ph4">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> is not an empty string.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>When validating data, you can set an error on any column in a row.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such a column, when displayed in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid?displayProperty=fullName&gt;</ph> control, is marked with a red exclamation point to signal to the user that the column is in error.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> to set an error on any column.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnError%2A&gt;</ph> and <ph id="ph2">`GetColumnsInError`</ph> methods to return columns with errors.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method clears all errors for the row.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the row contains an error; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a specified version exists.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method for more information.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values that specifies the row version.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the version exists; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> contains a null value.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column contains a null value; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the column at the specified index contains a null value.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column contains a null value; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the named column contains a null value.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column contains a null value; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> contains a null value.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values that specifies the row version.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column contains a null value; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets or sets the data stored in the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an immediate edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The column does not belong to this table.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">column</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An attempt was made to set a value on a deleted row.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The data types of the value and the column do not match.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Gets or sets the data stored in the column specified by index.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Occurs when you try to set a value on a deleted row.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnIndex</ph><ept id="p1">&lt;/code&gt;</ept> argument is out of range.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Occurs when you set the value and the new value's <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> does not match <ph id="ph2">&lt;xref href="System.Data.DataColumn.DataType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets or sets the data stored in the column specified by name.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an immediate edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The column specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnName</ph><ept id="p1">&lt;/code&gt;</ept> cannot be found.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Occurs when you try to set a value on a deleted row.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Occurs when you set a value and its <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> does not match <ph id="ph2">&lt;xref href="System.Data.DataColumn.DataType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Occurs when you try to insert a null value into a column where <ph id="ph1">&lt;xref href="System.Data.DataColumn.AllowDBNull"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Gets the specified version of data stored in the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> should not be confused with the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> argument describes the state of the data that is contained by the column relative to the column's original value.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an immediate edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> that contains information about the column.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values that specifies the row version that you want.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The column does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">column</ph><ept id="p1">&lt;/code&gt;</ept> argument contains null.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The row does not have this version of data.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Gets the data stored in the column, specified by index and version of the data to retrieve.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only create or update a row after you call the <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method; similarly, the <ph id="ph2">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method must be called to commit the edit.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you call the <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method, and before you call the <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method, internal representations of the original and new proposed values are stored.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, until you call the <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>, you can use the <ph id="ph2">`version`</ph> argument to specify which version of a column's value you need, either the <ph id="ph3">`DataRowVersion.Original`</ph> or <ph id="ph4">`DataRowVersion.Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, as soon as you call the <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method, the version of the column reverts to <ph id="ph2">`DataRowVersion.Original`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row is new, you can also pass <ph id="ph1">`DataRowVersion.Default`</ph> for the parameter to retrieve the column's default value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When passing <ph id="ph1">`DataRowVersion.Current`</ph>, the property returns the current value, whatever its version may be.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.BeginEdit%2A&gt;</ph> method is called implicitly when you change the value of a data-bound control or when a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object is added to the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>; the <ph id="ph4">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method is called implicitly when you call the following methods: the <ph id="ph5">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Data.DataRow&gt;</ph> object, the <ph id="ph7">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method of the <ph id="ph8">&lt;xref:System.Data.DataTable&gt;</ph> object, or the <ph id="ph9">&lt;xref:System.Data.DataRow.CancelEdit%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, the <ph id="ph1">&lt;xref:System.Data.DataRowVersion&gt;</ph> enumeration <ph id="ph2">`Current`</ph> returns the version of the data after the <ph id="ph3">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> method has been called.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> argument should not be confused with the <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> argument describes the state of the data that is contained by the column relative to the column's original value.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property describes the state of the whole row relative to its parent <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an immediate edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values that specifies the row version that you want.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnIndex</ph><ept id="p1">&lt;/code&gt;</ept> argument is out of range.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The data types of the value and the column do not match.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The row does not have this version of data.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>An attempt was made to set a value on a deleted row.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Gets the specified version of data stored in the named column.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The version should not be confused with the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> argument describes the state of the data that is contained by the column relative to the column's original value.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property describes the state of the whole row relative to its parent <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the property, an exception is generated if an exception occurs in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is an immediate edit, see <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A&gt;</ph> for the exceptions that can be generated.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowVersion"&gt;&lt;/xref&gt;</ph> values that specifies the row version that you want.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Possible values are <ph id="ph1">`Default`</ph>, <ph id="ph2">`Original`</ph>, <ph id="ph3">`Current`</ph>, and <ph id="ph4">`Proposed`</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains the data.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The column specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnName</ph><ept id="p1">&lt;/code&gt;</ept> cannot be found.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The data types of the value and the column do not match.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The row does not have this version of data.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The row was deleted.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Gets or sets all the values for this row through an array.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to set or get values for this row through an array.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this property to set values, the array must have the same size and ordering as the column collection.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing <ph id="ph1">`null`</ph> in the <ph id="ph2">&lt;xref:System.Data.DataRow.ItemArray%2A&gt;</ph> indicates that no value was specified.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can generate exceptions in the <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> event or the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The array is larger than the number of columns in the table.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A value in the array does not match its <ph id="ph1">&lt;xref href="System.Data.DataColumn.DataType"&gt;&lt;/xref&gt;</ph> in its respective <ph id="ph2">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>An edit broke a constraint.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>An edit tried to change the value of a read-only column.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>An edit tried to put a null value in a column where <ph id="ph1">&lt;xref href="System.Data.DataColumn.AllowDBNull"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> object is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The row has been deleted.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Rejects all changes made to the row since <ph id="ph1">&lt;xref href="System.Data.DataRow.AcceptChanges"&gt;&lt;/xref&gt;</ph> was last called.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Data.DataRow.RejectChanges%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.DataRow.CancelEdit%2A&gt;</ph> method is implicitly called to cancel any edits.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> is deleted or modified, the row reverts to its previous values, and <ph id="ph2">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> becomes unchanged.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> is added, the row is removed.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The row does not belong to the table.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Gets or sets the custom error description for a row.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property to first determine whether a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> contains errors.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The text describing an error.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Gets the current state of the row with regard to its relationship to the <ph id="ph1">&lt;xref href="System.Data.DataRowCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> depends on two factors: the kind of operation has been performed on the row, and whether <ph id="ph2">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> has been called on the <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.DataRowState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Changes the <ph id="ph1">&lt;xref href="System.Data.DataRow.Rowstate"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> to <ph id="ph3">`Added`</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to <ph id="ph3">`Added`</ph>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current row is not in either an <ph id="ph1">`Unchanged`</ph> or an <ph id="ph2">`Added`</ph> state, it throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> with the message that <ph id="ph4">`SetAdded`</ph> can only be invoked on a <ph id="ph5">`DataRow`</ph> instance where the <ph id="ph6">`RowState`</ph> is <ph id="ph7">`Unchanged`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Sets the error description for a column specified as a <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine error descriptions, use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> or an empty string is passed in as the <ph id="ph2">`error`</ph> parameter, the <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> behaves as if no error was set and the <ph id="ph4">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property will return false.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a custom error description on the whole row, use the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> to set the error description for.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The error description.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Sets the error description for a column specified by index.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is used to set custom error descriptions on specified columns.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control to display the text of the error.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine error descriptions, use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> or an empty string is passed in as the <ph id="ph2">`error`</ph> parameter, the <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> behaves as if no error was set and the <ph id="ph4">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property will return false.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a custom error description on the whole row, use the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set error text that applies to a whole row, set the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The error description.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">columnIndex</ph><ept id="p1">&lt;/code&gt;</ept> argument is out of range</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Sets the error description for a column specified by name.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of a column is set with the <ph id="ph1">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine error descriptions, use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, you can use the <ph id="ph1">&lt;xref:System.Data.DataRow.GetColumnsInError%2A&gt;</ph> method to retrieve all the columns with errors.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> or an empty string is passed in as the <ph id="ph2">`error`</ph> parameter, the <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> behaves as if no error was set and the <ph id="ph4">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> property will return false.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a custom error description on the whole row, use the <ph id="ph1">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether any errors exist for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.HasErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear all errors for the columns collection, use the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The error description.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Changes the <ph id="ph1">&lt;xref href="System.Data.DataRow.Rowstate"&gt;&lt;/xref&gt;</ph> of a <ph id="ph2">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> to <ph id="ph3">`Modified`</ph>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes the <ph id="ph1">&lt;xref:System.Data.DataRow.Rowstate%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to <ph id="ph3">`Modified`</ph>.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current row is not in either an <ph id="ph1">`Unchanged`</ph> or an <ph id="ph2">`Added`</ph> state, it throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> with the message that <ph id="ph4">`SetModified`</ph> can only be invoked on a <ph id="ph5">`DataRow`</ph> instance where the <ph id="ph6">`RowState`</ph> is <ph id="ph7">`Unchanged`</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Sets the value of the specified <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph> to a null value.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataRow.IsNull%2A&gt;</ph> method to determine whether a column contains a null value.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataColumn"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Sets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> with specified new parent <ph id="ph2">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The new parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Sets the parent row of a <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> with specified new parent <ph id="ph2">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The new parent <ph id="ph1">&lt;xref href="System.Data.DataRow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The relation <ph id="ph1">&lt;xref href="System.Data.DataRelation"&gt;&lt;/xref&gt;</ph> to use.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>One of the rows does not belong to a table</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>One of the rows is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The relation does not belong to the <ph id="ph1">&lt;xref href="System.Data.DataRelationCollection"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The relation's child <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> is not the table this row belongs to.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> for which this row has a schema.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> does not necessarily belong to any table's collection of rows.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs when the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has been created but not added to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property returns <ph id="ph2">`DataRowState.Detached`</ph>, the row is not in any collection.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> to which this row belongs.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>