{"nodes":[{"content":"Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.","nodes":[{"pos":[0,145],"content":"Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.","nodes":[{"content":"Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.","pos":[0,145]}]}],"pos":[792,938],"yaml":true},{"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).","nodes":[{"pos":[0,332],"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).","nodes":[{"content":"Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts.","pos":[0,138]},{"content":"The persistence provider passes the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Persistence.InstanceLockedException\"&gt;&lt;/xref&gt;</ph> to the caller at the end of the sequence (after retrying predefined number of times).","pos":[139,332],"source":" The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times)."}]}],"pos":[2210,2543],"yaml":true},{"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).","nodes":[{"pos":[0,295],"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).","nodes":[{"content":"Specifies that the persistence provider reattempts to lock the instance with a linear retry interval.","pos":[0,101]},{"content":"The persistence provider passes the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Persistence.InstanceLockedException\"&gt;&lt;/xref&gt;</ph> to the caller at the end of the sequence (after retrying predefined number of times).","pos":[102,295],"source":" The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times)."}]}],"pos":[3726,4022],"yaml":true},{"content":"Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.","nodes":[{"pos":[0,129],"content":"Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.","nodes":[{"content":"Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.","pos":[0,129]}]}],"pos":[5182,5312],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  commentId: T:System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  id: InstanceLockedExceptionAction\n  children:\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  langs:\n  - csharp\n  name: InstanceLockedExceptionAction\n  nameWithType: InstanceLockedExceptionAction\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  type: Enum\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Contains options that specify what action the SQL persistence provider should take when it receives an exception when trying to lock an instance.\n  syntax:\n    content: public enum InstanceLockedExceptionAction\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DurableInstancing/InstanceLockedExceptionAction.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  commentId: F:System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  id: AggressiveRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: AggressiveRetry\n  nameWithType: InstanceLockedExceptionAction.AggressiveRetry\n  fullName: InstanceLockedExceptionAction.AggressiveRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider reattempts to lock an instance with an exponentially increasing delay between successive attempts. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).\n  syntax:\n    content: AggressiveRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DurableInstancing/InstanceLockedExceptionAction.xml\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  commentId: F:System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  id: BasicRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: BasicRetry\n  nameWithType: InstanceLockedExceptionAction.BasicRetry\n  fullName: InstanceLockedExceptionAction.BasicRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider reattempts to lock the instance with a linear retry interval. The persistence provider passes the <xref href=\"System.Runtime.Persistence.InstanceLockedException\"></xref> to the caller at the end of the sequence (after retrying predefined number of times).\n  syntax:\n    content: BasicRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DurableInstancing/InstanceLockedExceptionAction.xml\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  commentId: F:System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  id: NoRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  langs:\n  - csharp\n  name: NoRetry\n  nameWithType: InstanceLockedExceptionAction.NoRetry\n  fullName: InstanceLockedExceptionAction.NoRetry\n  type: Field\n  assemblies:\n  - System.Activities.DurableInstancing\n  namespace: System.Activities.DurableInstancing\n  summary: Specifies that the persistence provider does not reattempt to lock an instance if the instance is already locked by another host.\n  syntax:\n    content: NoRetry\n    return:\n      type: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DurableInstancing/InstanceLockedExceptionAction.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.AggressiveRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: AggressiveRetry\n  nameWithType: InstanceLockedExceptionAction.AggressiveRetry\n  fullName: InstanceLockedExceptionAction.AggressiveRetry\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  parent: System.Activities.DurableInstancing\n  isExternal: false\n  name: InstanceLockedExceptionAction\n  nameWithType: InstanceLockedExceptionAction\n  fullName: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.BasicRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: BasicRetry\n  nameWithType: InstanceLockedExceptionAction.BasicRetry\n  fullName: InstanceLockedExceptionAction.BasicRetry\n- uid: System.Activities.DurableInstancing.InstanceLockedExceptionAction.NoRetry\n  parent: System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  isExternal: false\n  name: NoRetry\n  nameWithType: InstanceLockedExceptionAction.NoRetry\n  fullName: InstanceLockedExceptionAction.NoRetry\n"}