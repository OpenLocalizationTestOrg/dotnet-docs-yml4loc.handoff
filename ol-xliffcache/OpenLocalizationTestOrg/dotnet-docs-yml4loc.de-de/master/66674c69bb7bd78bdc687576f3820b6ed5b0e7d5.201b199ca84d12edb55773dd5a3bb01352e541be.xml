{"nodes":[{"content":"Provides an asynchronous <xref href=\"System.Web.Caching.OutputCacheProvider\"></xref> class.","nodes":[{"pos":[0,91],"content":"Provides an asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Web.Caching.OutputCacheProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Provides an asynchronous <xref href=\"System.Web.Caching.OutputCacheProvider\"></xref> class."}],"pos":[830,922],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Caching.OutputCacheProviderAsync\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Caching.OutputCacheProviderAsync\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Caching.OutputCacheProviderAsync\"></xref> class."}],"pos":[2786,2892],"yaml":true},{"content":"Asynchronously inserts the specified entry into the output cache.","nodes":[{"pos":[0,65],"content":"Asynchronously inserts the specified entry into the output cache.","nodes":[{"content":"Asynchronously inserts the specified entry into the output cache.","pos":[0,65]}]}],"pos":[3985,4051],"yaml":true},{"content":"A unique identifier for entry.","nodes":[{"pos":[0,30],"content":"A unique identifier for entry.","nodes":[{"content":"A unique identifier for entry.","pos":[0,30]}]}],"pos":[4258,4289],"yaml":true},{"content":"The content to add to the output cache.","nodes":[{"pos":[0,39],"content":"The content to add to the output cache.","nodes":[{"content":"The content to add to the output cache.","pos":[0,39]}]}],"pos":[4350,4390],"yaml":true},{"content":"The time and date on which the cached entry expires.","nodes":[{"pos":[0,52],"content":"The time and date on which the cached entry expires.","nodes":[{"content":"The time and date on which the cached entry expires.","pos":[0,52]}]}],"pos":[4457,4510],"yaml":true},{"content":"The specified entry.","nodes":[{"pos":[0,20],"content":"The specified entry.","nodes":[{"content":"The specified entry.","pos":[0,20]}]}],"pos":[4596,4617],"yaml":true},{"content":"Asynchronously returns a reference to the specified entry in the output cache.","nodes":[{"pos":[0,78],"content":"Asynchronously returns a reference to the specified entry in the output cache.","nodes":[{"content":"Asynchronously returns a reference to the specified entry in the output cache.","pos":[0,78]}]}],"pos":[5488,5567],"yaml":true},{"content":"A unique identifier for a cached entry in the output cache.","nodes":[{"pos":[0,59],"content":"A unique identifier for a cached entry in the output cache.","nodes":[{"content":"A unique identifier for a cached entry in the output cache.","pos":[0,59]}]}],"pos":[5740,5800],"yaml":true},{"content":"The <code>key</code> value that identifies the specified entry in the cache, or `null` if the specified entry is not in the cache.","nodes":[{"pos":[0,130],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> value that identifies the specified entry in the cache, or <ph id=\"ph2\">`null`</ph> if the specified entry is not in the cache.","source":"The <code>key</code> value that identifies the specified entry in the cache, or `null` if the specified entry is not in the cache."}],"pos":[5886,6017],"yaml":true},{"content":"Asynchronously removes the specified entry from the output cache.","nodes":[{"pos":[0,65],"content":"Asynchronously removes the specified entry from the output cache.","nodes":[{"content":"Asynchronously removes the specified entry from the output cache.","pos":[0,65]}]}],"pos":[6906,6972],"yaml":true},{"content":"The unique identifier for the entry to remove from the output cache.","nodes":[{"pos":[0,68],"content":"The unique identifier for the entry to remove from the output cache.","nodes":[{"content":"The unique identifier for the entry to remove from the output cache.","pos":[0,68]}]}],"pos":[7140,7209],"yaml":true},{"content":"The status of the operation.","nodes":[{"pos":[0,28],"content":"The status of the operation.","nodes":[{"content":"The status of the operation.","pos":[0,28]}]}],"pos":[7280,7309],"yaml":true},{"content":"Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.","nodes":[{"pos":[0,112],"content":"Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.","nodes":[{"content":"Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.","pos":[0,112]}]}],"pos":[8327,8440],"yaml":true},{"content":"A unique identifier for <code>entry</code>","nodes":[{"pos":[0,42],"content":"A unique identifier for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">entry</ph><ept id=\"p1\">&lt;/code&gt;</ept>","source":"A unique identifier for <code>entry</code>"}],"pos":[8639,8682],"yaml":true},{"content":"The content to add to the output cache.","nodes":[{"pos":[0,39],"content":"The content to add to the output cache.","nodes":[{"content":"The content to add to the output cache.","pos":[0,39]}]}],"pos":[8743,8783],"yaml":true},{"content":"The time and date on which the cached <code>entry</code> expires.","nodes":[{"pos":[0,65],"content":"The time and date on which the cached <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">entry</ph><ept id=\"p1\">&lt;/code&gt;</ept> expires.","source":"The time and date on which the cached <code>entry</code> expires."}],"pos":[8850,8916],"yaml":true},{"content":"The status of the operation.","nodes":[{"pos":[0,28],"content":"The status of the operation.","nodes":[{"content":"The status of the operation.","pos":[0,28]}]}],"pos":[8987,9016],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Caching.OutputCacheProviderAsync\n  commentId: T:System.Web.Caching.OutputCacheProviderAsync\n  id: OutputCacheProviderAsync\n  children:\n  - System.Web.Caching.OutputCacheProviderAsync.#ctor\n  - System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  - System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  - System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  - System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  langs:\n  - csharp\n  name: OutputCacheProviderAsync\n  nameWithType: OutputCacheProviderAsync\n  fullName: System.Web.Caching.OutputCacheProviderAsync\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Provides an asynchronous <xref href=\"System.Web.Caching.OutputCacheProvider\"></xref> class.\n  syntax:\n    content: 'public abstract class OutputCacheProviderAsync : System.Web.Caching.OutputCacheProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Web.Caching.OutputCacheProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Web.Caching.OutputCacheProvider.Add(System.String,System.Object,System.DateTime)\n  - System.Web.Caching.OutputCacheProvider.Get(System.String)\n  - System.Web.Caching.OutputCacheProvider.Remove(System.String)\n  - System.Web.Caching.OutputCacheProvider.Set(System.String,System.Object,System.DateTime)\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor\n  commentId: M:System.Web.Caching.OutputCacheProviderAsync.#ctor\n  id: '#ctor'\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: OutputCacheProviderAsync()\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync()\n  fullName: OutputCacheProviderAsync.OutputCacheProviderAsync()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Web.Caching.OutputCacheProviderAsync\"></xref> class.\n  syntax:\n    content: protected OutputCacheProviderAsync ();\n    parameters: []\n  overload: System.Web.Caching.OutputCacheProviderAsync.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  commentId: M:System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  id: AddAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: AddAsync(String, Object, DateTime)\n  nameWithType: OutputCacheProviderAsync.AddAsync(String, Object, DateTime)\n  fullName: OutputCacheProviderAsync.AddAsync(String, Object, DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously inserts the specified entry into the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task<object> AddAsync (string key, object entry, DateTime utcExpiry);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for entry.\n    - id: entry\n      type: System.Object\n      description: The content to add to the output cache.\n    - id: utcExpiry\n      type: System.DateTime\n      description: The time and date on which the cached entry expires.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: The specified entry.\n  overload: System.Web.Caching.OutputCacheProviderAsync.AddAsync*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  commentId: M:System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  id: GetAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: GetAsync(String)\n  nameWithType: OutputCacheProviderAsync.GetAsync(String)\n  fullName: OutputCacheProviderAsync.GetAsync(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously returns a reference to the specified entry in the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task<object> GetAsync (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for a cached entry in the output cache.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: The <code>key</code> value that identifies the specified entry in the cache, or `null` if the specified entry is not in the cache.\n  overload: System.Web.Caching.OutputCacheProviderAsync.GetAsync*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  commentId: M:System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  id: RemoveAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: RemoveAsync(String)\n  nameWithType: OutputCacheProviderAsync.RemoveAsync(String)\n  fullName: OutputCacheProviderAsync.RemoveAsync(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously removes the specified entry from the output cache.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task RemoveAsync (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: The unique identifier for the entry to remove from the output cache.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The status of the operation.\n  overload: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  commentId: M:System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  id: SetAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  langs:\n  - csharp\n  name: SetAsync(String, Object, DateTime)\n  nameWithType: OutputCacheProviderAsync.SetAsync(String, Object, DateTime)\n  fullName: OutputCacheProviderAsync.SetAsync(String, Object, DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Asynchronously Inserts the specified entry into the output cache, overwriting the entry if it is already cached.\n  syntax:\n    content: public abstract System.Threading.Tasks.Task SetAsync (string key, object entry, DateTime utcExpiry);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for <code>entry</code>\n    - id: entry\n      type: System.Object\n      description: The content to add to the output cache.\n    - id: utcExpiry\n      type: System.DateTime\n      description: The time and date on which the cached <code>entry</code> expires.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The status of the operation.\n  overload: System.Web.Caching.OutputCacheProviderAsync.SetAsync*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.Caching.OutputCacheProvider\n  parent: System.Web.Caching\n  isExternal: false\n  name: OutputCacheProvider\n  nameWithType: OutputCacheProvider\n  fullName: System.Web.Caching.OutputCacheProvider\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: OutputCacheProviderAsync()\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync()\n  fullName: OutputCacheProviderAsync.OutputCacheProviderAsync()\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: AddAsync(String, Object, DateTime)\n  nameWithType: OutputCacheProviderAsync.AddAsync(String, Object, DateTime)\n  fullName: OutputCacheProviderAsync.AddAsync(String, Object, DateTime)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: GetAsync(String)\n  nameWithType: OutputCacheProviderAsync.GetAsync(String)\n  fullName: OutputCacheProviderAsync.GetAsync(String)\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync(System.String)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: RemoveAsync(String)\n  nameWithType: OutputCacheProviderAsync.RemoveAsync(String)\n  fullName: OutputCacheProviderAsync.RemoveAsync(String)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: SetAsync(String, Object, DateTime)\n  nameWithType: OutputCacheProviderAsync.SetAsync(String, Object, DateTime)\n  fullName: OutputCacheProviderAsync.SetAsync(String, Object, DateTime)\n- uid: System.Web.Caching.OutputCacheProviderAsync.#ctor*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: OutputCacheProviderAsync\n  nameWithType: OutputCacheProviderAsync.OutputCacheProviderAsync\n  fullName: OutputCacheProviderAsync.OutputCacheProviderAsync\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n- uid: System.Web.Caching.OutputCacheProviderAsync.AddAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: AddAsync\n  nameWithType: OutputCacheProviderAsync.AddAsync\n  fullName: OutputCacheProviderAsync.AddAsync\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n- uid: System.Web.Caching.OutputCacheProviderAsync.GetAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: GetAsync\n  nameWithType: OutputCacheProviderAsync.GetAsync\n  fullName: OutputCacheProviderAsync.GetAsync\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n- uid: System.Web.Caching.OutputCacheProviderAsync.RemoveAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: RemoveAsync\n  nameWithType: OutputCacheProviderAsync.RemoveAsync\n  fullName: OutputCacheProviderAsync.RemoveAsync\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n- uid: System.Web.Caching.OutputCacheProviderAsync.SetAsync*\n  parent: System.Web.Caching.OutputCacheProviderAsync\n  isExternal: false\n  name: SetAsync\n  nameWithType: OutputCacheProviderAsync.SetAsync\n  fullName: OutputCacheProviderAsync.SetAsync\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/OutputCacheProviderAsync.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: ProviderBase.Initialize(String, NameValueCollection)\n  fullName: ProviderBase.Initialize(String, NameValueCollection)\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n- uid: System.Web.Caching.OutputCacheProvider.Add(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProvider\n  isExternal: false\n  name: Add(String, Object, DateTime)\n  nameWithType: OutputCacheProvider.Add(String, Object, DateTime)\n  fullName: OutputCacheProvider.Add(String, Object, DateTime)\n- uid: System.Web.Caching.OutputCacheProvider.Get(System.String)\n  parent: System.Web.Caching.OutputCacheProvider\n  isExternal: false\n  name: Get(String)\n  nameWithType: OutputCacheProvider.Get(String)\n  fullName: OutputCacheProvider.Get(String)\n- uid: System.Web.Caching.OutputCacheProvider.Remove(System.String)\n  parent: System.Web.Caching.OutputCacheProvider\n  isExternal: false\n  name: Remove(String)\n  nameWithType: OutputCacheProvider.Remove(String)\n  fullName: OutputCacheProvider.Remove(String)\n- uid: System.Web.Caching.OutputCacheProvider.Set(System.String,System.Object,System.DateTime)\n  parent: System.Web.Caching.OutputCacheProvider\n  isExternal: false\n  name: Set(String, Object, DateTime)\n  nameWithType: OutputCacheProvider.Set(String, Object, DateTime)\n  fullName: OutputCacheProvider.Set(String, Object, DateTime)\n"}