{"nodes":[{"content":"The <xref href=\"System.Threading\"></xref> namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (<xref href=\"System.Threading.Mutex\"></xref>, <xref href=\"System.Threading.Monitor\"></xref>, <xref href=\"System.Threading.Interlocked\"></xref>, <xref href=\"System.Threading.AutoResetEvent\"></xref>, and so on), this namespace includes a <xref href=\"System.Threading.ThreadPool\"></xref> class that allows you to use a pool of system-supplied threads, and a <xref href=\"System.Threading.Timer\"></xref> class that executes callback methods on thread pool threads.","nodes":[{"pos":[0,660],"content":"The <xref href=\"System.Threading\"></xref> namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (<xref href=\"System.Threading.Mutex\"></xref>, <xref href=\"System.Threading.Monitor\"></xref>, <xref href=\"System.Threading.Interlocked\"></xref>, <xref href=\"System.Threading.AutoResetEvent\"></xref>, and so on), this namespace includes a <xref href=\"System.Threading.ThreadPool\"></xref> class that allows you to use a pool of system-supplied threads, and a <xref href=\"System.Threading.Timer\"></xref> class that executes callback methods on thread pool threads.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading\"&gt;&lt;/xref&gt;</ph> namespace provides classes and interfaces that enable multithreaded programming.","pos":[0,122],"source":"The <xref href=\"System.Threading\"></xref> namespace provides classes and interfaces that enable multithreaded programming."},{"content":"In addition to classes for synchronizing thread activities and access to data (<ph id=\"ph1\">&lt;xref href=\"System.Threading.Mutex\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Threading.Monitor\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Threading.Interlocked\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Threading.AutoResetEvent\"&gt;&lt;/xref&gt;</ph>, and so on), this namespace includes a <ph id=\"ph5\">&lt;xref href=\"System.Threading.ThreadPool\"&gt;&lt;/xref&gt;</ph> class that allows you to use a pool of system-supplied threads, and a <ph id=\"ph6\">&lt;xref href=\"System.Threading.Timer\"&gt;&lt;/xref&gt;</ph> class that executes callback methods on thread pool threads.","pos":[123,660],"source":" In addition to classes for synchronizing thread activities and access to data (<xref href=\"System.Threading.Mutex\"></xref>, <xref href=\"System.Threading.Monitor\"></xref>, <xref href=\"System.Threading.Interlocked\"></xref>, <xref href=\"System.Threading.AutoResetEvent\"></xref>, and so on), this namespace includes a <xref href=\"System.Threading.ThreadPool\"></xref> class that allows you to use a pool of system-supplied threads, and a <xref href=\"System.Threading.Timer\"></xref> class that executes callback methods on thread pool threads."}]}],"pos":[2864,3525],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading\n  id: System.Threading\n  children:\n  - System.Threading.AbandonedMutexException\n  - System.Threading.ApartmentState\n  - System.Threading.AsyncFlowControl\n  - System.Threading.AsyncLocal`1\n  - System.Threading.AsyncLocalValueChangedArgs`1\n  - System.Threading.AutoResetEvent\n  - System.Threading.Barrier\n  - System.Threading.BarrierPostPhaseException\n  - System.Threading.CancellationToken\n  - System.Threading.CancellationTokenRegistration\n  - System.Threading.CancellationTokenSource\n  - System.Threading.CompressedStack\n  - System.Threading.ContextCallback\n  - System.Threading.CountdownEvent\n  - System.Threading.EventResetMode\n  - System.Threading.EventWaitHandle\n  - System.Threading.ExecutionContext\n  - System.Threading.HostExecutionContext\n  - System.Threading.HostExecutionContextManager\n  - System.Threading.Interlocked\n  - System.Threading.IOCompletionCallback\n  - System.Threading.LazyInitializer\n  - System.Threading.LazyThreadSafetyMode\n  - System.Threading.LockCookie\n  - System.Threading.LockRecursionException\n  - System.Threading.LockRecursionPolicy\n  - System.Threading.ManualResetEvent\n  - System.Threading.ManualResetEventSlim\n  - System.Threading.Monitor\n  - System.Threading.Mutex\n  - System.Threading.NativeOverlapped\n  - System.Threading.Overlapped\n  - System.Threading.ParameterizedThreadStart\n  - System.Threading.PreAllocatedOverlapped\n  - System.Threading.ReaderWriterLock\n  - System.Threading.ReaderWriterLockSlim\n  - System.Threading.RegisteredWaitHandle\n  - System.Threading.Semaphore\n  - System.Threading.SemaphoreFullException\n  - System.Threading.SemaphoreSlim\n  - System.Threading.SendOrPostCallback\n  - System.Threading.SpinLock\n  - System.Threading.SpinWait\n  - System.Threading.SynchronizationContext\n  - System.Threading.SynchronizationLockException\n  - System.Threading.Thread\n  - System.Threading.ThreadAbortException\n  - System.Threading.ThreadExceptionEventArgs\n  - System.Threading.ThreadExceptionEventHandler\n  - System.Threading.ThreadingAclExtensions\n  - System.Threading.ThreadInterruptedException\n  - System.Threading.ThreadLocal`1\n  - System.Threading.ThreadPool\n  - System.Threading.ThreadPoolBoundHandle\n  - System.Threading.ThreadPriority\n  - System.Threading.ThreadStart\n  - System.Threading.ThreadStartException\n  - System.Threading.ThreadState\n  - System.Threading.ThreadStateException\n  - System.Threading.Timeout\n  - System.Threading.Timer\n  - System.Threading.TimerCallback\n  - System.Threading.Volatile\n  - System.Threading.WaitCallback\n  - System.Threading.WaitHandle\n  - System.Threading.WaitHandleCannotBeOpenedException\n  - System.Threading.WaitHandleExtensions\n  - System.Threading.WaitOrTimerCallback\n  langs:\n  - csharp\n  name: System.Threading\n  nameWithType: System.Threading\n  fullName: System.Threading\n  type: Namespace\n  summary: The <xref href=\"System.Threading\"></xref> namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (<xref href=\"System.Threading.Mutex\"></xref>, <xref href=\"System.Threading.Monitor\"></xref>, <xref href=\"System.Threading.Interlocked\"></xref>, <xref href=\"System.Threading.AutoResetEvent\"></xref>, and so on), this namespace includes a <xref href=\"System.Threading.ThreadPool\"></xref> class that allows you to use a pool of system-supplied threads, and a <xref href=\"System.Threading.Timer\"></xref> class that executes callback methods on thread pool threads.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Threading.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Threading.AbandonedMutexException\n  parent: System.Threading\n  isExternal: false\n  name: AbandonedMutexException\n  nameWithType: AbandonedMutexException\n  fullName: System.Threading.AbandonedMutexException\n- uid: System.Threading.ApartmentState\n  parent: System.Threading\n  isExternal: false\n  name: ApartmentState\n  nameWithType: ApartmentState\n  fullName: System.Threading.ApartmentState\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncLocal`1\n  parent: System.Threading\n  isExternal: false\n  name: AsyncLocal<T>\n  nameWithType: AsyncLocal<T>\n  fullName: System.Threading.AsyncLocal<T>\n- uid: System.Threading.AsyncLocalValueChangedArgs`1\n  parent: System.Threading\n  isExternal: false\n  name: AsyncLocalValueChangedArgs<T>\n  nameWithType: AsyncLocalValueChangedArgs<T>\n  fullName: System.Threading.AsyncLocalValueChangedArgs<T>\n- uid: System.Threading.AutoResetEvent\n  parent: System.Threading\n  isExternal: false\n  name: AutoResetEvent\n  nameWithType: AutoResetEvent\n  fullName: System.Threading.AutoResetEvent\n- uid: System.Threading.Barrier\n  parent: System.Threading\n  isExternal: false\n  name: Barrier\n  nameWithType: Barrier\n  fullName: System.Threading.Barrier\n- uid: System.Threading.BarrierPostPhaseException\n  parent: System.Threading\n  isExternal: false\n  name: BarrierPostPhaseException\n  nameWithType: BarrierPostPhaseException\n  fullName: System.Threading.BarrierPostPhaseException\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.CancellationTokenRegistration\n  parent: System.Threading\n  isExternal: false\n  name: CancellationTokenRegistration\n  nameWithType: CancellationTokenRegistration\n  fullName: System.Threading.CancellationTokenRegistration\n- uid: System.Threading.CancellationTokenSource\n  parent: System.Threading\n  isExternal: false\n  name: CancellationTokenSource\n  nameWithType: CancellationTokenSource\n  fullName: System.Threading.CancellationTokenSource\n- uid: System.Threading.CompressedStack\n  parent: System.Threading\n  isExternal: false\n  name: CompressedStack\n  nameWithType: CompressedStack\n  fullName: System.Threading.CompressedStack\n- uid: System.Threading.ContextCallback\n  parent: System.Threading\n  isExternal: false\n  name: ContextCallback\n  nameWithType: ContextCallback\n  fullName: System.Threading.ContextCallback\n- uid: System.Threading.CountdownEvent\n  parent: System.Threading\n  isExternal: false\n  name: CountdownEvent\n  nameWithType: CountdownEvent\n  fullName: System.Threading.CountdownEvent\n- uid: System.Threading.EventResetMode\n  parent: System.Threading\n  isExternal: false\n  name: EventResetMode\n  nameWithType: EventResetMode\n  fullName: System.Threading.EventResetMode\n- uid: System.Threading.EventWaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: EventWaitHandle\n  nameWithType: EventWaitHandle\n  fullName: System.Threading.EventWaitHandle\n- uid: System.Threading.ExecutionContext\n  parent: System.Threading\n  isExternal: false\n  name: ExecutionContext\n  nameWithType: ExecutionContext\n  fullName: System.Threading.ExecutionContext\n- uid: System.Threading.HostExecutionContext\n  parent: System.Threading\n  isExternal: false\n  name: HostExecutionContext\n  nameWithType: HostExecutionContext\n  fullName: System.Threading.HostExecutionContext\n- uid: System.Threading.HostExecutionContextManager\n  parent: System.Threading\n  isExternal: false\n  name: HostExecutionContextManager\n  nameWithType: HostExecutionContextManager\n  fullName: System.Threading.HostExecutionContextManager\n- uid: System.Threading.Interlocked\n  parent: System.Threading\n  isExternal: false\n  name: Interlocked\n  nameWithType: Interlocked\n  fullName: System.Threading.Interlocked\n- uid: System.Threading.IOCompletionCallback\n  parent: System.Threading\n  isExternal: false\n  name: IOCompletionCallback\n  nameWithType: IOCompletionCallback\n  fullName: System.Threading.IOCompletionCallback\n- uid: System.Threading.LazyInitializer\n  parent: System.Threading\n  isExternal: false\n  name: LazyInitializer\n  nameWithType: LazyInitializer\n  fullName: System.Threading.LazyInitializer\n- uid: System.Threading.LazyThreadSafetyMode\n  parent: System.Threading\n  isExternal: false\n  name: LazyThreadSafetyMode\n  nameWithType: LazyThreadSafetyMode\n  fullName: System.Threading.LazyThreadSafetyMode\n- uid: System.Threading.LockCookie\n  parent: System.Threading\n  isExternal: false\n  name: LockCookie\n  nameWithType: LockCookie\n  fullName: System.Threading.LockCookie\n- uid: System.Threading.LockRecursionException\n  parent: System.Threading\n  isExternal: false\n  name: LockRecursionException\n  nameWithType: LockRecursionException\n  fullName: System.Threading.LockRecursionException\n- uid: System.Threading.LockRecursionPolicy\n  parent: System.Threading\n  isExternal: false\n  name: LockRecursionPolicy\n  nameWithType: LockRecursionPolicy\n  fullName: System.Threading.LockRecursionPolicy\n- uid: System.Threading.ManualResetEvent\n  parent: System.Threading\n  isExternal: false\n  name: ManualResetEvent\n  nameWithType: ManualResetEvent\n  fullName: System.Threading.ManualResetEvent\n- uid: System.Threading.ManualResetEventSlim\n  parent: System.Threading\n  isExternal: false\n  name: ManualResetEventSlim\n  nameWithType: ManualResetEventSlim\n  fullName: System.Threading.ManualResetEventSlim\n- uid: System.Threading.Monitor\n  parent: System.Threading\n  isExternal: false\n  name: Monitor\n  nameWithType: Monitor\n  fullName: System.Threading.Monitor\n- uid: System.Threading.Mutex\n  parent: System.Threading\n  isExternal: false\n  name: Mutex\n  nameWithType: Mutex\n  fullName: System.Threading.Mutex\n- uid: System.Threading.NativeOverlapped\n  parent: System.Threading\n  isExternal: false\n  name: NativeOverlapped\n  nameWithType: NativeOverlapped\n  fullName: System.Threading.NativeOverlapped\n- uid: System.Threading.Overlapped\n  parent: System.Threading\n  isExternal: false\n  name: Overlapped\n  nameWithType: Overlapped\n  fullName: System.Threading.Overlapped\n- uid: System.Threading.ParameterizedThreadStart\n  parent: System.Threading\n  isExternal: false\n  name: ParameterizedThreadStart\n  nameWithType: ParameterizedThreadStart\n  fullName: System.Threading.ParameterizedThreadStart\n- uid: System.Threading.PreAllocatedOverlapped\n  parent: System.Threading\n  isExternal: false\n  name: PreAllocatedOverlapped\n  nameWithType: PreAllocatedOverlapped\n  fullName: System.Threading.PreAllocatedOverlapped\n- uid: System.Threading.ReaderWriterLock\n  parent: System.Threading\n  isExternal: false\n  name: ReaderWriterLock\n  nameWithType: ReaderWriterLock\n  fullName: System.Threading.ReaderWriterLock\n- uid: System.Threading.ReaderWriterLockSlim\n  parent: System.Threading\n  isExternal: false\n  name: ReaderWriterLockSlim\n  nameWithType: ReaderWriterLockSlim\n  fullName: System.Threading.ReaderWriterLockSlim\n- uid: System.Threading.RegisteredWaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: RegisteredWaitHandle\n  nameWithType: RegisteredWaitHandle\n  fullName: System.Threading.RegisteredWaitHandle\n- uid: System.Threading.Semaphore\n  parent: System.Threading\n  isExternal: false\n  name: Semaphore\n  nameWithType: Semaphore\n  fullName: System.Threading.Semaphore\n- uid: System.Threading.SemaphoreFullException\n  parent: System.Threading\n  isExternal: false\n  name: SemaphoreFullException\n  nameWithType: SemaphoreFullException\n  fullName: System.Threading.SemaphoreFullException\n- uid: System.Threading.SemaphoreSlim\n  parent: System.Threading\n  isExternal: false\n  name: SemaphoreSlim\n  nameWithType: SemaphoreSlim\n  fullName: System.Threading.SemaphoreSlim\n- uid: System.Threading.SendOrPostCallback\n  parent: System.Threading\n  isExternal: false\n  name: SendOrPostCallback\n  nameWithType: SendOrPostCallback\n  fullName: System.Threading.SendOrPostCallback\n- uid: System.Threading.SpinLock\n  parent: System.Threading\n  isExternal: false\n  name: SpinLock\n  nameWithType: SpinLock\n  fullName: System.Threading.SpinLock\n- uid: System.Threading.SpinWait\n  parent: System.Threading\n  isExternal: false\n  name: SpinWait\n  nameWithType: SpinWait\n  fullName: System.Threading.SpinWait\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n- uid: System.Threading.SynchronizationLockException\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationLockException\n  nameWithType: SynchronizationLockException\n  fullName: System.Threading.SynchronizationLockException\n- uid: System.Threading.Thread\n  parent: System.Threading\n  isExternal: false\n  name: Thread\n  nameWithType: Thread\n  fullName: System.Threading.Thread\n- uid: System.Threading.ThreadAbortException\n  parent: System.Threading\n  isExternal: false\n  name: ThreadAbortException\n  nameWithType: ThreadAbortException\n  fullName: System.Threading.ThreadAbortException\n- uid: System.Threading.ThreadExceptionEventArgs\n  parent: System.Threading\n  isExternal: false\n  name: ThreadExceptionEventArgs\n  nameWithType: ThreadExceptionEventArgs\n  fullName: System.Threading.ThreadExceptionEventArgs\n- uid: System.Threading.ThreadExceptionEventHandler\n  parent: System.Threading\n  isExternal: false\n  name: ThreadExceptionEventHandler\n  nameWithType: ThreadExceptionEventHandler\n  fullName: System.Threading.ThreadExceptionEventHandler\n- uid: System.Threading.ThreadingAclExtensions\n  parent: System.Threading\n  isExternal: false\n  name: ThreadingAclExtensions\n  nameWithType: ThreadingAclExtensions\n  fullName: System.Threading.ThreadingAclExtensions\n- uid: System.Threading.ThreadInterruptedException\n  parent: System.Threading\n  isExternal: false\n  name: ThreadInterruptedException\n  nameWithType: ThreadInterruptedException\n  fullName: System.Threading.ThreadInterruptedException\n- uid: System.Threading.ThreadLocal`1\n  parent: System.Threading\n  isExternal: false\n  name: ThreadLocal<T>\n  nameWithType: ThreadLocal<T>\n  fullName: System.Threading.ThreadLocal<T>\n- uid: System.Threading.ThreadPool\n  parent: System.Threading\n  isExternal: false\n  name: ThreadPool\n  nameWithType: ThreadPool\n  fullName: System.Threading.ThreadPool\n- uid: System.Threading.ThreadPoolBoundHandle\n  parent: System.Threading\n  isExternal: false\n  name: ThreadPoolBoundHandle\n  nameWithType: ThreadPoolBoundHandle\n  fullName: System.Threading.ThreadPoolBoundHandle\n- uid: System.Threading.ThreadPriority\n  parent: System.Threading\n  isExternal: false\n  name: ThreadPriority\n  nameWithType: ThreadPriority\n  fullName: System.Threading.ThreadPriority\n- uid: System.Threading.ThreadStart\n  parent: System.Threading\n  isExternal: false\n  name: ThreadStart\n  nameWithType: ThreadStart\n  fullName: System.Threading.ThreadStart\n- uid: System.Threading.ThreadStartException\n  parent: System.Threading\n  isExternal: false\n  name: ThreadStartException\n  nameWithType: ThreadStartException\n  fullName: System.Threading.ThreadStartException\n- uid: System.Threading.ThreadState\n  parent: System.Threading\n  isExternal: false\n  name: ThreadState\n  nameWithType: ThreadState\n  fullName: System.Threading.ThreadState\n- uid: System.Threading.ThreadStateException\n  parent: System.Threading\n  isExternal: false\n  name: ThreadStateException\n  nameWithType: ThreadStateException\n  fullName: System.Threading.ThreadStateException\n- uid: System.Threading.Timeout\n  parent: System.Threading\n  isExternal: false\n  name: Timeout\n  nameWithType: Timeout\n  fullName: System.Threading.Timeout\n- uid: System.Threading.Timer\n  parent: System.Threading\n  isExternal: false\n  name: Timer\n  nameWithType: Timer\n  fullName: System.Threading.Timer\n- uid: System.Threading.TimerCallback\n  parent: System.Threading\n  isExternal: false\n  name: TimerCallback\n  nameWithType: TimerCallback\n  fullName: System.Threading.TimerCallback\n- uid: System.Threading.Volatile\n  parent: System.Threading\n  isExternal: false\n  name: Volatile\n  nameWithType: Volatile\n  fullName: System.Threading.Volatile\n- uid: System.Threading.WaitCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitCallback\n  nameWithType: WaitCallback\n  fullName: System.Threading.WaitCallback\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.WaitHandleCannotBeOpenedException\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandleCannotBeOpenedException\n  nameWithType: WaitHandleCannotBeOpenedException\n  fullName: System.Threading.WaitHandleCannotBeOpenedException\n- uid: System.Threading.WaitHandleExtensions\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandleExtensions\n  nameWithType: WaitHandleExtensions\n  fullName: System.Threading.WaitHandleExtensions\n- uid: System.Threading.WaitOrTimerCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitOrTimerCallback\n  nameWithType: WaitOrTimerCallback\n  fullName: System.Threading.WaitOrTimerCallback\n"}