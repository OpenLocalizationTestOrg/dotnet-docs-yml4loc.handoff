{"nodes":[{"content":"Represents the cryptographic key and security algorithms that are used to generate a digital signature.","nodes":[{"pos":[0,103],"content":"Represents the cryptographic key and security algorithms that are used to generate a digital signature.","nodes":[{"content":"Represents the cryptographic key and security algorithms that are used to generate a digital signature.","pos":[0,103]}]}],"pos":[1008,1112],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>. To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.","nodes":[{"pos":[0,485],"content":"Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>. To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SigningCredentials&gt;</ph> class to specify the signing key, signing key identifier, and security algorithms that are used by <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to generate the digital signature for a <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SamlAssertion&gt;</ph>.","pos":[0,296],"source":"Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>."},{"content":"To set the digital signature details, set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SamlAssertion&gt;</ph> class.","pos":[297,485],"source":" To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class."}]}],"pos":[1123,1609],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SigningCredentials\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class."}],"pos":[3402,3511],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","nodes":[{"pos":[0,485],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the <ph id=\"ph2\">`signatureAlgorithm`</ph> and <ph id=\"ph3\">`digestAlgorithm`</ph> parameters.","pos":[0,137],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class contains a set of static, constant strings that represent cryptographic algorithms.","pos":[138,285],"source":" The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms."},{"content":"The members that have a <ph id=\"ph1\">`Signature`</ph> suffix can be used to specify the <ph id=\"ph2\">`signatureAlgoritm`</ph> parameter and the members that have a <ph id=\"ph3\">`Digest`</ph> suffix can be used to specify the <ph id=\"ph4\">`digestAlgorithm`</ph> parameter.","pos":[286,485],"source":" The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter."}]}],"pos":[3522,4008],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph> that contains the cryptographic key that is used to generate the digital signature.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."}],"pos":[4270,4417],"yaml":true},{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"pos":[0,97],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]}],"pos":[4491,4589],"yaml":true},{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"pos":[0,152],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]}],"pos":[4660,4813],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SigningCredentials\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class."}],"pos":[6436,6545],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","nodes":[{"pos":[0,484],"content":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the <ph id=\"ph2\">`signatureAlgorithm`</ph> and <ph id=\"ph3\">`digestAlgorithm`</ph> parameters.","pos":[0,137],"source":"Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class contains a set of static constant strings that represent cryptographic algorithms.","pos":[138,284],"source":" The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms."},{"content":"The members that have a <ph id=\"ph1\">`Signature`</ph> suffix can be used to specify the <ph id=\"ph2\">`signatureAlgoritm`</ph> parameter and the members that have a <ph id=\"ph3\">`Digest`</ph> suffix can be used to specify the <ph id=\"ph4\">`digestAlgorithm`</ph> parameter.","pos":[285,484],"source":" The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter."}]}],"pos":[6556,7041],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph> that contains the cryptographic key that is used to generate the digital signature.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."}],"pos":[7375,7522],"yaml":true},{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"pos":[0,97],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]}],"pos":[7596,7694],"yaml":true},{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"pos":[0,152],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]}],"pos":[7765,7918],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.","nodes":[{"pos":[0,170],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> that specifies the identifier that represents the key that is used to create a digital signature.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature."}],"pos":[8030,8201],"yaml":true},{"content":"Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"pos":[0,135],"content":"Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"content":"Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,135]}]}],"pos":[9327,9463],"yaml":true},{"content":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter.","nodes":[{"pos":[0,162],"content":"To set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A&gt;</ph> property, use one of the constructors that take a <ph id=\"ph2\">`digestAlgorithm`</ph> parameter.","source":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter."}],"pos":[9474,9637],"yaml":true,"extradata":"MT"},{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"pos":[0,152],"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.","pos":[0,152]}]}],"pos":[9756,9909],"yaml":true},{"content":"Gets the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"pos":[0,80],"content":"Gets the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"content":"Gets the cryptographic algorithm that is used to generate the digital signature.","pos":[0,80]}]}],"pos":[11063,11144],"yaml":true},{"content":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter.","nodes":[{"pos":[0,168],"content":"To set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A&gt;</ph> property, use one of the constructors that take a <ph id=\"ph2\">`signatureAlgorithm`</ph> parameter.","source":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter."}],"pos":[11155,11324],"yaml":true,"extradata":"MT"},{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"pos":[0,97],"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","nodes":[{"content":"A URI that represents the cryptographic algorithm that is used to generate the digital signature.","pos":[0,97]}]}],"pos":[11446,11544],"yaml":true},{"content":"Gets the cryptographic key that is used to generate the digital signature.","nodes":[{"pos":[0,74],"content":"Gets the cryptographic key that is used to generate the digital signature.","nodes":[{"content":"Gets the cryptographic key that is used to generate the digital signature.","pos":[0,74]}]}],"pos":[12653,12728],"yaml":true},{"content":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter.","nodes":[{"pos":[0,143],"content":"To set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A&gt;</ph> property, use a constructor that takes a <ph id=\"ph2\">`signingKey`</ph> parameter.","source":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter."}],"pos":[12739,12883],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;&lt;/xref&gt;</ph> that contains the cryptographic key that is used to generate the digital signature.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature."}],"pos":[13056,13203],"yaml":true},{"content":"Gets the identifier that represents the key that is used to create a digital signature.","nodes":[{"pos":[0,87],"content":"Gets the identifier that represents the key that is used to create a digital signature.","nodes":[{"content":"Gets the identifier that represents the key that is used to create a digital signature.","pos":[0,87]}]}],"pos":[14364,14452],"yaml":true},{"content":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter.","nodes":[{"pos":[0,165],"content":"To set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A&gt;</ph> property, use the constructor that takes a <ph id=\"ph2\">`signingKeyIdentifier`</ph> parameter.","source":"To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter."}],"pos":[14463,14629],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.","nodes":[{"pos":[0,170],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> that specifies the identifier that represents the key that is used to create a digital signature.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature."}],"pos":[14832,15003],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SigningCredentials\n  commentId: T:System.IdentityModel.Tokens.SigningCredentials\n  id: SigningCredentials\n  children:\n  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  - System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  langs:\n  - csharp\n  name: SigningCredentials\n  nameWithType: SigningCredentials\n  fullName: System.IdentityModel.Tokens.SigningCredentials\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents the cryptographic key and security algorithms that are used to generate a digital signature.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>. To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.\n  syntax:\n    content: public class SigningCredentials\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IdentityModel.Tokens.X509SigningCredentials\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  commentId: M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningCredentials(SecurityKey, String, String)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey, String, String)\n  fullName: SigningCredentials.SigningCredentials(SecurityKey, String, String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.\n  syntax:\n    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);\n    parameters:\n    - id: signingKey\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n    - id: signatureAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n    - id: digestAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  commentId: M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n  fullName: SigningCredentials.SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SigningCredentials\"></xref> class.\n  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters. The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms. The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.\n  syntax:\n    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);\n    parameters:\n    - id: signingKey\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n    - id: signatureAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n    - id: digestAlgorithm\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n    - id: signingKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  commentId: P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  id: DigestAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n  fullName: SigningCredentials.DigestAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  remarks: To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter.\n  syntax:\n    content: public string DigestAlgorithm { get; }\n    return:\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.\n  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  commentId: P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n  fullName: SigningCredentials.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic algorithm that is used to generate the digital signature.\n  remarks: To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter.\n  syntax:\n    content: public string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: A URI that represents the cryptographic algorithm that is used to generate the digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  commentId: P:System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  id: SigningKey\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n  fullName: SigningCredentials.SigningKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic key that is used to generate the digital signature.\n  remarks: To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that contains the cryptographic key that is used to generate the digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  commentId: P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  id: SigningKeyIdentifier\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  langs:\n  - csharp\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n  fullName: SigningCredentials.SigningKeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the identifier that represents the key that is used to create a digital signature.\n  remarks: To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that specifies the identifier that represents the key that is used to create a digital signature.\n  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials(SecurityKey, String, String)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey, String, String)\n  fullName: SigningCredentials.SigningCredentials(SecurityKey, String, String)\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n  nameWithType: SigningCredentials.SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n  fullName: SigningCredentials.SigningCredentials(SecurityKey, String, String, SecurityKeyIdentifier)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n  fullName: SigningCredentials.DigestAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n  fullName: SigningCredentials.SignatureAlgorithm\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n  fullName: SigningCredentials.SigningKey\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n  fullName: SigningCredentials.SigningKeyIdentifier\n- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningCredentials\n  nameWithType: SigningCredentials.SigningCredentials\n  fullName: SigningCredentials.SigningCredentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: DigestAlgorithm\n  nameWithType: SigningCredentials.DigestAlgorithm\n  fullName: SigningCredentials.DigestAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: SigningCredentials.SignatureAlgorithm\n  fullName: SigningCredentials.SignatureAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKey\n  nameWithType: SigningCredentials.SigningKey\n  fullName: SigningCredentials.SigningKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*\n  parent: System.IdentityModel.Tokens.SigningCredentials\n  isExternal: false\n  name: SigningKeyIdentifier\n  nameWithType: SigningCredentials.SigningKeyIdentifier\n  fullName: SigningCredentials.SigningKeyIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SigningCredentials.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}