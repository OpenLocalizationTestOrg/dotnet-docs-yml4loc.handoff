### YamlMime:ManagedReference
items:
- uid: System.Activities.NativeActivity
  commentId: T:System.Activities.NativeActivity
  id: NativeActivity
  children:
  - System.Activities.NativeActivity.#ctor
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  langs:
  - csharp
  name: NativeActivity
  nameWithType: NativeActivity
  fullName: System.Activities.NativeActivity
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Abstract base class for custom activities that implement execution logic using the <xref href="System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)"></xref> method, which has full access to the runtimeâ€™s features.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \n  \n```  \npublic sealed class MySequence : NativeActivity  \n{  \n    Collection<Activity> children;  \n    Collection<Variable> variables;  \n    Variable<int> currentIndex;  \n    CompletionCallback onChildComplete;  \n  \n    public MySequence()  \n        : base()  \n    {  \n        this.children = new Collection<Activity>();  \n        this.variables = new Collection<Variable>();  \n        this.currentIndex = new Variable<int>();  \n    }  \n  \n    public Collection<Activity> Activities  \n    {  \n        get  \n        {  \n            return this.children;  \n        }  \n    }  \n    public Collection<Variable> Variables  \n    {  \n        get  \n        {  \n            return this.variables;  \n        }  \n    }  \n    protected override void CacheMetadata(NativeActivityMetadata metadata)  \n    {  \n        //call base.CacheMetadata to add the Activities and Variables to this activity's metadata  \n        base.CacheMetadata(metadata);  \n        //add the private implementation variable: currentIndex   \n        metadata.AddImplementationVariable(this.currentIndex);  \n    }                     \n  \n    protected override void Execute(NativeActivityContext context)  \n    {  \n        InternalExecute(context, null);  \n    }  \n    void InternalExecute(NativeActivityContext context, ActivityInstance instance)  \n    {  \n        //grab the index of the current Activity  \n        int currentActivityIndex = this.currentIndex.Get(context);  \n        if (currentActivityIndex == Activities.Count)  \n        {  \n            //if the currentActivityIndex is equal to the count of MySequence's Activities  \n            //MySequence is complete  \n            return;  \n        }  \n  \n        if (this.onChildComplete == null)  \n        {  \n            //on completion of the current child, have the runtime call back on this method  \n            this.onChildComplete = new CompletionCallback(InternalExecute);  \n        }  \n        //grab the next Activity in MySequence.Activities and schedule it  \n        Activity nextChild = Activities[currentActivityIndex];  \n        context.ScheduleActivity(nextChild, this.onChildComplete);  \n  \n        //increment the currentIndex  \n        this.currentIndex.Set(context, ++currentActivityIndex);  \n    }  \n}  \n```"
  syntax:
    content: 'public abstract class NativeActivity : System.Activities.Activity'
  inheritance:
  - System.Object
  - System.Activities.Activity
  derivedClasses:
  - System.Activities.Statements.CancellationScope
  - System.Activities.Statements.Compensate
  - System.Activities.Statements.Confirm
  - System.Activities.Statements.Delay
  - System.Activities.Statements.DeleteBookmarkScope
  - System.Activities.Statements.DoWhile
  - System.Activities.Statements.Flowchart
  - System.Activities.Statements.ForEach`1
  - System.Activities.Statements.HandleScope`1
  - System.Activities.Statements.If
  - System.Activities.Statements.Interop
  - System.Activities.Statements.InvokeAction
  - System.Activities.Statements.InvokeAction`1
  - System.Activities.Statements.InvokeAction`10
  - System.Activities.Statements.InvokeAction`11
  - System.Activities.Statements.InvokeAction`12
  - System.Activities.Statements.InvokeAction`13
  - System.Activities.Statements.InvokeAction`14
  - System.Activities.Statements.InvokeAction`15
  - System.Activities.Statements.InvokeAction`16
  - System.Activities.Statements.InvokeAction`2
  - System.Activities.Statements.InvokeAction`3
  - System.Activities.Statements.InvokeAction`4
  - System.Activities.Statements.InvokeAction`5
  - System.Activities.Statements.InvokeAction`6
  - System.Activities.Statements.InvokeAction`7
  - System.Activities.Statements.InvokeAction`8
  - System.Activities.Statements.InvokeAction`9
  - System.Activities.Statements.InvokeDelegate
  - System.Activities.Statements.NoPersistScope
  - System.Activities.Statements.Parallel
  - System.Activities.Statements.ParallelForEach`1
  - System.Activities.Statements.Persist
  - System.Activities.Statements.Pick
  - System.Activities.Statements.Rethrow
  - System.Activities.Statements.Sequence
  - System.Activities.Statements.StateMachine
  - System.Activities.Statements.Switch`1
  - System.Activities.Statements.TerminateWorkflow
  - System.Activities.Statements.TransactionScope
  - System.Activities.Statements.TryCatch
  - System.Activities.Statements.While
  - System.Activities.Validation.AddValidationError
  - System.Activities.Validation.AssertValidation
  - System.Activities.Validation.Constraint
  - System.ServiceModel.Activities.CorrelationScope
  - System.ServiceModel.Activities.InitializeCorrelation
  - System.ServiceModel.Activities.TransactedReceiveScope
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.#ctor
  commentId: M:System.Activities.NativeActivity.#ctor
  id: '#ctor'
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: NativeActivity()
  nameWithType: NativeActivity.NativeActivity()
  fullName: NativeActivity.NativeActivity()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: When implemented in a derived class, creates a new instance of the derived class.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \n  \n [!code-csharp[wfs_CustomCompositeNativeActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#1)]"
  syntax:
    content: protected NativeActivity ();
    parameters: []
  overload: System.Activities.NativeActivity.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  commentId: M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  id: Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: Abort(NativeActivityAbortContext)
  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)
  fullName: NativeActivity.Abort(NativeActivityAbortContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: When implemented in a derived class, takes actions in response to the activity being aborted.
  syntax:
    content: protected virtual void Abort (System.Activities.NativeActivityAbortContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityAbortContext
      description: The execution context in which the activity executes.
  overload: System.Activities.NativeActivity.Abort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  commentId: M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  id: CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: CacheMetadata(ActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)
  fullName: NativeActivity.CacheMetadata(ActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Not implemented. Use the <xref href="System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)"></xref> method instead.
  remarks: Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.
  syntax:
    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.ActivityMetadata
      description: Not implemented.
  overload: System.Activities.NativeActivity.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)
  commentId: M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)
  fullName: NativeActivity.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Creates and validates a description of the activityâ€™s arguments, variables, child activities, and activity delegates.
  remarks: The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the typeâ€™s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activityâ€™s run-time description and to provide custom validation logic. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.
  example:
  - "The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \n  \n [!code-csharp[wfs_CustomCompositeNativeActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#2)]"
  syntax:
    content: protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: The activityâ€™s metadata that encapsulates the activityâ€™s arguments, variables, child activities, and activity delegates.
  overload: System.Activities.NativeActivity.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  commentId: M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  id: Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: Cancel(NativeActivityContext)
  nameWithType: NativeActivity.Cancel(NativeActivityContext)
  fullName: NativeActivity.Cancel(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: When implemented in a derived class, runs logic to cause graceful early completion of the activity.
  remarks: ''
  example:
  - "The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.  \n  \n [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]"
  syntax:
    content: protected virtual void Cancel (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: The execution context in which the activity executes.
  overload: System.Activities.NativeActivity.Cancel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.CanInduceIdle
  commentId: P:System.Activities.NativeActivity.CanInduceIdle
  id: CanInduceIdle
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: CanInduceIdle
  nameWithType: NativeActivity.CanInduceIdle
  fullName: NativeActivity.CanInduceIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets or sets a value that indicates whether the activity can cause the workflow to become idle.
  syntax:
    content: protected virtual bool CanInduceIdle { get; }
    return:
      type: System.Boolean
      description: '`true` if the activity can cause the workflow to become idle. This value is `false` by default.'
  overload: System.Activities.NativeActivity.CanInduceIdle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)
  commentId: M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: NativeActivity.Execute(NativeActivityContext)
  fullName: NativeActivity.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: When implemented in a derived class, runs the activityâ€™s execution logic.
  remarks: ''
  example:
  - "The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.  \n  \n [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]"
  syntax:
    content: protected abstract void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: The execution context in which the activity executes.
  overload: System.Activities.NativeActivity.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.Implementation
  commentId: P:System.Activities.NativeActivity.Implementation
  id: Implementation
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: The execution logic of the activity.
  syntax:
    content: >-
      [System.Runtime.Serialization.IgnoreDataMember]

      protected override sealed Func<System.Activities.Activity> Implementation { get; set; }
    return:
      type: System.Func{System.Activities.Activity}
      description: The execution logic.
  overload: System.Activities.NativeActivity.Implementation*
  exceptions: []
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.ImplementationVersion
  commentId: P:System.Activities.NativeActivity.ImplementationVersion
  id: ImplementationVersion
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets or sets the implementation version of the activity.
  syntax:
    content: protected override sealed Version ImplementationVersion { get; set; }
    return:
      type: System.Version
      description: The implementation version of the activity.
  overload: System.Activities.NativeActivity.ImplementationVersion*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  commentId: M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Raises an event when creating a map for the dynamic update.
  syntax:
    content: protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: The metadata.
    - id: originalActivity
      type: System.Activities.Activity
      description: The original activity.
  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  commentId: M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Raises an event when creating a map for the dynamic update.
  syntax:
    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.UpdateMapMetadata
      description: The metadata.
    - id: originalActivity
      type: System.Activities.Activity
      description: The original activity.
  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  commentId: M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.NativeActivity
  langs:
  - csharp
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Updates the instance of <xref href="System.Activities.NativeActivity"></xref>.
  syntax:
    content: protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);
    parameters:
    - id: updateContext
      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext
      description: The update context.
  overload: System.Activities.NativeActivity.UpdateInstance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.NativeActivity.#ctor
  parent: System.Activities.NativeActivity
  isExternal: false
  name: NativeActivity()
  nameWithType: NativeActivity.NativeActivity()
  fullName: NativeActivity.NativeActivity()
- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Abort(NativeActivityAbortContext)
  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)
  fullName: NativeActivity.Abort(NativeActivityAbortContext)
- uid: System.Activities.NativeActivityAbortContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityAbortContext
  nameWithType: NativeActivityAbortContext
  fullName: System.Activities.NativeActivityAbortContext
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)
  fullName: NativeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)
  fullName: NativeActivity.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: NativeActivity.Cancel(NativeActivityContext)
  fullName: NativeActivity.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.NativeActivity.CanInduceIdle
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CanInduceIdle
  nameWithType: NativeActivity.CanInduceIdle
  fullName: NativeActivity.CanInduceIdle
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: NativeActivity.Execute(NativeActivityContext)
  fullName: NativeActivity.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivity.Implementation
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
- uid: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
- uid: System.Func{System.Activities.Activity}
  parent: System
  isExternal: false
  name: Func<Activity>
  nameWithType: Func<Activity>
  fullName: System.Func<System.Activities.Activity>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: System.Activities.Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.NativeActivity.ImplementationVersion
  parent: System.Activities.NativeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateContext
  nameWithType: NativeActivityUpdateContext
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext
- uid: System.Activities.NativeActivity.CacheMetadata*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata
  nameWithType: NativeActivity.CacheMetadata
  fullName: NativeActivity.CacheMetadata
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.#ctor*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: NativeActivity
  nameWithType: NativeActivity.NativeActivity
  fullName: NativeActivity.NativeActivity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.Abort*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Abort
  nameWithType: NativeActivity.Abort
  fullName: NativeActivity.Abort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.Cancel*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Cancel
  nameWithType: NativeActivity.Cancel
  fullName: NativeActivity.Cancel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.CanInduceIdle*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CanInduceIdle
  nameWithType: NativeActivity.CanInduceIdle
  fullName: NativeActivity.CanInduceIdle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.Execute*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Execute
  nameWithType: NativeActivity.Execute
  fullName: NativeActivity.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.Implementation*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.ImplementationVersion*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap
  fullName: NativeActivity.OnCreateDynamicUpdateMap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Activities.NativeActivity.UpdateInstance*
  parent: System.Activities.NativeActivity
  isExternal: false
  name: UpdateInstance
  nameWithType: NativeActivity.UpdateInstance
  fullName: NativeActivity.UpdateInstance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Activities.Activity.ToString
  parent: System.Activities.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: Activity.ToString()
- uid: System.Activities.Activity.CacheId
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: Activity.CacheId
- uid: System.Activities.Activity.Constraints
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: Activity.Constraints
- uid: System.Activities.Activity.DisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: Activity.DisplayName
- uid: System.Activities.Activity.Id
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
  fullName: Activity.Id
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: Activity.ShouldSerializeDisplayName()
