{"nodes":[{"content":"Represents a common dialog box that allows a user to specify a filename for one or more files to open.","nodes":[{"pos":[0,102],"content":"Represents a common dialog box that allows a user to specify a filename for one or more files to open.","nodes":[{"content":"Represents a common dialog box that allows a user to specify a filename for one or more files to open.","pos":[0,102]}]}],"pos":[745,848],"yaml":true},{"content":"The following figure shows an <xref:Microsoft.Win32.OpenFileDialog> for [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)].  \n  \n ![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \"Open dialog box\")  \n  \n Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links.  \n  \n<a name=\"xamlTextUsage_OpenFileDialog\"></a>   \n## XAML Text Usage  \n You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,140],"content":"The following figure shows an <ph id=\"ph1\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> for <ph id=\"ph2\">[!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]</ph>.","source":"The following figure shows an <xref:Microsoft.Win32.OpenFileDialog> for [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]."},{"pos":[147,227],"content":"<bpt id=\"p1\">![</bpt>Open dialog box<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/dialogboxesoverviewfigure2.png \"</bpt>Open dialog box<ept id=\"p2\">\")</ept>","source":"![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \"Open dialog box\")"},{"pos":[234,613],"content":"Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links.","nodes":[{"content":"Starting in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)]</ph>, open and save file dialog boxes have a <bpt id=\"p1\">**</bpt>Favorite Links<ept id=\"p1\">**</ept> panel on the left side of the dialog box that allows the user to quickly navigate to a different location.","pos":[0,247],"source":"Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location."},{"content":"These links are called custom places.","pos":[248,285]},{"content":"Use the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.CustomPlaces%2A&gt;</ph> property to set this list of links.","pos":[286,379],"source":" Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links."}]},{"pos":[669,684],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]},{"pos":[688,791],"content":"You cannot declare this managed class in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[859,1665],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> class."}],"pos":[4808,4901],"yaml":true},{"content":"Gets or sets an option indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> allows users to select multiple files.","nodes":[{"pos":[0,132],"content":"Gets or sets an option indicating whether <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> allows users to select multiple files.","source":"Gets or sets an option indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> allows users to select multiple files."}],"pos":[7390,7523],"yaml":true},{"content":"`true` if multiple selections are allowed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,86],"content":"`true` if multiple selections are allowed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if multiple selections are allowed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,62],"source":"`true` if multiple selections are allowed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[63,86],"source":" The default is `false`."}]}],"pos":[7698,7787],"yaml":true},{"content":"Opens a read-only stream for the file that is selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.","nodes":[{"pos":[0,125],"content":"Opens a read-only stream for the file that is selected by the user using <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"Opens a read-only stream for the file that is selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>."}],"pos":[8826,8952],"yaml":true},{"content":"The file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.  \n  \n If more than one file is selected, the first selected file is opened.","nodes":[{"pos":[0,384],"content":"The file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.","nodes":[{"content":"The file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.","pos":[0,384],"nodes":[{"content":"The file is opened with read-only permission (<ph id=\"ph1\">&lt;xref:System.IO.FileMode.Open&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IO.FileAccess.Read&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IO.FileShare.Read&gt;</ph>), whether or not the Read Only checkbox is checked in the dialog.","pos":[0,213],"source":"The file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog."},{"content":"Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.","pos":[214,384]}]}]},{"pos":[391,460],"content":"If more than one file is selected, the first selected file is opened.","nodes":[{"content":"If more than one file is selected, the first selected file is opened.","pos":[0,69]}]}],"pos":[8963,9428],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.IO.Stream\"></xref> that contains the selected file.","nodes":[{"pos":[0,76],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the selected file.","source":"A new <xref href=\"System.IO.Stream\"></xref> that contains the selected file."}],"pos":[9618,9695],"yaml":true},{"content":"No files were selected in the dialog.","nodes":[{"pos":[0,37],"content":"No files were selected in the dialog.","nodes":[{"content":"No files were selected in the dialog.","pos":[0,37]}]}],"pos":[9872,9910],"yaml":true},{"content":"Creates an array that contains one read-only stream for each file selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.","nodes":[{"pos":[0,145],"content":"Creates an array that contains one read-only stream for each file selected by the user using <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an array that contains one read-only stream for each file selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>."}],"pos":[10884,11030],"yaml":true},{"content":"Each file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","nodes":[{"pos":[0,397],"content":"Each file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","nodes":[{"content":"Each file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","pos":[0,397],"nodes":[{"content":"Each file is opened with read-only permission (<ph id=\"ph1\">&lt;xref:System.IO.FileMode.Open&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IO.FileAccess.Read&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IO.FileShare.Read&gt;</ph>), whether or not the Read Only checkbox is checked in the dialog.","pos":[0,214],"source":"Each file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog."},{"content":"Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.","pos":[215,397]}]}]}],"pos":[11041,11439],"yaml":true,"extradata":"MT"},{"content":"An array of multiple new <xref href=\"System.IO.Stream\"></xref> objects that contain the selected files.","nodes":[{"pos":[0,103],"content":"An array of multiple new <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects that contain the selected files.","source":"An array of multiple new <xref href=\"System.IO.Stream\"></xref> objects that contain the selected files."}],"pos":[11634,11738],"yaml":true},{"content":"No files were selected in the dialog.","nodes":[{"pos":[0,37],"content":"No files were selected in the dialog.","nodes":[{"content":"No files were selected in the dialog.","pos":[0,37]}]}],"pos":[11916,11954],"yaml":true},{"content":"Gets or sets a value indicating whether the read-only check box displayed by <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> is selected.","nodes":[{"pos":[0,141],"content":"Gets or sets a value indicating whether the read-only check box displayed by <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> is selected.","source":"Gets or sets a value indicating whether the read-only check box displayed by <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> is selected."}],"pos":[12960,13102],"yaml":true},{"content":"`true` if the checkbox is selected; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,79],"content":"`true` if the checkbox is selected; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the checkbox is selected; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` if the checkbox is selected; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[56,79],"source":" The default is `false`."}]}],"pos":[13281,13363],"yaml":true},{"content":"Resets all <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> properties to their default values.","nodes":[{"pos":[0,98],"content":"Resets all <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> properties to their default values.","source":"Resets all <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> properties to their default values."}],"pos":[14388,14487],"yaml":true},{"content":"Gets or sets a value indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> contains a read-only check box.","nodes":[{"pos":[0,123],"content":"Gets or sets a value indicating whether <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> contains a read-only check box.","source":"Gets or sets a value indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> contains a read-only check box."}],"pos":[15666,15790],"yaml":true},{"content":"`true` if the checkbox is displayed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,80],"content":"`true` if the checkbox is displayed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the checkbox is displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if the checkbox is displayed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[57,80],"source":" The default is `false`."}]}],"pos":[15966,16049],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.OpenFileDialog\n  commentId: T:Microsoft.Win32.OpenFileDialog\n  id: OpenFileDialog\n  children:\n  - Microsoft.Win32.OpenFileDialog.#ctor\n  - Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  - Microsoft.Win32.OpenFileDialog.Multiselect\n  - Microsoft.Win32.OpenFileDialog.OpenFile\n  - Microsoft.Win32.OpenFileDialog.OpenFiles\n  - Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  - Microsoft.Win32.OpenFileDialog.Reset\n  - Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  langs:\n  - csharp\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog\n  fullName: Microsoft.Win32.OpenFileDialog\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Represents a common dialog box that allows a user to specify a filename for one or more files to open.\n  remarks: \"The following figure shows an <xref:Microsoft.Win32.OpenFileDialog> for [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)].  \\n  \\n ![Open dialog box](~/add/media/dialogboxesoverviewfigure2.png \\\"Open dialog box\\\")  \\n  \\n Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. Use the <xref:Microsoft.Win32.FileDialog.CustomPlaces%2A> property to set this list of links.  \\n  \\n<a name=\\\"xamlTextUsage_OpenFileDialog\\\"></a>   \\n## XAML Text Usage  \\n You cannot declare this managed class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \\n  \\n [!code-csharp[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/VisualBasic/window1.xaml.vb#openfiledialogboxcodebehind)]\"\n  syntax:\n    content: 'public sealed class OpenFileDialog : Microsoft.Win32.FileDialog'\n  inheritance:\n  - System.Object\n  - Microsoft.Win32.CommonDialog\n  - Microsoft.Win32.FileDialog\n  implements: []\n  inheritedMembers:\n  - Microsoft.Win32.CommonDialog.ShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  - Microsoft.Win32.CommonDialog.Tag\n  - Microsoft.Win32.FileDialog.AddExtension\n  - Microsoft.Win32.FileDialog.CheckFileExists\n  - Microsoft.Win32.FileDialog.CheckPathExists\n  - Microsoft.Win32.FileDialog.CustomPlaces\n  - Microsoft.Win32.FileDialog.DefaultExt\n  - Microsoft.Win32.FileDialog.DereferenceLinks\n  - Microsoft.Win32.FileDialog.FileName\n  - Microsoft.Win32.FileDialog.FileNames\n  - Microsoft.Win32.FileDialog.FileOk\n  - Microsoft.Win32.FileDialog.Filter\n  - Microsoft.Win32.FileDialog.FilterIndex\n  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - Microsoft.Win32.FileDialog.InitialDirectory\n  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - Microsoft.Win32.FileDialog.Options\n  - Microsoft.Win32.FileDialog.RestoreDirectory\n  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  - Microsoft.Win32.FileDialog.SafeFileName\n  - Microsoft.Win32.FileDialog.SafeFileNames\n  - Microsoft.Win32.FileDialog.Title\n  - Microsoft.Win32.FileDialog.ToString\n  - Microsoft.Win32.FileDialog.ValidateNames\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.#ctor\n  commentId: M:Microsoft.Win32.OpenFileDialog.#ctor\n  id: '#ctor'\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: OpenFileDialog.OpenFileDialog()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public OpenFileDialog ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  commentId: M:Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  id: CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: CheckPermissionsToShowDialog()\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog()\n  fullName: OpenFileDialog.CheckPermissionsToShowDialog()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      [System.Security.SecurityTreatAsSafe]\n\n      protected override void CheckPermissionsToShowDialog ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  - type: System.Security.SecurityTreatAsSafeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect\n  commentId: P:Microsoft.Win32.OpenFileDialog.Multiselect\n  id: Multiselect\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets an option indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> allows users to select multiple files.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool Multiselect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if multiple selections are allowed; otherwise, `false`. The default is `false`.'\n  overload: Microsoft.Win32.OpenFileDialog.Multiselect*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile\n  commentId: M:Microsoft.Win32.OpenFileDialog.OpenFile\n  id: OpenFile\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: OpenFileDialog.OpenFile()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Opens a read-only stream for the file that is selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.\n  remarks: \"The file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because the file is opened without the ability to overwrite or write to the file, an application can safely load a file while executing within partial trust restrictions.  \\n  \\n If more than one file is selected, the first selected file is opened.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.IO.Stream OpenFile ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: A new <xref href=\"System.IO.Stream\"></xref> that contains the selected file.\n  overload: Microsoft.Win32.OpenFileDialog.OpenFile*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No files were selected in the dialog.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles\n  commentId: M:Microsoft.Win32.OpenFileDialog.OpenFiles\n  id: OpenFiles\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFiles()\n  nameWithType: OpenFileDialog.OpenFiles()\n  fullName: OpenFileDialog.OpenFiles()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Creates an array that contains one read-only stream for each file selected by the user using <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>.\n  remarks: Each file is opened with read-only permission (<xref:System.IO.FileMode.Open>, <xref:System.IO.FileAccess.Read>, and <xref:System.IO.FileShare.Read>), whether or not the Read Only checkbox is checked in the dialog. Because each file is opened without the ability to overwrite or write to the file, an application can safely load one or more files while executing within partial trust restrictions.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.IO.Stream[] OpenFiles ();\n    parameters: []\n    return:\n      type: System.IO.Stream[]\n      description: An array of multiple new <xref href=\"System.IO.Stream\"></xref> objects that contain the selected files.\n  overload: Microsoft.Win32.OpenFileDialog.OpenFiles*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No files were selected in the dialog.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  commentId: P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  id: ReadOnlyChecked\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether the read-only check box displayed by <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> is selected.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool ReadOnlyChecked { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the checkbox is selected; otherwise, `false`. The default is `false`.'\n  overload: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.Reset\n  commentId: M:Microsoft.Win32.OpenFileDialog.Reset\n  id: Reset\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: OpenFileDialog.Reset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Resets all <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> properties to their default values.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Reset ();\n    parameters: []\n  overload: Microsoft.Win32.OpenFileDialog.Reset*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  commentId: P:Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  id: ShowReadOnly\n  parent: Microsoft.Win32.OpenFileDialog\n  langs:\n  - csharp\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> contains a read-only check box.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool ShowReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the checkbox is displayed; otherwise, `false`. The default is `false`.'\n  overload: Microsoft.Win32.OpenFileDialog.ShowReadOnly*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: Microsoft.Win32.FileDialog\n  parent: Microsoft.Win32\n  isExternal: false\n  name: FileDialog\n  nameWithType: FileDialog\n  fullName: Microsoft.Win32.FileDialog\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: Microsoft.Win32.OpenFileDialog.#ctor\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: OpenFileDialog.OpenFileDialog()\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog()\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog()\n  fullName: OpenFileDialog.CheckPermissionsToShowDialog()\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: OpenFileDialog.OpenFile()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFiles()\n  nameWithType: OpenFileDialog.OpenFiles()\n  fullName: OpenFileDialog.OpenFiles()\n- uid: System.IO.Stream[]\n  parent: System.IO\n  isExternal: false\n  name: Stream[]\n  nameWithType: Stream[]\n  fullName: System.IO.Stream[]\n  spec.csharp:\n  - uid: System.IO.Stream\n    name: Stream\n    nameWithType: Stream\n    fullName: System.IO.Stream\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n- uid: Microsoft.Win32.OpenFileDialog.Reset\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: OpenFileDialog.Reset()\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n- uid: Microsoft.Win32.OpenFileDialog.#ctor*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog.OpenFileDialog\n  fullName: OpenFileDialog.OpenFileDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.CheckPermissionsToShowDialog*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog\n  nameWithType: OpenFileDialog.CheckPermissionsToShowDialog\n  fullName: OpenFileDialog.CheckPermissionsToShowDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.Multiselect*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.OpenFile*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFile\n  nameWithType: OpenFileDialog.OpenFile\n  fullName: OpenFileDialog.OpenFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.OpenFiles*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: OpenFiles\n  nameWithType: OpenFileDialog.OpenFiles\n  fullName: OpenFileDialog.OpenFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.ReadOnlyChecked*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.Reset*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: OpenFileDialog.Reset\n  fullName: OpenFileDialog.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: Microsoft.Win32.OpenFileDialog.ShowReadOnly*\n  parent: Microsoft.Win32.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/OpenFileDialog.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: Microsoft.Win32.FileDialog.ToString\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n- uid: Microsoft.Win32.CommonDialog.ShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: CommonDialog.ShowDialog()\n- uid: Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog(Window)\n  nameWithType: CommonDialog.ShowDialog(Window)\n  fullName: CommonDialog.ShowDialog(Window)\n- uid: Microsoft.Win32.CommonDialog.Tag\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: CommonDialog.Tag\n- uid: Microsoft.Win32.FileDialog.AddExtension\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n- uid: Microsoft.Win32.FileDialog.CheckFileExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n- uid: Microsoft.Win32.FileDialog.CheckPathExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n- uid: Microsoft.Win32.FileDialog.CustomPlaces\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n- uid: Microsoft.Win32.FileDialog.DefaultExt\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n- uid: Microsoft.Win32.FileDialog.FileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n- uid: Microsoft.Win32.FileDialog.FileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n- uid: Microsoft.Win32.FileDialog.FileOk\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n- uid: Microsoft.Win32.FileDialog.Filter\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n- uid: Microsoft.Win32.FileDialog.FilterIndex\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n- uid: Microsoft.Win32.FileDialog.InitialDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n- uid: Microsoft.Win32.FileDialog.Options\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n- uid: Microsoft.Win32.FileDialog.SafeFileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: FileDialog.SafeFileName\n- uid: Microsoft.Win32.FileDialog.SafeFileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: FileDialog.SafeFileNames\n- uid: Microsoft.Win32.FileDialog.Title\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n- uid: Microsoft.Win32.FileDialog.ValidateNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n"}