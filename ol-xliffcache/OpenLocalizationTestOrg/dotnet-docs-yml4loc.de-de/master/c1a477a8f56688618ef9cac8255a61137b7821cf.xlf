<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1a477a8f56688618ef9cac8255a61137b7821cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.Win32.SystemEvents.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2f86ab329090e3a0b6bf6cad9c747dbf79e94e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">463b82ac4830684f5026533bdb89a4c33ae43674</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to system event notifications.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class provides the ability to respond to specific types of system events.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should make any calls from your event handlers thread-safe.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to call a system event that is not exposed as a member of this class, you can use the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some system events might not be raised on <ph id="ph1">[!INCLUDE[windowsver](~/includes/windowsver-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to verify that your application works as expected on <ph id="ph1">[!INCLUDE[windowsver](~/includes/windowsver-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates a new window timer associated with the system events window.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifies the interval between timer notifications, in milliseconds.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The ID of the new timer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The interval is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Occurs when the user changes the display settings.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Occurs when the display settings are changing.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Occurs before the thread that listens for system events is terminated.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised as the thread that listens for system events is about to be terminated.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>System event delegates are invoked using the thread that listens for system events.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Occurs when the user adds fonts to or removes fonts from the system.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Invokes the specified delegate using the thread that listens for system events.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method any time that you need to handle a system event that is not exposed otherwise by the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A delegate to invoke using the thread that listens for system events.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Terminates the timer specified by the given id.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ID of the timer to terminate.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Occurs when the system is running out of available RAM.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event wraps the WM_COMPACTING message.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates that system memory is low.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Occurs when the user switches to an application that uses a different palette.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Occurs when the user suspends or resumes the system.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Occurs when the user is logging off or shutting down the system.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Occurs when the user is trying to log off or shut down the system.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a cancelable event.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`true`</ph> will request that the session continues to run.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides no guarantee that the session will not end.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents.SessionEnding&gt;</ph> in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event will fire before this event.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform some special tasks before <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> is fired, you need to ensure that <ph id="ph2">&lt;xref:Microsoft.Win32.SystemEvents.SessionEnding&gt;</ph> fires before <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you need to trap the <ph id="ph1">`WM_QUERYENDSESSION`</ph> in the form by overriding the <ph id="ph2">`WndProc`</ph> function.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example demonstrates how to do this.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Console applications do not raise the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents.SessionEnding&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Occurs when the currently logged-in user has changed.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Occurs when the user changes the time on the system clock.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Occurs when a windows timer interval has expired.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Occurs when a user preference has changed.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Occurs when a user preference is changing.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is only raised if the message pump is running.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <ph id="ph1">&lt;xref:Microsoft.Win32.SystemEvents&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>System event notifications are not supported under the current context.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Server processes, for example, might not support global system event notifications.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The attempt to create a system events window thread did not succeed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>