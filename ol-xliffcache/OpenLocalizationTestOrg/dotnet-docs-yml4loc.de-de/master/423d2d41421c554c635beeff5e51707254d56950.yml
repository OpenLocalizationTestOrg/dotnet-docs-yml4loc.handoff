### YamlMime:ManagedReference
items:
- uid: System.Data.EntityKey
  commentId: T:System.Data.EntityKey
  id: EntityKey
  children:
  - System.Data.EntityKey.#ctor
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  - System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  - System.Data.EntityKey.EntityContainerName
  - System.Data.EntityKey.EntityKeyValues
  - System.Data.EntityKey.EntityNotValidKey
  - System.Data.EntityKey.EntitySetName
  - System.Data.EntityKey.Equals(System.Object)
  - System.Data.EntityKey.Equals(System.Data.EntityKey)
  - System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.EntityKey.GetHashCode
  - System.Data.EntityKey.IsTemporary
  - System.Data.EntityKey.NoEntitySetKey
  - System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  - System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  langs:
  - csharp
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
  type: Class
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Provides a durable reference to an object that is an instance of an entity type.
  remarks: "The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.  \n  \n For more information, see [Working with Entity Keys](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)."
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The examples show you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]\n [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  \n  \n [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]\n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(IsReference=true)]

      public sealed class EntityKey : IEquatable<System.Data.EntityKey>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Data.EntityKey}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.#ctor
  commentId: M:System.Data.EntityKey.#ctor
  id: '#ctor'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: EntityKey.EntityKey()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.EntityKey"></xref> class.
  syntax:
    content: public EntityKey ();
    parameters: []
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  commentId: M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
  fullName: EntityKey.EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.EntityKey"></xref> class with an entity set name and a generic <xref href="System.Collections.Generic.KeyValuePair"></xref> collection.
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]\n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: A <xref href="System.String"></xref> that is the entity set name qualified by the entity container name.
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "A generic <xref href=\"System.Collections.Generic.KeyValuePair\"></xref> collection.  \n  \n Each key/value pair has a property name as the key and the value of that property as the value. There should be one pair for each property that is part of the <xref href=\"System.Data.EntityKey\"></xref>. The order of the key/value pairs is not important, but each key property should be included. The property names are simple names that are not qualified with an entity type name or the schema name."
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  commentId: M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String, IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String, IEnumerable<EntityKeyMember>)
  fullName: EntityKey.EntityKey(String, IEnumerable<EntityKeyMember>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.EntityKey"></xref> class with an entity set name and an <xref href="System.Collections.Generic.IEnumerable`1"></xref> collection of <xref href="System.Data.EntityKeyMember"></xref> objects.
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: A <xref href="System.String"></xref> that is the entity set name qualified by the entity container name.
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
      description: An <xref href="System.Collections.Generic.IEnumerable`1"></xref> collection of <xref href="System.Data.EntityKeyMember"></xref> objects with which to initialize the key.
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  commentId: M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String, String, Object)
  nameWithType: EntityKey.EntityKey(String, String, Object)
  fullName: EntityKey.EntityKey(String, String, Object)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Initializes a new instance of the <xref href="System.Data.EntityKey"></xref> class with an entity set name and specific entity key pair.
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]\n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: A <xref href="System.String"></xref> that is the entity set name qualified by the entity container name.
    - id: keyName
      type: System.String
      description: A <xref href="System.String"></xref> that is the name of the key.
    - id: keyValue
      type: System.Object
      description: An <xref href="System.Object"></xref> that is the key value.
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.EntityContainerName
  commentId: P:System.Data.EntityKey.EntityContainerName
  id: EntityContainerName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: EntityKey.EntityContainerName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Gets or sets the name of the entity container.
  syntax:
    content: >-
      [System.Runtime.Serialization.DataMember]

      public string EntityContainerName { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> value that is the name of the entity container for the entity to which the <xref href="System.Data.EntityKey"></xref> belongs.
  overload: System.Data.EntityKey.EntityContainerName*
  exceptions: []
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.EntityKeyValues
  commentId: P:System.Data.EntityKey.EntityKeyValues
  id: EntityKeyValues
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: EntityKey.EntityKeyValues
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Gets or sets the key values associated with this <xref href="System.Data.EntityKey"></xref>.
  remarks: "The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.  \n  \n The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataMember]

      public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }
    return:
      type: System.Data.EntityKeyMember[]
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> of key values for this <xref href="System.Data.EntityKey"></xref>.
  overload: System.Data.EntityKey.EntityKeyValues*
  exceptions: []
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.EntityNotValidKey
  commentId: F:System.Data.EntityKey.EntityNotValidKey
  id: EntityNotValidKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: EntityKey.EntityNotValidKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: A simple <xref href="System.Data.EntityKey"></xref> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.
  remarks: There are various ways to get an invalid entity. The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match. ([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator). In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.
  syntax:
    content: public static readonly System.Data.EntityKey EntityNotValidKey;
    return:
      type: System.Data.EntityKey
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.EntitySetName
  commentId: P:System.Data.EntityKey.EntitySetName
  id: EntitySetName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: EntityKey.EntitySetName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Gets or sets the name of the entity set.
  syntax:
    content: >-
      [System.Runtime.Serialization.DataMember]

      public string EntitySetName { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> value that is the name of the entity set for the entity to which the <xref href="System.Data.EntityKey"></xref> belongs.
  overload: System.Data.EntityKey.EntitySetName*
  exceptions: []
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.Equals(System.Object)
  commentId: M:System.Data.EntityKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: EntityKey.Equals(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  remarks: "Temporary keys have different comparison semantics than permanent keys:  \n  \n-   Temporary keys use reference equality. That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.  \n  \n-   Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>. That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.  \n  \n In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An <xref href="System.Object"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if this instance and <code>obj</code> have equal values; otherwise, `false`.'
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  commentId: M:System.Data.EntityKey.Equals(System.Data.EntityKey)
  id: Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: EntityKey.Equals(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Returns a value that indicates whether this instance is equal to a specified <xref href="System.Data.EntityKey"></xref>.
  remarks: "Temporary keys have different comparison semantics than permanent keys:  \n  \n-   Temporary keys use reference equality. That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.  \n  \n-   Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>. That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.  \n  \n In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do."
  syntax:
    content: public bool Equals (System.Data.EntityKey other);
    parameters:
    - id: other
      type: System.Data.EntityKey
      description: An <xref href="System.Data.EntityKey"></xref> object to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if this instance and <code>other</code> have equal values; otherwise, `false`.'
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  commentId: M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  id: GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: EntityKey.GetEntitySet(MetadataWorkspace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Gets the entity set for this entity key from the given metadata workspace.
  remarks: The entity set is accessed based on the entity container name and entity set name of the key.
  syntax:
    content: public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: The metadata workspace that contains the entity.
    return:
      type: System.Data.Metadata.Edm.EntitySet
      description: The <xref href="System.Data.Metadata.Edm.EntitySet"></xref> for the entity key.
  overload: System.Data.EntityKey.GetEntitySet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The entity set could not be located in the specified metadata workspace.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.GetHashCode
  commentId: M:System.Data.EntityKey.GetHashCode
  id: GetHashCode
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: EntityKey.GetHashCode()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Serves as a hash function for the current <xref href="System.Data.EntityKey"></xref> object. <xref href="System.Data.EntityKey.GetHashCode"></xref> is suitable for hashing algorithms and data structures such as a hash table.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Data.EntityKey"></xref>.
  overload: System.Data.EntityKey.GetHashCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.IsTemporary
  commentId: P:System.Data.EntityKey.IsTemporary
  id: IsTemporary
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: EntityKey.IsTemporary
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Gets a value that indicates whether the <xref href="System.Data.EntityKey"></xref> is temporary.
  remarks: "When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`. When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.  \n  \n> [!NOTE]\n>  Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.  \n  \n Temporary keys have different comparison semantics than permanent keys:  \n  \n-   Temporary keys use reference equality. That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.  \n  \n-   Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>. That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.  \n  \n In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.  \n  \n When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references."
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Data.EntityKey"></xref> is temporary; otherwise, `false`.'
  overload: System.Data.EntityKey.IsTemporary*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.NoEntitySetKey
  commentId: F:System.Data.EntityKey.NoEntitySetKey
  id: NoEntitySetKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: EntityKey.NoEntitySetKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: A singleton <xref href="System.Data.EntityKey"></xref> by which a read-only entity is identified.
  remarks: A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set. This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table). An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set. Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified. An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.
  syntax:
    content: public static readonly System.Data.EntityKey NoEntitySetKey;
    return:
      type: System.Data.EntityKey
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: EntityKey.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Helper method that is used to deserialize an <xref href="System.Data.EntityKey"></xref>.
  remarks: <xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>. For more information, see [Serializing Objects](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.Runtime.Serialization.OnDeserialized]

      public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Describes the source and destination of a given serialized stream and provides an additional caller-defined context.
  overload: System.Data.EntityKey.OnDeserialized*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  - type: System.Runtime.Serialization.OnDeserializedAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  id: OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: EntityKey.OnDeserializing(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Helper method that is used to deserialize an <xref href="System.Data.EntityKey"></xref>.
  remarks: <xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>. For more information, see [Serializing Objects](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.Runtime.Serialization.OnDeserializing]

      public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.
  overload: System.Data.EntityKey.OnDeserializing*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  - type: System.Runtime.Serialization.OnDeserializingAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  commentId: M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Equality(EntityKey, EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey, EntityKey)
  fullName: EntityKey.op_Equality(EntityKey, EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Compares two <xref href="System.Data.EntityKey"></xref> objects.
  remarks: "Temporary keys have different comparison semantics than permanent keys:  \n  \n-   Temporary keys use reference equality. That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.  \n  \n-   Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>. That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.  \n  \n In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.  \n  \n The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%2CSystem.Data.EntityKey%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_Equality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: A <xref href="System.Data.EntityKey"></xref> to compare.
    - id: key2
      type: System.Data.EntityKey
      description: A <xref href="System.Data.EntityKey"></xref> to compare.
    return:
      type: System.Boolean
      description: '`true` if the <code>key1</code> and <code>key2</code> values are equal; otherwise, `false`.'
  overload: System.Data.EntityKey.op_Equality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  commentId: M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Inequality(EntityKey, EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey, EntityKey)
  fullName: EntityKey.op_Inequality(EntityKey, EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: Compares two <xref href="System.Data.EntityKey"></xref> objects.
  remarks: "Temporary keys have different comparison semantics than permanent keys:  \n  \n-   Temporary keys use reference equality. That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.  \n  \n-   Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>. That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.  \n  \n In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.  \n  \n The equivalent method for this operator is <xref:System.Data.EntityKey.Compare%28System.Data.EntityKey%2CSystem.Data.EntityKey%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: A <xref href="System.Data.EntityKey"></xref> to compare.
    - id: key2
      type: System.Data.EntityKey
      description: A <xref href="System.Data.EntityKey"></xref> to compare.
    return:
      type: System.Boolean
      description: '`true` if the <code>key1</code> and <code>key2</code> values are not equal; otherwise, `false`.'
  overload: System.Data.EntityKey.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Data.EntityKey.#ctor
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: EntityKey.EntityKey()
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
  fullName: EntityKey.EntityKey(String, IEnumerable<KeyValuePair<String,Object>>)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<String,Object>>
  nameWithType: IEnumerable<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String, IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String, IEnumerable<EntityKeyMember>)
  fullName: EntityKey.EntityKey(String, IEnumerable<EntityKeyMember>)
- uid: System.Data.EntityKeyMember
  name: EntityKeyMember
  nameWithType: EntityKeyMember
  fullName: System.Data.EntityKeyMember
- uid: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<EntityKeyMember>
  nameWithType: IEnumerable<EntityKeyMember>
  fullName: System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: System.Data.EntityKeyMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String, String, Object)
  nameWithType: EntityKey.EntityKey(String, String, Object)
  fullName: EntityKey.EntityKey(String, String, Object)
- uid: System.Data.EntityKey.EntityContainerName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: EntityKey.EntityContainerName
- uid: System.Data.EntityKey.EntityKeyValues
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: EntityKey.EntityKeyValues
- uid: System.Data.EntityKeyMember[]
  parent: System.Data
  isExternal: false
  name: EntityKeyMember[]
  nameWithType: EntityKeyMember[]
  fullName: System.Data.EntityKeyMember[]
  spec.csharp:
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: System.Data.EntityKeyMember
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityKey.EntityNotValidKey
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: EntityKey.EntityNotValidKey
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.EntityKey.EntitySetName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: EntityKey.EntitySetName
- uid: System.Data.EntityKey.Equals(System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: EntityKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: EntityKey.Equals(EntityKey)
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: EntityKey.GetEntitySet(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityKey.GetHashCode
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: EntityKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityKey.IsTemporary
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: EntityKey.IsTemporary
- uid: System.Data.EntityKey.NoEntitySetKey
  parent: System.Data.EntityKey
  isExternal: false
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: EntityKey.NoEntitySetKey
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: EntityKey.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: EntityKey.OnDeserializing(StreamingContext)
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality(EntityKey, EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey, EntityKey)
  fullName: EntityKey.op_Equality(EntityKey, EntityKey)
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality(EntityKey, EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey, EntityKey)
  fullName: EntityKey.op_Inequality(EntityKey, EntityKey)
- uid: System.Data.EntityKey.#ctor*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey.EntityKey
  fullName: EntityKey.EntityKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.EntityContainerName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: EntityKey.EntityContainerName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.EntityKeyValues*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: EntityKey.EntityKeyValues
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.EntitySetName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: EntityKey.EntitySetName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.Equals*
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals
  nameWithType: EntityKey.Equals
  fullName: EntityKey.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.GetEntitySet*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet
  nameWithType: EntityKey.GetEntitySet
  fullName: EntityKey.GetEntitySet
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.GetHashCode*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode
  nameWithType: EntityKey.GetHashCode
  fullName: EntityKey.GetHashCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.IsTemporary*
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: EntityKey.IsTemporary
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.OnDeserialized*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized
  nameWithType: EntityKey.OnDeserialized
  fullName: EntityKey.OnDeserialized
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.OnDeserializing*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing
  nameWithType: EntityKey.OnDeserializing
  fullName: EntityKey.OnDeserializing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.op_Equality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality
  nameWithType: EntityKey.op_Equality
  fullName: EntityKey.op_Equality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Data.EntityKey.op_Inequality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality
  nameWithType: EntityKey.op_Inequality
  fullName: EntityKey.op_Inequality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EntityKey.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.Data.EntityKey}
  parent: System
  isExternal: false
  name: IEquatable<EntityKey>
  nameWithType: IEquatable<EntityKey>
  fullName: System.IEquatable<System.Data.EntityKey>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.EntityKey
    name: EntityKey
    nameWithType: EntityKey
    fullName: System.Data.EntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
