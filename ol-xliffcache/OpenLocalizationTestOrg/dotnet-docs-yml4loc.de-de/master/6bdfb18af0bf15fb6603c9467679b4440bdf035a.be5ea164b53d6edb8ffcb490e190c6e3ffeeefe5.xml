{"nodes":[{"content":"Represents the value of the Cache-Control header.","nodes":[{"pos":[0,49],"content":"Represents the value of the Cache-Control header.","nodes":[{"content":"Represents the value of the Cache-Control header.","pos":[0,49]}]}],"pos":[2003,2053],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> class."}],"pos":[3844,3954],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.","nodes":[{"pos":[0,168],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."}],"pos":[5573,5742],"yaml":true},{"content":"The object to compare with the current object.","nodes":[{"pos":[0,46],"content":"The object to compare with the current object.","nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]}],"pos":[5882,5929],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current object; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current object; otherwise, `false`."}],"pos":[5987,6100],"yaml":true},{"content":"Cache-extension tokens, each with an optional assigned value.","nodes":[{"pos":[0,61],"content":"Cache-extension tokens, each with an optional assigned value.","nodes":[{"content":"Cache-extension tokens, each with an optional assigned value.","pos":[0,61]}]}],"pos":[7600,7662],"yaml":true},{"content":"This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"pos":[0,125],"content":"This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"content":"This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,125]}]}],"pos":[7673,7799],"yaml":true,"extradata":"MT"},{"content":"A collection of cache-extension tokens each with an optional assigned value.","nodes":[{"pos":[0,76],"content":"A collection of cache-extension tokens each with an optional assigned value.","nodes":[{"content":"A collection of cache-extension tokens each with an optional assigned value.","pos":[0,76]}]}],"pos":[8062,8139],"yaml":true},{"content":"Serves as a hash function for a  <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.","nodes":[{"pos":[0,109],"content":"Serves as a hash function for a  <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> object.","source":"Serves as a hash function for a  <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."}],"pos":[9653,9763],"yaml":true},{"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.  \n  \n The <xref:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode%2A> method is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,151],"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.","nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.","pos":[0,151],"nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing.","pos":[0,90]},{"content":"It can also serve as an index for an object in a collection.","pos":[91,151]}]}]},{"pos":[158,322],"content":"The <xref:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode%2A> method is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode%2A&gt;</ph> method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,164],"source":"The <xref:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode%2A> method is suitable for use in hashing algorithms and data structures such as a hash table."}]}],"pos":[9774,10101],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current object.","nodes":[{"pos":[0,35],"content":"A hash code for the current object.","nodes":[{"content":"A hash code for the current object.","pos":[0,35]}]}],"pos":[10235,10271],"yaml":true},{"content":"The maximum age, specified in seconds, that the HTTP client is willing to accept a response.","nodes":[{"pos":[0,92],"content":"The maximum age, specified in seconds, that the HTTP client is willing to accept a response.","nodes":[{"content":"The maximum age, specified in seconds, that the HTTP client is willing to accept a response.","pos":[0,92]}]}],"pos":[11752,11845],"yaml":true},{"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.  \n  \n Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.","nodes":[{"pos":[0,117],"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"content":"This property represents the \"max-age\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,117]}]},{"pos":[124,277],"content":"Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.","nodes":[{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A&gt;</ph> property is also set, the client is not willing to accept a stale response.","pos":[0,153],"source":"Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response."}]}],"pos":[11856,12140],"yaml":true,"extradata":"MT"},{"content":"The time in seconds.","nodes":[{"pos":[0,20],"content":"The time in seconds.","nodes":[{"content":"The time in seconds.","pos":[0,20]}]}],"pos":[12286,12307],"yaml":true},{"content":"Whether an HTTP client is willing to accept a response that has exceeded its expiration time.","nodes":[{"pos":[0,93],"content":"Whether an HTTP client is willing to accept a response that has exceeded its expiration time.","nodes":[{"content":"Whether an HTTP client is willing to accept a response that has exceeded its expiration time.","pos":[0,93]}]}],"pos":[13795,13889],"yaml":true},{"content":"This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.","nodes":[{"pos":[0,116],"content":"This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.","nodes":[{"content":"This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.","pos":[0,116]}]}],"pos":[13900,14017],"yaml":true,"extradata":"MT"},{"content":"`true` if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, `false`."}],"pos":[14133,14250],"yaml":true},{"content":"The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.","nodes":[{"pos":[0,115],"content":"The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.","nodes":[{"content":"The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.","pos":[0,115]}]}],"pos":[15770,15886],"yaml":true},{"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.  \n  \n If the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property, then the client is willing to accept a stale response of any age.","nodes":[{"pos":[0,120],"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.","nodes":[{"content":"This property represents the value assigned to \"max-stale\" directive in a cache-control header field on an HTTP request.","pos":[0,120]}]},{"pos":[127,572],"content":"If the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property, then the client is willing to accept a stale response of any age.","nodes":[{"content":"If the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property, then the client is willing to accept a stale response of any age.","pos":[0,445],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A&gt;</ph> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds.","pos":[0,259],"source":"If the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds."},{"content":"If a value of zero is assigned to the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A&gt;</ph> property, then the client is willing to accept a stale response of any age.","pos":[260,445],"source":" If a value of zero is assigned to the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property, then the client is willing to accept a stale response of any age."}]}]}],"pos":[15897,16476],"yaml":true,"extradata":"MT"},{"content":"The time in seconds.","nodes":[{"pos":[0,20],"content":"The time in seconds.","nodes":[{"content":"The time in seconds.","pos":[0,20]}]}],"pos":[16629,16650],"yaml":true},{"content":"The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.","nodes":[{"pos":[0,88],"content":"The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.","nodes":[{"content":"The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.","pos":[0,88]}]}],"pos":[18145,18234],"yaml":true},{"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.  \n  \n The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","nodes":[{"pos":[0,102],"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.","nodes":[{"content":"This property represents the \"min-fresh\" directive in a cache-control header field on an HTTP request.","pos":[0,102]}]},{"pos":[109,408],"content":"The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","nodes":[{"content":"The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","pos":[0,299],"nodes":[{"content":"The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds.","pos":[0,188]},{"content":"The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.","pos":[189,299]}]}]}],"pos":[18245,18660],"yaml":true,"extradata":"MT"},{"content":"The time in seconds.","nodes":[{"pos":[0,20],"content":"The time in seconds.","nodes":[{"content":"The time in seconds.","pos":[0,20]}]}],"pos":[18808,18829],"yaml":true},{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.","nodes":[{"pos":[0,121],"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.","nodes":[{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.","pos":[0,121]}]}],"pos":[20355,20477],"yaml":true},{"content":"This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,109],"content":"This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.","pos":[0,109]}]}],"pos":[20488,20598],"yaml":true,"extradata":"MT"},{"content":"`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, `false`."}],"pos":[20720,20861],"yaml":true},{"content":"Whether an HTTP client is willing to accept a cached response.","nodes":[{"pos":[0,62],"content":"Whether an HTTP client is willing to accept a cached response.","nodes":[{"content":"Whether an HTTP client is willing to accept a cached response.","pos":[0,62]}]}],"pos":[22351,22414],"yaml":true},{"content":"This property represents the \"no-cache\" directive in a cache-control header field on an HTTP request or HTTP response.  \n  \n When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoCache%2A> property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.","nodes":[{"pos":[0,118],"content":"This property represents the \"no-cache\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"content":"This property represents the \"no-cache\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,118]}]},{"pos":[125,384],"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.NoCache%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.","source":"When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoCache%2A> property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested."}],"pos":[22425,22816],"yaml":true,"extradata":"MT"},{"content":"`true` if the HTTP client is willing to accept a cached response; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the HTTP client is willing to accept a cached response; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the HTTP client is willing to accept a cached response; otherwise, `false`."}],"pos":[22931,23019],"yaml":true},{"content":"A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,107],"content":"A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","pos":[0,107]}]}],"pos":[24544,24652],"yaml":true},{"content":"This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,116],"content":"This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.","pos":[0,116]}]}],"pos":[24663,24780],"yaml":true,"extradata":"MT"},{"content":"A collection of fieldnames.","nodes":[{"pos":[0,27],"content":"A collection of fieldnames.","nodes":[{"content":"A collection of fieldnames.","pos":[0,27]}]}],"pos":[24978,25006],"yaml":true},{"content":"Whether a cache must not store any part of either the HTTP request mressage or any response.","nodes":[{"pos":[0,92],"content":"Whether a cache must not store any part of either the HTTP request mressage or any response.","nodes":[{"content":"Whether a cache must not store any part of either the HTTP request mressage or any response.","pos":[0,92]}]}],"pos":[26496,26589],"yaml":true},{"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.  \n  \n The purpose of the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A> property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.","nodes":[{"pos":[0,118],"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"content":"This property represents the \"no-store\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,118]}]},{"pos":[125,397],"content":"The purpose of the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A> property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.","nodes":[{"content":"The purpose of the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A> property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.","pos":[0,272],"nodes":[{"content":"The purpose of the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A&gt;</ph> property is to prevent the inadvertent release or retention of sensitive information.","pos":[0,170],"source":"The purpose of the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A> property is to prevent the inadvertent release or retention of sensitive information."},{"content":"This property applies to the entire message, and may be sent either in an HTTP request or a response.","pos":[171,272]}]}]}],"pos":[26600,27004],"yaml":true,"extradata":"MT"},{"content":"`true` if a cache must not store any part of either the HTTP request mressage or any response; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if a cache must not store any part of either the HTTP request mressage or any response; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a cache must not store any part of either the HTTP request mressage or any response; otherwise, `false`."}],"pos":[27119,27236],"yaml":true},{"content":"Whether a cache or proxy must not change any aspect of the entity-body.","nodes":[{"pos":[0,71],"content":"Whether a cache or proxy must not change any aspect of the entity-body.","nodes":[{"content":"Whether a cache or proxy must not change any aspect of the entity-body.","pos":[0,71]}]}],"pos":[28743,28815],"yaml":true},{"content":"This property represents the \"no-transform\" directive in a cache-control header field on an HTTP request or HTTP response.  \n  \n When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform%2A> is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.","nodes":[{"pos":[0,122],"content":"This property represents the \"no-transform\" directive in a cache-control header field on an HTTP request or HTTP response.","nodes":[{"content":"This property represents the \"no-transform\" directive in a cache-control header field on an HTTP request or HTTP response.","pos":[0,122]}]},{"pos":[129,723],"content":"When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform%2A> is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>, intermediate caches or rpoxies must not change any aspect of the entity body.","pos":[0,174],"source":"When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform%2A> is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body."},{"content":"Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies.","pos":[175,295]},{"content":"A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link.","pos":[296,449]},{"content":"Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.","pos":[450,594]}]}],"pos":[28826,29556],"yaml":true,"extradata":"MT"},{"content":"`true` if a cache or proxy must not change any aspect of the entity-body; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if a cache or proxy must not change any aspect of the entity-body; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a cache or proxy must not change any aspect of the entity-body; otherwise, `false`."}],"pos":[29675,29771],"yaml":true},{"content":"Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.","nodes":[{"pos":[0,173],"content":"Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.","nodes":[{"content":"Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.","pos":[0,173]}]}],"pos":[31288,31462],"yaml":true},{"content":"This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.","nodes":[{"pos":[0,107],"content":"This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.","nodes":[{"content":"This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.","pos":[0,107]}]}],"pos":[31473,31581],"yaml":true,"extradata":"MT"},{"content":"`true` if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, `false`.","nodes":[{"pos":[0,195],"content":"<ph id=\"ph1\">`true`</ph> if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, `false`."}],"pos":[31701,31899],"yaml":true},{"content":"Converts a string to an <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.","nodes":[{"pos":[0,102],"content":"Converts a string to an <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"Converts a string to an <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."}],"pos":[33442,33545],"yaml":true},{"content":"A string that represents cache-control header value information.","nodes":[{"pos":[0,64],"content":"A string that represents cache-control header value information.","nodes":[{"content":"A string that represents cache-control header value information.","pos":[0,64]}]}],"pos":[33729,33794],"yaml":true},{"content":"A <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"A <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."}],"pos":[33885,33966],"yaml":true},{"content":"<code>input</code> is a `null` reference.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is a <ph id=\"ph2\">`null`</ph> reference.","source":"<code>input</code> is a `null` reference."}],"pos":[34149,34191],"yaml":true},{"content":"<code>input</code> is not valid cache-control header value information.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is not valid cache-control header value information.","source":"<code>input</code> is not valid cache-control header value information."}],"pos":[34281,34353],"yaml":true},{"content":"Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.","nodes":[{"pos":[0,120],"content":"Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.","nodes":[{"content":"Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.","pos":[0,120]}]}],"pos":[35750,35871],"yaml":true},{"content":"This property represents the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,101],"content":"This property represents the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,101]}]}],"pos":[35882,35984],"yaml":true,"extradata":"MT"},{"content":"`true` if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, `false`."}],"pos":[36099,36229],"yaml":true},{"content":"A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,103],"content":"A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,103]}]}],"pos":[37754,37858],"yaml":true},{"content":"This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,115],"content":"This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.","pos":[0,115]}]}],"pos":[37869,37985],"yaml":true,"extradata":"MT"},{"content":"A collection of fieldnames.","nodes":[{"pos":[0,27],"content":"A collection of fieldnames.","nodes":[{"content":"A collection of fieldnames.","pos":[0,27]}]}],"pos":[38183,38211],"yaml":true},{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.","nodes":[{"pos":[0,150],"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.","nodes":[{"content":"Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.","pos":[0,150]}]}],"pos":[39749,39900],"yaml":true},{"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.  \n  \n This property does not affect  non-shared user agent caches.","nodes":[{"pos":[0,110],"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents the \"proxy-revalidate\" directive in a cache-control header field on an HTTP response.","pos":[0,110]}]},{"pos":[117,177],"content":"This property does not affect  non-shared user agent caches.","nodes":[{"content":"This property does not affect  non-shared user agent caches.","pos":[0,60]}]}],"pos":[39911,40095],"yaml":true,"extradata":"MT"},{"content":"`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, `false`.","nodes":[{"pos":[0,167],"content":"<ph id=\"ph1\">`true`</ph> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, `false`."}],"pos":[40218,40388],"yaml":true},{"content":"Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.","nodes":[{"pos":[0,141],"content":"Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.","nodes":[{"content":"Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.","pos":[0,141]}]}],"pos":[41873,42015],"yaml":true},{"content":"This property represents the \"public\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,100],"content":"This property represents the \"public\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents the \"public\" directive in a cache-control header field on an HTTP response.","pos":[0,100]}]}],"pos":[42026,42127],"yaml":true,"extradata":"MT"},{"content":"`true` if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, `false`.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, `false`."}],"pos":[42241,42408],"yaml":true},{"content":"The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.","nodes":[{"pos":[0,171],"content":"The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.","nodes":[{"content":"The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.","pos":[0,171]}]}],"pos":[43920,44092],"yaml":true},{"content":"This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.","nodes":[{"pos":[0,103],"content":"This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.","nodes":[{"content":"This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.","pos":[0,103]}]}],"pos":[44103,44207],"yaml":true,"extradata":"MT"},{"content":"The time in seconds.","nodes":[{"pos":[0,20],"content":"The time in seconds.","nodes":[{"content":"The time in seconds.","pos":[0,20]}]}],"pos":[44359,44380],"yaml":true},{"content":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.","nodes":[{"pos":[0,121],"content":"Returns a string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object."}],"pos":[45878,46000],"yaml":true},{"content":"A string that represents the current object.","nodes":[{"pos":[0,44],"content":"A string that represents the current object.","nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]}],"pos":[46135,46180],"yaml":true},{"content":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information.","nodes":[{"pos":[0,118],"content":"Determines whether a string is valid <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> information.","source":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information."}],"pos":[47959,48078],"yaml":true},{"content":"The string to validate.","nodes":[{"pos":[0,23],"content":"The string to validate.","nodes":[{"content":"The string to validate.","pos":[0,23]}]}],"pos":[48287,48311],"yaml":true},{"content":"The <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> version of the string.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> version of the string.","source":"The <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> version of the string."}],"pos":[48412,48508],"yaml":true},{"content":"`true` if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information; otherwise, `false`.","nodes":[{"pos":[0,139],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> is valid <ph id=\"ph3\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> information; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information; otherwise, `false`."}],"pos":[48566,48708],"yaml":true},{"content":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.","nodes":[{"pos":[0,129],"content":"Creates a new object that is a copy of the current <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"&gt;&lt;/xref&gt;</ph> instance.","source":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance."}],"pos":[50285,50415],"yaml":true},{"content":"A copy of the current instance.","nodes":[{"pos":[0,31],"content":"A copy of the current instance.","nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]}],"pos":[50542,50574],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.CacheControlHeaderValue\n  commentId: T:System.Net.Http.Headers.CacheControlHeaderValue\n  id: CacheControlHeaderValue\n  children:\n  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.CacheControlHeaderValue.Private\n  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  - System.Net.Http.Headers.CacheControlHeaderValue.Public\n  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  - System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  langs:\n  - csharp\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Represents the value of the Cache-Control header.\n  syntax:\n    content: 'public class CacheControlHeaderValue : ICloneable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: CacheControlHeaderValue()\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()\n  fullName: CacheControlHeaderValue.CacheControlHeaderValue()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> class.\n  syntax:\n    content: public CacheControlHeaderValue ();\n    parameters: []\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CacheControlHeaderValue.Equals(Object)\n  fullName: CacheControlHeaderValue.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current object; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  id: Extensions\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n  fullName: CacheControlHeaderValue.Extensions\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Cache-extension tokens, each with an optional assigned value.\n  remarks: This property represents the \"cache-extension\" directive in a cache-control header field on an HTTP request or HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n      description: A collection of cache-extension tokens each with an optional assigned value.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CacheControlHeaderValue.GetHashCode()\n  fullName: CacheControlHeaderValue.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Serves as a hash function for a  <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  remarks: \"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.  \\n  \\n The <xref:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode%2A> method is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current object.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  id: MaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n  fullName: CacheControlHeaderValue.MaxAge\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: The maximum age, specified in seconds, that the HTTP client is willing to accept a response.\n  remarks: \"This property represents the \\\"max-age\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response.\"\n  syntax:\n    content: public Nullable<TimeSpan> MaxAge { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  id: MaxStale\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n  fullName: CacheControlHeaderValue.MaxStale\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP client is willing to accept a response that has exceeded its expiration time.\n  remarks: This property represents if the \"max-stale\" directive is present in a cache-control header field on an HTTP request.\n  syntax:\n    content: public bool MaxStale { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  id: MaxStaleLimit\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n  fullName: CacheControlHeaderValue.MaxStaleLimit\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.\n  remarks: \"This property represents the value assigned to \\\"max-stale\\\" directive in a cache-control header field on an HTTP request.  \\n  \\n If the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit%2A> property, then the client is willing to accept a stale response of any age.\"\n  syntax:\n    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  id: MinFresh\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n  fullName: CacheControlHeaderValue.MinFresh\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.\n  remarks: \"This property represents the \\\"min-fresh\\\" directive in a cache-control header field on an HTTP request.  \\n  \\n The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime.\"\n  syntax:\n    content: public Nullable<TimeSpan> MinFresh { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  id: MustRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n  fullName: CacheControlHeaderValue.MustRevalidate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.\n  remarks: This property represents the \"must-revalidate\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool MustRevalidate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  id: NoCache\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n  fullName: CacheControlHeaderValue.NoCache\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP client is willing to accept a cached response.\n  remarks: \"This property represents the \\\"no-cache\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoCache%2A> property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested.\"\n  syntax:\n    content: public bool NoCache { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the HTTP client is willing to accept a cached response; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  id: NoCacheHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n  fullName: CacheControlHeaderValue.NoCacheHeaders\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: A collection of fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.\n  remarks: This property represents fieldnames in the \"no-cache\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: A collection of fieldnames.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  id: NoStore\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n  fullName: CacheControlHeaderValue.NoStore\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache must not store any part of either the HTTP request mressage or any response.\n  remarks: \"This property represents the \\\"no-store\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n The purpose of the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoStore%2A> property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response.\"\n  syntax:\n    content: public bool NoStore { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a cache must not store any part of either the HTTP request mressage or any response; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  id: NoTransform\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n  fullName: CacheControlHeaderValue.NoTransform\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache or proxy must not change any aspect of the entity-body.\n  remarks: \"This property represents the \\\"no-transform\\\" directive in a cache-control header field on an HTTP request or HTTP response.  \\n  \\n When the <xref:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform%2A> is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications.\"\n  syntax:\n    content: public bool NoTransform { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a cache or proxy must not change any aspect of the entity-body; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  id: OnlyIfCached\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n  fullName: CacheControlHeaderValue.OnlyIfCached\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.\n  remarks: This property represents the \"only-if-cached\" directive in a cache-control header field on an HTTP request.\n  syntax:\n    content: public bool OnlyIfCached { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: CacheControlHeaderValue.Parse(String)\n  fullName: CacheControlHeaderValue.Parse(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Converts a string to an <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  syntax:\n    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that represents cache-control header value information.\n    return:\n      type: System.Net.Http.Headers.CacheControlHeaderValue\n      description: A <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is a `null` reference.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>input</code> is not valid cache-control header value information.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Private\n  id: Private\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n  fullName: CacheControlHeaderValue.Private\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.\n  remarks: This property represents the \"private\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool Private { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  id: PrivateHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n  fullName: CacheControlHeaderValue.PrivateHeaders\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: A collection fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.\n  remarks: This property represents fieldnames in the \"private\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: A collection of fieldnames.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  id: ProxyRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n  fullName: CacheControlHeaderValue.ProxyRevalidate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.\n  remarks: \"This property represents the \\\"proxy-revalidate\\\" directive in a cache-control header field on an HTTP response.  \\n  \\n This property does not affect  non-shared user agent caches.\"\n  syntax:\n    content: public bool ProxyRevalidate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.Public\n  id: Public\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n  fullName: CacheControlHeaderValue.Public\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.\n  remarks: This property represents the \"public\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public bool Public { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  commentId: P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  id: SharedMaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n  fullName: CacheControlHeaderValue.SharedMaxAge\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: The shared maximum age, specified in seconds, in an HTTP response that overrides the \"max-age\" directive in a cache-control header or an Expires header for a shared cache.\n  remarks: This property represents the \"s-max-age\" directive in a cache-control header field on an HTTP response.\n  syntax:\n    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: The time in seconds.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CacheControlHeaderValue.ToString()\n  fullName: CacheControlHeaderValue.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Returns a string that represents the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: TryParse(String, CacheControlHeaderValue)\n  nameWithType: CacheControlHeaderValue.TryParse(String, CacheControlHeaderValue)\n  fullName: CacheControlHeaderValue.TryParse(String, CacheControlHeaderValue)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Determines whether a string is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information.\n  syntax:\n    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);\n    parameters:\n    - id: input\n      type: System.String\n      description: The string to validate.\n    - id: parsedValue\n      type: System.Net.Http.Headers.CacheControlHeaderValue\n      description: The <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> version of the string.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> information; otherwise, `false`.'\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  commentId: M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  langs:\n  - csharp\n  name: ICloneable.Clone()\n  nameWithType: CacheControlHeaderValue.ICloneable.Clone()\n  fullName: CacheControlHeaderValue.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http.Headers\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.CacheControlHeaderValue\"></xref> instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current instance.\n  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: CacheControlHeaderValue()\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()\n  fullName: CacheControlHeaderValue.CacheControlHeaderValue()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CacheControlHeaderValue.Equals(Object)\n  fullName: CacheControlHeaderValue.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n  fullName: CacheControlHeaderValue.Extensions\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Net.Http.Headers.NameValueHeaderValue\n  name: NameValueHeaderValue\n  nameWithType: NameValueHeaderValue\n  fullName: System.Net.Http.Headers.NameValueHeaderValue\n- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<NameValueHeaderValue>\n  nameWithType: ICollection<NameValueHeaderValue>\n  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.Headers.NameValueHeaderValue\n    name: NameValueHeaderValue\n    nameWithType: NameValueHeaderValue\n    fullName: System.Net.Http.Headers.NameValueHeaderValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CacheControlHeaderValue.GetHashCode()\n  fullName: CacheControlHeaderValue.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n  fullName: CacheControlHeaderValue.MaxAge\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.TimeSpan\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: false\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n  fullName: CacheControlHeaderValue.MaxStale\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n  fullName: CacheControlHeaderValue.MaxStaleLimit\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n  fullName: CacheControlHeaderValue.MinFresh\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n  fullName: CacheControlHeaderValue.MustRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n  fullName: CacheControlHeaderValue.NoCache\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n  fullName: CacheControlHeaderValue.NoCacheHeaders\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n  fullName: CacheControlHeaderValue.NoStore\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n  fullName: CacheControlHeaderValue.NoTransform\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n  fullName: CacheControlHeaderValue.OnlyIfCached\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Parse(String)\n  nameWithType: CacheControlHeaderValue.Parse(String)\n  fullName: CacheControlHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.CacheControlHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue\n  fullName: System.Net.Http.Headers.CacheControlHeaderValue\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n  fullName: CacheControlHeaderValue.Private\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n  fullName: CacheControlHeaderValue.PrivateHeaders\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n  fullName: CacheControlHeaderValue.ProxyRevalidate\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n  fullName: CacheControlHeaderValue.Public\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n  fullName: CacheControlHeaderValue.SharedMaxAge\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ToString()\n  nameWithType: CacheControlHeaderValue.ToString()\n  fullName: CacheControlHeaderValue.ToString()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: TryParse(String, CacheControlHeaderValue)\n  nameWithType: CacheControlHeaderValue.TryParse(String, CacheControlHeaderValue)\n  fullName: CacheControlHeaderValue.TryParse(String, CacheControlHeaderValue)\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ICloneable.Clone()\n  nameWithType: CacheControlHeaderValue.ICloneable.Clone()\n  fullName: CacheControlHeaderValue.ICloneable.Clone()\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: CacheControlHeaderValue\n  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue\n  fullName: CacheControlHeaderValue.CacheControlHeaderValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Equals\n  nameWithType: CacheControlHeaderValue.Equals\n  fullName: CacheControlHeaderValue.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Extensions\n  nameWithType: CacheControlHeaderValue.Extensions\n  fullName: CacheControlHeaderValue.Extensions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CacheControlHeaderValue.GetHashCode\n  fullName: CacheControlHeaderValue.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxAge\n  nameWithType: CacheControlHeaderValue.MaxAge\n  fullName: CacheControlHeaderValue.MaxAge\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStale\n  nameWithType: CacheControlHeaderValue.MaxStale\n  fullName: CacheControlHeaderValue.MaxStale\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MaxStaleLimit\n  nameWithType: CacheControlHeaderValue.MaxStaleLimit\n  fullName: CacheControlHeaderValue.MaxStaleLimit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MinFresh\n  nameWithType: CacheControlHeaderValue.MinFresh\n  fullName: CacheControlHeaderValue.MinFresh\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: MustRevalidate\n  nameWithType: CacheControlHeaderValue.MustRevalidate\n  fullName: CacheControlHeaderValue.MustRevalidate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCache\n  nameWithType: CacheControlHeaderValue.NoCache\n  fullName: CacheControlHeaderValue.NoCache\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoCacheHeaders\n  nameWithType: CacheControlHeaderValue.NoCacheHeaders\n  fullName: CacheControlHeaderValue.NoCacheHeaders\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoStore\n  nameWithType: CacheControlHeaderValue.NoStore\n  fullName: CacheControlHeaderValue.NoStore\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: NoTransform\n  nameWithType: CacheControlHeaderValue.NoTransform\n  fullName: CacheControlHeaderValue.NoTransform\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: OnlyIfCached\n  nameWithType: CacheControlHeaderValue.OnlyIfCached\n  fullName: CacheControlHeaderValue.OnlyIfCached\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Parse\n  nameWithType: CacheControlHeaderValue.Parse\n  fullName: CacheControlHeaderValue.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Private\n  nameWithType: CacheControlHeaderValue.Private\n  fullName: CacheControlHeaderValue.Private\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: PrivateHeaders\n  nameWithType: CacheControlHeaderValue.PrivateHeaders\n  fullName: CacheControlHeaderValue.PrivateHeaders\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ProxyRevalidate\n  nameWithType: CacheControlHeaderValue.ProxyRevalidate\n  fullName: CacheControlHeaderValue.ProxyRevalidate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: Public\n  nameWithType: CacheControlHeaderValue.Public\n  fullName: CacheControlHeaderValue.Public\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: SharedMaxAge\n  nameWithType: CacheControlHeaderValue.SharedMaxAge\n  fullName: CacheControlHeaderValue.SharedMaxAge\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: ToString\n  nameWithType: CacheControlHeaderValue.ToString\n  fullName: CacheControlHeaderValue.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: TryParse\n  nameWithType: CacheControlHeaderValue.TryParse\n  fullName: CacheControlHeaderValue.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*\n  parent: System.Net.Http.Headers.CacheControlHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone\n  fullName: CacheControlHeaderValue.System.ICloneable.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http.Headers/CacheControlHeaderValue.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}