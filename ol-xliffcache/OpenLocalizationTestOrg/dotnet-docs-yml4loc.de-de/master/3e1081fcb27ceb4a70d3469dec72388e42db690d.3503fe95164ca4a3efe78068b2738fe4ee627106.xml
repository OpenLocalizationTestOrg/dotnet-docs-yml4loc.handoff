{"nodes":[{"content":"Represents a Windows user.","nodes":[{"pos":[0,26],"content":"Represents a Windows user.","nodes":[{"content":"Represents a Windows user.","pos":[0,26]}]}],"pos":[3332,3359],"yaml":true},{"content":"Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,180],"content":"Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A&gt;</ph> method to create a <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that represents the current user.","pos":[0,180],"source":"Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user."}]},{"pos":[188,714],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[3370,4092],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified Windows account token.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token."}],"pos":[8939,9107],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  \n|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  \n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \n  \n> [!NOTE]\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"pos":[0,118],"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.","pos":[0,118],"source":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>."}]},{"pos":[125,133],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[134,147],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[191,261],"content":"<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>","nodes":[]},{"pos":[278,329],"content":"<xref:System.Security.Principal.WindowsAccountType>","nodes":[]},{"pos":[343,410],"content":"<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>","nodes":[]},{"pos":[427,789],"content":"[!NOTE]\n You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","leadings":["","> "],"nodes":[{"content":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","pos":[8,360],"nodes":[{"content":"You can retrieve the token represented by <ph id=\"ph1\">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id=\"ph2\">`LogonUser`</ph> function.","pos":[1,124],"source":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function."},{"content":"Always release <ph id=\"ph1\">`userToken`</ph> by calling the Win32 API <ph id=\"ph2\">`CloseHandle`</ph> function.","pos":[125,200],"source":" Always release `userToken` by calling the Win32 API `CloseHandle` function."},{"content":"For more information on calling unmanaged code, see <bpt id=\"p1\">[</bpt>Consuming Unmanaged DLL Functions<ept id=\"p1\">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.","pos":[201,352],"source":" For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)."}]}]}],"pos":[9118,9919],"yaml":true,"extradata":"MT"},{"content":"The account token for the user on whose behalf the code is running.","nodes":[{"pos":[0,67],"content":"The account token for the user on whose behalf the code is running.","nodes":[{"content":"The account token for the user on whose behalf the code is running.","pos":[0,67]}]}],"pos":[10066,10134],"yaml":true},{"content":"<code>userToken</code> is 0.  \n  \n -or-  \n  \n <code>userToken</code> is duplicated and invalid for impersonation.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.","source":"<code>userToken</code> is 0."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,113],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.","source":"<code>userToken</code> is duplicated and invalid for impersonation."}],"pos":[10303,10423],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n A Win32 error occurred.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,90],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[10535,10632],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class by using the specified <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class by using the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class by using the specified <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object."}],"pos":[11988,12185],"yaml":true},{"content":"The object from which to construct the new instance of <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>.","nodes":[{"pos":[0,118],"content":"The object from which to construct the new instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph>.","source":"The object from which to construct the new instance of <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>."}],"pos":[12396,12515],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN).","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified User Principal Name (UPN).","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN)."}],"pos":[13673,13845],"yaml":true},{"content":"A UPN has the format *username*@*domainname*.com, in other words, an email address. The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  \n  \n> [!NOTE]\n>  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","nodes":[{"pos":[0,350],"content":"A UPN has the format *username*@*domainname*.com, in other words, an email address. The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.","nodes":[{"content":"A UPN has the format <bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept><ph id=\"ph1\">@</ph><bpt id=\"p2\">*</bpt>domainname<ept id=\"p2\">*</ept>.com, in other words, an email address.","pos":[0,83],"source":"A UPN has the format *username*@*domainname*.com, in other words, an email address."},{"content":"The UPN identified in <ph id=\"ph1\">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id=\"ph2\">`LsaLogonUser`</ph> function.","pos":[84,215],"source":" The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function."},{"content":"In turn that token is used to identify the user.","pos":[216,264]},{"content":"An exception might be returned due to the inability to log on using the supplied UPN.","pos":[265,350]}]},{"pos":[358,713],"content":"[!NOTE]\n This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","leadings":["","> "],"nodes":[{"content":" This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","pos":[8,353],"nodes":[{"content":"This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.","pos":[1,103]},{"content":"An exception is thrown for earlier domain types.","pos":[104,152]},{"content":"This restriction is due to the fact that this constructor uses the <bpt id=\"p1\">[</bpt>KERB_S4U_LOGON structure<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.","pos":[153,345],"source":" This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003."}]}]}],"pos":[13856,14575],"yaml":true,"extradata":"MT"},{"content":"The UPN for the user on whose behalf the code is running.","nodes":[{"pos":[0,57],"content":"The UPN for the user on whose behalf the code is running.","nodes":[{"content":"The UPN for the user on whose behalf the code is running.","pos":[0,57]}]}],"pos":[14740,14798],"yaml":true},{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"pos":[0,65],"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","pos":[0,65]}]}],"pos":[14987,15053],"yaml":true},{"content":"There is insufficient memory available.","nodes":[{"pos":[0,39],"content":"There is insufficient memory available.","nodes":[{"content":"There is insufficient memory available.","pos":[0,39]}]}],"pos":[15153,15193],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n The computer is not attached to a Windows 2003 or later domain.  \n  \n -or-  \n  \n The computer is not running Windows 2003 or later.  \n  \n -or-  \n  \n The user is not a member of the domain the computer is attached to.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,130],"content":"The computer is not attached to a Windows 2003 or later domain.","nodes":[{"content":"The computer is not attached to a Windows 2003 or later domain.","pos":[0,63]}]},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,198],"content":"The computer is not running Windows 2003 or later.","nodes":[{"content":"The computer is not running Windows 2003 or later.","pos":[0,50]}]},{"pos":[205,209],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[216,283],"content":"The user is not a member of the domain the computer is attached to.","nodes":[{"content":"The user is not a member of the domain the computer is attached to.","pos":[0,67]}]}],"pos":[15305,15603],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token and the specified authentication type.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified Windows account token and the specified authentication type.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token and the specified authentication type."}],"pos":[16952,17158],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  \n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \n  \n The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \n  \n> [!NOTE]\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"pos":[0,118],"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.","pos":[0,118],"source":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>."}]},{"pos":[125,133],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[134,147],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[191,242],"content":"<xref:System.Security.Principal.WindowsAccountType>","nodes":[]},{"pos":[256,323],"content":"<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>","nodes":[]},{"pos":[339,824],"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.","nodes":[{"content":"The value of the <ph id=\"ph1\">`type`</ph> parameter is used to set the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.","pos":[0,134],"source":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter."},{"content":"If <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`null`</ph>, the security system sets <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id=\"ph4\">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id=\"ph5\">`Kerberos`</ph> on earlier versions of the Windows operating system.","pos":[135,406],"source":" If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system."},{"content":"The security system does not use this value; it is for informational use only.","pos":[407,485]}]},{"pos":[832,1194],"content":"[!NOTE]\n You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","leadings":["","> "],"nodes":[{"content":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","pos":[8,360],"nodes":[{"content":"You can retrieve the token represented by <ph id=\"ph1\">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id=\"ph2\">`LogonUser`</ph> function.","pos":[1,124],"source":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function."},{"content":"Always release <ph id=\"ph1\">`userToken`</ph> by calling the Win32 API <ph id=\"ph2\">`CloseHandle`</ph> function.","pos":[125,200],"source":" Always release `userToken` by calling the Win32 API `CloseHandle` function."},{"content":"For more information on calling unmanaged code, see <bpt id=\"p1\">[</bpt>Consuming Unmanaged DLL Functions<ept id=\"p1\">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.","pos":[201,352],"source":" For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)."}]}]}],"pos":[17169,18376],"yaml":true,"extradata":"MT"},{"content":"The account token for the user on whose behalf the code is running.","nodes":[{"pos":[0,67],"content":"The account token for the user on whose behalf the code is running.","nodes":[{"content":"The account token for the user on whose behalf the code is running.","pos":[0,67]}]}],"pos":[19582,19650],"yaml":true},{"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"pos":[0,79],"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"content":"(Informational use only.) The type of authentication used to identify the user.","pos":[0,79]}]}],"pos":[19710,19790],"yaml":true},{"content":"<code>userToken</code> is 0.  \n  \n -or-  \n  \n <code>userToken</code> is duplicated and invalid for impersonation.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.","source":"<code>userToken</code> is 0."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,113],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.","source":"<code>userToken</code> is duplicated and invalid for impersonation."}],"pos":[19959,20079],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n A Win32 error occurred.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,90],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[20191,20288],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by information in a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> stream.","nodes":[{"pos":[0,223],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by information in a <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> stream.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by information in a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> stream."}],"pos":[21895,22119],"yaml":true},{"content":"> [!IMPORTANT]\n>  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","nodes":[{"pos":[2,224],"content":"[!IMPORTANT]\n Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","leadings":["","> "],"nodes":[{"content":" Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","pos":[13,220],"nodes":[{"content":"Calling this method with untrusted data is a security risk.","pos":[1,60]},{"content":"Call this method only with trusted data.","pos":[61,101]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Untrusted Data Security Risks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.","pos":[102,207],"source":" For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."}]}]}],"pos":[22130,22367],"yaml":true,"extradata":"MT"},{"content":"The object containing the account information for the user.","nodes":[{"pos":[0,59],"content":"The object containing the account information for the user.","nodes":[{"content":"The object containing the account information for the user.","pos":[0,59]}]}],"pos":[22632,22692],"yaml":true},{"content":"An object that indicates the stream characteristics.","nodes":[{"pos":[0,52],"content":"An object that indicates the stream characteristics.","nodes":[{"content":"An object that indicates the stream characteristics.","pos":[0,52]}]}],"pos":[22787,22840],"yaml":true},{"content":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> cannot be serialized across processes.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> cannot be serialized across processes.","source":"A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> cannot be serialized across processes."}],"pos":[23017,23121],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n A Win32 error occurred.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,90],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[23233,23330],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.","nodes":[{"pos":[0,209],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type."}],"pos":[24577,24787],"yaml":true},{"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \n  \n The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  \n  \n> [!NOTE]\n>  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","nodes":[{"pos":[0,485],"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.","nodes":[{"content":"The value of the <ph id=\"ph1\">`type`</ph> parameter is used to set the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.","pos":[0,134],"source":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter."},{"content":"If <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`null`</ph>, the security system sets <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id=\"ph4\">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id=\"ph5\">`Kerberos`</ph> on earlier versions of the Windows operating system.","pos":[135,406],"source":" If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system."},{"content":"The security system does not use this value; it is for informational use only.","pos":[407,485]}]},{"pos":[492,758],"content":"The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.","nodes":[{"content":"The UPN identified in <ph id=\"ph1\">`sUserPrincipalName`</ph> is used to retrieve a token for that user through the Win32 API <ph id=\"ph2\">`LsaLogonUser`</ph> function.","pos":[0,131],"source":"The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function."},{"content":"In turn that token is used to identify the user.","pos":[132,180]},{"content":"An exception might be returned due to the inability to log on using the supplied UPN.","pos":[181,266]}]},{"pos":[766,1121],"content":"[!NOTE]\n This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","leadings":["","> "],"nodes":[{"content":" This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.","pos":[8,353],"nodes":[{"content":"This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.","pos":[1,103]},{"content":"An exception is thrown for earlier domain types.","pos":[104,152]},{"content":"This restriction is due to the fact that this constructor uses the <bpt id=\"p1\">[</bpt>KERB_S4U_LOGON structure<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=143533)</ept>, which was first introduced in Windows Server 2003.","pos":[153,345],"source":" This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003."}]}]}],"pos":[24798,25927],"yaml":true,"extradata":"MT"},{"content":"The UPN for the user on whose behalf the code is running.","nodes":[{"pos":[0,57],"content":"The UPN for the user on whose behalf the code is running.","nodes":[{"content":"The UPN for the user on whose behalf the code is running.","pos":[0,57]}]}],"pos":[26105,26163],"yaml":true},{"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"pos":[0,79],"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"content":"(Informational use only.) The type of authentication used to identify the user.","pos":[0,79]}]}],"pos":[26223,26303],"yaml":true},{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"pos":[0,65],"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","pos":[0,65]}]}],"pos":[26492,26558],"yaml":true},{"content":"There is insufficient memory available.","nodes":[{"pos":[0,39],"content":"There is insufficient memory available.","nodes":[{"content":"There is insufficient memory available.","pos":[0,39]}]}],"pos":[26658,26698],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n The computer is not attached to a Windows 2003 or later domain.  \n  \n -or-  \n  \n The computer is not running Windows 2003 or later.  \n  \n -or-  \n  \n The user is not a member of the domain the computer is attached to.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,130],"content":"The computer is not attached to a Windows 2003 or later domain.","nodes":[{"content":"The computer is not attached to a Windows 2003 or later domain.","pos":[0,63]}]},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,198],"content":"The computer is not running Windows 2003 or later.","nodes":[{"content":"The computer is not running Windows 2003 or later.","pos":[0,50]}]},{"pos":[205,209],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[216,283],"content":"The user is not a member of the domain the computer is attached to.","nodes":[{"content":"The user is not a member of the domain the computer is attached to.","pos":[0,67]}]}],"pos":[26810,27108],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.","nodes":[{"pos":[0,242],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type."}],"pos":[28518,28761],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \n  \n The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \n  \n> [!NOTE]\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"pos":[0,118],"content":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.","pos":[0,118],"source":"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>."}]},{"pos":[125,133],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[134,147],"content":"Initial Value","nodes":[{"content":"Initial Value","pos":[0,13]}]},{"pos":[191,258],"content":"<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>","nodes":[]},{"pos":[274,759],"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.","nodes":[{"content":"The value of the <ph id=\"ph1\">`type`</ph> parameter is used to set the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.","pos":[0,134],"source":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter."},{"content":"If <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`null`</ph>, the security system sets <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id=\"ph4\">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id=\"ph5\">`Kerberos`</ph> on earlier versions of the Windows operating system.","pos":[135,406],"source":" If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system."},{"content":"The security system does not use this value; it is for informational use only.","pos":[407,485]}]},{"pos":[767,1129],"content":"[!NOTE]\n You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","leadings":["","> "],"nodes":[{"content":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","pos":[8,360],"nodes":[{"content":"You can retrieve the token represented by <ph id=\"ph1\">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id=\"ph2\">`LogonUser`</ph> function.","pos":[1,124],"source":" You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function."},{"content":"Always release <ph id=\"ph1\">`userToken`</ph> by calling the Win32 API <ph id=\"ph2\">`CloseHandle`</ph> function.","pos":[125,200],"source":" Always release `userToken` by calling the Win32 API `CloseHandle` function."},{"content":"For more information on calling unmanaged code, see <bpt id=\"p1\">[</bpt>Consuming Unmanaged DLL Functions<ept id=\"p1\">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.","pos":[201,352],"source":" For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)."}]}]}],"pos":[28772,29913],"yaml":true,"extradata":"MT"},{"content":"The account token for the user on whose behalf the code is running.","nodes":[{"pos":[0,67],"content":"The account token for the user on whose behalf the code is running.","nodes":[{"content":"The account token for the user on whose behalf the code is running.","pos":[0,67]}]}],"pos":[31210,31278],"yaml":true},{"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"pos":[0,79],"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"content":"(Informational use only.) The type of authentication used to identify the user.","pos":[0,79]}]}],"pos":[31338,31418],"yaml":true},{"content":"One of the enumeration values.","nodes":[{"pos":[0,30],"content":"One of the enumeration values.","nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]}],"pos":[31513,31544],"yaml":true},{"content":"<code>userToken</code> is 0.  \n  \n -or-  \n  \n <code>userToken</code> is duplicated and invalid for impersonation.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.","source":"<code>userToken</code> is 0."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,113],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.","source":"<code>userToken</code> is duplicated and invalid for impersonation."}],"pos":[31713,31833],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n A Win32 error occurred.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,90],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[31945,32042],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.","nodes":[{"pos":[0,279],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status."}],"pos":[33524,33804],"yaml":true},{"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \n  \n You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"pos":[0,485],"content":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.","nodes":[{"content":"The value of the <ph id=\"ph1\">`type`</ph> parameter is used to set the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> parameter.","pos":[0,134],"source":"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter."},{"content":"If <ph id=\"ph1\">`type`</ph> is <ph id=\"ph2\">`null`</ph>, the security system sets <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A&gt;</ph> to <ph id=\"ph4\">`Negotiate`</ph> on Windows Vista and later versions of the Windows operating system, and to <ph id=\"ph5\">`Kerberos`</ph> on earlier versions of the Windows operating system.","pos":[135,406],"source":" If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system."},{"content":"The security system does not use this value; it is for informational use only.","pos":[407,485]}]},{"pos":[492,843],"content":"You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"content":"You can retrieve the token represented by <ph id=\"ph1\">`userToken`</ph> by calling unmanaged code such as the Win32 API <ph id=\"ph2\">`LogonUser`</ph> function.","pos":[0,123],"source":"You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function."},{"content":"Always release <ph id=\"ph1\">`userToken`</ph> by calling the Win32 API <ph id=\"ph2\">`CloseHandle`</ph> function.","pos":[124,199],"source":" Always release `userToken` by calling the Win32 API `CloseHandle` function."},{"content":"For more information on calling unmanaged code, see <bpt id=\"p1\">[</bpt>Consuming Unmanaged DLL Functions<ept id=\"p1\">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.","pos":[200,351],"source":" For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)."}]}],"pos":[33815,34663],"yaml":true,"extradata":"MT"},{"content":"The account token for the user on whose behalf the code is running.","nodes":[{"pos":[0,67],"content":"The account token for the user on whose behalf the code is running.","nodes":[{"content":"The account token for the user on whose behalf the code is running.","pos":[0,67]}]}],"pos":[36025,36093],"yaml":true},{"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"pos":[0,79],"content":"(Informational use only.) The type of authentication used to identify the user.","nodes":[{"content":"(Informational use only.) The type of authentication used to identify the user.","pos":[0,79]}]}],"pos":[36153,36233],"yaml":true},{"content":"One of the enumeration values.","nodes":[{"pos":[0,30],"content":"One of the enumeration values.","nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]}],"pos":[36328,36359],"yaml":true},{"content":"`true` to indicate that the user is authenticated; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the user is authenticated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the user is authenticated; otherwise, `false`."}],"pos":[36431,36504],"yaml":true},{"content":"<code>userToken</code> is 0.  \n  \n -or-  \n  \n <code>userToken</code> is duplicated and invalid for impersonation.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is 0.","source":"<code>userToken</code> is 0."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,113],"content":"<ph id=\"ph1\">&lt;code&gt;userToken&lt;/code&gt;</ph> is duplicated and invalid for impersonation.","source":"<code>userToken</code> is duplicated and invalid for impersonation."}],"pos":[36673,36793],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n A Win32 error occurred.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,90],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[36905,37002],"yaml":true},{"content":"Gets this <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref> for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance.","nodes":[{"pos":[0,162],"content":"Gets this <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets this <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref> for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance."}],"pos":[38121,38284],"yaml":true},{"content":"Returns a <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref>.","nodes":[{"pos":[0,81],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref>."}],"pos":[38478,38560],"yaml":true},{"content":"Gets the type of authentication used to identify the user.","nodes":[{"pos":[0,58],"content":"Gets the type of authentication used to identify the user.","nodes":[{"content":"Gets the type of authentication used to identify the user.","pos":[0,58]}]}],"pos":[39767,39826],"yaml":true},{"content":"This property is informational; it is not used by the security system. On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy. The default property value for earlier versions of the Windows operating system is `Kerberos`.","nodes":[{"pos":[0,387],"content":"This property is informational; it is not used by the security system. On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy. The default property value for earlier versions of the Windows operating system is `Kerberos`.","nodes":[{"content":"This property is informational; it is not used by the security system.","pos":[0,70]},{"content":"On Windows Vista and later versions of the Windows operating system, the default value for this property is <ph id=\"ph1\">`Negotiate`</ph>, which chooses the best security support provider (SSP) based on customer-configured security policy.","pos":[71,292],"source":" On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy."},{"content":"The default property value for earlier versions of the Windows operating system is <ph id=\"ph1\">`Kerberos`</ph>.","pos":[293,387],"source":" The default property value for earlier versions of the Windows operating system is `Kerberos`."}]}],"pos":[39837,40225],"yaml":true,"extradata":"MT"},{"content":"The type of authentication used to identify the user.","nodes":[{"pos":[0,53],"content":"The type of authentication used to identify the user.","nodes":[{"content":"The type of authentication used to identify the user.","pos":[0,53]}]}],"pos":[40363,40417],"yaml":true},{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"pos":[0,65],"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","pos":[0,65]}]}],"pos":[40619,40685],"yaml":true},{"content":"There is insufficient memory available.","nodes":[{"pos":[0,39],"content":"There is insufficient memory available.","nodes":[{"content":"There is insufficient memory available.","pos":[0,39]}]}],"pos":[40785,40825],"yaml":true},{"content":"The caller does not have the correct permissions.  \n  \n -or-  \n  \n The computer is not attached to a Windows 2003 or later domain.  \n  \n -or-  \n  \n The computer is not running Windows 2003 or later.  \n  \n -or-  \n  \n The user is not a member of the domain the computer is attached to.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,130],"content":"The computer is not attached to a Windows 2003 or later domain.","nodes":[{"content":"The computer is not attached to a Windows 2003 or later domain.","pos":[0,63]}]},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,198],"content":"The computer is not running Windows 2003 or later.","nodes":[{"content":"The computer is not running Windows 2003 or later.","pos":[0,50]}]},{"pos":[205,209],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[216,283],"content":"The user is not a member of the domain the computer is attached to.","nodes":[{"content":"The user is not a member of the domain the computer is attached to.","pos":[0,67]}]}],"pos":[40937,41235],"yaml":true},{"content":"Gets all claims for the user represented by this Windows identity.","nodes":[{"pos":[0,66],"content":"Gets all claims for the user represented by this Windows identity.","nodes":[{"content":"Gets all claims for the user represented by this Windows identity.","pos":[0,66]}]}],"pos":[42420,42487],"yaml":true},{"content":"A collection of claims for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.","nodes":[{"pos":[0,102],"content":"A collection of claims for this <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object.","source":"A collection of claims for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object."}],"pos":[42868,42971],"yaml":true},{"content":"Creates a new  object that is a copy of the current instance.","nodes":[{"pos":[0,61],"content":"Creates a new  object that is a copy of the current instance.","nodes":[{"content":"Creates a new  object that is a copy of the current instance.","pos":[0,61]}]}],"pos":[44193,44255],"yaml":true},{"content":"A copy of the current instance.","nodes":[{"pos":[0,31],"content":"A copy of the current instance.","nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]}],"pos":[44442,44474],"yaml":true},{"content":"Identifies the name of the default <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> issuer.","nodes":[{"pos":[0,101],"content":"Identifies the name of the default <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;&lt;/xref&gt;</ph> issuer.","source":"Identifies the name of the default <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> issuer."}],"pos":[45652,45754],"yaml":true},{"content":"Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key.","nodes":[{"pos":[0,113],"content":"Gets claims that have the <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"&gt;&lt;/xref&gt;</ph> property key.","source":"Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key."}],"pos":[47072,47186],"yaml":true},{"content":"A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key.","nodes":[{"pos":[0,124],"content":"A collection of claims that have the <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"&gt;&lt;/xref&gt;</ph> property key.","source":"A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key."}],"pos":[47427,47552],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>.","nodes":[{"pos":[0,98],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>."}],"pos":[48612,48711],"yaml":true},{"content":"Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>. The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state. After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.","nodes":[{"pos":[0,789],"content":"Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>. The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state. After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.","pos":[0,146],"source":"Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> in an unusable state.","pos":[147,299],"source":" The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> was occupying.","pos":[300,583],"source":" After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[584,789],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[797,1145],"content":"[!NOTE]\n Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.","pos":[8,346],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>.","pos":[1,168],"source":" Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[169,338],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method."}]}]}],"pos":[48722,49873],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,154],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> and optionally releases the managed resources."}],"pos":[51425,51580],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,545],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> references.","pos":[0,175],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[176,245],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[51591,52141],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[52362,52465],"yaml":true},{"content":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.","nodes":[{"pos":[0,269],"content":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.","nodes":[{"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object that you can use as a sentinel value in your code to represent an anonymous user.","pos":[0,161],"source":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that you can use as a sentinel value in your code to represent an anonymous user."},{"content":"The property value does not represent the built-in anonymous identity used by the Windows operating system.","pos":[162,269]}]}],"pos":[53845,54115],"yaml":true},{"content":"This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous. The property value does not correspond to a Windows anonymous user and cannot be used for impersonation. Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.  \n  \n You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>. However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method. To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.","nodes":[{"pos":[0,430],"content":"This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous. The property value does not correspond to a Windows anonymous user and cannot be used for impersonation. Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.","nodes":[{"content":"This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous. The property value does not correspond to a Windows anonymous user and cannot be used for impersonation. Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.","pos":[0,430],"nodes":[{"content":"This property returns an empty <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object that enables you to treat operations as anonymous.","pos":[0,137],"source":"This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous."},{"content":"The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.","pos":[138,242]},{"content":"Also, note that the identity returned by this property is not static; each call to <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> returns a different anonymous identity.","pos":[243,430],"source":" Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity."}]}]},{"pos":[437,1008],"content":"You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>. However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method. To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.","nodes":[{"content":"You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>. However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method. To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.","pos":[0,571],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property to detect the return value from <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph>.","pos":[0,186],"source":"You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> detects both the Windows anonymous identity and the anonymous identity returned by this method.","pos":[187,355],"source":" However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method."},{"content":"To use the latter identity, cache the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> return value instead of relying on the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property.","pos":[356,571],"source":" To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property."}]}]}],"pos":[54126,55139],"yaml":true,"extradata":"MT"},{"content":"An object that represents an anonymous user.","nodes":[{"pos":[0,44],"content":"An object that represents an anonymous user.","nodes":[{"content":"An object that represents an anonymous user.","pos":[0,44]}]}],"pos":[56311,56356],"yaml":true},{"content":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user, using the specified desired token access level.","nodes":[{"pos":[0,169],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object that represents the current Windows user, using the specified desired token access level.","source":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user, using the specified desired token access level."}],"pos":[57840,58010],"yaml":true},{"content":"The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.","nodes":[{"pos":[0,279],"content":"The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.","nodes":[{"content":"The <ph id=\"ph1\">`desiredAccess`</ph> parameter specifies an access mask that identifies the requested types of access to the access token.","pos":[0,121],"source":"The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token."},{"content":"These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.","pos":[122,279]}]}],"pos":[58021,58301],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the enumeration values.","nodes":[{"pos":[0,48],"content":"A bitwise combination of the enumeration values.","nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]}],"pos":[58567,58616],"yaml":true},{"content":"An object that represents the current user.","nodes":[{"pos":[0,43],"content":"An object that represents the current user.","nodes":[{"content":"An object that represents the current user.","pos":[0,43]}]}],"pos":[58701,58745],"yaml":true},{"content":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the Windows identity for either the thread or the process, depending on the value of the <code>ifImpersonating</code> parameter.","nodes":[{"pos":[0,224],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object that represents the Windows identity for either the thread or the process, depending on the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">ifImpersonating</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the Windows identity for either the thread or the process, depending on the value of the <code>ifImpersonating</code> parameter."}],"pos":[60110,60335],"yaml":true},{"content":"If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.  If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.  If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.","nodes":[{"pos":[0,449],"content":"If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.  If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.  If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.","nodes":[{"content":"If <ph id=\"ph1\">`ifImpersonating`</ph> is <ph id=\"ph2\">`true`</ph> and the thread is not impersonating, the returned <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object has no value.","pos":[0,150],"source":"If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value."},{"content":"If <ph id=\"ph1\">`ifImpersonating`</ph> is <ph id=\"ph2\">`false`</ph> and the thread is impersonating, the <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> for the thread is returned.","pos":[152,297],"source":"  If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned."},{"content":"If <ph id=\"ph1\">`ifImpersonating`</ph> is <ph id=\"ph2\">`false`</ph> and the thread is not impersonating, the <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> for the process is returned.","pos":[299,449],"source":"  If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned."}]}],"pos":[60346,60796],"yaml":true,"extradata":"MT"},{"content":"`true` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> only if the thread is currently impersonating; `false` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the thread if it is impersonating or the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the process if the thread is not currently impersonating.","nodes":[{"pos":[0,383],"content":"<ph id=\"ph1\">`true`</ph> to return the <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> only if the thread is currently impersonating; <ph id=\"ph3\">`false`</ph> to return the <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> of the thread if it is impersonating or the <ph id=\"ph5\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> of the process if the thread is not currently impersonating.","source":"`true` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> only if the thread is currently impersonating; `false` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the thread if it is impersonating or the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the process if the thread is not currently impersonating."}],"pos":[60998,61384],"yaml":true},{"content":"An object that represents a Windows user.","nodes":[{"pos":[0,41],"content":"An object that represents a Windows user.","nodes":[{"content":"An object that represents a Windows user.","pos":[0,41]}]}],"pos":[61469,61511],"yaml":true},{"content":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user.","nodes":[{"pos":[0,121],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object that represents the current Windows user.","source":"Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user."}],"pos":[62807,62929],"yaml":true},{"content":"An object that represents the current user.","nodes":[{"pos":[0,43],"content":"An object that represents the current user.","nodes":[{"content":"An object that represents the current user.","pos":[0,43]}]}],"pos":[64110,64154],"yaml":true},{"content":"The caller does not have the correct permissions.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]}],"pos":[64346,64396],"yaml":true},{"content":"Gets the groups the current Windows user belongs to.","nodes":[{"pos":[0,52],"content":"Gets the groups the current Windows user belongs to.","nodes":[{"content":"Gets the groups the current Windows user belongs to.","pos":[0,52]}]}],"pos":[65581,65634],"yaml":true},{"content":"An object representing the groups the current Windows user belongs to.","nodes":[{"pos":[0,70],"content":"An object representing the groups the current Windows user belongs to.","nodes":[{"content":"An object representing the groups the current Windows user belongs to.","pos":[0,70]}]}],"pos":[66585,66656],"yaml":true},{"content":"Impersonates the user represented by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.","nodes":[{"pos":[0,111],"content":"Impersonates the user represented by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsIdentity\"&gt;&lt;/xref&gt;</ph> object.","source":"Impersonates the user represented by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object."}],"pos":[67916,68028],"yaml":true},{"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.","nodes":[{"pos":[0,93],"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.","nodes":[{"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.","pos":[0,93]}]}],"pos":[68039,68133],"yaml":true,"extradata":"MT"},{"content":"An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.","nodes":[{"pos":[0,125],"content":"An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.","nodes":[{"content":"An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.","pos":[0,125]}]}],"pos":[69013,69139],"yaml":true},{"content":"An anonymous identity attempted to perform an impersonation.","nodes":[{"pos":[0,60],"content":"An anonymous identity attempted to perform an impersonation.","nodes":[{"content":"An anonymous identity attempted to perform an impersonation.","pos":[0,60]}]}],"pos":[69330,69391],"yaml":true},{"content":"A Win32 error occurred.","nodes":[{"pos":[0,23],"content":"A Win32 error occurred.","nodes":[{"content":"A Win32 error occurred.","pos":[0,23]}]}],"pos":[69503,69527],"yaml":true},{"content":"Impersonates the user represented by the specified user token.","nodes":[{"pos":[0,62],"content":"Impersonates the user represented by the specified user token.","nodes":[{"content":"Impersonates the user represented by the specified user token.","pos":[0,62]}]}],"pos":[70675,70738],"yaml":true},{"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.  \n  \n> [!NOTE]\n>  Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function. If another user is currently being impersonated, control reverts to the original user.  \n  \n For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).","nodes":[{"pos":[0,93],"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.","nodes":[{"content":"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.","pos":[0,93]}]},{"pos":[101,411],"content":"[!NOTE]\n Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function. If another user is currently being impersonated, control reverts to the original user.","leadings":["","> "],"nodes":[{"content":" Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function. If another user is currently being impersonated, control reverts to the original user.","pos":[8,308],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29&gt;</ph> method with a <ph id=\"ph2\">`userToken`</ph> value of <ph id=\"ph3\">&lt;xref:System.IntPtr.Zero&gt;</ph> is equivalent to calling the Win32 <ph id=\"ph4\">`RevertToSelf`</ph> function.","pos":[1,213],"source":" Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function."},{"content":"If another user is currently being impersonated, control reverts to the original user.","pos":[214,300]}]}]},{"pos":[418,573],"content":"For more information about calls to unmanaged code, see <bpt id=\"p1\">[</bpt>Consuming Unmanaged DLL Functions<ept id=\"p1\">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.","source":"For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)."}],"pos":[70749,71330],"yaml":true,"extradata":"MT"},{"content":"The handle of a Windows account token. This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API `LogonUser` function.","nodes":[{"pos":[0,158],"content":"The handle of a Windows account token. This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API `LogonUser` function.","nodes":[{"content":"The handle of a Windows account token.","pos":[0,38]},{"content":"This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <ph id=\"ph1\">`LogonUser`</ph> function.","pos":[39,158],"source":" This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API `LogonUser` function."}]}],"pos":[72060,72219],"yaml":true},{"content":"An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.","nodes":[{"pos":[0,132],"content":"An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.","nodes":[{"content":"An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.","pos":[0,132]}]}],"pos":[72316,72449],"yaml":true},{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"pos":[0,65],"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","nodes":[{"content":"Windows returned the Windows NT status code STATUS_ACCESS_DENIED.","pos":[0,65]}]}],"pos":[72644,72710],"yaml":true},{"content":"There is insufficient memory available.","nodes":[{"pos":[0,39],"content":"There is insufficient memory available.","nodes":[{"content":"There is insufficient memory available.","pos":[0,39]}]}],"pos":[72810,72850],"yaml":true},{"content":"The caller does not have the correct permissions.","nodes":[{"pos":[0,49],"content":"The caller does not have the correct permissions.","nodes":[{"content":"The caller does not have the correct permissions.","pos":[0,49]}]}],"pos":[72962,73012],"yaml":true},{"content":"Gets the impersonation level for the user.","nodes":[{"pos":[0,42],"content":"Gets the impersonation level for the user.","nodes":[{"content":"Gets the impersonation level for the user.","pos":[0,42]}]}],"pos":[74173,74216],"yaml":true},{"content":"Describes the impersonation level to be used to connect to WMI.","nodes":[{"pos":[0,63],"content":"Describes the impersonation level to be used to connect to WMI.","nodes":[{"content":"Describes the impersonation level to be used to connect to WMI.","pos":[0,63]}]}],"pos":[74227,74291],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the impersonation level.","nodes":[{"pos":[0,69],"content":"One of the enumeration values that specifies the impersonation level.","nodes":[{"content":"One of the enumeration values that specifies the impersonation level.","pos":[0,69]}]}],"pos":[75288,75358],"yaml":true},{"content":"Gets a value that indicates whether the user account is identified as an anonymous account by the system.","nodes":[{"pos":[0,105],"content":"Gets a value that indicates whether the user account is identified as an anonymous account by the system.","nodes":[{"content":"Gets a value that indicates whether the user account is identified as an anonymous account by the system.","pos":[0,105]}]}],"pos":[76739,76845],"yaml":true},{"content":"The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.  \n  \n Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).","nodes":[{"pos":[0,244],"content":"The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method.","pos":[0,244],"source":"The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method."}]},{"pos":[251,417],"content":"Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).","nodes":[{"content":"Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).","pos":[0,166]}]}],"pos":[76856,77278],"yaml":true,"extradata":"MT"},{"content":"`true` if the user account is an anonymous account; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the user account is an anonymous account; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user account is an anonymous account; otherwise, `false`."}],"pos":[78344,78418],"yaml":true},{"content":"Gets a value indicating whether the user has been authenticated by Windows.","nodes":[{"pos":[0,75],"content":"Gets a value indicating whether the user has been authenticated by Windows.","nodes":[{"content":"Gets a value indicating whether the user has been authenticated by Windows.","pos":[0,75]}]}],"pos":[79741,79817],"yaml":true},{"content":"`true` if the user was authenticated; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the user was authenticated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user was authenticated; otherwise, `false`."}],"pos":[79944,80004],"yaml":true},{"content":"Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account by the system.","nodes":[{"pos":[0,162],"content":"Gets a value indicating whether the user account is identified as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsAccountType.Guest\"&gt;&lt;/xref&gt;</ph> account by the system.","source":"Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account by the system."}],"pos":[81283,81446],"yaml":true},{"content":"`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if the user account is a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsAccountType.Guest\"&gt;&lt;/xref&gt;</ph> account; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account; otherwise, `false`."}],"pos":[82590,82725],"yaml":true},{"content":"Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account by the system.","nodes":[{"pos":[0,163],"content":"Gets a value indicating whether the user account is identified as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsAccountType.System\"&gt;&lt;/xref&gt;</ph> account by the system.","source":"Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account by the system."}],"pos":[84002,84166],"yaml":true},{"content":"`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> if the user account is a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsAccountType.System\"&gt;&lt;/xref&gt;</ph> account; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account; otherwise, `false`."}],"pos":[85313,85449],"yaml":true},{"content":"Gets the user's Windows logon name.","nodes":[{"pos":[0,35],"content":"Gets the user's Windows logon name.","nodes":[{"content":"Gets the user's Windows logon name.","pos":[0,35]}]}],"pos":[86703,86739],"yaml":true},{"content":"The logon name is in the form DOMAIN\\USERNAME.","nodes":[{"pos":[0,46],"content":"The logon name is in the form DOMAIN\\USERNAME.","nodes":[{"content":"The logon name is in the form DOMAIN\\USERNAME.","pos":[0,46]}]}],"pos":[86750,86797],"yaml":true,"extradata":"MT"},{"content":"The Windows logon name of the user on whose behalf the code is being run.","nodes":[{"pos":[0,73],"content":"The Windows logon name of the user on whose behalf the code is being run.","nodes":[{"content":"The Windows logon name of the user on whose behalf the code is being run.","pos":[0,73]}]}],"pos":[87801,87875],"yaml":true},{"content":"Gets the security identifier (SID) for the token owner.","nodes":[{"pos":[0,55],"content":"Gets the security identifier (SID) for the token owner.","nodes":[{"content":"Gets the security identifier (SID) for the token owner.","pos":[0,55]}]}],"pos":[89131,89187],"yaml":true},{"content":"The SID uniquely identifies a user or group on all Windows NT implementations.  The returned SID identifies the default owner SID that will be applied to newly created objects.","nodes":[{"pos":[0,176],"content":"The SID uniquely identifies a user or group on all Windows NT implementations.  The returned SID identifies the default owner SID that will be applied to newly created objects.","nodes":[{"content":"The SID uniquely identifies a user or group on all Windows NT implementations.  The returned SID identifies the default owner SID that will be applied to newly created objects.","pos":[0,176],"nodes":[{"content":"The SID uniquely identifies a user or group on all Windows NT implementations.","pos":[0,78]},{"content":"The returned SID identifies the default owner SID that will be applied to newly created objects.","pos":[80,176]}]}]}],"pos":[89198,89375],"yaml":true,"extradata":"MT"},{"content":"An object for the token owner.","nodes":[{"pos":[0,30],"content":"An object for the token owner.","nodes":[{"content":"An object for the token owner.","pos":[0,30]}]}],"pos":[90335,90366],"yaml":true},{"content":"Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.","nodes":[{"pos":[0,420],"content":"Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.","nodes":[{"content":"Runs the specified action as the impersonated Windows identity.","pos":[0,63]},{"content":"Instead of using an impersonated method call and running your function in <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsImpersonationContext\"&gt;&lt;/xref&gt;</ph>, you can use <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"&gt;&lt;/xref&gt;</ph> and provide your function directly as a parameter.","pos":[64,420],"source":" Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter."}]}],"pos":[92044,92465],"yaml":true},{"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","nodes":[{"pos":[0,63],"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","nodes":[{"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","pos":[0,63]}]}],"pos":[96238,96302],"yaml":true},{"content":"The System.Action to run.","nodes":[{"pos":[0,25],"content":"The System.Action to run.","nodes":[{"content":"The System.Action to run.","pos":[0,25]}]}],"pos":[96364,96390],"yaml":true},{"content":"Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.","nodes":[{"pos":[0,422],"content":"Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.","nodes":[{"content":"Runs the specified function as the impersonated Windows identity.","pos":[0,65]},{"content":"Instead of using an impersonated method call and running your function in <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsImpersonationContext\"&gt;&lt;/xref&gt;</ph>, you can use <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"&gt;&lt;/xref&gt;</ph> and provide your function directly as a parameter.","pos":[66,422],"source":" Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter."}]}],"pos":[97916,98339],"yaml":true},{"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","nodes":[{"pos":[0,63],"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","nodes":[{"content":"The SafeAccessTokenHandle of the impersonated Windows identity.","pos":[0,63]}]}],"pos":[102111,102175],"yaml":true},{"content":"The System.Func to run.","nodes":[{"pos":[0,23],"content":"The System.Func to run.","nodes":[{"content":"The System.Func to run.","pos":[0,23]}]}],"pos":[102236,102260],"yaml":true},{"content":"The type of object used by and returned by the function.","nodes":[{"pos":[0,56],"content":"The type of object used by and returned by the function.","nodes":[{"content":"The type of object used by and returned by the function.","pos":[0,56]}]}],"pos":[102311,102368],"yaml":true},{"content":"Returns the result of the function.","nodes":[{"pos":[0,35],"content":"Returns the result of the function.","nodes":[{"content":"Returns the result of the function.","pos":[0,35]}]}],"pos":[102413,102449],"yaml":true},{"content":"Gets the Windows account token for the user.","nodes":[{"pos":[0,44],"content":"Gets the Windows account token for the user.","nodes":[{"content":"Gets the Windows account token for the user.","pos":[0,44]}]}],"pos":[103602,103647],"yaml":true},{"content":"Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property. The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.  \n  \n> [!NOTE]\n>  The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework. This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object. `userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.","nodes":[{"pos":[0,375],"content":"Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property. The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.","nodes":[{"content":"Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property. The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.","pos":[0,375],"nodes":[{"content":"Do not explicitly release the account token that is returned by the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph> property.","pos":[0,135],"source":"Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property."},{"content":"The token is released by the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> method, which you can call in code.","pos":[136,260],"source":" The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Dispose%2A&gt;</ph> is also automatically called by the garbage collector.","pos":[261,375],"source":" <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector."}]}]},{"pos":[383,972],"content":"[!NOTE]\n The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework. This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object. `userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.","leadings":["","> "],"nodes":[{"content":" The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework. This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object. `userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.","pos":[8,587],"nodes":[{"content":"The account token that is returned by the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity.Token%2A&gt;</ph> property is a duplicate of the Windows token that is used to create the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object and is automatically released by the .NET Framework.","pos":[1,281],"source":" The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework."},{"content":"This is different from the account token (the <ph id=\"ph1\">`userToken`</ph> parameter for the constructor), which is used to create the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object.","pos":[282,456],"source":" This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object."},{"content":"<ph id=\"ph1\">`userToken`</ph> is a Windows account token that is created by a call to <ph id=\"ph2\">`LogonUser`</ph> and must be closed to avoid a memory leak.","pos":[457,579],"source":"`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak."}]}]}],"pos":[103658,104636],"yaml":true,"extradata":"MT"},{"content":"The handle of the access token associated with the current execution thread.","nodes":[{"pos":[0,76],"content":"The handle of the access token associated with the current execution thread.","nodes":[{"content":"The handle of the access token associated with the current execution thread.","pos":[0,76]}]}],"pos":[105659,105736],"yaml":true},{"content":"Gets the security identifier (SID) for the user.","nodes":[{"pos":[0,48],"content":"Gets the security identifier (SID) for the user.","nodes":[{"content":"Gets the security identifier (SID) for the user.","pos":[0,48]}]}],"pos":[106923,106972],"yaml":true},{"content":"The SID uniquely identifies a user or group on all Windows NT implementations.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user. This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.","nodes":[{"pos":[0,78],"content":"The SID uniquely identifies a user or group on all Windows NT implementations.","nodes":[{"content":"The SID uniquely identifies a user or group on all Windows NT implementations.","pos":[0,78]}]},{"pos":[86,567],"content":"[!NOTE]\n The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user. This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user. This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.","pos":[8,479],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method is not the same as the Windows anonymous user.","pos":[1,195],"source":" The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user."},{"content":"This property gets <ph id=\"ph1\">`null`</ph> for an anonymous user represented by the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object returned by the <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A&gt;</ph> method; it does not get the SID representing an anonymous Windows user.","pos":[196,471],"source":" This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user."}]}]}],"pos":[106983,107556],"yaml":true,"extradata":"MT"},{"content":"An object for the user.","nodes":[{"pos":[0,23],"content":"An object for the user.","nodes":[{"content":"An object for the user.","pos":[0,23]}]}],"pos":[107800,107824],"yaml":true},{"content":"Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key.","nodes":[{"pos":[0,111],"content":"Gets claims that have the <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"&gt;&lt;/xref&gt;</ph> property key.","source":"Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key."}],"pos":[109147,109259],"yaml":true},{"content":"A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key.","nodes":[{"pos":[0,122],"content":"A collection of claims that have the <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"&gt;&lt;/xref&gt;</ph> property key.","source":"A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key."}],"pos":[109498,109621],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.","nodes":[{"pos":[0,170],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface and is called back by the deserialization event when deserialization is complete.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete."}],"pos":[111053,111224],"yaml":true},{"content":"The source of the deserialization event.","nodes":[{"pos":[0,40],"content":"The source of the deserialization event.","nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]}],"pos":[111390,111431],"yaml":true},{"content":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the logical context information needed to recreate an instance of this execution context.","nodes":[{"pos":[0,178],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the logical context information needed to recreate an instance of this execution context.","source":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the logical context information needed to recreate an instance of this execution context."}],"pos":[113314,113493],"yaml":true},{"content":"This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information. During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  \n  \n For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.","nodes":[{"pos":[0,277],"content":"This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information. During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.","nodes":[{"content":"This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information. During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.","pos":[0,277],"nodes":[{"content":"This method sets a <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with the logical call context information.","pos":[0,115],"source":"This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information."},{"content":"During deserialization, the execution context object is reconstituted from the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.","pos":[116,277],"source":" During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream."}]}]},{"pos":[284,364],"content":"For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.","pos":[0,80],"source":"For more information, see <xref:System.Runtime.Serialization.SerializationInfo>."}]}],"pos":[113504,113873],"yaml":true,"extradata":"MT"},{"content":"An object containing the information required to serialize the <xref href=\"System.Collections.Hashtable\"></xref>.","nodes":[{"pos":[0,113],"content":"An object containing the information required to serialize the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;&lt;/xref&gt;</ph>.","source":"An object containing the information required to serialize the <xref href=\"System.Collections.Hashtable\"></xref>."}],"pos":[114148,114262],"yaml":true},{"content":"An object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Hashtable\"></xref>.","nodes":[{"pos":[0,143],"content":"An object containing the source and destination of the serialized stream associated with the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;&lt;/xref&gt;</ph>.","source":"An object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Hashtable\"></xref>."}],"pos":[114357,114501],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.WindowsIdentity\n  commentId: T:System.Security.Principal.WindowsIdentity\n  id: WindowsIdentity\n  children:\n  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.String)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)\n  - System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)\n  - System.Security.Principal.WindowsIdentity.AccessToken\n  - System.Security.Principal.WindowsIdentity.AuthenticationType\n  - System.Security.Principal.WindowsIdentity.Claims\n  - System.Security.Principal.WindowsIdentity.Clone\n  - System.Security.Principal.WindowsIdentity.DefaultIssuer\n  - System.Security.Principal.WindowsIdentity.DeviceClaims\n  - System.Security.Principal.WindowsIdentity.Dispose\n  - System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)\n  - System.Security.Principal.WindowsIdentity.GetAnonymous\n  - System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)\n  - System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)\n  - System.Security.Principal.WindowsIdentity.GetCurrent\n  - System.Security.Principal.WindowsIdentity.Groups\n  - System.Security.Principal.WindowsIdentity.Impersonate\n  - System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)\n  - System.Security.Principal.WindowsIdentity.ImpersonationLevel\n  - System.Security.Principal.WindowsIdentity.IsAnonymous\n  - System.Security.Principal.WindowsIdentity.IsAuthenticated\n  - System.Security.Principal.WindowsIdentity.IsGuest\n  - System.Security.Principal.WindowsIdentity.IsSystem\n  - System.Security.Principal.WindowsIdentity.Name\n  - System.Security.Principal.WindowsIdentity.Owner\n  - System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\n  - System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})\n  - System.Security.Principal.WindowsIdentity.Token\n  - System.Security.Principal.WindowsIdentity.User\n  - System.Security.Principal.WindowsIdentity.UserClaims\n  - System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: WindowsIdentity\n  nameWithType: WindowsIdentity\n  fullName: System.Security.Principal.WindowsIdentity\n  type: Class\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Represents a Windows user.\n  remarks: \"Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.  For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.Security.Claims.ClaimsIdentity\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Claims.ClaimsIdentity.Actor\n  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.BootstrapContext\n  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  - System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n  - System.Security.Claims.ClaimsIdentity.Label\n  - System.Security.Claims.ClaimsIdentity.NameClaimType\n  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.RoleClaimType\n  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(IntPtr)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr)\n  type: Constructor\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  \\n|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  \\n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \\n  \\n> [!NOTE]\\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).\"\n  syntax:\n    content: public WindowsIdentity (IntPtr userToken);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The account token for the user on whose behalf the code is running.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>userToken</code> is 0.  \\n  \\n -or-  \\n  \\n <code>userToken</code> is duplicated and invalid for impersonation.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n A Win32 error occurred.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)\n  id: '#ctor(System.Security.Principal.WindowsIdentity)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(WindowsIdentity)\n  nameWithType: WindowsIdentity.WindowsIdentity(WindowsIdentity)\n  fullName: WindowsIdentity.WindowsIdentity(WindowsIdentity)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class by using the specified <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.\n  syntax:\n    content: protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.WindowsIdentity\n      description: The object from which to construct the new instance of <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(String)\n  nameWithType: WindowsIdentity.WindowsIdentity(String)\n  fullName: WindowsIdentity.WindowsIdentity(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN).\n  remarks: \"A UPN has the format *username*@*domainname*.com, in other words, an email address. The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  \\n  \\n> [!NOTE]\\n>  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.\"\n  syntax:\n    content: public WindowsIdentity (string sUserPrincipalName);\n    parameters:\n    - id: sUserPrincipalName\n      type: System.String\n      description: The UPN for the user on whose behalf the code is running.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Windows returned the Windows NT status code STATUS_ACCESS_DENIED.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory available.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n The computer is not attached to a Windows 2003 or later domain.  \\n  \\n -or-  \\n  \\n The computer is not running Windows 2003 or later.  \\n  \\n -or-  \\n  \\n The user is not a member of the domain the computer is attached to.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)\n  id: '#ctor(System.IntPtr,System.String)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(IntPtr, String)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String)\n  type: Constructor\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token and the specified authentication type.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  \\n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \\n  \\n The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \\n  \\n> [!NOTE]\\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]\"\n  syntax:\n    content: public WindowsIdentity (IntPtr userToken, string type);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The account token for the user on whose behalf the code is running.\n    - id: type\n      type: System.String\n      description: (Informational use only.) The type of authentication used to identify the user.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>userToken</code> is 0.  \\n  \\n -or-  \\n  \\n <code>userToken</code> is duplicated and invalid for impersonation.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n A Win32 error occurred.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(SerializationInfo, StreamingContext)\n  nameWithType: WindowsIdentity.WindowsIdentity(SerializationInfo, StreamingContext)\n  fullName: WindowsIdentity.WindowsIdentity(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by information in a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> stream.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\n  syntax:\n    content: public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object containing the account information for the user.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: An object that indicates the stream characteristics.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: A <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> cannot be serialized across processes.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n A Win32 error occurred.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(String, String)\n  nameWithType: WindowsIdentity.WindowsIdentity(String, String)\n  fullName: WindowsIdentity.WindowsIdentity(String, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.\n  remarks: \"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \\n  \\n The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  \\n  \\n> [!NOTE]\\n>  This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.\"\n  syntax:\n    content: public WindowsIdentity (string sUserPrincipalName, string type);\n    parameters:\n    - id: sUserPrincipalName\n      type: System.String\n      description: The UPN for the user on whose behalf the code is running.\n    - id: type\n      type: System.String\n      description: (Informational use only.) The type of authentication used to identify the user.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Windows returned the Windows NT status code STATUS_ACCESS_DENIED.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory available.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n The computer is not attached to a Windows 2003 or later domain.  \\n  \\n -or-  \\n  \\n The computer is not running Windows 2003 or later.  \\n  \\n -or-  \\n  \\n The user is not a member of the domain the computer is attached to.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)\n  id: '#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(IntPtr, String, WindowsAccountType)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  \\n  \\n The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \\n  \\n> [!NOTE]\\n>  You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]\"\n  syntax:\n    content: public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The account token for the user on whose behalf the code is running.\n    - id: type\n      type: System.String\n      description: (Informational use only.) The type of authentication used to identify the user.\n    - id: acctType\n      type: System.Security.Principal.WindowsAccountType\n      description: One of the enumeration values.\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>userToken</code> is 0.  \\n  \\n -or-  \\n  \\n <code>userToken</code> is duplicated and invalid for impersonation.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n A Win32 error occurred.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)\n  commentId: M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)\n  id: '#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)'\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.\n  remarks: \"The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter. If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  \\n  \\n You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function. Always release `userToken` by calling the Win32 API `CloseHandle` function. For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]\"\n  syntax:\n    content: public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The account token for the user on whose behalf the code is running.\n    - id: type\n      type: System.String\n      description: (Informational use only.) The type of authentication used to identify the user.\n    - id: acctType\n      type: System.Security.Principal.WindowsAccountType\n      description: One of the enumeration values.\n    - id: isAuthenticated\n      type: System.Boolean\n      description: '`true` to indicate that the user is authenticated; otherwise, `false`.'\n  overload: System.Security.Principal.WindowsIdentity.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>userToken</code> is 0.  \\n  \\n -or-  \\n  \\n <code>userToken</code> is duplicated and invalid for impersonation.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n A Win32 error occurred.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.AccessToken\n  commentId: P:System.Security.Principal.WindowsIdentity.AccessToken\n  id: AccessToken\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: AccessToken\n  nameWithType: WindowsIdentity.AccessToken\n  fullName: WindowsIdentity.AccessToken\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets this <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref> for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> instance.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n      description: Returns a <xref href=\"Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\"></xref>.\n  overload: System.Security.Principal.WindowsIdentity.AccessToken*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.AuthenticationType\n  commentId: P:System.Security.Principal.WindowsIdentity.AuthenticationType\n  id: AuthenticationType\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: AuthenticationType\n  nameWithType: WindowsIdentity.AuthenticationType\n  fullName: WindowsIdentity.AuthenticationType\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the type of authentication used to identify the user.\n  remarks: This property is informational; it is not used by the security system. On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy. The default property value for earlier versions of the Windows operating system is `Kerberos`.\n  syntax:\n    content: public override sealed string AuthenticationType { get; }\n    return:\n      type: System.String\n      description: The type of authentication used to identify the user.\n  overload: System.Security.Principal.WindowsIdentity.AuthenticationType*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Windows returned the Windows NT status code STATUS_ACCESS_DENIED.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory available.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"The caller does not have the correct permissions.  \\n  \\n -or-  \\n  \\n The computer is not attached to a Windows 2003 or later domain.  \\n  \\n -or-  \\n  \\n The computer is not running Windows 2003 or later.  \\n  \\n -or-  \\n  \\n The user is not a member of the domain the computer is attached to.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Claims\n  commentId: P:System.Security.Principal.WindowsIdentity.Claims\n  id: Claims\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Claims\n  nameWithType: WindowsIdentity.Claims\n  fullName: WindowsIdentity.Claims\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets all claims for the user represented by this Windows identity.\n  syntax:\n    content: >-\n      [get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/<get_Claims>d__95))]\n\n      public override System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n      description: A collection of claims for this <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.\n  overload: System.Security.Principal.WindowsIdentity.Claims*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Runtime.CompilerServices.IteratorStateMachine'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Clone\n  commentId: M:System.Security.Principal.WindowsIdentity.Clone\n  id: Clone\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: WindowsIdentity.Clone()\n  fullName: WindowsIdentity.Clone()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Creates a new  object that is a copy of the current instance.\n  syntax:\n    content: public override System.Security.Claims.ClaimsIdentity Clone ();\n    parameters: []\n    return:\n      type: System.Security.Claims.ClaimsIdentity\n      description: A copy of the current instance.\n  overload: System.Security.Principal.WindowsIdentity.Clone*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.DefaultIssuer\n  commentId: F:System.Security.Principal.WindowsIdentity.DefaultIssuer\n  id: DefaultIssuer\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: DefaultIssuer\n  nameWithType: WindowsIdentity.DefaultIssuer\n  fullName: WindowsIdentity.DefaultIssuer\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Identifies the name of the default <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> issuer.\n  syntax:\n    content: public const string DefaultIssuer;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.DeviceClaims\n  commentId: P:System.Security.Principal.WindowsIdentity.DeviceClaims\n  id: DeviceClaims\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: DeviceClaims\n  nameWithType: WindowsIdentity.DeviceClaims\n  fullName: WindowsIdentity.DeviceClaims\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> DeviceClaims { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n      description: A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsDeviceClaim\"></xref> property key.\n  overload: System.Security.Principal.WindowsIdentity.DeviceClaims*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Dispose\n  commentId: M:System.Security.Principal.WindowsIdentity.Dispose\n  id: Dispose\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: WindowsIdentity.Dispose()\n  fullName: WindowsIdentity.Dispose()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Releases all resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref>.\n  remarks: \"Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>. The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state. After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public void Dispose ();\n    parameters: []\n  overload: System.Security.Principal.WindowsIdentity.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)\n  commentId: M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: WindowsIdentity.Dispose(Boolean)\n  fullName: WindowsIdentity.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.Principal.WindowsIdentity.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.GetAnonymous\n  commentId: M:System.Security.Principal.WindowsIdentity.GetAnonymous\n  id: GetAnonymous\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: GetAnonymous()\n  nameWithType: WindowsIdentity.GetAnonymous()\n  fullName: WindowsIdentity.GetAnonymous()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.\n  remarks: \"This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous. The property value does not correspond to a Windows anonymous user and cannot be used for impersonation. Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.  \\n  \\n You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>. However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method. To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]\"\n  syntax:\n    content: public static System.Security.Principal.WindowsIdentity GetAnonymous ();\n    parameters: []\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: An object that represents an anonymous user.\n  overload: System.Security.Principal.WindowsIdentity.GetAnonymous*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)\n  commentId: M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)\n  id: GetCurrent(System.Security.Principal.TokenAccessLevels)\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: GetCurrent(TokenAccessLevels)\n  nameWithType: WindowsIdentity.GetCurrent(TokenAccessLevels)\n  fullName: WindowsIdentity.GetCurrent(TokenAccessLevels)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user, using the specified desired token access level.\n  remarks: The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.\n  syntax:\n    content: public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);\n    parameters:\n    - id: desiredAccess\n      type: System.Security.Principal.TokenAccessLevels\n      description: A bitwise combination of the enumeration values.\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: An object that represents the current user.\n  overload: System.Security.Principal.WindowsIdentity.GetCurrent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)\n  commentId: M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)\n  id: GetCurrent(System.Boolean)\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: GetCurrent(Boolean)\n  nameWithType: WindowsIdentity.GetCurrent(Boolean)\n  fullName: WindowsIdentity.GetCurrent(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the Windows identity for either the thread or the process, depending on the value of the <code>ifImpersonating</code> parameter.\n  remarks: If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.  If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.  If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.\n  syntax:\n    content: public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);\n    parameters:\n    - id: ifImpersonating\n      type: System.Boolean\n      description: '`true` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> only if the thread is currently impersonating; `false` to return the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the thread if it is impersonating or the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> of the process if the thread is not currently impersonating.'\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: An object that represents a Windows user.\n  overload: System.Security.Principal.WindowsIdentity.GetCurrent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent\n  commentId: M:System.Security.Principal.WindowsIdentity.GetCurrent\n  id: GetCurrent\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: GetCurrent()\n  nameWithType: WindowsIdentity.GetCurrent()\n  fullName: WindowsIdentity.GetCurrent()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object that represents the current Windows user.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]\"\n  syntax:\n    content: public static System.Security.Principal.WindowsIdentity GetCurrent ();\n    parameters: []\n    return:\n      type: System.Security.Principal.WindowsIdentity\n      description: An object that represents the current user.\n  overload: System.Security.Principal.WindowsIdentity.GetCurrent*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the correct permissions.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Groups\n  commentId: P:System.Security.Principal.WindowsIdentity.Groups\n  id: Groups\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Groups\n  nameWithType: WindowsIdentity.Groups\n  fullName: WindowsIdentity.Groups\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the groups the current Windows user belongs to.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.  This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]\"\n  syntax:\n    content: public System.Security.Principal.IdentityReferenceCollection Groups { get; }\n    return:\n      type: System.Security.Principal.IdentityReferenceCollection\n      description: An object representing the groups the current Windows user belongs to.\n  overload: System.Security.Principal.WindowsIdentity.Groups*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Impersonate\n  commentId: M:System.Security.Principal.WindowsIdentity.Impersonate\n  id: Impersonate\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Impersonate()\n  nameWithType: WindowsIdentity.Impersonate()\n  fullName: WindowsIdentity.Impersonate()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Impersonates the user represented by the <xref href=\"System.Security.Principal.WindowsIdentity\"></xref> object.\n  remarks: On Windows NT platforms, the current user must have sufficient rights to allow impersonation.\n  example:\n  - \"The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.  \\n  \\n [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]\\n [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]\\n [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();\n    parameters: []\n    return:\n      type: System.Security.Principal.WindowsImpersonationContext\n      description: An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.\n  overload: System.Security.Principal.WindowsIdentity.Impersonate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An anonymous identity attempted to perform an impersonation.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A Win32 error occurred.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)\n  commentId: M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)\n  id: Impersonate(System.IntPtr)\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Impersonate(IntPtr)\n  nameWithType: WindowsIdentity.Impersonate(IntPtr)\n  fullName: WindowsIdentity.Impersonate(IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Impersonates the user represented by the specified user token.\n  remarks: \"On Windows NT platforms, the current user must have sufficient rights to allow impersonation.  \\n  \\n> [!NOTE]\\n>  Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function. If another user is currently being impersonated, control reverts to the original user.  \\n  \\n For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).\"\n  example:\n  - \"The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.  \\n  \\n [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]\\n [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]\"\n  syntax:\n    content: public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);\n    parameters:\n    - id: userToken\n      type: System.IntPtr\n      description: The handle of a Windows account token. This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API `LogonUser` function.\n    return:\n      type: System.Security.Principal.WindowsImpersonationContext\n      description: An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.\n  overload: System.Security.Principal.WindowsIdentity.Impersonate*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Windows returned the Windows NT status code STATUS_ACCESS_DENIED.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory available.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the correct permissions.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel\n  commentId: P:System.Security.Principal.WindowsIdentity.ImpersonationLevel\n  id: ImpersonationLevel\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: ImpersonationLevel\n  nameWithType: WindowsIdentity.ImpersonationLevel\n  fullName: WindowsIdentity.ImpersonationLevel\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the impersonation level for the user.\n  remarks: Describes the impersonation level to be used to connect to WMI.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the enumeration values that specifies the impersonation level.\n  overload: System.Security.Principal.WindowsIdentity.ImpersonationLevel*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.IsAnonymous\n  commentId: P:System.Security.Principal.WindowsIdentity.IsAnonymous\n  id: IsAnonymous\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: IsAnonymous\n  nameWithType: WindowsIdentity.IsAnonymous\n  fullName: WindowsIdentity.IsAnonymous\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets a value that indicates whether the user account is identified as an anonymous account by the system.\n  remarks: \"The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.  \\n  \\n Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]\"\n  syntax:\n    content: public virtual bool IsAnonymous { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user account is an anonymous account; otherwise, `false`.'\n  overload: System.Security.Principal.WindowsIdentity.IsAnonymous*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated\n  commentId: P:System.Security.Principal.WindowsIdentity.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: IsAuthenticated\n  nameWithType: WindowsIdentity.IsAuthenticated\n  fullName: WindowsIdentity.IsAuthenticated\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets a value indicating whether the user has been authenticated by Windows.\n  syntax:\n    content: public override bool IsAuthenticated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user was authenticated; otherwise, `false`.'\n  overload: System.Security.Principal.WindowsIdentity.IsAuthenticated*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.IsGuest\n  commentId: P:System.Security.Principal.WindowsIdentity.IsGuest\n  id: IsGuest\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: IsGuest\n  nameWithType: WindowsIdentity.IsGuest\n  fullName: WindowsIdentity.IsGuest\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account by the system.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]\"\n  syntax:\n    content: public virtual bool IsGuest { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.Guest\"></xref> account; otherwise, `false`.'\n  overload: System.Security.Principal.WindowsIdentity.IsGuest*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.IsSystem\n  commentId: P:System.Security.Principal.WindowsIdentity.IsSystem\n  id: IsSystem\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: IsSystem\n  nameWithType: WindowsIdentity.IsSystem\n  fullName: WindowsIdentity.IsSystem\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets a value indicating whether the user account is identified as a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account by the system.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]\"\n  syntax:\n    content: public virtual bool IsSystem { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user account is a <xref href=\"System.Security.Principal.WindowsAccountType.System\"></xref> account; otherwise, `false`.'\n  overload: System.Security.Principal.WindowsIdentity.IsSystem*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Name\n  commentId: P:System.Security.Principal.WindowsIdentity.Name\n  id: Name\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Name\n  nameWithType: WindowsIdentity.Name\n  fullName: WindowsIdentity.Name\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the user's Windows logon name.\n  remarks: The logon name is in the form DOMAIN\\USERNAME.\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: The Windows logon name of the user on whose behalf the code is being run.\n  overload: System.Security.Principal.WindowsIdentity.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Owner\n  commentId: P:System.Security.Principal.WindowsIdentity.Owner\n  id: Owner\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: WindowsIdentity.Owner\n  fullName: WindowsIdentity.Owner\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the security identifier (SID) for the token owner.\n  remarks: The SID uniquely identifies a user or group on all Windows NT implementations.  The returned SID identifies the default owner SID that will be applied to newly created objects.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.  This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class  \\n  \\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Security.Principal.SecurityIdentifier Owner { get; }\n    return:\n      type: System.Security.Principal.SecurityIdentifier\n      description: An object for the token owner.\n  overload: System.Security.Principal.WindowsIdentity.Owner*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\n  commentId: M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\n  id: RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: RunImpersonated(SafeAccessTokenHandle, Action)\n  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle, Action)\n  fullName: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle, Action)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.  \\n  \\n> [!WARNING]\\n>  This sample asks the user to enter a password on the console screen. The password will be visible on the screen, because the console window does not support masked input natively.  \\n  \\n```csharp  \\n// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   \\n// IMPORTANT NOTE:   \\n// This sample asks the user to enter a password on the console screen.   \\n// The password will be visible on the screen, because the console window   \\n// does not support masked input natively.  \\n  \\nusing System;  \\nusing System.Runtime.InteropServices;  \\nusing System.Security;  \\nusing System.Security.Principal;  \\nusing Microsoft.Win32.SafeHandles;  \\n  \\npublic class ImpersonationDemo  \\n{  \\n    [DllImport(\\\"advapi32.dll\\\", SetLastError = true, CharSet = CharSet.Unicode)]  \\n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  \\n        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  \\n  \\n    public static void Main()  \\n    {  \\n        // Get the user token for the specified user, domain, and password using the   \\n        // unmanaged LogonUser method.   \\n        // The local machine name can be used for the domain name to impersonate a user on this machine.  \\n        Console.Write(\\\"Enter the name of the domain on which to log on: \\\");  \\n        string domainName = Console.ReadLine();  \\n  \\n        Console.Write(\\\"Enter the login of a user on {0} that you wish to impersonate: \\\", domainName);  \\n        string userName = Console.ReadLine();  \\n  \\n        Console.Write(\\\"Enter the password for {0}: \\\", userName);  \\n  \\n        const int LOGON32_PROVIDER_DEFAULT = 0;  \\n        //This parameter causes LogonUser to create a primary token.   \\n        const int LOGON32_LOGON_INTERACTIVE = 2;  \\n  \\n        // Call LogonUser to obtain a handle to an access token.   \\n        SafeAccessTokenHandle safeAccessTokenHandle;  \\n        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  \\n            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  \\n            out safeAccessTokenHandle);  \\n  \\n        if (false == returnValue)  \\n        {  \\n            int ret = Marshal.GetLastWin32Error();  \\n            Console.WriteLine(\\\"LogonUser failed with error code : {0}\\\", ret);  \\n            throw new System.ComponentModel.Win32Exception(ret);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Did LogonUser Succeed? \\\" + (returnValue ? \\\"Yes\\\" : \\\"No\\\"));  \\n        // Check the identity.  \\n        Console.WriteLine(\\\"Before impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n  \\n        // Note: if you want to run as unimpersonated, pass  \\n        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  \\n        WindowsIdentity.RunImpersonated(  \\n            safeAccessTokenHandle,  \\n            // User action  \\n            () =>  \\n            {  \\n                // Check the identity.  \\n                Console.WriteLine(\\\"During impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n            }  \\n            );  \\n  \\n        // Check the identity again.  \\n        Console.WriteLine(\\\"After impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);\n    parameters:\n    - id: safeAccessTokenHandle\n      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n      description: The SafeAccessTokenHandle of the impersonated Windows identity.\n    - id: action\n      type: System.Action\n      description: The System.Action to run.\n  overload: System.Security.Principal.WindowsIdentity.RunImpersonated*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})\n  commentId: M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})\n  id: RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n  nameWithType: WindowsIdentity.RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n  fullName: WindowsIdentity.RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>, you can use <xref href=\"System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\"></xref> and provide your function directly as a parameter.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.  \\n  \\n> [!WARNING]\\n>  This sample asks the user to enter a password on the console screen. The password will be visible on the screen, because the console window does not support masked input natively.  \\n  \\n```csharp  \\n// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   \\n// IMPORTANT NOTE:   \\n// This sample asks the user to enter a password on the console screen.   \\n// The password will be visible on the screen, because the console window   \\n// does not support masked input natively.  \\n  \\nusing System;  \\nusing System.Runtime.InteropServices;  \\nusing System.Security;  \\nusing System.Security.Principal;  \\nusing Microsoft.Win32.SafeHandles;  \\n  \\npublic class ImpersonationDemo  \\n{  \\n    [DllImport(\\\"advapi32.dll\\\", SetLastError = true, CharSet = CharSet.Unicode)]  \\n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  \\n        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  \\n  \\n    public static void Main()  \\n    {  \\n        // Get the user token for the specified user, domain, and password using the   \\n        // unmanaged LogonUser method.   \\n        // The local machine name can be used for the domain name to impersonate a user on this machine.  \\n        Console.Write(\\\"Enter the name of the domain on which to log on: \\\");  \\n        string domainName = Console.ReadLine();  \\n  \\n        Console.Write(\\\"Enter the login of a user on {0} that you wish to impersonate: \\\", domainName);  \\n        string userName = Console.ReadLine();  \\n  \\n        Console.Write(\\\"Enter the password for {0}: \\\", userName);  \\n  \\n        const int LOGON32_PROVIDER_DEFAULT = 0;  \\n        //This parameter causes LogonUser to create a primary token.   \\n        const int LOGON32_LOGON_INTERACTIVE = 2;  \\n  \\n        // Call LogonUser to obtain a handle to an access token.   \\n        SafeAccessTokenHandle safeAccessTokenHandle;  \\n        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  \\n            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  \\n            out safeAccessTokenHandle);  \\n  \\n        if (false == returnValue)  \\n        {  \\n            int ret = Marshal.GetLastWin32Error();  \\n            Console.WriteLine(\\\"LogonUser failed with error code : {0}\\\", ret);  \\n            throw new System.ComponentModel.Win32Exception(ret);  \\n        }  \\n  \\n        Console.WriteLine(\\\"Did LogonUser Succeed? \\\" + (returnValue ? \\\"Yes\\\" : \\\"No\\\"));  \\n        // Check the identity.  \\n        Console.WriteLine(\\\"Before impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n  \\n        // Note: if you want to run as unimpersonated, pass  \\n        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  \\n        WindowsIdentity.RunImpersonated(  \\n            safeAccessTokenHandle,  \\n            // User action  \\n            () =>  \\n            {  \\n                // Check the identity.  \\n                Console.WriteLine(\\\"During impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n            }  \\n            );  \\n  \\n        // Check the identity again.  \\n        Console.WriteLine(\\\"After impersonation: \\\" + WindowsIdentity.GetCurrent().Name);  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public static T RunImpersonated<T> (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func<T> func);\n    parameters:\n    - id: safeAccessTokenHandle\n      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n      description: The SafeAccessTokenHandle of the impersonated Windows identity.\n    - id: func\n      type: System.Func{T}\n      description: The System.Func to run.\n    typeParameters:\n    - id: T\n      description: The type of object used by and returned by the function.\n    return:\n      type: T\n      description: Returns the result of the function.\n  overload: System.Security.Principal.WindowsIdentity.RunImpersonated``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.Token\n  commentId: P:System.Security.Principal.WindowsIdentity.Token\n  id: Token\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: Token\n  nameWithType: WindowsIdentity.Token\n  fullName: WindowsIdentity.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: Gets the Windows account token for the user.\n  remarks: \"Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property. The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.  \\n  \\n> [!NOTE]\\n>  The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework. This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object. `userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user. This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]\\n [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]\\n [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]\"\n  syntax:\n    content: public virtual IntPtr Token { get; }\n    return:\n      type: System.IntPtr\n      description: The handle of the access token associated with the current execution thread.\n  overload: System.Security.Principal.WindowsIdentity.Token*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.User\n  commentId: P:System.Security.Principal.WindowsIdentity.User\n  id: User\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: User\n  nameWithType: WindowsIdentity.User\n  fullName: WindowsIdentity.User\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets the security identifier (SID) for the user.\n  remarks: \"The SID uniquely identifies a user or group on all Windows NT implementations.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user. This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Security.Principal.SecurityIdentifier User { get; }\n    return:\n      type: System.Security.Principal.SecurityIdentifier\n      description: An object for the user.\n  overload: System.Security.Principal.WindowsIdentity.User*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.UserClaims\n  commentId: P:System.Security.Principal.WindowsIdentity.UserClaims\n  id: UserClaims\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: UserClaims\n  nameWithType: WindowsIdentity.UserClaims\n  fullName: WindowsIdentity.UserClaims\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Gets claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> UserClaims { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n      description: A collection of claims that have the <xref href=\"System.Security.Claims.ClaimTypes.WindowsUserClaim\"></xref> property key.\n  overload: System.Security.Principal.WindowsIdentity.UserClaims*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: WindowsIdentity.IDeserializationCallback.OnDeserialization(Object)\n  fullName: WindowsIdentity.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Security.Principal.WindowsIdentity\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WindowsIdentity.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WindowsIdentity.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the logical context information needed to recreate an instance of this execution context.\n  remarks: \"This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information. During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  \\n  \\n For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.\"\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: An object containing the information required to serialize the <xref href=\"System.Collections.Hashtable\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: An object containing the source and destination of the serialized stream associated with the <xref href=\"System.Collections.Hashtable\"></xref>.\n  overload: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Claims.ClaimsIdentity\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsIdentity\n  nameWithType: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(IntPtr)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(WindowsIdentity)\n  nameWithType: WindowsIdentity.WindowsIdentity(WindowsIdentity)\n  fullName: WindowsIdentity.WindowsIdentity(WindowsIdentity)\n- uid: System.Security.Principal.WindowsIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: WindowsIdentity\n  fullName: System.Security.Principal.WindowsIdentity\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(String)\n  nameWithType: WindowsIdentity.WindowsIdentity(String)\n  fullName: WindowsIdentity.WindowsIdentity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(IntPtr, String)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String)\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(SerializationInfo, StreamingContext)\n  nameWithType: WindowsIdentity.WindowsIdentity(SerializationInfo, StreamingContext)\n  fullName: WindowsIdentity.WindowsIdentity(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(String, String)\n  nameWithType: WindowsIdentity.WindowsIdentity(String, String)\n  fullName: WindowsIdentity.WindowsIdentity(String, String)\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(IntPtr, String, WindowsAccountType)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType)\n- uid: System.Security.Principal.WindowsAccountType\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsAccountType\n  nameWithType: WindowsAccountType\n  fullName: System.Security.Principal.WindowsAccountType\n- uid: System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n  nameWithType: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n  fullName: WindowsIdentity.WindowsIdentity(IntPtr, String, WindowsAccountType, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.WindowsIdentity.AccessToken\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: AccessToken\n  nameWithType: WindowsIdentity.AccessToken\n  fullName: WindowsIdentity.AccessToken\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeAccessTokenHandle\n  nameWithType: SafeAccessTokenHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n- uid: System.Security.Principal.WindowsIdentity.AuthenticationType\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: WindowsIdentity.AuthenticationType\n  fullName: WindowsIdentity.AuthenticationType\n- uid: System.Security.Principal.WindowsIdentity.Claims\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Claims\n  nameWithType: WindowsIdentity.Claims\n  fullName: WindowsIdentity.Claims\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Security.Claims.Claim\n  name: Claim\n  nameWithType: Claim\n  fullName: System.Security.Claims.Claim\n- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Claim>\n  nameWithType: IEnumerable<Claim>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    nameWithType: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Principal.WindowsIdentity.Clone\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Clone()\n  nameWithType: WindowsIdentity.Clone()\n  fullName: WindowsIdentity.Clone()\n- uid: System.Security.Principal.WindowsIdentity.DefaultIssuer\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: DefaultIssuer\n  nameWithType: WindowsIdentity.DefaultIssuer\n  fullName: WindowsIdentity.DefaultIssuer\n- uid: System.Security.Principal.WindowsIdentity.DeviceClaims\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: DeviceClaims\n  nameWithType: WindowsIdentity.DeviceClaims\n  fullName: WindowsIdentity.DeviceClaims\n- uid: System.Security.Principal.WindowsIdentity.Dispose\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Dispose()\n  nameWithType: WindowsIdentity.Dispose()\n  fullName: WindowsIdentity.Dispose()\n- uid: System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: WindowsIdentity.Dispose(Boolean)\n  fullName: WindowsIdentity.Dispose(Boolean)\n- uid: System.Security.Principal.WindowsIdentity.GetAnonymous\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetAnonymous()\n  nameWithType: WindowsIdentity.GetAnonymous()\n  fullName: WindowsIdentity.GetAnonymous()\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetCurrent(TokenAccessLevels)\n  nameWithType: WindowsIdentity.GetCurrent(TokenAccessLevels)\n  fullName: WindowsIdentity.GetCurrent(TokenAccessLevels)\n- uid: System.Security.Principal.TokenAccessLevels\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenAccessLevels\n  nameWithType: TokenAccessLevels\n  fullName: System.Security.Principal.TokenAccessLevels\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetCurrent(Boolean)\n  nameWithType: WindowsIdentity.GetCurrent(Boolean)\n  fullName: WindowsIdentity.GetCurrent(Boolean)\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetCurrent()\n  nameWithType: WindowsIdentity.GetCurrent()\n  fullName: WindowsIdentity.GetCurrent()\n- uid: System.Security.Principal.WindowsIdentity.Groups\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Groups\n  nameWithType: WindowsIdentity.Groups\n  fullName: WindowsIdentity.Groups\n- uid: System.Security.Principal.IdentityReferenceCollection\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReferenceCollection\n  nameWithType: IdentityReferenceCollection\n  fullName: System.Security.Principal.IdentityReferenceCollection\n- uid: System.Security.Principal.WindowsIdentity.Impersonate\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Impersonate()\n  nameWithType: WindowsIdentity.Impersonate()\n  fullName: WindowsIdentity.Impersonate()\n- uid: System.Security.Principal.WindowsImpersonationContext\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsImpersonationContext\n  nameWithType: WindowsImpersonationContext\n  fullName: System.Security.Principal.WindowsImpersonationContext\n- uid: System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Impersonate(IntPtr)\n  nameWithType: WindowsIdentity.Impersonate(IntPtr)\n  fullName: WindowsIdentity.Impersonate(IntPtr)\n- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: ImpersonationLevel\n  nameWithType: WindowsIdentity.ImpersonationLevel\n  fullName: WindowsIdentity.ImpersonationLevel\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.Security.Principal.WindowsIdentity.IsAnonymous\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsAnonymous\n  nameWithType: WindowsIdentity.IsAnonymous\n  fullName: WindowsIdentity.IsAnonymous\n- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: WindowsIdentity.IsAuthenticated\n  fullName: WindowsIdentity.IsAuthenticated\n- uid: System.Security.Principal.WindowsIdentity.IsGuest\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsGuest\n  nameWithType: WindowsIdentity.IsGuest\n  fullName: WindowsIdentity.IsGuest\n- uid: System.Security.Principal.WindowsIdentity.IsSystem\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsSystem\n  nameWithType: WindowsIdentity.IsSystem\n  fullName: WindowsIdentity.IsSystem\n- uid: System.Security.Principal.WindowsIdentity.Name\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Name\n  nameWithType: WindowsIdentity.Name\n  fullName: WindowsIdentity.Name\n- uid: System.Security.Principal.WindowsIdentity.Owner\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Owner\n  nameWithType: WindowsIdentity.Owner\n  fullName: WindowsIdentity.Owner\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: RunImpersonated(SafeAccessTokenHandle, Action)\n  nameWithType: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle, Action)\n  fullName: WindowsIdentity.RunImpersonated(SafeAccessTokenHandle, Action)\n- uid: System.Action\n  parent: System\n  isExternal: false\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n  nameWithType: WindowsIdentity.RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n  fullName: WindowsIdentity.RunImpersonated<T>(SafeAccessTokenHandle, Func<T>)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Func{T}\n  parent: System\n  isExternal: false\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Principal.WindowsIdentity.Token\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Token\n  nameWithType: WindowsIdentity.Token\n  fullName: WindowsIdentity.Token\n- uid: System.Security.Principal.WindowsIdentity.User\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: User\n  nameWithType: WindowsIdentity.User\n  fullName: WindowsIdentity.User\n- uid: System.Security.Principal.WindowsIdentity.UserClaims\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: UserClaims\n  nameWithType: WindowsIdentity.UserClaims\n  fullName: WindowsIdentity.UserClaims\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: WindowsIdentity.IDeserializationCallback.OnDeserialization(Object)\n  fullName: WindowsIdentity.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WindowsIdentity.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WindowsIdentity.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Security.Principal.WindowsIdentity.#ctor*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: WindowsIdentity\n  nameWithType: WindowsIdentity.WindowsIdentity\n  fullName: WindowsIdentity.WindowsIdentity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.AccessToken*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: AccessToken\n  nameWithType: WindowsIdentity.AccessToken\n  fullName: WindowsIdentity.AccessToken\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.AuthenticationType*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: AuthenticationType\n  nameWithType: WindowsIdentity.AuthenticationType\n  fullName: WindowsIdentity.AuthenticationType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Claims*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Claims\n  nameWithType: WindowsIdentity.Claims\n  fullName: WindowsIdentity.Claims\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Clone*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Clone\n  nameWithType: WindowsIdentity.Clone\n  fullName: WindowsIdentity.Clone\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.DeviceClaims*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: DeviceClaims\n  nameWithType: WindowsIdentity.DeviceClaims\n  fullName: WindowsIdentity.DeviceClaims\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Dispose*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Dispose\n  nameWithType: WindowsIdentity.Dispose\n  fullName: WindowsIdentity.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.GetAnonymous*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetAnonymous\n  nameWithType: WindowsIdentity.GetAnonymous\n  fullName: WindowsIdentity.GetAnonymous\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.GetCurrent*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: GetCurrent\n  nameWithType: WindowsIdentity.GetCurrent\n  fullName: WindowsIdentity.GetCurrent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Groups*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Groups\n  nameWithType: WindowsIdentity.Groups\n  fullName: WindowsIdentity.Groups\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Impersonate*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Impersonate\n  nameWithType: WindowsIdentity.Impersonate\n  fullName: WindowsIdentity.Impersonate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.ImpersonationLevel*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: ImpersonationLevel\n  nameWithType: WindowsIdentity.ImpersonationLevel\n  fullName: WindowsIdentity.ImpersonationLevel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.IsAnonymous*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsAnonymous\n  nameWithType: WindowsIdentity.IsAnonymous\n  fullName: WindowsIdentity.IsAnonymous\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.IsAuthenticated*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: WindowsIdentity.IsAuthenticated\n  fullName: WindowsIdentity.IsAuthenticated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.IsGuest*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsGuest\n  nameWithType: WindowsIdentity.IsGuest\n  fullName: WindowsIdentity.IsGuest\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.IsSystem*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: IsSystem\n  nameWithType: WindowsIdentity.IsSystem\n  fullName: WindowsIdentity.IsSystem\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Name*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Name\n  nameWithType: WindowsIdentity.Name\n  fullName: WindowsIdentity.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Owner*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Owner\n  nameWithType: WindowsIdentity.Owner\n  fullName: WindowsIdentity.Owner\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: RunImpersonated\n  nameWithType: WindowsIdentity.RunImpersonated\n  fullName: WindowsIdentity.RunImpersonated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.RunImpersonated``1*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: RunImpersonated<T>\n  nameWithType: WindowsIdentity.RunImpersonated<T>\n  fullName: WindowsIdentity.RunImpersonated<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.Token*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: Token\n  nameWithType: WindowsIdentity.Token\n  fullName: WindowsIdentity.Token\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.User*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: User\n  nameWithType: WindowsIdentity.User\n  fullName: WindowsIdentity.User\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.UserClaims*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: UserClaims\n  nameWithType: WindowsIdentity.UserClaims\n  fullName: WindowsIdentity.UserClaims\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Security.Principal.WindowsIdentity\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsIdentity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Claims.ClaimsIdentity.Actor\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Actor\n  nameWithType: ClaimsIdentity.Actor\n  fullName: ClaimsIdentity.Actor\n- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: AddClaim(Claim)\n  nameWithType: ClaimsIdentity.AddClaim(Claim)\n  fullName: ClaimsIdentity.AddClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: AddClaims(IEnumerable<Claim>)\n  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)\n  fullName: ClaimsIdentity.AddClaims(IEnumerable<Claim>)\n- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: BootstrapContext\n  nameWithType: ClaimsIdentity.BootstrapContext\n  fullName: ClaimsIdentity.BootstrapContext\n- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: CreateClaim(BinaryReader)\n  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)\n  fullName: ClaimsIdentity.CreateClaim(BinaryReader)\n- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: CustomSerializationData\n  nameWithType: ClaimsIdentity.CustomSerializationData\n  fullName: ClaimsIdentity.CustomSerializationData\n- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: DefaultNameClaimType\n  nameWithType: ClaimsIdentity.DefaultNameClaimType\n  fullName: ClaimsIdentity.DefaultNameClaimType\n- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: DefaultRoleClaimType\n  nameWithType: ClaimsIdentity.DefaultRoleClaimType\n  fullName: ClaimsIdentity.DefaultRoleClaimType\n- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: FindAll(Predicate<Claim>)\n  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)\n  fullName: ClaimsIdentity.FindAll(Predicate<Claim>)\n- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: FindAll(String)\n  nameWithType: ClaimsIdentity.FindAll(String)\n  fullName: ClaimsIdentity.FindAll(String)\n- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: FindFirst(Predicate<Claim>)\n  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)\n  fullName: ClaimsIdentity.FindFirst(Predicate<Claim>)\n- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: FindFirst(String)\n  nameWithType: ClaimsIdentity.FindFirst(String)\n  fullName: ClaimsIdentity.FindFirst(String)\n- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: ClaimsIdentity.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: HasClaim(String, String)\n  nameWithType: ClaimsIdentity.HasClaim(String, String)\n  fullName: ClaimsIdentity.HasClaim(String, String)\n- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: HasClaim(Predicate<Claim>)\n  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)\n  fullName: ClaimsIdentity.HasClaim(Predicate<Claim>)\n- uid: System.Security.Claims.ClaimsIdentity.Label\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Label\n  nameWithType: ClaimsIdentity.Label\n  fullName: ClaimsIdentity.Label\n- uid: System.Security.Claims.ClaimsIdentity.NameClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: NameClaimType\n  nameWithType: ClaimsIdentity.NameClaimType\n  fullName: ClaimsIdentity.NameClaimType\n- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: RemoveClaim(Claim)\n  nameWithType: ClaimsIdentity.RemoveClaim(Claim)\n  fullName: ClaimsIdentity.RemoveClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: RoleClaimType\n  nameWithType: ClaimsIdentity.RoleClaimType\n  fullName: ClaimsIdentity.RoleClaimType\n- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: TryRemoveClaim(Claim)\n  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)\n  fullName: ClaimsIdentity.TryRemoveClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: WriteTo(BinaryWriter)\n  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)\n  fullName: ClaimsIdentity.WriteTo(BinaryWriter)\n- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: WriteTo(BinaryWriter, Byte[])\n  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter, Byte[])\n  fullName: ClaimsIdentity.WriteTo(BinaryWriter, Byte[])\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}