<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6b2043f2dc5a412e73822eb120e9e373ab97afe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.ContentOperations.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d302ff614ee55e12e2c3a0e1cba8ce87b78c1df3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">369e4c353467a40784212e4ff20b195a87abbdea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides static utility methods for getting or setting the position of a <ph id="ph1">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> in an element tree.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most content element scenarios, the property <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> should be used instead of members of <ph id="ph2">&lt;xref:System.Windows.ContentOperations&gt;</ph>, if <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> is available.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the parent element of the specified <ph id="ph1">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most practical <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> derived classes in <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> are also a <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For these classes, the <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> property should be used instead.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A&gt;</ph> returns the parent element in the logical tree, which might not be the same element as returned by <ph id="ph2">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.ContentOperations.GetParent%2A&gt;</ph> exists specifically to correct for certain architectural issues whereby a <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> class that is not also a <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> exists in a tree that is not strictly speaking either the logical tree or the visual tree.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> to get the parent from.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The parent element in the current tree.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sets the parent element of the provided <ph id="ph1">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to help define a <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph> hosting and content model on a <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase&gt;</ph> class uses this method internally to hook up its <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DocumentViewerBase.Document%2A&gt;</ph> content property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> to reparent.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The new parent element.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>