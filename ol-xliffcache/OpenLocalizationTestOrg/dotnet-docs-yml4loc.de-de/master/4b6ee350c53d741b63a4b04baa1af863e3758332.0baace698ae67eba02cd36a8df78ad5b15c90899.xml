{"nodes":[{"content":"Implements a <xref href=\"System.IO.TextReader\"></xref> that reads characters from a byte stream in a particular encoding.","nodes":[{"pos":[0,121],"content":"Implements a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> that reads characters from a byte stream in a particular encoding.","source":"Implements a <xref href=\"System.IO.TextReader\"></xref> that reads characters from a byte stream in a particular encoding."}],"pos":[2042,2164],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n <xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output. Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n <xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system. UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system. If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.  \n  \n By default, a <xref:System.IO.StreamReader> is not thread safe. See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \n  \n The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter. These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=fullName> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=fullName>, which read and write the number of bytes specified by the `count` parameter. Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements.  \n  \n> [!NOTE]\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,414],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,410],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32)</ept>.","pos":[1,173],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[174,402],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[421,683],"content":"<xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output. Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.","nodes":[{"content":"<xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output. Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.","pos":[0,262],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> is designed for character input in a particular encoding, whereas the <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> class is designed for byte input and output.","pos":[0,168],"source":"<xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> for reading lines of information from a standard text file.","pos":[169,262],"source":" Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file."}]}]},{"pos":[691,1217],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[1224,1817],"content":"<xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system. UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system. If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.","nodes":[{"content":"<xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system. UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system. If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.","pos":[0,593],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system.","pos":[0,152],"source":"<xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system."},{"content":"UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system.","pos":[153,274]},{"content":"If you get the current character encoding using the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.CurrentEncoding%2A&gt;</ph> property, the value is not reliable until after the first <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph> method, since encoding auto detection is not done until the first call to a <ph id=\"ph3\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph> method.","pos":[275,593],"source":" If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method."}]}]},{"pos":[1824,1987],"content":"By default, a <xref:System.IO.StreamReader> is not thread safe. See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.","nodes":[{"content":"By default, a <xref:System.IO.StreamReader> is not thread safe. See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.","pos":[0,163],"nodes":[{"content":"By default, a <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> is not thread safe.","pos":[0,63],"source":"By default, a <xref:System.IO.StreamReader> is not thread safe."},{"content":"See <ph id=\"ph1\">&lt;xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName&gt;</ph> for a thread-safe wrapper.","pos":[64,163],"source":" See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper."}]}]},{"pos":[1994,2639],"content":"The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter. These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=fullName> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=fullName>, which read and write the number of bytes specified by the `count` parameter. Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overloads read and write the number of characters specified by the <ph id=\"ph3\">`count`</ph> parameter.","pos":[0,277],"source":"The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter."},{"content":"These are to be distinguished from <ph id=\"ph1\">&lt;xref:System.IO.BufferedStream.Read%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.BufferedStream.Write%2A?displayProperty=fullName&gt;</ph>, which read and write the number of bytes specified by the <ph id=\"ph3\">`count`</ph> parameter.","pos":[278,525],"source":" These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=fullName> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=fullName>, which read and write the number of bytes specified by the `count` parameter."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.BufferedStream&gt;</ph> methods only for reading and writing an integral number of byte array elements.","pos":[526,645],"source":" Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements."}]},{"pos":[2647,2799],"content":"[!NOTE]\n When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","leadings":["","> "],"nodes":[{"content":"When reading from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","pos":[9,150],"source":" When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream."}]},{"pos":[2806,2901],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[2175,5098],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream."}],"pos":[8341,8451],"yaml":true},{"content":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \n  \n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,208],"content":"This constructor initializes the encoding to <ph id=\"ph1\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.BaseStream%2A&gt;</ph> property using the <ph id=\"ph3\">`stream`</ph> parameter, and the internal buffer size to 1024 bytes.","source":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes."},{"pos":[215,422],"content":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[430,671],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[678,773],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[8462,9245],"yaml":true,"extradata":"MT"},{"content":"The stream to be read.","nodes":[{"pos":[0,22],"content":"The stream to be read.","nodes":[{"content":"The stream to be read.","pos":[0,22]}]}],"pos":[9870,9893],"yaml":true},{"content":"<code>stream</code> does not support reading.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> does not support reading.","source":"<code>stream</code> does not support reading."}],"pos":[10043,10089],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[10191,10222],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified file name.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name."}],"pos":[11726,11839],"yaml":true},{"content":"The complete file path is specified by the `path` parameter. This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,172],"content":"The complete file path is specified by the `path` parameter. This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes.","nodes":[{"content":"The complete file path is specified by the <ph id=\"ph1\">`path`</ph> parameter.","pos":[0,60],"source":"The complete file path is specified by the `path` parameter."},{"content":"This constructor initializes the encoding to <ph id=\"ph1\">&lt;xref:System.Text.UTF8Encoding&gt;</ph> and the buffer size to 1024 bytes.","pos":[61,172],"source":" This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes."}]},{"pos":[179,282],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[289,421],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[429,670],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[677,772],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[11850,12634],"yaml":true,"extradata":"MT"},{"content":"The complete file path to be read.","nodes":[{"pos":[0,34],"content":"The complete file path to be read.","nodes":[{"content":"The complete file path to be read.","pos":[0,34]}]}],"pos":[13242,13277],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."}],"pos":[13427,13470],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[13572,13601],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[13709,13735],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[13853,13920],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label."}],"pos":[14008,14114],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified byte order mark detection option.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream, with the specified byte order mark detection option.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified byte order mark detection option."}],"pos":[15369,15532],"yaml":true},{"content":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \n  \n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,208],"content":"This constructor initializes the encoding to <ph id=\"ph1\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.BaseStream%2A&gt;</ph> property using the <ph id=\"ph3\">`stream`</ph> parameter, and the internal buffer size to 1024 bytes.","source":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes."},{"pos":[215,584],"content":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[0,120],"source":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[121,264]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[265,369],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[591,798],"content":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[805,900],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[15543,16452],"yaml":true,"extradata":"MT"},{"content":"The stream to be read.","nodes":[{"pos":[0,22],"content":"The stream to be read.","nodes":[{"content":"The stream to be read.","pos":[0,22]}]}],"pos":[17179,17202],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[17291,17368],"yaml":true},{"content":"<code>stream</code> does not support reading.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> does not support reading.","source":"<code>stream</code> does not support reading."}],"pos":[17518,17564],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[17666,17697],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream, with the specified character encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding."}],"pos":[19317,19466],"yaml":true},{"content":"The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,521],"content":"The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"The character encoding is set by the <ph id=\"ph1\">`encoding`</ph> parameter, and the buffer size is set to 1024 bytes.","pos":[0,100],"source":"The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object attempts to  detect the encoding by looking at the first three bytes of the stream.","pos":[101,225],"source":" The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[226,369]},{"content":"Otherwise, the user-provided encoding is used.","pos":[370,416]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[417,521],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[528,735],"content":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[743,984],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[991,1086],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[19477,20573],"yaml":true,"extradata":"MT"},{"content":"The stream to be read.","nodes":[{"pos":[0,22],"content":"The stream to be read.","nodes":[{"content":"The stream to be read.","pos":[0,22]}]}],"pos":[21292,21315],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[21386,21417],"yaml":true},{"content":"<code>stream</code> does not support reading.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> does not support reading.","source":"<code>stream</code> does not support reading."}],"pos":[21567,21613],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[21715,21771],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified byte order mark detection option.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified file name, with the specified byte order mark detection option.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified byte order mark detection option."}],"pos":[23347,23513],"yaml":true},{"content":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the <xref:System.Text.UTF8Encoding> is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,208],"content":"This constructor initializes the encoding to <ph id=\"ph1\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.BaseStream%2A&gt;</ph> property using the <ph id=\"ph3\">`stream`</ph> parameter, and the internal buffer size to 1024 bytes.","source":"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes."},{"pos":[215,318],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[325,457],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[464,889],"content":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the <xref:System.Text.UTF8Encoding> is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[0,120],"source":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[121,264]},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Text.UTF8Encoding&gt;</ph> is used.","pos":[265,320],"source":" Otherwise, the <xref:System.Text.UTF8Encoding> is used."},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[321,425],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[896,991],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[23524,24526],"yaml":true,"extradata":"MT"},{"content":"The complete file path to be read.","nodes":[{"pos":[0,34],"content":"The complete file path to be read.","nodes":[{"content":"The complete file path to be read.","pos":[0,34]}]}],"pos":[25236,25271],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[25360,25437],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."}],"pos":[25587,25630],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[25732,25761],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[25869,25895],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[26013,26080],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label."}],"pos":[26168,26274],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified file name, with the specified character encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding."}],"pos":[27527,27679],"yaml":true},{"content":"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,548],"content":"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"This constructor initializes the encoding as specified by the <ph id=\"ph1\">`encoding`</ph> parameter, and the internal buffer size to 1024 bytes.","pos":[0,127],"source":"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object attempts to  detect the encoding by looking at the first three bytes of the stream.","pos":[128,252],"source":" The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[253,396]},{"content":"Otherwise, the user-provided encoding is used.","pos":[397,443]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[444,548],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[555,658],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[665,797],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[805,1046],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1053,1148],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[27690,28850],"yaml":true,"extradata":"MT"},{"content":"The complete file path to be read.","nodes":[{"pos":[0,34],"content":"The complete file path to be read.","nodes":[{"content":"The complete file path to be read.","pos":[0,34]}]}],"pos":[29552,29587],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[29658,29689],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."}],"pos":[29839,29882],"yaml":true},{"content":"<code>path</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>path</code> or <code>encoding</code> is `null`."}],"pos":[29984,30038],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[30146,30172],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[30290,30357],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label."}],"pos":[30459,30565],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding and byte order mark detection option.","nodes":[{"pos":[0,185],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream, with the specified character encoding and byte order mark detection option.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding and byte order mark detection option."}],"pos":[31913,32099],"yaml":true},{"content":"This constructor initializes the encoding as specified by the `encoding` parameter, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \n  \n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,214],"content":"This constructor initializes the encoding as specified by the <ph id=\"ph1\">`encoding`</ph> parameter, the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.BaseStream%2A&gt;</ph> property using the <ph id=\"ph3\">`stream`</ph> parameter, and the internal buffer size to 1024 bytes.","source":"This constructor initializes the encoding as specified by the `encoding` parameter, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes."},{"pos":[221,637],"content":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[0,120],"source":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[121,264]},{"content":"Otherwise, the user-provided encoding is used.","pos":[265,311]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[312,416],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[644,851],"content":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[859,1100],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1107,1202],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[32110,33324],"yaml":true,"extradata":"MT"},{"content":"The stream to be read.","nodes":[{"pos":[0,22],"content":"The stream to be read.","nodes":[{"content":"The stream to be read.","pos":[0,22]}]}],"pos":[34082,34105],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[34176,34207],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[34296,34373],"yaml":true},{"content":"<code>stream</code> does not support reading.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> does not support reading.","source":"<code>stream</code> does not support reading."}],"pos":[34523,34569],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[34671,34727],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding and byte order mark detection option.","nodes":[{"pos":[0,188],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified file name, with the specified character encoding and byte order mark detection option.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding and byte order mark detection option."}],"pos":[36396,36585],"yaml":true},{"content":"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.  \n  \n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,127],"content":"This constructor initializes the encoding as specified by the <ph id=\"ph1\">`encoding`</ph> parameter, and the internal buffer size to 1024 bytes.","source":"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes."},{"pos":[134,550],"content":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[0,120],"source":"The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[121,264]},{"content":"Otherwise, the user-provided encoding is used.","pos":[265,311]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[312,416],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[557,660],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[667,799],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[807,1048],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1055,1150],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[36596,37760],"yaml":true,"extradata":"MT"},{"content":"The complete file path to be read.","nodes":[{"pos":[0,34],"content":"The complete file path to be read.","nodes":[{"content":"The complete file path to be read.","pos":[0,34]}]}],"pos":[38501,38536],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[38607,38638],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[38727,38804],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."}],"pos":[38954,38997],"yaml":true},{"content":"<code>path</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>path</code> or <code>encoding</code> is `null`."}],"pos":[39099,39153],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[39261,39287],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[39405,39472],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label."}],"pos":[39574,39680],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size.","nodes":[{"pos":[0,199],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size."}],"pos":[41088,41288],"yaml":true},{"content":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \n  \n This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!NOTE]\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,196],"content":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.","nodes":[{"content":"The buffer size, in number of 16-bit characters, is set by the <ph id=\"ph1\">`bufferSize`</ph> parameter.","pos":[0,86],"source":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter."},{"content":"If <ph id=\"ph1\">`bufferSize`</ph> is less than the minimum allowable size (128 characters), the minimum allowable size is used.","pos":[87,196],"source":" If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used."}]},{"pos":[203,741],"content":"This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"This constructor allows you to change the encoding the first time you read from the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object.","pos":[0,121],"source":"This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object."},{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[122,242],"source":" The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[243,386]},{"content":"Otherwise, the user-provided encoding is used.","pos":[387,433]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[434,538],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[748,955],"content":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[963,1115],"content":"[!NOTE]\n When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","leadings":["","> "],"nodes":[{"content":"When reading from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","pos":[9,150],"source":" When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream."}]},{"pos":[1123,1364],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1371,1466],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[41299,42780],"yaml":true,"extradata":"MT"},{"content":"The stream to be read.","nodes":[{"pos":[0,22],"content":"The stream to be read.","nodes":[{"content":"The stream to be read.","pos":[0,22]}]}],"pos":[43554,43577],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[43648,43679],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[43768,43845],"yaml":true},{"content":"The minimum buffer size.","nodes":[{"pos":[0,24],"content":"The minimum buffer size.","nodes":[{"content":"The minimum buffer size.","pos":[0,24]}]}],"pos":[43910,43935],"yaml":true},{"content":"The stream does not support reading.","nodes":[{"pos":[0,36],"content":"The stream does not support reading.","nodes":[{"content":"The stream does not support reading.","pos":[0,36]}]}],"pos":[44085,44122],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[44224,44280],"yaml":true},{"content":"<code>bufferSize</code> is less than or equal to zero.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>bufferSize</code> is less than or equal to zero."}],"pos":[44394,44449],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size."}],"pos":[46178,46381],"yaml":true},{"content":"This constructor initializes the encoding as specified by the `encoding` parameter.  \n  \n This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,83],"content":"This constructor initializes the encoding as specified by the <ph id=\"ph1\">`encoding`</ph> parameter.","source":"This constructor initializes the encoding as specified by the `encoding` parameter."},{"pos":[90,628],"content":"This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"This constructor allows you to change the encoding the first time you read from the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object.","pos":[0,121],"source":"This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object."},{"content":"The <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter detects the encoding by looking at the first three bytes of the stream.","pos":[122,242],"source":" The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[243,386]},{"content":"Otherwise, the user-provided encoding is used.","pos":[387,433]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[434,538],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[635,831],"content":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.","nodes":[{"content":"The buffer size, in number of 16-bit characters, is set by the <ph id=\"ph1\">`bufferSize`</ph> parameter.","pos":[0,86],"source":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter."},{"content":"If <ph id=\"ph1\">`bufferSize`</ph> is less than the minimum allowable size (128 characters), the minimum allowable size is used.","pos":[87,196],"source":" If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used."}]},{"pos":[838,941],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[948,1080],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[1088,1329],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1336,1431],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[46392,47839],"yaml":true,"extradata":"MT"},{"content":"The complete file path to be read.","nodes":[{"pos":[0,34],"content":"The complete file path to be read.","nodes":[{"content":"The complete file path to be read.","pos":[0,34]}]}],"pos":[48596,48631],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[48702,48733],"yaml":true},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"pos":[0,76],"content":"Indicates whether to look for byte order marks at the beginning of the file.","nodes":[{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[0,76]}]}],"pos":[48822,48899],"yaml":true},{"content":"The minimum buffer size, in number of 16-bit characters.","nodes":[{"pos":[0,56],"content":"The minimum buffer size, in number of 16-bit characters.","nodes":[{"content":"The minimum buffer size, in number of 16-bit characters.","pos":[0,56]}]}],"pos":[48964,49021],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."}],"pos":[49171,49214],"yaml":true},{"content":"<code>path</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>path</code> or <code>encoding</code> is `null`."}],"pos":[49316,49370],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[49478,49504],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[49622,49689],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label."}],"pos":[49791,49897],"yaml":true},{"content":"<code>buffersize</code> is less than or equal to zero.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;buffersize&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>buffersize</code> is less than or equal to zero."}],"pos":[50011,50066],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open.","nodes":[{"pos":[0,241],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open."}],"pos":[51563,51805],"yaml":true},{"content":"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \n  \n The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \n  \n This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \n  \n> [!NOTE]\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.","nodes":[{"pos":[0,259],"content":"Unless you set the <ph id=\"ph1\">`leaveOpen`</ph> parameter to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.IO.StreamReader&gt;</ph> object calls <ph id=\"ph4\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph5\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph6\">&lt;xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","source":"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called."},{"pos":[266,462],"content":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.","nodes":[{"content":"The buffer size, in number of 16-bit characters, is set by the <ph id=\"ph1\">`bufferSize`</ph> parameter.","pos":[0,86],"source":"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter."},{"content":"If <ph id=\"ph1\">`bufferSize`</ph> is less than the minimum allowable size (128 characters), the minimum allowable size is used.","pos":[87,196],"source":" If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used."}]},{"pos":[469,1038],"content":"This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.","nodes":[{"content":"This constructor enables you to change the encoding the first time you read from the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object.","pos":[0,122],"source":"This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object."},{"content":"If the <ph id=\"ph1\">`detectEncodingFromByteOrderMarks`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the constructor detects the encoding by looking at the first three bytes of the stream.","pos":[123,273],"source":" If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.","pos":[274,417]},{"content":"Otherwise, the user-provided encoding is used.","pos":[418,464]},{"content":"See the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName&gt;</ph> method for more information.","pos":[465,569],"source":" See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information."}]},{"pos":[1046,1198],"content":"[!NOTE]\n When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","leadings":["","> "],"nodes":[{"content":"When reading from a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","pos":[9,150],"source":" When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream."}]},{"pos":[1206,1455],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.","pos":[12,247]}]}],"pos":[51816,53284],"yaml":true,"extradata":"MT"},{"content":"The stream to read.","nodes":[{"pos":[0,19],"content":"The stream to read.","nodes":[{"content":"The stream to read.","pos":[0,19]}]}],"pos":[53537,53557],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[53628,53659],"yaml":true},{"content":"`true` to look for byte order marks at the beginning of the file; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> to look for byte order marks at the beginning of the file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to look for byte order marks at the beginning of the file; otherwise, `false`."}],"pos":[53748,53836],"yaml":true},{"content":"The minimum buffer size.","nodes":[{"pos":[0,24],"content":"The minimum buffer size.","nodes":[{"content":"The minimum buffer size.","pos":[0,24]}]}],"pos":[53901,53926],"yaml":true},{"content":"`true` to leave the stream open after the <xref href=\"System.IO.StreamReader\"></xref> object is disposed; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> object is disposed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after the <xref href=\"System.IO.StreamReader\"></xref> object is disposed; otherwise, `false`."}],"pos":[53992,54120],"yaml":true},{"content":"Returns the underlying stream.","nodes":[{"pos":[0,30],"content":"Returns the underlying stream.","nodes":[{"content":"Returns the underlying stream.","pos":[0,30]}]}],"pos":[55632,55663],"yaml":true},{"content":"You use this property to access the underlying stream. The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary. The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,783],"content":"You use this property to access the underlying stream. The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary. The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object.","nodes":[{"content":"You use this property to access the underlying stream.","pos":[0,54]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> class buffers input from the underlying stream when you call one of the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph> methods.","pos":[55,207],"source":" The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods."},{"content":"If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.","pos":[208,390]},{"content":"To reset the internal buffer, call the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[391,582],"source":" To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> constructors that have the <ph id=\"ph2\">`detectEncodingFromByteOrderMarks`</ph> parameter can change the encoding the first time you read from the <ph id=\"ph3\">&lt;xref:System.IO.StreamReader&gt;</ph> object.","pos":[583,783],"source":" The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object."}]},{"pos":[790,885],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[55674,56564],"yaml":true,"extradata":"MT"},{"content":"The underlying stream.","nodes":[{"pos":[0,22],"content":"The underlying stream.","nodes":[{"content":"The underlying stream.","pos":[0,22]}]}],"pos":[56699,56722],"yaml":true},{"content":"Closes the <xref href=\"System.IO.StreamReader\"></xref> object and the underlying stream, and releases any system resources associated with the reader.","nodes":[{"pos":[0,150],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> object and the underlying stream, and releases any system resources associated with the reader.","source":"Closes the <xref href=\"System.IO.StreamReader\"></xref> object and the underlying stream, and releases any system resources associated with the reader."}],"pos":[58199,58350],"yaml":true},{"content":"This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName> method.  \n  \n This implementation of <xref:System.IO.StreamReader.Close%2A> calls the <xref:System.IO.StreamReader.Dispose%2A> method passing a `true` value.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.  \n  \n Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions.","nodes":[{"pos":[0,95],"content":"This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName> method.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,95],"source":"This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName> method."}]},{"pos":[102,245],"content":"This implementation of <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Close%2A&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Dispose%2A&gt;</ph> method passing a <ph id=\"ph3\">`true`</ph> value.","source":"This implementation of <xref:System.IO.StreamReader.Close%2A> calls the <xref:System.IO.StreamReader.Dispose%2A> method passing a `true` value."},{"pos":[252,815],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Close%2A&gt;</ph>.","pos":[0,124],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[125,291],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[292,416]},{"content":"This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.","pos":[417,563]}]},{"pos":[822,934],"content":"Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions.","nodes":[{"content":"Following a call to <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Close%2A&gt;</ph>, any operations on the reader might raise exceptions.","pos":[0,112],"source":"Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions."}]}],"pos":[58361,59304],"yaml":true,"extradata":"MT"},{"content":"Gets the current character encoding that the current <xref href=\"System.IO.StreamReader\"></xref> object is using.","nodes":[{"pos":[0,113],"content":"Gets the current character encoding that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> object is using.","source":"Gets the current character encoding that the current <xref href=\"System.IO.StreamReader\"></xref> object is using."}],"pos":[60575,60689],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[60700,60796],"yaml":true,"extradata":"MT"},{"content":"The current character encoding used by the current reader. The value can be different after the first call to any <xref href=\"System.IO.StreamReader.Read*\"></xref> method of <xref href=\"System.IO.StreamReader\"></xref>, since encoding autodetection is not done until the first call to a <xref href=\"System.IO.StreamReader.Read*\"></xref> method.","nodes":[{"pos":[0,343],"content":"The current character encoding used by the current reader. The value can be different after the first call to any <xref href=\"System.IO.StreamReader.Read*\"></xref> method of <xref href=\"System.IO.StreamReader\"></xref>, since encoding autodetection is not done until the first call to a <xref href=\"System.IO.StreamReader.Read*\"></xref> method.","nodes":[{"content":"The current character encoding used by the current reader.","pos":[0,58]},{"content":"The value can be different after the first call to any <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader.Read*\"&gt;&lt;/xref&gt;</ph> method of <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph>, since encoding autodetection is not done until the first call to a <ph id=\"ph3\">&lt;xref href=\"System.IO.StreamReader.Read*\"&gt;&lt;/xref&gt;</ph> method.","pos":[59,343],"source":" The value can be different after the first call to any <xref href=\"System.IO.StreamReader.Read*\"></xref> method of <xref href=\"System.IO.StreamReader\"></xref>, since encoding autodetection is not done until the first call to a <xref href=\"System.IO.StreamReader.Read*\"></xref> method."}]}],"pos":[61520,61864],"yaml":true},{"content":"Clears the internal buffer.","nodes":[{"pos":[0,27],"content":"Clears the internal buffer.","nodes":[{"content":"Clears the internal buffer.","pos":[0,27]}]}],"pos":[63444,63472],"yaml":true},{"content":"Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object. You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match. These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream. This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,606],"content":"Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object. You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match. These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream. This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.","nodes":[{"content":"Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object. You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match. These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream. This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.","pos":[0,606],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method to reset the internal buffer for the <ph id=\"ph2\">&lt;xref:System.IO.StreamReader&gt;</ph> object.","pos":[0,142],"source":"Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object."},{"content":"You need to call this method only when the position of the internal buffer and the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.BaseStream%2A&gt;</ph> do not match.","pos":[143,283],"source":" You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match."},{"content":"These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream.","pos":[284,411]},{"content":"This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object more than once.","pos":[412,606],"source":" This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once."}]}]},{"pos":[613,708],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[63483,64196],"yaml":true,"extradata":"MT"},{"content":"Closes the underlying stream, releases the unmanaged resources used by the <xref href=\"System.IO.StreamReader\"></xref>, and optionally releases the managed resources.","nodes":[{"pos":[0,166],"content":"Closes the underlying stream, releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph>, and optionally releases the managed resources.","source":"Closes the underlying stream, releases the unmanaged resources used by the <xref href=\"System.IO.StreamReader\"></xref>, and optionally releases the managed resources."}],"pos":[67172,67339],"yaml":true},{"content":"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references. This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.  \n  \n .","nodes":[{"pos":[0,392],"content":"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,128],"source":"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Dispose%2A&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to true.","pos":[129,279],"source":" <xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Dispose%2A&gt;</ph> with <ph id=\"ph3\">`disposing`</ph> set to false.","pos":[280,392],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false."}]},{"pos":[399,656],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references. This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that the <ph id=\"ph3\">&lt;xref:System.IO.StreamReader&gt;</ph> object references.","pos":[0,162],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references."},{"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of each referenced object.","pos":[163,257],"source":" This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object."}]},{"pos":[663,664],"content":".","nodes":[{"content":".","pos":[0,1]}]}],"pos":[67350,68021],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[68176,68279],"yaml":true},{"content":"Gets a value that indicates whether the current stream position is at the end of the stream.","nodes":[{"pos":[0,92],"content":"Gets a value that indicates whether the current stream position is at the end of the stream.","nodes":[{"content":"Gets a value that indicates whether the current stream position is at the end of the stream.","pos":[0,92]}]}],"pos":[69799,69892],"yaml":true},{"content":"`true` if the current stream position is at the end of the stream; otherwise `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the current stream position is at the end of the stream; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current stream position is at the end of the stream; otherwise `false`."}],"pos":[70006,70094],"yaml":true},{"content":"The underlying stream has been disposed.","nodes":[{"pos":[0,40],"content":"The underlying stream has been disposed.","nodes":[{"content":"The underlying stream has been disposed.","pos":[0,40]}]}],"pos":[70262,70303],"yaml":true},{"content":"A <xref href=\"System.IO.StreamReader\"></xref> object around an empty stream.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> object around an empty stream.","source":"A <xref href=\"System.IO.StreamReader\"></xref> object around an empty stream."}],"pos":[71721,71798],"yaml":true},{"content":"When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned. When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,210],"content":"When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned. When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned.","nodes":[{"content":"When read methods are invoked on <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Null&gt;</ph>, zero is always returned.","pos":[0,93],"source":"When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned."},{"content":"When <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> is invoked on <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Null&gt;</ph>, <ph id=\"ph3\">`null`</ph> is returned.","pos":[94,210],"source":" When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned."}]},{"pos":[217,312],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[71809,72126],"yaml":true,"extradata":"MT"},{"content":"Returns the next available character but does not consume it.","nodes":[{"pos":[0,61],"content":"Returns the next available character but does not consume it.","nodes":[{"content":"Returns the next available character but does not consume it.","pos":[0,61]}]}],"pos":[73708,73770],"yaml":true},{"content":"The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred. This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.  \n  \n This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=fullName>.  \n  \n The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>.","nodes":[{"pos":[0,265],"content":"The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred. This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.","nodes":[{"content":"The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred. This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.","pos":[0,265],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Peek%2A&gt;</ph> method returns an integer value in order to determine whether the end of the file, or another error has occurred.","pos":[0,155],"source":"The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred."},{"content":"This allows a user to first check if the returned value is -1 before casting it to a <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> type.","pos":[156,265],"source":" This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type."}]}]},{"pos":[272,355],"content":"This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextReader.Peek%2A?displayProperty=fullName&gt;</ph>.","pos":[0,83],"source":"This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=fullName>."}]},{"pos":[362,483],"content":"The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>.","nodes":[{"content":"The current position of the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader&gt;</ph> object is not changed by <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Peek%2A&gt;</ph>.","pos":[0,121],"source":"The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>."}]}],"pos":[73781,74271],"yaml":true,"extradata":"MT"},{"content":"An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.","nodes":[{"pos":[0,141],"content":"An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.","nodes":[{"content":"An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.","pos":[0,141]}]}],"pos":[74864,75006],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[75149,75170],"yaml":true},{"content":"Reads the next character from the input stream and advances the character position by one character.","nodes":[{"pos":[0,100],"content":"Reads the next character from the input stream and advances the character position by one character.","nodes":[{"content":"Reads the next character from the input stream and advances the character position by one character.","pos":[0,100]}]}],"pos":[76591,76692],"yaml":true},{"content":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.  \n  \n This method returns an integer so that it can return -1 if the end of the stream has been reached. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,83],"content":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=fullName&gt;</ph>.","pos":[0,83],"source":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>."}]},{"pos":[90,563],"content":"This method returns an integer so that it can return -1 if the end of the stream has been reached. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","nodes":[{"content":"This method returns an integer so that it can return -1 if the end of the stream has been reached. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[0,473],"nodes":[{"content":"This method returns an integer so that it can return -1 if the end of the stream has been reached.","pos":[0,98]},{"content":"If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.","pos":[99,281]},{"content":"To reset the internal buffer, call the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[282,473],"source":" To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary."}]}]},{"pos":[570,665],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[76703,77375],"yaml":true,"extradata":"MT"},{"content":"The next character from the input stream represented as an <xref href=\"System.Int32\"></xref> object, or -1 if no more characters are available.","nodes":[{"pos":[0,143],"content":"The next character from the input stream represented as an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> object, or -1 if no more characters are available.","source":"The next character from the input stream represented as an <xref href=\"System.Int32\"></xref> object, or -1 if no more characters are available."}],"pos":[78519,78663],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[78806,78827],"yaml":true},{"content":"Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.","nodes":[{"pos":[0,112],"content":"Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.","nodes":[{"content":"Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.","pos":[0,112]}]}],"pos":[80431,80544],"yaml":true},{"content":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.  \n  \n This method returns an integer so that it can return 0 if the end of the stream has been reached.  \n  \n When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size. If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes). If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \n  \n This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached. <xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,83],"content":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=fullName&gt;</ph>.","pos":[0,83],"source":"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>."}]},{"pos":[90,187],"content":"This method returns an integer so that it can return 0 if the end of the stream has been reached.","nodes":[{"content":"This method returns an integer so that it can return 0 if the end of the stream has been reached.","pos":[0,97]}]},{"pos":[194,962],"content":"When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size. If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes). If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","nodes":[{"content":"When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size. If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes). If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[0,768],"nodes":[{"content":"When using the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size.","pos":[0,263],"source":"When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size."},{"content":"If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).","pos":[264,393]},{"content":"If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.","pos":[394,576]},{"content":"To reset the internal buffer, call the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[577,768],"source":" To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary."}]}]},{"pos":[969,1211],"content":"This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached. <xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>.","nodes":[{"content":"This method returns after either the number of characters specified by the <ph id=\"ph1\">`count`</ph> parameter are read, or the end of the file is reached.","pos":[0,137],"source":"This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.TextReader.ReadBlock%2A&gt;</ph> is a blocking version of <ph id=\"ph2\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>.","pos":[138,242],"source":" <xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>."}]},{"pos":[1218,1313],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[80555,81879],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source.","nodes":[{"pos":[0,201],"content":"When this method returns, contains the specified character array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index + count - 1</ph><ept id=\"p2\">&lt;/code&gt;</ept>) replaced by the characters read from the current source.","source":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source."}],"pos":[82527,82729],"yaml":true},{"content":"The index of <code>buffer</code> at which to begin writing.","nodes":[{"pos":[0,59],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The index of <code>buffer</code> at which to begin writing."}],"pos":[82789,82849],"yaml":true},{"content":"The maximum number of characters to read.","nodes":[{"pos":[0,41],"content":"The maximum number of characters to read.","nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]}]}],"pos":[82909,82951],"yaml":true},{"content":"The number of characters that have been read, or 0 if at the end of the stream and no data was read. The number will be less than or equal to the <code>count</code> parameter, depending on whether the data is available within the stream.","nodes":[{"pos":[0,237],"content":"The number of characters that have been read, or 0 if at the end of the stream and no data was read. The number will be less than or equal to the <code>count</code> parameter, depending on whether the data is available within the stream.","nodes":[{"content":"The number of characters that have been read, or 0 if at the end of the stream and no data was read.","pos":[0,100]},{"content":"The number will be less than or equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, depending on whether the data is available within the stream.","pos":[101,237],"source":" The number will be less than or equal to the <code>count</code> parameter, depending on whether the data is available within the stream."}]}],"pos":[83007,83245],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[83394,83470],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[83572,83603],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[83717,83771],"yaml":true},{"content":"An I/O error occurs, such as the stream is closed.","nodes":[{"pos":[0,50],"content":"An I/O error occurs, such as the stream is closed.","nodes":[{"content":"An I/O error occurs, such as the stream is closed.","pos":[0,50]}]}],"pos":[83859,83910],"yaml":true},{"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","nodes":[{"pos":[0,152],"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","nodes":[{"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","pos":[0,152]}]}],"pos":[85544,85697],"yaml":true},{"content":"The task completes after either the number of characters specified by the `count` parameter are read or the end of the stream is reached.","nodes":[{"pos":[0,137],"content":"The task completes after either the number of characters specified by the <ph id=\"ph1\">`count`</ph> parameter are read or the end of the stream is reached.","source":"The task completes after either the number of characters specified by the `count` parameter are read or the end of the stream is reached."}],"pos":[85708,85846],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.","nodes":[{"pos":[0,214],"content":"When this method returns, contains the specified character array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept><ph id=\"ph3\"> + </ph><bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> - 1) replaced by the characters read from the current source.","source":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source."}],"pos":[86749,86964],"yaml":true},{"content":"The position in <code>buffer</code> at which to begin writing.","nodes":[{"pos":[0,62],"content":"The position in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The position in <code>buffer</code> at which to begin writing."}],"pos":[87024,87087],"yaml":true},{"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.","nodes":[{"pos":[0,175],"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.","nodes":[{"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.","pos":[0,175],"nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]},{"content":"If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.","pos":[42,175]}]}]}],"pos":[87147,87323],"yaml":true},{"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","nodes":[{"pos":[0,382],"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","nodes":[{"content":"A task that represents the asynchronous read operation.","pos":[0,55]},{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains the total number of characters read into the buffer.","pos":[56,165],"source":" The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer."},{"content":"The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","pos":[166,382]}]}],"pos":[87408,87791],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[87953,87984],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[88098,88152],"yaml":true},{"content":"The sum of <code>index</code> and <code>count</code> is larger than the buffer length.","nodes":[{"pos":[0,86],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is larger than the buffer length.","source":"The sum of <code>index</code> and <code>count</code> is larger than the buffer length."}],"pos":[88246,88333],"yaml":true},{"content":"The stream has been disposed.","nodes":[{"pos":[0,29],"content":"The stream has been disposed.","nodes":[{"content":"The stream has been disposed.","pos":[0,29]}]}],"pos":[88439,88469],"yaml":true},{"content":"The reader is currently in use by a previous read operation.","nodes":[{"pos":[0,60],"content":"The reader is currently in use by a previous read operation.","nodes":[{"content":"The reader is currently in use by a previous read operation.","pos":[0,60]}]}],"pos":[88579,88640],"yaml":true},{"content":"Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.","nodes":[{"pos":[0,137],"content":"Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.","nodes":[{"content":"Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.","pos":[0,137]}]}],"pos":[90349,90487],"yaml":true},{"content":"The position of the underlying stream is advanced by the number of characters that were read into `buffer`.  \n  \n The method blocks until either `count` characters are read, or the end of the stream has been reached. This is a blocking version of <xref:System.IO.StreamReader.Read%2A>.","nodes":[{"pos":[0,107],"content":"The position of the underlying stream is advanced by the number of characters that were read into <ph id=\"ph1\">`buffer`</ph>.","source":"The position of the underlying stream is advanced by the number of characters that were read into `buffer`."},{"pos":[114,285],"content":"The method blocks until either `count` characters are read, or the end of the stream has been reached. This is a blocking version of <xref:System.IO.StreamReader.Read%2A>.","nodes":[{"content":"The method blocks until either <ph id=\"ph1\">`count`</ph> characters are read, or the end of the stream has been reached.","pos":[0,102],"source":"The method blocks until either `count` characters are read, or the end of the stream has been reached."},{"content":"This is a blocking version of <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph>.","pos":[103,171],"source":" This is a blocking version of <xref:System.IO.StreamReader.Read%2A>."}]}],"pos":[90498,90788],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source.","nodes":[{"pos":[0,201],"content":"When this method returns, contains the specified character array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index + count - 1</ph><ept id=\"p2\">&lt;/code&gt;</ept>) replaced by the characters read from the current source.","source":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source."}],"pos":[90958,91160],"yaml":true},{"content":"The position in <code>buffer</code> at which to begin writing.","nodes":[{"pos":[0,62],"content":"The position in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The position in <code>buffer</code> at which to begin writing."}],"pos":[91220,91283],"yaml":true},{"content":"The maximum number of characters to read.","nodes":[{"pos":[0,41],"content":"The maximum number of characters to read.","nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]}]}],"pos":[91343,91385],"yaml":true},{"content":"The number of characters that have been read. The number will be less than or equal to <code>count</code>, depending on whether all input characters have been read.","nodes":[{"pos":[0,164],"content":"The number of characters that have been read. The number will be less than or equal to <code>count</code>, depending on whether all input characters have been read.","nodes":[{"content":"The number of characters that have been read.","pos":[0,45]},{"content":"The number will be less than or equal to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept>, depending on whether all input characters have been read.","pos":[46,164],"source":" The number will be less than or equal to <code>count</code>, depending on whether all input characters have been read."}]}],"pos":[91441,91606],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[91768,91799],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[91893,91969],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[92083,92137],"yaml":true},{"content":"The <xref href=\"System.IO.StreamReader\"></xref> is closed.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.IO.StreamReader\"></xref> is closed."}],"pos":[92243,92302],"yaml":true},{"content":"An I/O error occurred.","nodes":[{"pos":[0,22],"content":"An I/O error occurred.","nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]}],"pos":[92390,92413],"yaml":true},{"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","nodes":[{"pos":[0,152],"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","nodes":[{"content":"Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.","pos":[0,152]}]}],"pos":[94077,94230],"yaml":true},{"content":"The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the stream has been reached.","nodes":[{"pos":[0,152],"content":"The task does not complete until either the number of characters specified by the <ph id=\"ph1\">`count`</ph> parameter are read, or the end of the stream has been reached.","source":"The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the stream has been reached."}],"pos":[94241,94394],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.","nodes":[{"pos":[0,214],"content":"When this method returns, contains the specified character array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p2\">&lt;/code&gt;</ept><ph id=\"ph3\"> + </ph><bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> - 1) replaced by the characters read from the current source.","source":"When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source."}],"pos":[94665,94880],"yaml":true},{"content":"The position in <code>buffer</code> at which to begin writing.","nodes":[{"pos":[0,62],"content":"The position in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The position in <code>buffer</code> at which to begin writing."}],"pos":[94940,95003],"yaml":true},{"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.","nodes":[{"pos":[0,167],"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.","nodes":[{"content":"The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.","pos":[0,167],"nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]},{"content":"If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.","pos":[42,167]}]}]}],"pos":[95063,95231],"yaml":true},{"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","nodes":[{"pos":[0,382],"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","nodes":[{"content":"A task that represents the asynchronous read operation.","pos":[0,55]},{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains the total number of characters read into the buffer.","pos":[56,165],"source":" The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer."},{"content":"The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.","pos":[166,382]}]}],"pos":[95316,95699],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[95866,95897],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[96011,96065],"yaml":true},{"content":"The sum of <code>index</code> and <code>count</code> is larger than the buffer length.","nodes":[{"pos":[0,86],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is larger than the buffer length.","source":"The sum of <code>index</code> and <code>count</code> is larger than the buffer length."}],"pos":[96159,96246],"yaml":true},{"content":"The stream has been disposed.","nodes":[{"pos":[0,29],"content":"The stream has been disposed.","nodes":[{"content":"The stream has been disposed.","pos":[0,29]}]}],"pos":[96352,96382],"yaml":true},{"content":"The reader is currently in use by a previous read operation.","nodes":[{"pos":[0,60],"content":"The reader is currently in use by a previous read operation.","nodes":[{"content":"The reader is currently in use by a previous read operation.","pos":[0,60]}]}],"pos":[96492,96553],"yaml":true},{"content":"Reads a line of characters from the current stream and returns the data as a string.","nodes":[{"pos":[0,84],"content":"Reads a line of characters from the current stream and returns the data as a string.","nodes":[{"content":"Reads a line of characters from the current stream and returns the data as a string.","pos":[0,84]}]}],"pos":[98073,98158],"yaml":true},{"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\"), a carriage return (\"\\r\"), or a carriage return immediately followed by a line feed (\"\\r\\n\"). The string that is returned does not contain the terminating carriage return or line feed. The returned value is `null` if the end of the input stream is reached.  \n  \n This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>.  \n  \n If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,333],"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\"), a carriage return (\"\\r\"), or a carriage return immediately followed by a line feed (\"\\r\\n\"). The string that is returned does not contain the terminating carriage return or line feed. The returned value is `null` if the end of the input stream is reached.","nodes":[{"content":"A line is defined as a sequence of characters followed by a line feed (\"\\n\"), a carriage return (\"\\r\"), or a carriage return immediately followed by a line feed (\"\\r\\n\").","pos":[0,170]},{"content":"The string that is returned does not contain the terminating carriage return or line feed.","pos":[171,261]},{"content":"The returned value is <ph id=\"ph1\">`null`</ph> if the end of the input stream is reached.","pos":[262,333],"source":" The returned value is `null` if the end of the input stream is reached."}]},{"pos":[340,427],"content":"This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName&gt;</ph>.","pos":[0,87],"source":"This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>."}]},{"pos":[434,1130],"content":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","nodes":[{"content":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[0,696],"nodes":[{"content":"If the current method throws an <ph id=\"ph1\">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id=\"ph3\">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> buffer are discarded.","pos":[0,321],"source":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded."},{"content":"If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.","pos":[322,504]},{"content":"To reset the internal buffer, call the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[505,696],"source":" To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary."}]}]},{"pos":[1137,1232],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[98169,99420],"yaml":true,"extradata":"MT"},{"content":"The next line from the input stream, or `null` if the end of the input stream is reached.","nodes":[{"pos":[0,89],"content":"The next line from the input stream, or <ph id=\"ph1\">`null`</ph> if the end of the input stream is reached.","source":"The next line from the input stream, or `null` if the end of the input stream is reached."}],"pos":[100057,100147],"yaml":true},{"content":"There is insufficient memory to allocate a buffer for the returned string.","nodes":[{"pos":[0,74],"content":"There is insufficient memory to allocate a buffer for the returned string.","nodes":[{"content":"There is insufficient memory to allocate a buffer for the returned string.","pos":[0,74]}]}],"pos":[100306,100381],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[100469,100490],"yaml":true},{"content":"Reads a line of characters asynchronously from the current stream and returns the data as a string.","nodes":[{"pos":[0,99],"content":"Reads a line of characters asynchronously from the current stream and returns the data as a string.","nodes":[{"content":"Reads a line of characters asynchronously from the current stream and returns the data as a string.","pos":[0,99]}]}],"pos":[101965,102065],"yaml":true},{"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the next line from the stream, or is `null` if all the characters have been read.","nodes":[{"pos":[0,194],"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the next line from the stream, or is `null` if all the characters have been read.","nodes":[{"content":"A task that represents the asynchronous read operation.","pos":[0,55]},{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains the next line from the stream, or is <ph id=\"ph2\">`null`</ph> if all the characters have been read.","pos":[56,194],"source":" The value of the <code>TResult</code> parameter contains the next line from the stream, or is `null` if all the characters have been read."}]}],"pos":[102770,102965],"yaml":true},{"content":"The number of characters in the next line is larger than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,100],"content":"The number of characters in the next line is larger than <ph id=\"ph1\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The number of characters in the next line is larger than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[103143,103244],"yaml":true},{"content":"The stream has been disposed.","nodes":[{"pos":[0,29],"content":"The stream has been disposed.","nodes":[{"content":"The stream has been disposed.","pos":[0,29]}]}],"pos":[103350,103380],"yaml":true},{"content":"The reader is currently in use by a previous read operation.","nodes":[{"pos":[0,60],"content":"The reader is currently in use by a previous read operation.","nodes":[{"content":"The reader is currently in use by a previous read operation.","pos":[0,60]}]}],"pos":[103490,103551],"yaml":true},{"content":"Reads all characters from the current position to the end of the stream.","nodes":[{"pos":[0,72],"content":"Reads all characters from the current position to the end of the stream.","nodes":[{"content":"Reads all characters from the current position to the end of the stream.","pos":[0,72]}]}],"pos":[105077,105150],"yaml":true},{"content":"This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=fullName>.  \n  \n <xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream. If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.  \n  \n <xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end. For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.  \n  \n Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream. If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).  \n  \n If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,88],"content":"This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=fullName&gt;</ph>.","pos":[0,88],"source":"This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=fullName>."}]},{"pos":[95,473],"content":"<xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream. If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.","nodes":[{"content":"<xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream. If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.","pos":[0,378],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> works best when you need to read all the input from the current position to the end of the stream.","pos":[0,141],"source":"<xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream."},{"content":"If more control is needed over how many characters are read from the stream, use the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload, which generally results in better performance.","pos":[142,378],"source":" If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance."}]}]},{"pos":[480,822],"content":"<xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end. For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.","nodes":[{"content":"<xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end. For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.","pos":[0,342],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> assumes that the stream knows when it has reached an end.","pos":[0,100],"source":"<xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end."},{"content":"For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.ReadToEnd%2A&gt;</ph> might block indefinitely because it does not reach an end, and should be avoided.","pos":[101,342],"source":" For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided."}]}]},{"pos":[829,1117],"content":"Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream. If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).","nodes":[{"content":"Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream. If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).","pos":[0,288],"nodes":[{"content":"Note that when using the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.Read%2A&gt;</ph> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.","pos":[0,167],"source":"Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream."},{"content":"If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).","pos":[168,288]}]}]},{"pos":[1124,1820],"content":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","nodes":[{"content":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[0,696],"nodes":[{"content":"If the current method throws an <ph id=\"ph1\">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id=\"ph3\">&lt;xref:System.IO.StreamReader.ReadLine%2A&gt;</ph> buffer are discarded.","pos":[0,321],"source":"If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded."},{"content":"If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.","pos":[322,504]},{"content":"To reset the internal buffer, call the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.","pos":[505,696],"source":" To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary."}]}]},{"pos":[1827,1922],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[105161,107096],"yaml":true,"extradata":"MT"},{"content":"The rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string (\"\").","nodes":[{"pos":[0,156],"content":"The rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string (\"\").","nodes":[{"content":"The rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string (\"\").","pos":[0,156],"nodes":[{"content":"The rest of the stream as a string, from the current position to the end.","pos":[0,73]},{"content":"If the current position is at the end of the stream, returns an empty string (\"\").","pos":[74,156]}]}]}],"pos":[107738,107895],"yaml":true},{"content":"There is insufficient memory to allocate a buffer for the returned string.","nodes":[{"pos":[0,74],"content":"There is insufficient memory to allocate a buffer for the returned string.","nodes":[{"content":"There is insufficient memory to allocate a buffer for the returned string.","pos":[0,74]}]}],"pos":[108055,108130],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[108218,108239],"yaml":true},{"content":"Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.","nodes":[{"pos":[0,118],"content":"Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.","nodes":[{"content":"Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.","pos":[0,118]}]}],"pos":[109720,109839],"yaml":true},{"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains a string with the characters from the current position to the end of the stream.","nodes":[{"pos":[0,193],"content":"A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains a string with the characters from the current position to the end of the stream.","nodes":[{"content":"A task that represents the asynchronous read operation.","pos":[0,55]},{"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains a string with the characters from the current position to the end of the stream.","pos":[56,193],"source":" The value of the <code>TResult</code> parameter contains a string with the characters from the current position to the end of the stream."}]}],"pos":[110544,110738],"yaml":true},{"content":"The number of characters is larger than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,83],"content":"The number of characters is larger than <ph id=\"ph1\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The number of characters is larger than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[110917,111001],"yaml":true},{"content":"The stream has been disposed.","nodes":[{"pos":[0,29],"content":"The stream has been disposed.","nodes":[{"content":"The stream has been disposed.","pos":[0,29]}]}],"pos":[111107,111137],"yaml":true},{"content":"The reader is currently in use by a previous read operation.","nodes":[{"pos":[0,60],"content":"The reader is currently in use by a previous read operation.","nodes":[{"content":"The reader is currently in use by a previous read operation.","pos":[0,60]}]}],"pos":[111247,111308],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.StreamReader\n  commentId: T:System.IO.StreamReader\n  id: StreamReader\n  children:\n  - System.IO.StreamReader.#ctor(System.IO.Stream)\n  - System.IO.StreamReader.#ctor(System.String)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  - System.IO.StreamReader.BaseStream\n  - System.IO.StreamReader.Close\n  - System.IO.StreamReader.CurrentEncoding\n  - System.IO.StreamReader.DiscardBufferedData\n  - System.IO.StreamReader.Dispose(System.Boolean)\n  - System.IO.StreamReader.EndOfStream\n  - System.IO.StreamReader.Null\n  - System.IO.StreamReader.Peek\n  - System.IO.StreamReader.Read\n  - System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadLine\n  - System.IO.StreamReader.ReadLineAsync\n  - System.IO.StreamReader.ReadToEnd\n  - System.IO.StreamReader.ReadToEndAsync\n  langs:\n  - csharp\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n  type: Class\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Implements a <xref href=\"System.IO.TextReader\"></xref> that reads characters from a byte stream in a particular encoding.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamreader.cs#b5fe1efcec14de32). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n <xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output. Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n  \\n <xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system. UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system. If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.  \\n  \\n By default, a <xref:System.IO.StreamReader> is not thread safe. See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \\n  \\n The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter. These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=fullName> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=fullName>, which read and write the number of bytes specified by the `count` parameter. Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements.  \\n  \\n> [!NOTE]\\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example uses an instance of <xref:System.IO.StreamReader> to read text from a file. The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.  \\n  \\n [!code-cpp[readtextfile#1](~/samples/snippets/cpp/VS_Snippets_CLR/ReadTextFile/CPP/readtextfile.cpp#1)]\\n [!code-csharp[readtextfile#1](~/samples/snippets/csharp/VS_Snippets_CLR/ReadTextFile/CS/readtextfile.cs#1)]\\n [!code-vb[readtextfile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ReadTextFile/VB/readtextfile.vb#1)]  \\n  \\n The following example instantiates a <xref:System.IO.StreamReader> object and calls its <xref:System.IO.StreamReader.ReadAsync%2A> method to read a file asynchronously.  \\n  \\n [!code-csharp[System.IO.StreamReader#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/asyncex1.cs#51)]\\n [!code-vb[System.IO.StreamReader#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/asyncex1.vb#51)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class StreamReader : System.IO.TextReader\n  inheritance:\n  - System.Object\n  - System.IO.TextReader\n  implements: []\n  inheritedMembers:\n  - System.IO.TextReader.Dispose\n  - System.IO.TextReader.Synchronized(System.IO.TextReader)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream)\n  nameWithType: StreamReader.StreamReader(Stream)\n  fullName: StreamReader.StreamReader(Stream)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream.\n  remarks: \"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \\n  \\n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[strmreader ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor1/CPP/strmreader ctor1.cpp#1)]\\n [!code-csharp[strmreader ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor1/CS/strmreader ctor1.cs#1)]\\n [!code-vb[strmreader ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor1/VB/strmreader ctor1.vb#1)]\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be read.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> does not support reading.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.String)\n  commentId: M:System.IO.StreamReader.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String)\n  nameWithType: StreamReader.StreamReader(String)\n  fullName: StreamReader.StreamReader(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name.\n  remarks: \"The complete file path is specified by the `path` parameter. This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[strmreader ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor2/CPP/strmreader ctor2.cpp#1)]\\n [!code-csharp[strmreader ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor2/CS/strmreader ctor2.cs#1)]\\n [!code-vb[strmreader ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor2/VB/strmreader ctor2.vb#1)]\"\n  syntax:\n    content: public StreamReader (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to be read.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified byte order mark detection option.\n  remarks: \"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \\n  \\n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be read.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> does not support reading.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream, Encoding)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding)\n  fullName: StreamReader.StreamReader(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding.\n  remarks: \"The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> does not support reading.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  commentId: M:System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String, Boolean)\n  nameWithType: StreamReader.StreamReader(String, Boolean)\n  fullName: StreamReader.StreamReader(String, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified byte order mark detection option.\n  remarks: \"This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the <xref:System.Text.UTF8Encoding> is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (string path, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to be read.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  commentId: M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  id: '#ctor(System.String,System.Text.Encoding)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String, Encoding)\n  nameWithType: StreamReader.StreamReader(String, Encoding)\n  fullName: StreamReader.StreamReader(String, Encoding)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding.\n  remarks: \"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes. The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>encoding</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream, Encoding, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding and byte order mark detection option.\n  remarks: \"This constructor initializes the encoding as specified by the `encoding` parameter, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.  \\n  \\n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> does not support reading.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  commentId: M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.String,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String, Encoding, Boolean)\n  nameWithType: StreamReader.StreamReader(String, Encoding, Boolean)\n  fullName: StreamReader.StreamReader(String, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding and byte order mark detection option.\n  remarks: \"This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.  \\n  \\n The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>encoding</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream, Encoding, Boolean, Int32)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size.\n  remarks: \"The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \\n  \\n This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!NOTE]\\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n    - id: bufferSize\n      type: System.Int32\n      description: The minimum buffer size.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support reading.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>bufferSize</code> is less than or equal to zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  commentId: M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  id: '#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String, Encoding, Boolean, Int32)\n  nameWithType: StreamReader.StreamReader(String, Encoding, Boolean, Int32)\n  fullName: StreamReader.StreamReader(String, Encoding, Boolean, Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size.\n  remarks: \"This constructor initializes the encoding as specified by the `encoding` parameter.  \\n  \\n This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this <xref:System.IO.StreamReader> constructor.  \\n  \\n [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]\\n [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]\\n [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]\"\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to be read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Indicates whether to look for byte order marks at the beginning of the file.\n    - id: bufferSize\n      type: System.Int32\n      description: The minimum buffer size, in number of 16-bit characters.\n  overload: System.IO.StreamReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an empty string (\"\").\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>encoding</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>buffersize</code> is less than or equal to zero.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  commentId: M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamReader\"></xref> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open.\n  remarks: \"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter. If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.  \\n  \\n This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object. If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks. Otherwise, the user-provided encoding is used. See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=fullName> method for more information.  \\n  \\n> [!NOTE]\\n>  When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.\"\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: '`true` to look for byte order marks at the beginning of the file; otherwise, `false`.'\n    - id: bufferSize\n      type: System.Int32\n      description: The minimum buffer size.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after the <xref href=\"System.IO.StreamReader\"></xref> object is disposed; otherwise, `false`.'\n  overload: System.IO.StreamReader.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.BaseStream\n  commentId: P:System.IO.StreamReader.BaseStream\n  id: BaseStream\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: StreamReader.BaseStream\n  fullName: StreamReader.BaseStream\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Returns the underlying stream.\n  remarks: \"You use this property to access the underlying stream. The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary. The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: The underlying stream.\n  overload: System.IO.StreamReader.BaseStream*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Close\n  commentId: M:System.IO.StreamReader.Close\n  id: Close\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: StreamReader.Close()\n  fullName: StreamReader.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Closes the <xref href=\"System.IO.StreamReader\"></xref> object and the underlying stream, and releases any system resources associated with the reader.\n  remarks: \"This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName> method.  \\n  \\n This implementation of <xref:System.IO.StreamReader.Close%2A> calls the <xref:System.IO.StreamReader.Dispose%2A> method passing a `true` value.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.  \\n  \\n Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions.\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.IO.StreamReader.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.CurrentEncoding\n  commentId: P:System.IO.StreamReader.CurrentEncoding\n  id: CurrentEncoding\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: CurrentEncoding\n  nameWithType: StreamReader.CurrentEncoding\n  fullName: StreamReader.CurrentEncoding\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets the current character encoding that the current <xref href=\"System.IO.StreamReader\"></xref> object is using.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example gets the encoding of the specified <xref:System.IO.StreamReader> object.  \\n  \\n [!code-cpp[strmreader currentencoding#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader CurrentEncoding/CPP/strmreader currentencoding.cpp#1)]\\n [!code-csharp[strmreader currentencoding#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader CurrentEncoding/CS/strmreader currentencoding.cs#1)]\\n [!code-vb[strmreader currentencoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader CurrentEncoding/VB/strmreader currentencoding.vb#1)]\"\n  syntax:\n    content: public virtual System.Text.Encoding CurrentEncoding { get; }\n    return:\n      type: System.Text.Encoding\n      description: The current character encoding used by the current reader. The value can be different after the first call to any <xref href=\"System.IO.StreamReader.Read*\"></xref> method of <xref href=\"System.IO.StreamReader\"></xref>, since encoding autodetection is not done until the first call to a <xref href=\"System.IO.StreamReader.Read*\"></xref> method.\n  overload: System.IO.StreamReader.CurrentEncoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.DiscardBufferedData\n  commentId: M:System.IO.StreamReader.DiscardBufferedData\n  id: DiscardBufferedData\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: DiscardBufferedData()\n  nameWithType: StreamReader.DiscardBufferedData()\n  fullName: StreamReader.DiscardBufferedData()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Clears the internal buffer.\n  remarks: \"Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object. You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match. These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream. This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows a scenario where the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method must be called to synchronize the internal buffer and the underlying stream. The file in the example is used to illustrate position and consists of the text `abcdefghijklmnopqrstuvwxyz`. By calling <xref:System.IO.StreamReader.DiscardBufferedData%2A> after the data is read, the example works as expected. After the first 15 characters are read, the position is reset to the offset value of 2 and all the remaining characters are read. If you remove the call to <xref:System.IO.StreamReader.DiscardBufferedData%2A>, the example does not work as expected. The first 15 characters are read, but only the position of the underlying stream is reset. The internal buffer of the <xref:System.IO.StreamReader> object is still on the 16th character. Therefore, <xref:System.IO.StreamReader.ReadToEnd%2A> returns all the characters in the buffer plus the characters in the underlying stream starting from the reset position.  \\n  \\n [!code-csharp[System.IO.StreamReader#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/program.cs#30)]\\n [!code-vb[System.IO.StreamReader#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/module1.vb#30)]\"\n  syntax:\n    content: public void DiscardBufferedData ();\n    parameters: []\n  overload: System.IO.StreamReader.DiscardBufferedData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Dispose(System.Boolean)\n  commentId: M:System.IO.StreamReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: StreamReader.Dispose(Boolean)\n  fullName: StreamReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Closes the underlying stream, releases the unmanaged resources used by the <xref href=\"System.IO.StreamReader\"></xref>, and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references. This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.  \\n  \\n .\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.StreamReader.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.EndOfStream\n  commentId: P:System.IO.StreamReader.EndOfStream\n  id: EndOfStream\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: EndOfStream\n  nameWithType: StreamReader.EndOfStream\n  fullName: StreamReader.EndOfStream\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets a value that indicates whether the current stream position is at the end of the stream.\n  syntax:\n    content: public bool EndOfStream { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current stream position is at the end of the stream; otherwise `false`.'\n  overload: System.IO.StreamReader.EndOfStream*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The underlying stream has been disposed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Null\n  commentId: F:System.IO.StreamReader.Null\n  id: \"Null\"\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: StreamReader.Null\n  fullName: StreamReader.Null\n  type: Field\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: A <xref href=\"System.IO.StreamReader\"></xref> object around an empty stream.\n  remarks: \"When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned. When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static readonly System.IO.StreamReader Null;\n    return:\n      type: System.IO.StreamReader\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Peek\n  commentId: M:System.IO.StreamReader.Peek\n  id: Peek\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Peek()\n  nameWithType: StreamReader.Peek()\n  fullName: StreamReader.Peek()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Returns the next available character but does not consume it.\n  remarks: \"The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred. This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.  \\n  \\n This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=fullName>.  \\n  \\n The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>.\"\n  example:\n  - \"The following code example reads lines from a file until the end of the file is reached.  \\n  \\n [!code-cpp[strmreader peek#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Peek/CPP/strmreader peek.cpp#1)]\\n [!code-csharp[strmreader peek#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Peek/CS/strmreader peek.cs#1)]\\n [!code-vb[strmreader peek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Peek/VB/strmreader peek.vb#1)]\"\n  syntax:\n    content: public override int Peek ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.\n  overload: System.IO.StreamReader.Peek*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Read\n  commentId: M:System.IO.StreamReader.Read\n  id: Read\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: StreamReader.Read()\n  fullName: StreamReader.Read()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the next character from the input stream and advances the character position by one character.\n  remarks: \"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.  \\n  \\n This method returns an integer so that it can return -1 if the end of the stream has been reached. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates a simple use of the <xref:System.IO.StreamReader.Read%2A> method.  \\n  \\n [!code-cpp[strmreader read1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read1/CPP/strmreader read1.cpp#1)]\\n [!code-csharp[strmreader read1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read1/CS/strmreader read1.cs#1)]\\n [!code-vb[strmreader read1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read1/VB/strmreader read1.vb#1)]  \\n  \\n The following code example demonstrates reading a single character using the <xref:System.IO.StreamReader.Read> method overload, formatting the ASCII integer output as decimal and hexadecimal.  \\n  \\n [!code-cpp[StrmRdrRead#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmRdrRead/CPP/strmrdrread.cpp#1)]\\n [!code-csharp[StrmRdrRead#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmRdrRead/CS/strmrdrread.cs#1)]\\n [!code-vb[StrmRdrRead#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmRdrRead/VB/strmrdrread.vb#1)]\"\n  syntax:\n    content: public override int Read ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The next character from the input stream represented as an <xref href=\"System.Int32\"></xref> object, or -1 if no more characters are available.\n  overload: System.IO.StreamReader.Read*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  id: Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Read(Char[], Int32, Int32)\n  nameWithType: StreamReader.Read(Char[], Int32, Int32)\n  fullName: StreamReader.Read(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.\n  remarks: \"This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=fullName>.  \\n  \\n This method returns an integer so that it can return 0 if the end of the stream has been reached.  \\n  \\n When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size. If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes). If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \\n  \\n This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached. <xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example reads five characters at a time until the end of the file is reached.  \\n  \\n [!code-cpp[strmreader read2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read2/CPP/strmreader read2.cpp#1)]\\n [!code-csharp[strmreader read2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read2/CS/strmreader read2.cs#1)]\\n [!code-vb[strmreader read2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read2/VB/strmreader read2.vb#1)]\"\n  syntax:\n    content: public override int Read (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source.\n    - id: index\n      type: System.Int32\n      description: The index of <code>buffer</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to read.\n    return:\n      type: System.Int32\n      description: The number of characters that have been read, or 0 if at the end of the stream and no data was read. The number will be less than or equal to the <code>count</code> parameter, depending on whether the data is available within the stream.\n  overload: System.IO.StreamReader.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs, such as the stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  id: ReadAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadAsync(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadAsync(Char[], Int32, Int32)\n  fullName: StreamReader.ReadAsync(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.\n  remarks: The task completes after either the number of characters specified by the `count` parameter are read or the end of the stream is reached.\n  example:\n  - \"The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method. It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.  \\n  \\n [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]\\n [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task<int> ReadAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.\n    - id: index\n      type: System.Int32\n      description: The position in <code>buffer</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.\n  overload: System.IO.StreamReader.ReadAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The sum of <code>index</code> and <code>count</code> is larger than the buffer length.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream has been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The reader is currently in use by a previous read operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  id: ReadBlock(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadBlock(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadBlock(Char[], Int32, Int32)\n  fullName: StreamReader.ReadBlock(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.\n  remarks: \"The position of the underlying stream is advanced by the number of characters that were read into `buffer`.  \\n  \\n The method blocks until either `count` characters are read, or the end of the stream has been reached. This is a blocking version of <xref:System.IO.StreamReader.Read%2A>.\"\n  syntax:\n    content: public override int ReadBlock (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index + count - 1</code>) replaced by the characters read from the current source.\n    - id: index\n      type: System.Int32\n      description: The position in <code>buffer</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to read.\n    return:\n      type: System.Int32\n      description: The number of characters that have been read. The number will be less than or equal to <code>count</code>, depending on whether all input characters have been read.\n  overload: System.IO.StreamReader.ReadBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.StreamReader\"></xref> is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  id: ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadBlockAsync(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadBlockAsync(Char[], Int32, Int32)\n  fullName: StreamReader.ReadBlockAsync(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.\n  remarks: The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the stream has been reached.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task<int> ReadBlockAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.\n    - id: index\n      type: System.Int32\n      description: The position in <code>buffer</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to read. If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of characters read into the buffer. The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.\n  overload: System.IO.StreamReader.ReadBlockAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The sum of <code>index</code> and <code>count</code> is larger than the buffer length.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream has been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The reader is currently in use by a previous read operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadLine\n  commentId: M:System.IO.StreamReader.ReadLine\n  id: ReadLine\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadLine()\n  nameWithType: StreamReader.ReadLine()\n  fullName: StreamReader.ReadLine()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a line of characters from the current stream and returns the data as a string.\n  remarks: \"A line is defined as a sequence of characters followed by a line feed (\\\"\\\\n\\\"), a carriage return (\\\"\\\\r\\\"), or a carriage return immediately followed by a line feed (\\\"\\\\r\\\\n\\\"). The string that is returned does not contain the terminating carriage return or line feed. The returned value is `null` if the end of the input stream is reached.  \\n  \\n This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>.  \\n  \\n If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example reads lines from a file until the end of the file is reached.  \\n  \\n [!code-cpp[strmreader readline#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadLine/CPP/strmreader readline.cpp#1)]\\n [!code-csharp[strmreader readline#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadLine/CS/strmreader readline.cs#1)]\\n [!code-vb[strmreader readline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadLine/VB/strmreader readline.vb#1)]\"\n  syntax:\n    content: public override string ReadLine ();\n    parameters: []\n    return:\n      type: System.String\n      description: The next line from the input stream, or `null` if the end of the input stream is reached.\n  overload: System.IO.StreamReader.ReadLine*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to allocate a buffer for the returned string.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadLineAsync\n  commentId: M:System.IO.StreamReader.ReadLineAsync\n  id: ReadLineAsync\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadLineAsync()\n  nameWithType: StreamReader.ReadLineAsync()\n  fullName: StreamReader.ReadLineAsync()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a line of characters asynchronously from the current stream and returns the data as a string.\n  remarks: ''\n  example:\n  - \"The following example shows how to read the first line of a file by using the <xref:System.IO.StreamReader.ReadLineAsync> method.  \\n  \\n [!code-csharp[System.IO.StreamReader#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example41.cs#41)]\\n [!code-vb[System.IO.StreamReader#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example41.vb#41)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task<string> ReadLineAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the next line from the stream, or is `null` if all the characters have been read.\n  overload: System.IO.StreamReader.ReadLineAsync*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The number of characters in the next line is larger than <xref href=\"System.Int32.MaxValue\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream has been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The reader is currently in use by a previous read operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadToEnd\n  commentId: M:System.IO.StreamReader.ReadToEnd\n  id: ReadToEnd\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadToEnd()\n  nameWithType: StreamReader.ReadToEnd()\n  fullName: StreamReader.ReadToEnd()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads all characters from the current position to the end of the stream.\n  remarks: \"This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=fullName>.  \\n  \\n <xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream. If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.  \\n  \\n <xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end. For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.  \\n  \\n Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream. If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).  \\n  \\n If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded. If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer. To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example reads all the way to the end of a file in one operation.  \\n  \\n [!code-cpp[strmreader readtoend#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadToEnd/CPP/strmreader readtoend.cpp#1)]\\n [!code-csharp[strmreader readtoend#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadToEnd/CS/strmreader readtoend.cs#1)]\\n [!code-vb[strmreader readtoend#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadToEnd/VB/strmreader readtoend.vb#1)]\"\n  syntax:\n    content: public override string ReadToEnd ();\n    parameters: []\n    return:\n      type: System.String\n      description: The rest of the stream as a string, from the current position to the end. If the current position is at the end of the stream, returns an empty string (\"\").\n  overload: System.IO.StreamReader.ReadToEnd*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to allocate a buffer for the returned string.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamReader.ReadToEndAsync\n  commentId: M:System.IO.StreamReader.ReadToEndAsync\n  id: ReadToEndAsync\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadToEndAsync()\n  nameWithType: StreamReader.ReadToEndAsync()\n  fullName: StreamReader.ReadToEndAsync()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.\n  remarks: ''\n  example:\n  - \"The following example shows how to read the contents of a file by using the <xref:System.IO.StreamReader.ReadToEndAsync> method.  \\n  \\n [!code-csharp[System.IO.StreamReader#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example40.cs#40)]\\n [!code-vb[System.IO.StreamReader#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example40.vb#40)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task<string> ReadToEndAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains a string with the characters from the current position to the end of the stream.\n  overload: System.IO.StreamReader.ReadToEndAsync*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The number of characters is larger than <xref href=\"System.Int32.MaxValue\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream has been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The reader is currently in use by a previous read operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.IO.DirectoryNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream)\n  nameWithType: StreamReader.StreamReader(Stream)\n  fullName: StreamReader.StreamReader(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.StreamReader.#ctor(System.String)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String)\n  nameWithType: StreamReader.StreamReader(String)\n  fullName: StreamReader.StreamReader(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream, Encoding)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding)\n  fullName: StreamReader.StreamReader(Stream, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String, Boolean)\n  nameWithType: StreamReader.StreamReader(String, Boolean)\n  fullName: StreamReader.StreamReader(String, Boolean)\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String, Encoding)\n  nameWithType: StreamReader.StreamReader(String, Encoding)\n  fullName: StreamReader.StreamReader(String, Encoding)\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream, Encoding, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean)\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String, Encoding, Boolean)\n  nameWithType: StreamReader.StreamReader(String, Encoding, Boolean)\n  fullName: StreamReader.StreamReader(String, Encoding, Boolean)\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream, Encoding, Boolean, Int32)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String, Encoding, Boolean, Int32)\n  nameWithType: StreamReader.StreamReader(String, Encoding, Boolean, Int32)\n  fullName: StreamReader.StreamReader(String, Encoding, Boolean, Int32)\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n  nameWithType: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n  fullName: StreamReader.StreamReader(Stream, Encoding, Boolean, Int32, Boolean)\n- uid: System.IO.StreamReader.BaseStream\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: StreamReader.BaseStream\n  fullName: StreamReader.BaseStream\n- uid: System.IO.StreamReader.Close\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Close()\n  nameWithType: StreamReader.Close()\n  fullName: StreamReader.Close()\n- uid: System.IO.StreamReader.CurrentEncoding\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: CurrentEncoding\n  nameWithType: StreamReader.CurrentEncoding\n  fullName: StreamReader.CurrentEncoding\n- uid: System.IO.StreamReader.DiscardBufferedData\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: DiscardBufferedData()\n  nameWithType: StreamReader.DiscardBufferedData()\n  fullName: StreamReader.DiscardBufferedData()\n- uid: System.IO.StreamReader.Dispose(System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: StreamReader.Dispose(Boolean)\n  fullName: StreamReader.Dispose(Boolean)\n- uid: System.IO.StreamReader.EndOfStream\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: EndOfStream\n  nameWithType: StreamReader.EndOfStream\n  fullName: StreamReader.EndOfStream\n- uid: System.IO.StreamReader.Null\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: \"Null\"\n  nameWithType: StreamReader.Null\n  fullName: StreamReader.Null\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n- uid: System.IO.StreamReader.Peek\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Peek()\n  nameWithType: StreamReader.Peek()\n  fullName: StreamReader.Peek()\n- uid: System.IO.StreamReader.Read\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Read()\n  nameWithType: StreamReader.Read()\n  fullName: StreamReader.Read()\n- uid: System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Read(Char[], Int32, Int32)\n  nameWithType: StreamReader.Read(Char[], Int32, Int32)\n  fullName: StreamReader.Read(Char[], Int32, Int32)\n- uid: System.Char\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadAsync(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadAsync(Char[], Int32, Int32)\n  fullName: StreamReader.ReadAsync(Char[], Int32, Int32)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlock(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadBlock(Char[], Int32, Int32)\n  fullName: StreamReader.ReadBlock(Char[], Int32, Int32)\n- uid: System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlockAsync(Char[], Int32, Int32)\n  nameWithType: StreamReader.ReadBlockAsync(Char[], Int32, Int32)\n  fullName: StreamReader.ReadBlockAsync(Char[], Int32, Int32)\n- uid: System.IO.StreamReader.ReadLine\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLine()\n  nameWithType: StreamReader.ReadLine()\n  fullName: StreamReader.ReadLine()\n- uid: System.IO.StreamReader.ReadLineAsync\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLineAsync()\n  nameWithType: StreamReader.ReadLineAsync()\n  fullName: StreamReader.ReadLineAsync()\n- uid: System.Threading.Tasks.Task{System.String}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<String>\n  nameWithType: Task<String>\n  fullName: System.Threading.Tasks.Task<System.String>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.StreamReader.ReadToEnd\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEnd()\n  nameWithType: StreamReader.ReadToEnd()\n  fullName: StreamReader.ReadToEnd()\n- uid: System.IO.StreamReader.ReadToEndAsync\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEndAsync()\n  nameWithType: StreamReader.ReadToEndAsync()\n  fullName: StreamReader.ReadToEndAsync()\n- uid: System.IO.StreamReader.#ctor*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader\n  nameWithType: StreamReader.StreamReader\n  fullName: StreamReader.StreamReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.BaseStream*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: StreamReader.BaseStream\n  fullName: StreamReader.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.Close*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Close\n  nameWithType: StreamReader.Close\n  fullName: StreamReader.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.CurrentEncoding*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: CurrentEncoding\n  nameWithType: StreamReader.CurrentEncoding\n  fullName: StreamReader.CurrentEncoding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.DiscardBufferedData*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: DiscardBufferedData\n  nameWithType: StreamReader.DiscardBufferedData\n  fullName: StreamReader.DiscardBufferedData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.Dispose*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Dispose\n  nameWithType: StreamReader.Dispose\n  fullName: StreamReader.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.EndOfStream*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: EndOfStream\n  nameWithType: StreamReader.EndOfStream\n  fullName: StreamReader.EndOfStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.Peek*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Peek\n  nameWithType: StreamReader.Peek\n  fullName: StreamReader.Peek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.Read*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Read\n  nameWithType: StreamReader.Read\n  fullName: StreamReader.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadAsync*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadAsync\n  nameWithType: StreamReader.ReadAsync\n  fullName: StreamReader.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadBlock*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlock\n  nameWithType: StreamReader.ReadBlock\n  fullName: StreamReader.ReadBlock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadBlockAsync*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlockAsync\n  nameWithType: StreamReader.ReadBlockAsync\n  fullName: StreamReader.ReadBlockAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadLine*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLine\n  nameWithType: StreamReader.ReadLine\n  fullName: StreamReader.ReadLine\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadLineAsync*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLineAsync\n  nameWithType: StreamReader.ReadLineAsync\n  fullName: StreamReader.ReadLineAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadToEnd*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEnd\n  nameWithType: StreamReader.ReadToEnd\n  fullName: StreamReader.ReadToEnd\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.IO.StreamReader.ReadToEndAsync*\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEndAsync\n  nameWithType: StreamReader.ReadToEndAsync\n  fullName: StreamReader.ReadToEndAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.TextReader.Dispose\n  parent: System.IO.TextReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: TextReader.Dispose()\n  fullName: TextReader.Dispose()\n- uid: System.IO.TextReader.Synchronized(System.IO.TextReader)\n  parent: System.IO.TextReader\n  isExternal: false\n  name: Synchronized(TextReader)\n  nameWithType: TextReader.Synchronized(TextReader)\n  fullName: TextReader.Synchronized(TextReader)\n"}