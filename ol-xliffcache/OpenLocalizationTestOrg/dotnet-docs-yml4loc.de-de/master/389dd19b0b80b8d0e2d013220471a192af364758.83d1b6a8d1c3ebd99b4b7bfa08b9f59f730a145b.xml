{"nodes":[{"content":"Represents the sequence of dashes and gaps that will be applied by a <xref href=\"System.Windows.Media.Pen\"></xref>.","nodes":[{"pos":[0,115],"content":"Represents the sequence of dashes and gaps that will be applied by a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the sequence of dashes and gaps that will be applied by a <xref href=\"System.Windows.Media.Pen\"></xref>."}],"pos":[832,948],"yaml":true},{"content":"The <xref:System.Windows.Media.DashStyle.Dashes%2A> property of this class describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  \n  \n> [!NOTE]\n>  The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  \n  \n If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.  \n  \n Negative values in the array are interpreted as their absolute value.","nodes":[{"pos":[0,471],"content":"The <xref:System.Windows.Media.DashStyle.Dashes%2A> property of this class describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.DashStyle.Dashes%2A&gt;</ph> property of this class describes the length of alternating dashes and gaps.","pos":[0,127],"source":"The <xref:System.Windows.Media.DashStyle.Dashes%2A> property of this class describes the length of alternating dashes and gaps."},{"content":"The values in the collection are in terms of multiples of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Pen&gt;</ph>.","pos":[129,275],"source":"  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>."},{"content":"For example, an array of <ph id=\"ph1\">`1`</ph>,<ph id=\"ph2\">`2`</ph> specifies a dash of length (<ph id=\"ph3\">`1`</ph><ph id=\"ph4\"> * </ph><ph id=\"ph5\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>) followed by a gap of length (<ph id=\"ph6\">`2`</ph><ph id=\"ph7\"> * </ph><ph id=\"ph8\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>).","pos":[277,471],"source":"  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>)."}]},{"pos":[479,1202],"content":"[!NOTE]\n The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).","leadings":["","> "],"nodes":[{"content":" The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).","pos":[8,721],"nodes":[{"content":"The actual length of the dash that is drawn depends on the style of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph> that is added to each end of the dash.","pos":[1,150],"source":" The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph> value for a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Pen&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Windows.Media.PenLineCap.Square&gt;</ph>.","pos":[151,299],"source":" The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>."},{"content":"This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke.","pos":[300,410]},{"content":"(See <ph id=\"ph1\">&lt;xref:System.Windows.Media.PenLineCap&gt;</ph> for an example.) Therefore, if you specify an array of <ph id=\"ph2\">`0`</ph>, <ph id=\"ph3\">`2`</ph> and a square <ph id=\"ph4\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph>, the actual dash length will be (<ph id=\"ph5\">`0`</ph><ph id=\"ph6\"> * </ph><ph id=\"ph7\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>) + (<ph id=\"ph8\">`2`</ph><ph id=\"ph9\"> * </ph><ph id=\"ph10\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph>).","pos":[411,713],"source":" (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>)."}]}]},{"pos":[1209,1488],"content":"If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.","nodes":[{"content":"If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.","pos":[0,153]},{"content":"For example, a collection containing <ph id=\"ph1\">`2`</ph>,<ph id=\"ph2\">`3`</ph>,<ph id=\"ph3\">`5`</ph> is interpreted the same as a collection containing <ph id=\"ph4\">`2`</ph>,<ph id=\"ph5\">`3`</ph>,<ph id=\"ph6\">`5`</ph>,<ph id=\"ph7\">`2`</ph>,<ph id=\"ph8\">`3`</ph>,<ph id=\"ph9\">`5`</ph>.","pos":[155,279],"source":"  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`."}]},{"pos":[1495,1564],"content":"Negative values in the array are interpreted as their absolute value.","nodes":[{"content":"Negative values in the array are interpreted as their absolute value.","pos":[0,69]}]}],"pos":[959,2533],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class."}],"pos":[8488,8581],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class with the specified <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> and <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref>.","nodes":[{"pos":[0,233],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.DashStyle.Dashes\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.DashStyle.Offset\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class with the specified <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> and <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref>."}],"pos":[9887,10121],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle.Dashes\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>."}],"pos":[10351,10474],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle.Offset\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>."}],"pos":[10536,10659],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref>, making deep copies of this object's values.","nodes":[{"pos":[0,131],"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref>, making deep copies of this object's values."}],"pos":[11595,11727],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  \n  \n When copying dependency properties, this method copies resource references and data bindings (they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]},{"pos":[350,517],"content":"When copying dependency properties, this method copies resource references and data bindings (they might no longer resolve) but not animations or their current values.","nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (they might no longer resolve) but not animations or their current values.","pos":[0,167]}]}],"pos":[11738,12262],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true.`</ph>","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`"}]}],"pos":[12426,12659],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref> object, making deep copies of this object's current values.","nodes":[{"pos":[0,146],"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.","source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref> object, making deep copies of this object's current values."}],"pos":[13667,13814],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.  \n  \n Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,355],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]},{"pos":[362,458],"content":"Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[0,96]}]}],"pos":[13825,14290],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`.","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`.","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true`</ph>.","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`."}]}],"pos":[14466,14699],"yaml":true},{"content":"Gets or sets the collection of dashes and gaps in this <xref href=\"System.Windows.Media.DashStyle\"></xref>.","nodes":[{"pos":[0,107],"content":"Gets or sets the collection of dashes and gaps in this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the collection of dashes and gaps in this <xref href=\"System.Windows.Media.DashStyle\"></xref>."}],"pos":[16754,16862],"yaml":true},{"content":"This collection describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  \n  \n> [!NOTE]\n>  The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  \n  \n If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.  \n  \n Negative values in the array are interpreted as their absolute value.  \n  \n<a name=\"dependencyPropertyInfo_Dashes\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.DashStyle.DashesProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,412],"content":"This collection describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).","nodes":[{"content":"This collection describes the length of alternating dashes and gaps.","pos":[0,68]},{"content":"The values in the collection are in terms of multiples of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Pen&gt;</ph>.","pos":[70,216],"source":"  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>."},{"content":"For example, an array of <ph id=\"ph1\">`1`</ph>,<ph id=\"ph2\">`2`</ph> specifies a dash of length (<ph id=\"ph3\">`1`</ph><ph id=\"ph4\"> * </ph><ph id=\"ph5\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>) followed by a gap of length (<ph id=\"ph6\">`2`</ph><ph id=\"ph7\"> * </ph><ph id=\"ph8\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>).","pos":[218,412],"source":"  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>)."}]},{"pos":[420,1143],"content":"[!NOTE]\n The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).","leadings":["","> "],"nodes":[{"content":" The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).","pos":[8,721],"nodes":[{"content":"The actual length of the dash that is drawn depends on the style of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph> that is added to each end of the dash.","pos":[1,150],"source":" The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph> value for a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Pen&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Windows.Media.PenLineCap.Square&gt;</ph>.","pos":[151,299],"source":" The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>."},{"content":"This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke.","pos":[300,410]},{"content":"(See <ph id=\"ph1\">&lt;xref:System.Windows.Media.PenLineCap&gt;</ph> for an example.) Therefore, if you specify an array of <ph id=\"ph2\">`0`</ph>, <ph id=\"ph3\">`2`</ph> and a square <ph id=\"ph4\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph>, the actual dash length will be (<ph id=\"ph5\">`0`</ph><ph id=\"ph6\"> * </ph><ph id=\"ph7\">&lt;xref:System.Windows.Media.Pen.Thickness%2A&gt;</ph>) + (<ph id=\"ph8\">`2`</ph><ph id=\"ph9\"> * </ph><ph id=\"ph10\">&lt;xref:System.Windows.Media.Pen.DashCap%2A&gt;</ph>).","pos":[411,713],"source":" (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>)."}]}]},{"pos":[1150,1429],"content":"If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.","nodes":[{"content":"If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.","pos":[0,153]},{"content":"For example, a collection containing <ph id=\"ph1\">`2`</ph>,<ph id=\"ph2\">`3`</ph>,<ph id=\"ph3\">`5`</ph> is interpreted the same as a collection containing <ph id=\"ph4\">`2`</ph>,<ph id=\"ph5\">`3`</ph>,<ph id=\"ph6\">`5`</ph>,<ph id=\"ph7\">`2`</ph>,<ph id=\"ph8\">`3`</ph>,<ph id=\"ph9\">`5`</ph>.","pos":[155,279],"source":"  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`."}]},{"pos":[1436,1505],"content":"Negative values in the array are interpreted as their absolute value.","nodes":[{"content":"Negative values in the array are interpreted as their absolute value.","pos":[0,69]}]},{"pos":[1562,1593],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[1614,1630],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1631,1683],"content":"<xref:System.Windows.Media.DashStyle.DashesProperty>","nodes":[]},{"pos":[1688,1721],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[1722,1726],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[16873,18620],"yaml":true,"extradata":"MT"},{"content":"The collection of dashes and gaps.  The default is an empty <xref href=\"System.Windows.Media.DoubleCollection\"></xref>.","nodes":[{"pos":[0,119],"content":"The collection of dashes and gaps.  The default is an empty <xref href=\"System.Windows.Media.DoubleCollection\"></xref>.","nodes":[{"content":"The collection of dashes and gaps.","pos":[0,34]},{"content":"The default is an empty <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DoubleCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[36,119],"source":"  The default is an empty <xref href=\"System.Windows.Media.DoubleCollection\"></xref>."}]}],"pos":[19129,19249],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> dependency property.","nodes":[{"pos":[0,94],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle.Dashes\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> dependency property."}],"pos":[20233,20328],"yaml":true},{"content":"Gets or sets how far in the dash sequence the stroke will start.","nodes":[{"pos":[0,64],"content":"Gets or sets how far in the dash sequence the stroke will start.","nodes":[{"content":"Gets or sets how far in the dash sequence the stroke will start.","pos":[0,64]}]}],"pos":[21392,21457],"yaml":true},{"content":"It is strongly recommended to use an offset value that resolves to the middle of any dash.  This will make most strokes start and end in mid dash rather than at a gap.  \n  \n<a name=\"dependencyPropertyInfo_Offset\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.DashStyle.OffsetProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,167],"content":"It is strongly recommended to use an offset value that resolves to the middle of any dash.  This will make most strokes start and end in mid dash rather than at a gap.","nodes":[{"content":"It is strongly recommended to use an offset value that resolves to the middle of any dash.  This will make most strokes start and end in mid dash rather than at a gap.","pos":[0,167],"nodes":[{"content":"It is strongly recommended to use an offset value that resolves to the middle of any dash.","pos":[0,90]},{"content":"This will make most strokes start and end in mid dash rather than at a gap.","pos":[92,167]}]}]},{"pos":[224,255],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[276,292],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[293,345],"content":"<xref:System.Windows.Media.DashStyle.OffsetProperty>","nodes":[]},{"pos":[350,383],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[384,388],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[21468,21870],"yaml":true,"extradata":"MT"},{"content":"The offset for the dash sequence.  The default is 0.","nodes":[{"pos":[0,52],"content":"The offset for the dash sequence.  The default is 0.","nodes":[{"content":"The offset for the dash sequence.  The default is 0.","pos":[0,52],"nodes":[{"content":"The offset for the dash sequence.","pos":[0,33]},{"content":"The default is 0.","pos":[35,52]}]}]}],"pos":[21985,22038],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> dependency property.","nodes":[{"pos":[0,94],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DashStyle.Offset\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> dependency property."}],"pos":[23022,23117],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.DashStyle\n  commentId: T:System.Windows.Media.DashStyle\n  id: DashStyle\n  children:\n  - System.Windows.Media.DashStyle.#ctor\n  - System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)\n  - System.Windows.Media.DashStyle.Clone\n  - System.Windows.Media.DashStyle.CloneCurrentValue\n  - System.Windows.Media.DashStyle.CreateInstanceCore\n  - System.Windows.Media.DashStyle.Dashes\n  - System.Windows.Media.DashStyle.DashesProperty\n  - System.Windows.Media.DashStyle.Offset\n  - System.Windows.Media.DashStyle.OffsetProperty\n  langs:\n  - csharp\n  name: DashStyle\n  nameWithType: DashStyle\n  fullName: System.Windows.Media.DashStyle\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Represents the sequence of dashes and gaps that will be applied by a <xref href=\"System.Windows.Media.Pen\"></xref>.\n  remarks: \"The <xref:System.Windows.Media.DashStyle.Dashes%2A> property of this class describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  \\n  \\n> [!NOTE]\\n>  The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  \\n  \\n If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.  \\n  \\n Negative values in the array are interpreted as their absolute value.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Media.DashStyle> property of a <xref:System.Windows.Media.Pen> to create a dashed line under text.  \\n  \\n [!code-xml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  \\n  \\n The following illustration shows what the preceding example produces.  \\n  \\n ![Text with dashed line underneath.](~/add/media/graphicsdashstyle.gif \\\"Text with dashed line underneath.\\\")  \\n  \\n The following illustration shows examples of different dash styles applied to an underline.  \\n  \\n ![Shows several different dash styles.](~/add/media/graphicsdashstyles.gif \\\"Shows several different dash styles.\\\")\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public sealed class DashStyle : System.Windows.Media.Animation.Animatable\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.#ctor\n  commentId: M:System.Windows.Media.DashStyle.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: DashStyle()\n  nameWithType: DashStyle.DashStyle()\n  fullName: DashStyle.DashStyle()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class.\n  syntax:\n    content: public DashStyle ();\n    parameters: []\n  overload: System.Windows.Media.DashStyle.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)\n  commentId: M:System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)'\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: DashStyle(IEnumerable<Double>, Double)\n  nameWithType: DashStyle.DashStyle(IEnumerable<Double>, Double)\n  fullName: DashStyle.DashStyle(IEnumerable<Double>, Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.DashStyle\"></xref> class with the specified <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> and <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref>.\n  syntax:\n    content: public DashStyle (System.Collections.Generic.IEnumerable<double> dashes, double offset);\n    parameters:\n    - id: dashes\n      type: System.Collections.Generic.IEnumerable{System.Double}\n      description: The <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>.\n    - id: offset\n      type: System.Double\n      description: The <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> of the <xref href=\"System.Windows.Media.DashStyle\"></xref>.\n  overload: System.Windows.Media.DashStyle.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.Clone\n  commentId: M:System.Windows.Media.DashStyle.Clone\n  id: Clone\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DashStyle.Clone()\n  fullName: DashStyle.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref>, making deep copies of this object's values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  \\n  \\n When copying dependency properties, this method copies resource references and data bindings (they might no longer resolve) but not animations or their current values.\"\n  syntax:\n    content: public System.Windows.Media.DashStyle Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.DashStyle\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`\n  overload: System.Windows.Media.DashStyle.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.CloneCurrentValue\n  commentId: M:System.Windows.Media.DashStyle.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: DashStyle.CloneCurrentValue()\n  fullName: DashStyle.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.DashStyle\"></xref> object, making deep copies of this object's current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.  \\n  \\n Resource references, data bindings, and animations are not copied, but their current values are.\"\n  syntax:\n    content: public System.Windows.Media.DashStyle CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.DashStyle\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`.\n  overload: System.Windows.Media.DashStyle.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.CreateInstanceCore\n  commentId: M:System.Windows.Media.DashStyle.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: DashStyle.CreateInstanceCore()\n  fullName: DashStyle.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Media.DashStyle.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.Dashes\n  commentId: P:System.Windows.Media.DashStyle.Dashes\n  id: Dashes\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: Dashes\n  nameWithType: DashStyle.Dashes\n  fullName: DashStyle.Dashes\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the collection of dashes and gaps in this <xref href=\"System.Windows.Media.DashStyle\"></xref>.\n  remarks: \"This collection describes the length of alternating dashes and gaps.  The values in the collection are in terms of multiples of the <xref:System.Windows.Media.Pen.Thickness%2A> of the <xref:System.Windows.Media.Pen>.  For example, an array of `1`,`2` specifies a dash of length (`1` * <xref:System.Windows.Media.Pen.Thickness%2A>) followed by a gap of length (`2` * <xref:System.Windows.Media.Pen.Thickness%2A>).  \\n  \\n> [!NOTE]\\n>  The actual length of the dash that is drawn depends on the style of <xref:System.Windows.Media.Pen.DashCap%2A> that is added to each end of the dash. The default <xref:System.Windows.Media.Pen.DashCap%2A> value for a <xref:System.Windows.Media.Pen> is <xref:System.Windows.Media.PenLineCap.Square>. This causes an end cap that is one half the thickness of the line to be added onto each end of the pen stroke. (See <xref:System.Windows.Media.PenLineCap> for an example.) Therefore, if you specify an array of `0`, `2` and a square <xref:System.Windows.Media.Pen.DashCap%2A>, the actual dash length will be (`0` * <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2` * <xref:System.Windows.Media.Pen.DashCap%2A>).  \\n  \\n If there are an odd number of values in the collection, the values are interpreted as if they had been repeated once to produce an even number of values.  For example, a collection containing `2`,`3`,`5` is interpreted the same as a collection containing `2`,`3`,`5`,`2`,`3`,`5`.  \\n  \\n Negative values in the array are interpreted as their absolute value.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Dashes\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.DashStyle.DashesProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example shows how to use the <xref:System.Windows.Media.DashStyle> property of a <xref:System.Windows.Media.Pen> to create a dashed line under text.  \\n  \\n [!code-xml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]\"\n  syntax:\n    content: public System.Windows.Media.DoubleCollection Dashes { get; set; }\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: The collection of dashes and gaps.  The default is an empty <xref href=\"System.Windows.Media.DoubleCollection\"></xref>.\n  overload: System.Windows.Media.DashStyle.Dashes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.DashesProperty\n  commentId: F:System.Windows.Media.DashStyle.DashesProperty\n  id: DashesProperty\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: DashesProperty\n  nameWithType: DashStyle.DashesProperty\n  fullName: DashStyle.DashesProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.DashStyle.Dashes\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DashesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.Offset\n  commentId: P:System.Windows.Media.DashStyle.Offset\n  id: Offset\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: Offset\n  nameWithType: DashStyle.Offset\n  fullName: DashStyle.Offset\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets how far in the dash sequence the stroke will start.\n  remarks: \"It is strongly recommended to use an offset value that resolves to the middle of any dash.  This will make most strokes start and end in mid dash rather than at a gap.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Offset\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.DashStyle.OffsetProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public double Offset { get; set; }\n    return:\n      type: System.Double\n      description: The offset for the dash sequence.  The default is 0.\n  overload: System.Windows.Media.DashStyle.Offset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.DashStyle.OffsetProperty\n  commentId: F:System.Windows.Media.DashStyle.OffsetProperty\n  id: OffsetProperty\n  parent: System.Windows.Media.DashStyle\n  langs:\n  - csharp\n  name: OffsetProperty\n  nameWithType: DashStyle.OffsetProperty\n  fullName: DashStyle.OffsetProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.DashStyle.Offset\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.DashStyle.#ctor\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: DashStyle()\n  nameWithType: DashStyle.DashStyle()\n  fullName: DashStyle.DashStyle()\n- uid: System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: DashStyle(IEnumerable<Double>, Double)\n  nameWithType: DashStyle.DashStyle(IEnumerable<Double>, Double)\n  fullName: DashStyle.DashStyle(IEnumerable<Double>, Double)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Double\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Collections.Generic.IEnumerable{System.Double}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Double>\n  nameWithType: IEnumerable<Double>\n  fullName: System.Collections.Generic.IEnumerable<System.Double>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: System.Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.DashStyle.Clone\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Clone()\n  nameWithType: DashStyle.Clone()\n  fullName: DashStyle.Clone()\n- uid: System.Windows.Media.DashStyle\n  parent: System.Windows.Media\n  isExternal: false\n  name: DashStyle\n  nameWithType: DashStyle\n  fullName: System.Windows.Media.DashStyle\n- uid: System.Windows.Media.DashStyle.CloneCurrentValue\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: DashStyle.CloneCurrentValue()\n  fullName: DashStyle.CloneCurrentValue()\n- uid: System.Windows.Media.DashStyle.CreateInstanceCore\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: DashStyle.CreateInstanceCore()\n  fullName: DashStyle.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DashStyle.Dashes\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Dashes\n  nameWithType: DashStyle.Dashes\n  fullName: DashStyle.Dashes\n- uid: System.Windows.Media.DoubleCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n- uid: System.Windows.Media.DashStyle.DashesProperty\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: DashesProperty\n  nameWithType: DashStyle.DashesProperty\n  fullName: DashStyle.DashesProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.DashStyle.Offset\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Offset\n  nameWithType: DashStyle.Offset\n  fullName: DashStyle.Offset\n- uid: System.Windows.Media.DashStyle.OffsetProperty\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: OffsetProperty\n  nameWithType: DashStyle.OffsetProperty\n  fullName: DashStyle.OffsetProperty\n- uid: System.Windows.Media.DashStyle.#ctor*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: DashStyle\n  nameWithType: DashStyle.DashStyle\n  fullName: DashStyle.DashStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.Clone*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Clone\n  nameWithType: DashStyle.Clone\n  fullName: DashStyle.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.CloneCurrentValue*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: DashStyle.CloneCurrentValue\n  fullName: DashStyle.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.CreateInstanceCore*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: DashStyle.CreateInstanceCore\n  fullName: DashStyle.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.Dashes*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Dashes\n  nameWithType: DashStyle.Dashes\n  fullName: DashStyle.Dashes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.Media.DashStyle.Offset*\n  parent: System.Windows.Media.DashStyle\n  isExternal: false\n  name: Offset\n  nameWithType: DashStyle.Offset\n  fullName: DashStyle.Offset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/DashStyle.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n"}