{"nodes":[{"content":"Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.","nodes":[{"pos":[0,134],"content":"Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.","nodes":[{"content":"Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.","pos":[0,134],"nodes":[{"content":"Controls access to Directory Services objects.","pos":[0,46]},{"content":"This class represents an Access Control Entry (ACE) associated with a directory object.","pos":[47,134]}]}]}],"pos":[1103,1238],"yaml":true},{"content":"Initiates a new instance of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initiates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> class.","source":"Initiates a new instance of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> class."}],"pos":[5245,5345],"yaml":true},{"content":"The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).","nodes":[{"pos":[0,105],"content":"The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).","nodes":[{"content":"The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).","pos":[0,105]}]}],"pos":[5776,5882],"yaml":true},{"content":"The use of the new ACE.","nodes":[{"pos":[0,23],"content":"The use of the new ACE.","nodes":[{"content":"The use of the new ACE.","pos":[0,23]}]}],"pos":[5976,6000],"yaml":true},{"content":"The access mask for the ACE.","nodes":[{"pos":[0,28],"content":"The access mask for the ACE.","nodes":[{"content":"The access mask for the ACE.","pos":[0,28]}]}],"pos":[6065,6094],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> associated with the new ACE.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> associated with the new ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> associated with the new ACE."}],"pos":[6184,6283],"yaml":true},{"content":"Whether the <code>type</code> and <code>inheritedType</code> parameters contain valid object GUIDs.","nodes":[{"pos":[0,99],"content":"Whether the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritedType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters contain valid object GUIDs.","source":"Whether the <code>type</code> and <code>inheritedType</code> parameters contain valid object GUIDs."}],"pos":[6375,6475],"yaml":true},{"content":"A GUID that identifies the object type to which the new ACE applies.","nodes":[{"pos":[0,68],"content":"A GUID that identifies the object type to which the new ACE applies.","nodes":[{"content":"A GUID that identifies the object type to which the new ACE applies.","pos":[0,68]}]}],"pos":[6533,6602],"yaml":true},{"content":"A GUID that identifies the object type that can inherit the new ACE.","nodes":[{"pos":[0,68],"content":"A GUID that identifies the object type that can inherit the new ACE.","nodes":[{"content":"A GUID that identifies the object type that can inherit the new ACE.","pos":[0,68]}]}],"pos":[6669,6738],"yaml":true},{"content":"`true` if the new ACE is a callback type ACE.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">`true`</ph> if the new ACE is a callback type ACE.","source":"`true` if the new ACE is a callback type ACE."}],"pos":[6805,6853],"yaml":true},{"content":"Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,260],"content":"Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method.","nodes":[{"content":"Opaque data associated with the new ACE.","pos":[0,40]},{"content":"This is allowed only for callback ACE types.","pos":[41,85]},{"content":"The length of this array must not be greater than the return value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","pos":[86,260],"source":" The length of this array must not be greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method."}]}],"pos":[6915,7176],"yaml":true},{"content":"The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,241],"content":"The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method."}],"pos":[7363,7605],"yaml":true},{"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"pos":[0,332],"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"content":"Gets the length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,139],"source":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object."},{"content":"This length should be used before marshaling the ACL into a binary array with the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method.","pos":[140,332],"source":" This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method."}]}],"pos":[8806,9139],"yaml":true},{"content":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.","nodes":[{"pos":[0,134],"content":"The length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object."}],"pos":[9260,9395],"yaml":true},{"content":"Marshals the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object into the specified byte array beginning at the specified offset.","nodes":[{"pos":[0,161],"content":"Marshals the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object into the specified byte array beginning at the specified offset.","source":"Marshals the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object into the specified byte array beginning at the specified offset."}],"pos":[10812,10974],"yaml":true},{"content":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is marshaled.","nodes":[{"pos":[0,120],"content":"The byte array into which the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> is marshaled.","source":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is marshaled."}],"pos":[11147,11268],"yaml":true},{"content":"The offset at which to start marshaling.","nodes":[{"pos":[0,40],"content":"The offset at which to start marshaling.","nodes":[{"content":"The offset at which to start marshaling.","pos":[0,40]}]}],"pos":[11329,11370],"yaml":true},{"content":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> to be copied into <code>array</code>.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> to be copied into <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> to be copied into <code>array</code>."}],"pos":[11565,11728],"yaml":true},{"content":"Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents.","nodes":[{"pos":[0,178],"content":"Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object represents.","source":"Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents."}],"pos":[12989,13168],"yaml":true},{"content":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent>, this property is ignored.","nodes":[{"pos":[0,230],"content":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent>, this property is ignored.","nodes":[{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A&gt;</ph> parameter does not contain the value <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent&gt;</ph>, this property is ignored.","pos":[0,230],"source":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent>, this property is ignored."}]}],"pos":[13179,13410],"yaml":true,"extradata":"MT"},{"content":"The GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents.","nodes":[{"pos":[0,165],"content":"The GUID of the object type that can inherit the Access Control Entry (ACE) that this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object represents.","source":"The GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents."}],"pos":[13537,13703],"yaml":true},{"content":"Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","nodes":[{"pos":[0,112],"content":"Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","nodes":[{"content":"Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","pos":[0,112]}]}],"pos":[15088,15201],"yaml":true},{"content":"True if the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is a callback ACE type.","nodes":[{"pos":[0,96],"content":"True if the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> is a callback ACE type.","source":"True if the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is a callback ACE type."}],"pos":[15360,15457],"yaml":true},{"content":"The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","nodes":[{"pos":[0,104],"content":"The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","nodes":[{"content":"The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).","pos":[0,104]}]}],"pos":[15513,15618],"yaml":true},{"content":"Gets or sets flags that specify whether the <xref href=\"System.Security.AccessControl.ObjectAce.ObjectAceType\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce.InheritedObjectAceType\"></xref> properties contain values that identify valid object types.","nodes":[{"pos":[0,266],"content":"Gets or sets flags that specify whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce.ObjectAceType\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectAce.InheritedObjectAceType\"&gt;&lt;/xref&gt;</ph> properties contain values that identify valid object types.","source":"Gets or sets flags that specify whether the <xref href=\"System.Security.AccessControl.ObjectAce.ObjectAceType\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce.InheritedObjectAceType\"></xref> properties contain values that identify valid object types."}],"pos":[16917,17184],"yaml":true},{"content":"On or more members of the <xref href=\"System.Security.AccessControl.ObjectAceFlags\"></xref> enumeration combined with a logical OR operation.","nodes":[{"pos":[0,141],"content":"On or more members of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAceFlags\"&gt;&lt;/xref&gt;</ph> enumeration combined with a logical OR operation.","source":"On or more members of the <xref href=\"System.Security.AccessControl.ObjectAceFlags\"></xref> enumeration combined with a logical OR operation."}],"pos":[17376,17518],"yaml":true},{"content":"Gets or sets the GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.","nodes":[{"pos":[0,130],"content":"Gets or sets the GUID of the object type associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object."}],"pos":[18810,18941],"yaml":true},{"content":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent>, this property is ignored.","nodes":[{"pos":[0,221],"content":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent>, this property is ignored.","nodes":[{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A&gt;</ph> parameter does not contain the value <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent&gt;</ph>, this property is ignored.","pos":[0,221],"source":"If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent>, this property is ignored."}]}],"pos":[18952,19174],"yaml":true,"extradata":"MT"},{"content":"The GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.","nodes":[{"pos":[0,117],"content":"The GUID of the object type associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object."}],"pos":[19292,19410],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.ObjectAce\n  commentId: T:System.Security.AccessControl.ObjectAce\n  id: ObjectAce\n  children:\n  - System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  - System.Security.AccessControl.ObjectAce.BinaryLength\n  - System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  - System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  - System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  - System.Security.AccessControl.ObjectAce.ObjectAceType\n  langs:\n  - csharp\n  name: ObjectAce\n  nameWithType: ObjectAce\n  fullName: System.Security.AccessControl.ObjectAce\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.\n  syntax:\n    content: 'public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  - System.Security.AccessControl.QualifiedAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  - System.Security.AccessControl.QualifiedAce.AceQualifier\n  - System.Security.AccessControl.QualifiedAce.GetOpaque\n  - System.Security.AccessControl.QualifiedAce.IsCallback\n  - System.Security.AccessControl.QualifiedAce.OpaqueLength\n  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  commentId: M:System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])'\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n  nameWithType: ObjectAce.ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n  fullName: ObjectAce.ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initiates a new instance of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> class.\n  syntax:\n    content: public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);\n    parameters:\n    - id: aceFlags\n      type: System.Security.AccessControl.AceFlags\n      description: The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).\n    - id: qualifier\n      type: System.Security.AccessControl.AceQualifier\n      description: The use of the new ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> associated with the new ACE.\n    - id: flags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Whether the <code>type</code> and <code>inheritedType</code> parameters contain valid object GUIDs.\n    - id: type\n      type: System.Guid\n      description: A GUID that identifies the object type to which the new ACE applies.\n    - id: inheritedType\n      type: System.Guid\n      description: A GUID that identifies the object type that can inherit the new ACE.\n    - id: isCallback\n      type: System.Boolean\n      description: '`true` if the new ACE is a callback type ACE.'\n    - id: opaque\n      type: System.Byte[]\n      description: Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method.\n  overload: System.Security.AccessControl.ObjectAce.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <xref href=\"System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\"></xref> method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.BinaryLength\n  commentId: P:System.Security.AccessControl.ObjectAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: ObjectAce.BinaryLength\n  fullName: ObjectAce.BinaryLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.\n  overload: System.Security.AccessControl.ObjectAce.BinaryLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: ObjectAce.GetBinaryForm(Byte[], Int32)\n  fullName: ObjectAce.GetBinaryForm(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Marshals the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object into the specified byte array beginning at the specified offset.\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array into which the contents of the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is marshaled.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to start marshaling.\n  overload: System.Security.AccessControl.ObjectAce.GetBinaryForm*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> to be copied into <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  commentId: P:System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  id: InheritedObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: InheritedObjectAceType\n  nameWithType: ObjectAce.InheritedObjectAceType\n  fullName: ObjectAce.InheritedObjectAceType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents.\n  remarks: If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent>, this property is ignored.\n  syntax:\n    content: public Guid InheritedObjectAceType { get; set; }\n    return:\n      type: System.Guid\n      description: The GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object represents.\n  overload: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  commentId: M:System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  id: MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)\n  fullName: ObjectAce.MaxOpaqueLength(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).\n  syntax:\n    content: public static int MaxOpaqueLength (bool isCallback);\n    parameters:\n    - id: isCallback\n      type: System.Boolean\n      description: True if the <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> is a callback ACE type.\n    return:\n      type: System.Int32\n      description: The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).\n  overload: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  commentId: P:System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  id: ObjectAceFlags\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAceFlags\n  nameWithType: ObjectAce.ObjectAceFlags\n  fullName: ObjectAce.ObjectAceFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets flags that specify whether the <xref href=\"System.Security.AccessControl.ObjectAce.ObjectAceType\"></xref> and <xref href=\"System.Security.AccessControl.ObjectAce.InheritedObjectAceType\"></xref> properties contain values that identify valid object types.\n  syntax:\n    content: public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }\n    return:\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: On or more members of the <xref href=\"System.Security.AccessControl.ObjectAceFlags\"></xref> enumeration combined with a logical OR operation.\n  overload: System.Security.AccessControl.ObjectAce.ObjectAceFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceType\n  commentId: P:System.Security.AccessControl.ObjectAce.ObjectAceType\n  id: ObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAceType\n  nameWithType: ObjectAce.ObjectAceType\n  fullName: ObjectAce.ObjectAceType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.\n  remarks: If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent>, this property is ignored.\n  syntax:\n    content: public Guid ObjectAceType { get; set; }\n    return:\n      type: System.Guid\n      description: The GUID of the object type associated with this <xref href=\"System.Security.AccessControl.ObjectAce\"></xref> object.\n  overload: System.Security.AccessControl.ObjectAce.ObjectAceType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.QualifiedAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: QualifiedAce\n  nameWithType: QualifiedAce\n  fullName: System.Security.AccessControl.QualifiedAce\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n  nameWithType: ObjectAce.ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n  fullName: ObjectAce.ObjectAce(AceFlags, AceQualifier, Int32, SecurityIdentifier, ObjectAceFlags, Guid, Guid, Boolean, Byte[])\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Security.AccessControl.AceQualifier\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceQualifier\n  nameWithType: AceQualifier\n  fullName: System.Security.AccessControl.AceQualifier\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.ObjectAce.BinaryLength\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: ObjectAce.BinaryLength\n  fullName: ObjectAce.BinaryLength\n- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: ObjectAce.GetBinaryForm(Byte[], Int32)\n  fullName: ObjectAce.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: InheritedObjectAceType\n  nameWithType: ObjectAce.InheritedObjectAceType\n  fullName: ObjectAce.InheritedObjectAceType\n- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)\n  fullName: ObjectAce.MaxOpaqueLength(Boolean)\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAce.ObjectAceFlags\n  fullName: ObjectAce.ObjectAceFlags\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceType\n  nameWithType: ObjectAce.ObjectAceType\n  fullName: ObjectAce.ObjectAceType\n- uid: System.Security.AccessControl.ObjectAce.#ctor*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAce\n  nameWithType: ObjectAce.ObjectAce\n  fullName: ObjectAce.ObjectAce\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.BinaryLength*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: ObjectAce.BinaryLength\n  fullName: ObjectAce.BinaryLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: ObjectAce.GetBinaryForm\n  fullName: ObjectAce.GetBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: InheritedObjectAceType\n  nameWithType: ObjectAce.InheritedObjectAceType\n  fullName: ObjectAce.InheritedObjectAceType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: MaxOpaqueLength\n  nameWithType: ObjectAce.MaxOpaqueLength\n  fullName: ObjectAce.MaxOpaqueLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAce.ObjectAceFlags\n  fullName: ObjectAce.ObjectAceFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceType*\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceType\n  nameWithType: ObjectAce.ObjectAceType\n  fullName: ObjectAce.ObjectAceType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectAce.xml\n- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GenericAce.Equals(Object)\n  fullName: GenericAce.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.AccessControl.GenericAce.GetHashCode\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GenericAce.GetHashCode()\n  fullName: GenericAce.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.GenericAce.AceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n- uid: System.Security.AccessControl.GenericAce.AceType\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n- uid: System.Security.AccessControl.GenericAce.AuditFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n- uid: System.Security.AccessControl.GenericAce.Copy\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Copy()\n  nameWithType: GenericAce.Copy()\n  fullName: GenericAce.Copy()\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: CreateFromBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n- uid: System.Security.AccessControl.GenericAce.IsInherited\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Equality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Equality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Inequality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n- uid: System.Security.AccessControl.KnownAce.AccessMask\n  parent: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: AccessMask\n  nameWithType: KnownAce.AccessMask\n  fullName: KnownAce.AccessMask\n- uid: System.Security.AccessControl.KnownAce.SecurityIdentifier\n  parent: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: KnownAce.SecurityIdentifier\n  fullName: KnownAce.SecurityIdentifier\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: QualifiedAce.AceQualifier\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: GetOpaque()\n  nameWithType: QualifiedAce.GetOpaque()\n  fullName: QualifiedAce.GetOpaque()\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: QualifiedAce.IsCallback\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: QualifiedAce.OpaqueLength\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: SetOpaque(Byte[])\n  nameWithType: QualifiedAce.SetOpaque(Byte[])\n  fullName: QualifiedAce.SetOpaque(Byte[])\n"}