{"nodes":[{"content":"Indicates that the current interface implementer is a reference to another object.","nodes":[{"pos":[0,82],"content":"Indicates that the current interface implementer is a reference to another object.","nodes":[{"content":"Indicates that the current interface implementer is a reference to another object.","pos":[0,82]}]}],"pos":[565,648],"yaml":true},{"content":"Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.","nodes":[{"pos":[0,113],"content":"Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.","nodes":[{"content":"Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.","pos":[0,113]}]}],"pos":[2853,2967],"yaml":true},{"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.  \n  \n For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.  \n  \n This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.","nodes":[{"pos":[0,513],"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.","nodes":[{"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.","pos":[0,513],"nodes":[{"content":"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.","pos":[0,111]},{"content":"When the proxy-creator object is deserialized, deserialization calls its <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> method.","pos":[112,262],"source":" When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method."},{"content":"At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.","pos":[263,423]},{"content":"Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.","pos":[424,513]}]}]},{"pos":[520,1156],"content":"For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.","nodes":[{"content":"For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.","pos":[0,636],"nodes":[{"content":"For example, consider how <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> objects are serialized.","pos":[0,68],"source":"For example, consider how <xref:System.Type> objects are serialized."},{"content":"Instead of transmitting the data from the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.IObjectReference&gt;</ph>.","pos":[69,337],"source":" Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>."},{"content":"When both the type name and assembly name are available, the deserialization infrastructure calls <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A&gt;</ph> on the holder object that has been transmitted.","pos":[338,553],"source":" When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted."},{"content":"This holder returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that is inserted into the graph.","pos":[554,636],"source":" This holder returns the <xref:System.Type> object that is inserted into the graph."}]}]},{"pos":[1163,1432],"content":"This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.","nodes":[{"content":"This method is protected by a <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt;</ph> specified.","pos":[0,269],"source":"This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified."}]}],"pos":[2978,4417],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> from which the current object is deserialized.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> from which the current object is deserialized.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> from which the current object is deserialized."}],"pos":[5199,5317],"yaml":true},{"content":"Returns the actual object that is put into the graph.","nodes":[{"pos":[0,53],"content":"Returns the actual object that is put into the graph.","nodes":[{"content":"Returns the actual object that is put into the graph.","pos":[0,53]}]}],"pos":[5374,5428],"yaml":true},{"content":"The caller does not have the required permission. The call will not work on a medium trusted server.","nodes":[{"pos":[0,100],"content":"The caller does not have the required permission. The call will not work on a medium trusted server.","nodes":[{"content":"The caller does not have the required permission. The call will not work on a medium trusted server.","pos":[0,100],"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]},{"content":"The call will not work on a medium trusted server.","pos":[50,100]}]}]}],"pos":[5627,5728],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.IObjectReference\n  commentId: T:System.Runtime.Serialization.IObjectReference\n  id: IObjectReference\n  children:\n  - System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: IObjectReference\n  nameWithType: IObjectReference\n  fullName: System.Runtime.Serialization.IObjectReference\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.Serialization\n  summary: Indicates that the current interface implementer is a reference to another object.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]\n     [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]\n     [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IObjectReference\n  derivedClasses:\n  - System.Reflection.ParameterInfo\n  - System.Runtime.Remoting.ObjRef\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/IObjectReference.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  id: GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Serialization.IObjectReference\n  langs:\n  - csharp\n  name: GetRealObject(StreamingContext)\n  nameWithType: IObjectReference.GetRealObject(StreamingContext)\n  fullName: IObjectReference.GetRealObject(StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.Serialization\n  summary: Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.\n  remarks: \"This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.  \\n  \\n For example, consider how <xref:System.Type> objects are serialized. Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>. When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted. This holder returns the <xref:System.Type> object that is inserted into the graph.  \\n  \\n This method is protected by a <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> specified.\"\n  example:\n  - >-\n    [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]\n     [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]\n     [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public object GetRealObject (System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> from which the current object is deserialized.\n    return:\n      type: System.Object\n      description: Returns the actual object that is put into the graph.\n  overload: System.Runtime.Serialization.IObjectReference.GetRealObject*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission. The call will not work on a medium trusted server.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/IObjectReference.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Serialization.IObjectReference\n  isExternal: false\n  name: GetRealObject(StreamingContext)\n  nameWithType: IObjectReference.GetRealObject(StreamingContext)\n  fullName: IObjectReference.GetRealObject(StreamingContext)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Runtime.Serialization.IObjectReference.GetRealObject*\n  parent: System.Runtime.Serialization.IObjectReference\n  isExternal: false\n  name: GetRealObject\n  nameWithType: IObjectReference.GetRealObject\n  fullName: IObjectReference.GetRealObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/IObjectReference.xml\n"}