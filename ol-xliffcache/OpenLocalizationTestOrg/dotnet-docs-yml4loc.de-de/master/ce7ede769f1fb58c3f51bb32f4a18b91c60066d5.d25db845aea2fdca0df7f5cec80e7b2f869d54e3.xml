{"nodes":[{"content":"Provides static methods for the creation, copying, deletion, moving, and opening of a single file, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects.","nodes":[{"pos":[0,177],"content":"Provides static methods for the creation, copying, deletion, moving, and opening of a single file, and aids in the creation of <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> objects.","source":"Provides static methods for the creation, copying, deletion, moving, and opening of a single file, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects."}],"pos":[5616,5794],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the <xref:System.IO.File> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the <xref:System.IO.File> class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the <xref:System.IO.File> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.File> members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all <xref:System.IO.File> methods are static, it might be more efficient to use a <xref:System.IO.File> method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All <xref:System.IO.File> methods require the path to the file that you are manipulating.  \n  \n The static methods of the <xref:System.IO.File> class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.File> methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,406],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,402],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)</ept>.","pos":[1,165],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[166,394],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[413,944],"content":"Use the <xref:System.IO.File> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the <xref:System.IO.File> class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.","nodes":[{"content":"Use the <xref:System.IO.File> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the <xref:System.IO.File> class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.","pos":[0,531],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time.","pos":[0,164],"source":"Use the <xref:System.IO.File> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time."},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> class to get and set file attributes or <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> information related to the creation, access, and writing of a file.","pos":[165,338],"source":" You can also use the <xref:System.IO.File> class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file."},{"content":"If you want to perform operations on multiple files, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName&gt;</ph>.","pos":[339,531],"source":" If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>."}]}]},{"pos":[951,1287],"content":"Many of the <xref:System.IO.File> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.File> members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.","nodes":[{"content":"Many of the <xref:System.IO.File> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.File> members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.","pos":[0,336],"nodes":[{"content":"Many of the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> methods return other I/O types when you create or open files.","pos":[0,95],"source":"Many of the <xref:System.IO.File> methods return other I/O types when you create or open files."},{"content":"You can use these other types to further manipulate a file.","pos":[96,155]},{"content":"For more information, see specific <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> members such as <ph id=\"ph2\">&lt;xref:System.IO.File.OpenText%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IO.File.CreateText%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.IO.File.Create%2A&gt;</ph>.","pos":[156,336],"source":" For more information, see specific <xref:System.IO.File> members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>."}]}]},{"pos":[1294,1612],"content":"Because all <xref:System.IO.File> methods are static, it might be more efficient to use a <xref:System.IO.File> method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All <xref:System.IO.File> methods require the path to the file that you are manipulating.","nodes":[{"content":"Because all <xref:System.IO.File> methods are static, it might be more efficient to use a <xref:System.IO.File> method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All <xref:System.IO.File> methods require the path to the file that you are manipulating.","pos":[0,318],"nodes":[{"content":"Because all <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> methods are static, it might be more efficient to use a <ph id=\"ph2\">&lt;xref:System.IO.File&gt;</ph> method rather than a corresponding <ph id=\"ph3\">&lt;xref:System.IO.FileInfo&gt;</ph> instance method if you want to perform only one action.","pos":[0,228],"source":"Because all <xref:System.IO.File> methods are static, it might be more efficient to use a <xref:System.IO.File> method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action."},{"content":"All <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> methods require the path to the file that you are manipulating.","pos":[229,318],"source":" All <xref:System.IO.File> methods require the path to the file that you are manipulating."}]}]},{"pos":[1619,1907],"content":"The static methods of the <xref:System.IO.File> class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.","nodes":[{"content":"The static methods of the <xref:System.IO.File> class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.","pos":[0,288],"nodes":[{"content":"The static methods of the <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> class perform security checks on all methods.","pos":[0,93],"source":"The static methods of the <xref:System.IO.File> class perform security checks on all methods."},{"content":"If you are going to reuse an object several times, consider using the corresponding instance method of <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> instead, because the security check will not always be necessary.","pos":[94,288],"source":" If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary."}]}]},{"pos":[1914,1986],"content":"By default, full read/write access to new files is granted to all users.","nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]}]},{"pos":[1993,2121],"content":"The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.File> methods.","nodes":[{"content":"The following table describes the enumerations that are used to customize the behavior of various <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> methods.","pos":[0,128],"source":"The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.File> methods."}]},{"pos":[2128,2139],"content":"Enumeration","nodes":[{"content":"Enumeration","pos":[0,11]}]},{"pos":[2140,2151],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[2196,2223],"content":"<xref:System.IO.FileAccess>","nodes":[]},{"pos":[2224,2266],"content":"Specifies read and write access to a file.","nodes":[{"content":"Specifies read and write access to a file.","pos":[0,42]}]},{"pos":[2271,2297],"content":"<xref:System.IO.FileShare>","nodes":[]},{"pos":[2298,2372],"content":"Specifies the level of access permitted for a file that is already in use.","nodes":[{"content":"Specifies the level of access permitted for a file that is already in use.","pos":[0,74]}]},{"pos":[2377,2402],"content":"<xref:System.IO.FileMode>","nodes":[]},{"pos":[2403,2551],"content":"Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.","nodes":[{"content":"Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.","pos":[0,148]}]},{"pos":[2560,3090],"content":"[!NOTE]\n In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.","leadings":["","> "],"nodes":[{"content":" In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.","pos":[8,528],"nodes":[{"content":"In members that accept a path as an input string, that path must be well-formed or an exception is raised.","pos":[1,107]},{"content":"For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.","pos":[108,223]},{"content":"Therefore, the path is malformed and an exception is raised.","pos":[224,284]},{"content":"Similarly, a path or a combination of paths cannot be fully qualified twice.","pos":[285,361]},{"content":"For example, \"c:\\temp c:\\windows\" also raises an exception in most cases.","pos":[362,435]},{"content":"Ensure that your paths are well-formed when using methods that accept a path string.","pos":[436,520]}]}]},{"pos":[3097,3356],"content":"In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:","nodes":[{"content":"In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:","pos":[0,259],"nodes":[{"content":"In members that accept a path, the path can refer to a file or just a directory.","pos":[0,80]},{"content":"The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.","pos":[81,206]},{"content":"For example, all the following are acceptable paths:","pos":[207,259]}]}]},{"pos":[3366,3440],"content":"\"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.","nodes":[{"content":"\"c:<ph id=\"ph1\">\\\\</ph>\\MyDir<ph id=\"ph2\">\\\\</ph>\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.","pos":[0,74],"source":"\"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic."}]},{"pos":[3450,3500],"content":"\"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.","nodes":[{"content":"\"c:<ph id=\"ph1\">\\\\</ph>\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.","pos":[0,50],"source":"\"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic."}]},{"pos":[3510,3572],"content":"\"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.","nodes":[{"content":"\"MyDir<ph id=\"ph1\">\\\\</ph>\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.","pos":[0,62],"source":"\"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic."}]},{"pos":[3582,3658],"content":"\"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.","nodes":[{"content":"\"<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph><ph id=\"ph3\">\\\\</ph>\\MyServer<ph id=\"ph4\">\\\\</ph>\\MyShare\" in C#, or \"<ph id=\"ph5\">\\\\</ph>\\MyServer\\MyShare\" in Visual Basic.","pos":[0,76],"source":"\"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic."}]},{"pos":[3665,3760],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[5805,9652],"yaml":true,"extradata":"MT"},{"content":"Appends lines to a file, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","nodes":[{"pos":[0,182],"content":"Appends lines to a file, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","nodes":[{"content":"Appends lines to a file, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","pos":[0,182],"nodes":[{"content":"Appends lines to a file, and then closes the file.","pos":[0,50]},{"content":"If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","pos":[51,182]}]}]}],"pos":[12409,12592],"yaml":true},{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"pos":[0,167],"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories.","pos":[0,87]},{"content":"Therefore, the value of the <ph id=\"ph1\">`path`</ph> parameter must contain existing directories.","pos":[88,167],"source":" Therefore, the value of the `path` parameter must contain existing directories."}]}],"pos":[12603,12771],"yaml":true,"extradata":"MT"},{"content":"The file to append the lines to. The file is created if it doesn't already exist.","nodes":[{"pos":[0,81],"content":"The file to append the lines to. The file is created if it doesn't already exist.","nodes":[{"content":"The file to append the lines to. The file is created if it doesn't already exist.","pos":[0,81],"nodes":[{"content":"The file to append the lines to.","pos":[0,32]},{"content":"The file is created if it doesn't already exist.","pos":[33,81]}]}]}],"pos":[13503,13585],"yaml":true},{"content":"The lines to append to the file.","nodes":[{"pos":[0,32],"content":"The lines to append to the file.","nodes":[{"content":"The lines to append to the file.","pos":[0,32]}]}],"pos":[13689,13722],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,188],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[13873,14062],"yaml":true},{"content":"Either <code>path</code> or <code>contents</code> is `null`.","nodes":[{"pos":[0,60],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"Either <code>path</code> or <code>contents</code> is `null`."}],"pos":[14164,14225],"yaml":true},{"content":"<code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive)."}],"pos":[14343,14446],"yaml":true},{"content":"The file specified by <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified by <code>path</code> was not found."}],"pos":[14554,14609],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[14697,14743],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[14849,15039],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[15141,15184],"yaml":true},{"content":"The caller does not have permission to write to the file.","nodes":[{"pos":[0,57],"content":"The caller does not have permission to write to the file.","nodes":[{"content":"The caller does not have permission to write to the file.","pos":[0,57]}]}],"pos":[15296,15354],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."}],"pos":[15468,15657],"yaml":true},{"content":"Appends lines to a file by using a specified encoding, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","nodes":[{"pos":[0,212],"content":"Appends lines to a file by using a specified encoding, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","nodes":[{"content":"Appends lines to a file by using a specified encoding, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","pos":[0,212],"nodes":[{"content":"Appends lines to a file by using a specified encoding, and then closes the file.","pos":[0,80]},{"content":"If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.","pos":[81,212]}]}]}],"pos":[17292,17505],"yaml":true},{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.  \n  \n You can use this method to create a file that contains the following:  \n  \n-   The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method.  \n  \n-   The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.","nodes":[{"pos":[0,167],"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories.","pos":[0,87]},{"content":"Therefore, the value of the <ph id=\"ph1\">`path`</ph> parameter must contain existing directories.","pos":[88,167],"source":" Therefore, the value of the `path` parameter must contain existing directories."}]},{"pos":[174,243],"content":"You can use this method to create a file that contains the following:","nodes":[{"content":"You can use this method to create a file that contains the following:","pos":[0,69]}]},{"pos":[253,457],"content":"The results of a <bpt id=\"p1\">[</bpt>LINQ to Objects<ept id=\"p1\">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> query on the lines of a file, as obtained by using the <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> method.","source":"The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method."},{"pos":[467,576],"content":"The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.","nodes":[{"content":"The contents of a collection that implements an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of strings.","pos":[0,109],"source":"The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings."}]}],"pos":[17516,18101],"yaml":true,"extradata":"MT"},{"content":"The file to append the lines to. The file is created if it doesn't already exist.","nodes":[{"pos":[0,81],"content":"The file to append the lines to. The file is created if it doesn't already exist.","nodes":[{"content":"The file to append the lines to. The file is created if it doesn't already exist.","pos":[0,81],"nodes":[{"content":"The file to append the lines to.","pos":[0,32]},{"content":"The file is created if it doesn't already exist.","pos":[33,81]}]}]}],"pos":[18337,18419],"yaml":true},{"content":"The lines to append to the file.","nodes":[{"pos":[0,32],"content":"The lines to append to the file.","nodes":[{"content":"The lines to append to the file.","pos":[0,32]}]}],"pos":[18523,18556],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[18627,18658],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,188],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[18809,18998],"yaml":true},{"content":"Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`.","nodes":[{"pos":[0,84],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">encoding</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`null`</ph>.","source":"Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`."}],"pos":[19100,19185],"yaml":true},{"content":"<code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive)."}],"pos":[19303,19406],"yaml":true},{"content":"The file specified by <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified by <code>path</code> was not found."}],"pos":[19514,19569],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[19657,19703],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[19809,19999],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[20101,20144],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[20256,20306],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[185,189],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[196,245],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[20420,20680],"yaml":true},{"content":"Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.","nodes":[{"pos":[0,200],"content":"Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.","nodes":[{"content":"Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.","pos":[0,200],"nodes":[{"content":"Opens a file, appends the specified string to the file, and then closes the file.","pos":[0,81]},{"content":"If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.","pos":[82,200]}]}]}],"pos":[25419,25620],"yaml":true},{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"pos":[0,228],"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[0,228],"nodes":[{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file, and then closes the file.","pos":[0,138]},{"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[139,228]}]}]},{"pos":[235,402],"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories.","pos":[0,87]},{"content":"Therefore, the value of the <ph id=\"ph1\">`path`</ph> parameter must contain existing directories.","pos":[88,167],"source":" Therefore, the value of the `path` parameter must contain existing directories."}]}],"pos":[25631,26038],"yaml":true,"extradata":"MT"},{"content":"The file to append the specified string to.","nodes":[{"pos":[0,43],"content":"The file to append the specified string to.","nodes":[{"content":"The file to append the specified string to.","pos":[0,43]}]}],"pos":[26824,26868],"yaml":true},{"content":"The string to append to the file.","nodes":[{"pos":[0,33],"content":"The string to append to the file.","nodes":[{"content":"The string to append to the file.","pos":[0,33]}]}],"pos":[26932,26966],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[27116,27297],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[27399,27428],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[27534,27745],"yaml":true},{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"pos":[0,103],"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[0,103]}]}],"pos":[27863,27967],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[28055,28101],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[28215,28482],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[28584,28627],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[28739,28789],"yaml":true},{"content":"Appends the specified string to the file, creating the file if it does not already exist.","nodes":[{"pos":[0,89],"content":"Appends the specified string to the file, creating the file if it does not already exist.","nodes":[{"content":"Appends the specified string to the file, creating the file if it does not already exist.","pos":[0,89]}]}],"pos":[30259,30349],"yaml":true},{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"pos":[0,257],"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[0,257],"nodes":[{"content":"Given a string and a file path, this method opens the specified file, appends the string to the end of the file using the specified encoding, and then closes the file.","pos":[0,167]},{"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[168,257]}]}]},{"pos":[264,431],"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.","nodes":[{"content":"The method creates the file if it doesn’t exist, but it doesn't create new directories.","pos":[0,87]},{"content":"Therefore, the value of the <ph id=\"ph1\">`path`</ph> parameter must contain existing directories.","pos":[88,167],"source":" Therefore, the value of the `path` parameter must contain existing directories."}]}],"pos":[30360,30796],"yaml":true,"extradata":"MT"},{"content":"The file to append the specified string to.","nodes":[{"pos":[0,43],"content":"The file to append the specified string to.","nodes":[{"content":"The file to append the specified string to.","pos":[0,43]}]}],"pos":[31649,31693],"yaml":true},{"content":"The string to append to the file.","nodes":[{"pos":[0,33],"content":"The string to append to the file.","nodes":[{"content":"The string to append to the file.","pos":[0,33]}]}],"pos":[31757,31791],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[31862,31893],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[32043,32224],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[32326,32355],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[32461,32672],"yaml":true},{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"pos":[0,103],"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[0,103]}]}],"pos":[32790,32894],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[32982,33028],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[33142,33409],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[33511,33554],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[33666,33716],"yaml":true},{"content":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends UTF-8 encoded text to an existing file, or to a new file if the specified file does not exist.","nodes":[{"pos":[0,161],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> that appends UTF-8 encoded text to an existing file, or to a new file if the specified file does not exist.","source":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends UTF-8 encoded text to an existing file, or to a new file if the specified file does not exist."}],"pos":[37877,38039],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload. If the file specified by `path` does not exist, it is created. If the file does exist, write operations to the <xref:System.IO.StreamWriter> append text to the file. Additional threads are permitted to read the file while it is open.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n The `path` parameter is not case-sensitive.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,362],"content":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload. If the file specified by `path` does not exist, it is created. If the file does exist, write operations to the <xref:System.IO.StreamWriter> append text to the file. Additional threads are permitted to read the file while it is open.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor overload.","pos":[0,128],"source":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload."},{"content":"If the file specified by <ph id=\"ph1\">`path`</ph> does not exist, it is created.","pos":[129,191],"source":" If the file specified by `path` does not exist, it is created."},{"content":"If the file does exist, write operations to the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> append text to the file.","pos":[192,294],"source":" If the file does exist, write operations to the <xref:System.IO.StreamWriter> append text to the file."},{"content":"Additional threads are permitted to read the file while it is open.","pos":[295,362]}]},{"pos":[369,635],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[642,685],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not case-sensitive.","source":"The `path` parameter is not case-sensitive."},{"pos":[692,787],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[38050,38846],"yaml":true,"extradata":"MT"},{"content":"The path to the file to append to.","nodes":[{"pos":[0,34],"content":"The path to the file to append to.","nodes":[{"content":"The path to the file to append to.","pos":[0,34]}]}],"pos":[39588,39623],"yaml":true},{"content":"A stream writer that appends UTF-8 encoded text to the specified file or to a new file.","nodes":[{"pos":[0,87],"content":"A stream writer that appends UTF-8 encoded text to the specified file or to a new file.","nodes":[{"content":"A stream writer that appends UTF-8 encoded text to the specified file or to a new file.","pos":[0,87]}]}],"pos":[39689,39777],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[39944,39994],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[40088,40269],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[40371,40400],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[40506,40717],"yaml":true},{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"pos":[0,103],"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).","pos":[0,103]}]}],"pos":[40835,40939],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[41041,41084],"yaml":true},{"content":"Copies an existing file to a new file. Overwriting a file of the same name is not allowed.","nodes":[{"pos":[0,90],"content":"Copies an existing file to a new file. Overwriting a file of the same name is not allowed.","nodes":[{"content":"Copies an existing file to a new file. Overwriting a file of the same name is not allowed.","pos":[0,90],"nodes":[{"content":"Copies an existing file to a new file.","pos":[0,38]},{"content":"Overwriting a file of the same name is not allowed.","pos":[39,90]}]}]}],"pos":[42407,42498],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29> method overload with the `overwrite` parameter set to `false`.  \n  \n The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see the <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> method. This method does not support wildcard characters in the parameters.  \n  \n The attributes of the original file are retained in the copied file.","nodes":[{"pos":[0,174],"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method overload with the <ph id=\"ph2\">`overwrite`</ph> parameter set to <ph id=\"ph3\">`false`</ph>.","source":"This method is equivalent to the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29> method overload with the `overwrite` parameter set to `false`."},{"pos":[181,569],"content":"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see the <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> method. This method does not support wildcard characters in the parameters.","nodes":[{"content":"The <ph id=\"ph1\">`sourceFileName`</ph> and <ph id=\"ph2\">`destFileName`</ph> parameters can specify relative or absolute path information.","pos":[0,101],"source":"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[102,188]},{"content":"To obtain the current working directory, see the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName&gt;</ph> method.","pos":[189,320],"source":" To obtain the current working directory, see the <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> method."},{"content":"This method does not support wildcard characters in the parameters.","pos":[321,388]}]},{"pos":[576,644],"content":"The attributes of the original file are retained in the copied file.","nodes":[{"content":"The attributes of the original file are retained in the copied file.","pos":[0,68]}]}],"pos":[42509,43160],"yaml":true,"extradata":"MT"},{"content":"The file to copy.","nodes":[{"pos":[0,17],"content":"The file to copy.","nodes":[{"content":"The file to copy.","pos":[0,17]}]}],"pos":[44272,44290],"yaml":true},{"content":"The name of the destination file. This cannot be a directory or an existing file.","nodes":[{"pos":[0,81],"content":"The name of the destination file. This cannot be a directory or an existing file.","nodes":[{"content":"The name of the destination file. This cannot be a directory or an existing file.","pos":[0,81],"nodes":[{"content":"The name of the destination file.","pos":[0,33]},{"content":"This cannot be a directory or an existing file.","pos":[34,81]}]}]}],"pos":[44358,44440],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[44601,44651],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.  \n  \n -or-  \n  \n <code>sourceFileName</code> or <code>destFileName</code> specifies a directory.","nodes":[{"pos":[0,219],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph3\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."},{"pos":[226,230],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[237,316],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> specifies a directory.","source":"<code>sourceFileName</code> or <code>destFileName</code> specifies a directory."}],"pos":[44745,45070],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is `null`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is `null`."}],"pos":[45172,45240],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[45346,45557],"yaml":true},{"content":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,132],"content":"The path specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is invalid (for example, it is on an unmapped drive).","source":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[45675,45808],"yaml":true},{"content":"<code>sourceFileName</code> was not found.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> was not found.","source":"<code>sourceFileName</code> was not found."}],"pos":[45916,45959],"yaml":true},{"content":"<code>destFileName</code> exists.  \n  \n -or-  \n  \n An I/O error has occurred.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> exists.","source":"<code>destFileName</code> exists."},{"pos":[40,44],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[51,77],"content":"An I/O error has occurred.","nodes":[{"content":"An I/O error has occurred.","pos":[0,26]}]}],"pos":[46047,46131],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is in an invalid format.","source":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format."}],"pos":[46233,46315],"yaml":true},{"content":"Copies an existing file to a new file. Overwriting a file of the same name is allowed.","nodes":[{"pos":[0,86],"content":"Copies an existing file to a new file. Overwriting a file of the same name is allowed.","nodes":[{"content":"Copies an existing file to a new file. Overwriting a file of the same name is allowed.","pos":[0,86],"nodes":[{"content":"Copies an existing file to a new file.","pos":[0,38]},{"content":"Overwriting a file of the same name is allowed.","pos":[39,86]}]}]}],"pos":[47710,47797],"yaml":true},{"content":"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. This method does not support wildcard characters in the parameters.  \n  \n The attributes of the original file are retained in the copied file.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,256],"content":"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. This method does not support wildcard characters in the parameters.","nodes":[{"content":"The <ph id=\"ph1\">`sourceFileName`</ph> and <ph id=\"ph2\">`destFileName`</ph> parameters can specify relative or absolute path information.","pos":[0,101],"source":"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[102,188]},{"content":"This method does not support wildcard characters in the parameters.","pos":[189,256]}]},{"pos":[263,331],"content":"The attributes of the original file are retained in the copied file.","nodes":[{"content":"The attributes of the original file are retained in the copied file.","pos":[0,68]}]},{"pos":[338,433],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[47808,48248],"yaml":true,"extradata":"MT"},{"content":"The file to copy.","nodes":[{"pos":[0,17],"content":"The file to copy.","nodes":[{"content":"The file to copy.","pos":[0,17]}]}],"pos":[49374,49392],"yaml":true},{"content":"The name of the destination file. This cannot be a directory.","nodes":[{"pos":[0,61],"content":"The name of the destination file. This cannot be a directory.","nodes":[{"content":"The name of the destination file. This cannot be a directory.","pos":[0,61],"nodes":[{"content":"The name of the destination file.","pos":[0,33]},{"content":"This cannot be a directory.","pos":[34,61]}]}]}],"pos":[49460,49522],"yaml":true},{"content":"`true` if the destination file can be overwritten; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the destination file can be overwritten; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the destination file can be overwritten; otherwise, `false`."}],"pos":[49588,49661],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>destFileName</code> is read-only.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,106],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is read-only.","source":"<code>destFileName</code> is read-only."}],"pos":[49822,49935],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.  \n  \n -or-  \n  \n <code>sourceFileName</code> or <code>destFileName</code> specifies a directory.","nodes":[{"pos":[0,219],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph3\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."},{"pos":[226,230],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[237,316],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> specifies a directory.","source":"<code>sourceFileName</code> or <code>destFileName</code> specifies a directory."}],"pos":[50029,50354],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is `null`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is `null`."}],"pos":[50456,50524],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[50630,50841],"yaml":true},{"content":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,132],"content":"The path specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is invalid (for example, it is on an unmapped drive).","source":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[50959,51092],"yaml":true},{"content":"<code>sourceFileName</code> was not found.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> was not found.","source":"<code>sourceFileName</code> was not found."}],"pos":[51200,51243],"yaml":true},{"content":"<code>destFileName</code> exists and <code>overwrite</code> is `false`.  \n  \n -or-  \n  \n An I/O error has occurred.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> exists and <ph id=\"ph2\">&lt;code&gt;overwrite&lt;/code&gt;</ph> is <ph id=\"ph3\">`false`</ph>.","source":"<code>destFileName</code> exists and <code>overwrite</code> is `false`."},{"pos":[78,82],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[89,115],"content":"An I/O error has occurred.","nodes":[{"content":"An I/O error has occurred.","pos":[0,26]}]}],"pos":[51331,51453],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is in an invalid format.","source":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format."}],"pos":[51555,51637],"yaml":true},{"content":"Creates or overwrites a file in the specified path.","nodes":[{"pos":[0,51],"content":"Creates or overwrites a file in the specified path.","nodes":[{"content":"Creates or overwrites a file in the specified path.","pos":[0,51]}]}],"pos":[52906,52958],"yaml":true},{"content":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.  \n  \n This method is equivalent to the <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29> method overload using the default buffer size.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \n  \n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,239],"content":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> object created by this method has a default <ph id=\"ph2\">&lt;xref:System.IO.FileShare&gt;</ph> value of <ph id=\"ph3\">&lt;xref:System.IO.FileShare.None&gt;</ph>; no other process or code can access the created file until the original file handle is closed.","pos":[0,239],"source":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed."}]},{"pos":[246,388],"content":"This method is equivalent to the <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29> method overload using the default buffer size.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.File.Create%28System.String%2CSystem.Int32%29&gt;</ph> method overload using the default buffer size.","pos":[0,142],"source":"This method is equivalent to the <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29> method overload using the default buffer size."}]},{"pos":[395,661],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[668,792],"content":"If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","nodes":[{"content":"If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[0,124]}]},{"pos":[799,980],"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","nodes":[{"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[0,181],"nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]},{"content":"The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[73,181]}]}]},{"pos":[987,1082],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[52969,54064],"yaml":true,"extradata":"MT"},{"content":"The path and name of the file to create.","nodes":[{"pos":[0,40],"content":"The path and name of the file to create.","nodes":[{"content":"The path and name of the file to create.","pos":[0,40]}]}],"pos":[54692,54733],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> that provides read/write access to the file specified in <code>path</code>.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> that provides read/write access to the file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.IO.FileStream\"></xref> that provides read/write access to the file specified in <code>path</code>."}],"pos":[54797,54917],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>path</code> specified a file that is read-only.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,120],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."}],"pos":[55080,55207],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[55301,55482],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[55584,55613],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[55719,55930],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[56048,56121],"yaml":true},{"content":"An I/O error occurred while creating the file.","nodes":[{"pos":[0,46],"content":"An I/O error occurred while creating the file.","nodes":[{"content":"An I/O error occurred while creating the file.","pos":[0,46]}]}],"pos":[56209,56256],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[56358,56401],"yaml":true},{"content":"Creates or overwrites the specified file.","nodes":[{"pos":[0,41],"content":"Creates or overwrites the specified file.","nodes":[{"content":"Creates or overwrites the specified file.","pos":[0,41]}]}],"pos":[57730,57772],"yaml":true},{"content":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \n  \n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,239],"content":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> object created by this method has a default <ph id=\"ph2\">&lt;xref:System.IO.FileShare&gt;</ph> value of <ph id=\"ph3\">&lt;xref:System.IO.FileShare.None&gt;</ph>; no other process or code can access the created file until the original file handle is closed.","pos":[0,239],"source":"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed."}]},{"pos":[246,512],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[519,834],"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","nodes":[{"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[0,315],"nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29&gt;</ph> constructor overload.","pos":[0,190],"source":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload."},{"content":"If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[191,315]}]}]},{"pos":[841,1022],"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","nodes":[{"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[0,181],"nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]},{"content":"The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[73,181]}]}]},{"pos":[1029,1124],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[57783,58918],"yaml":true,"extradata":"MT"},{"content":"The name of the file.","nodes":[{"pos":[0,21],"content":"The name of the file.","nodes":[{"content":"The name of the file.","pos":[0,21]}]}],"pos":[59509,59531],"yaml":true},{"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"pos":[0,62],"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"content":"The number of bytes buffered for reads and writes to the file.","pos":[0,62]}]}],"pos":[59596,59659],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> with the specified buffer size that provides read/write access to the file specified in <code>path</code>.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> with the specified buffer size that provides read/write access to the file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.IO.FileStream\"></xref> with the specified buffer size that provides read/write access to the file specified in <code>path</code>."}],"pos":[59723,59874],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>path</code> specified a file that is read-only.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,120],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."}],"pos":[60037,60164],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[60258,60439],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[60541,60570],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[60676,60887],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[61005,61078],"yaml":true},{"content":"An I/O error occurred while creating the file.","nodes":[{"pos":[0,46],"content":"An I/O error occurred while creating the file.","nodes":[{"content":"An I/O error occurred while creating the file.","pos":[0,46]}]}],"pos":[61166,61213],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[61315,61358],"yaml":true},{"content":"Creates or overwrites the specified file, specifying a buffer size and a <xref href=\"System.IO.FileOptions\"></xref> value that describes how to create or overwrite the file.","nodes":[{"pos":[0,173],"content":"Creates or overwrites the specified file, specifying a buffer size and a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileOptions\"&gt;&lt;/xref&gt;</ph> value that describes how to create or overwrite the file.","source":"Creates or overwrites the specified file, specifying a buffer size and a <xref href=\"System.IO.FileOptions\"></xref> value that describes how to create or overwrite the file."}],"pos":[62792,62966],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \n  \n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,588],"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","nodes":[{"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[0,315],"nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29&gt;</ph> constructor overload.","pos":[0,190],"source":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload."},{"content":"If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[191,315]}]}]},{"pos":[595,776],"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","nodes":[{"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[0,181],"nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]},{"content":"The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[73,181]}]}]},{"pos":[783,878],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[62977,63864],"yaml":true,"extradata":"MT"},{"content":"The name of the file.","nodes":[{"pos":[0,21],"content":"The name of the file.","nodes":[{"content":"The name of the file.","pos":[0,21]}]}],"pos":[64067,64089],"yaml":true},{"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"pos":[0,62],"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"content":"The number of bytes buffered for reads and writes to the file.","pos":[0,62]}]}],"pos":[64154,64217],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file.","nodes":[{"pos":[0,112],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileOptions\"&gt;&lt;/xref&gt;</ph> values that describes how to create or overwrite the file.","source":"One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file."}],"pos":[64288,64401],"yaml":true},{"content":"A new file with the specified buffer size.","nodes":[{"pos":[0,42],"content":"A new file with the specified buffer size.","nodes":[{"content":"A new file with the specified buffer size.","pos":[0,42]}]}],"pos":[64465,64508],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>path</code> specified a file that is read-only.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,120],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."}],"pos":[64671,64798],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[64892,65073],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[65175,65204],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[65310,65521],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive.","nodes":[{"pos":[0,71],"content":"The specified path is invalid (for example, it is on an unmapped drive.","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive.","pos":[0,71]}]}],"pos":[65639,65711],"yaml":true},{"content":"An I/O error occurred while creating the file.","nodes":[{"pos":[0,46],"content":"An I/O error occurred while creating the file.","nodes":[{"content":"An I/O error occurred while creating the file.","pos":[0,46]}]}],"pos":[65799,65846],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[65948,65991],"yaml":true},{"content":"Creates or overwrites the specified file with the specified buffer size, file options, and file security.","nodes":[{"pos":[0,105],"content":"Creates or overwrites the specified file with the specified buffer size, file options, and file security.","nodes":[{"content":"Creates or overwrites the specified file with the specified buffer size, file options, and file security.","pos":[0,105]}]}],"pos":[67555,67661],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \n  \n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,588],"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","nodes":[{"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[0,315],"nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29&gt;</ph> constructor overload.","pos":[0,190],"source":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload."},{"content":"If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.","pos":[191,315]}]}]},{"pos":[595,776],"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","nodes":[{"content":"By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[0,181],"nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]},{"content":"The file is opened with read/write access and must be closed before it can be opened by another application.","pos":[73,181]}]}]},{"pos":[783,878],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[67672,68559],"yaml":true,"extradata":"MT"},{"content":"The name of the file.","nodes":[{"pos":[0,21],"content":"The name of the file.","nodes":[{"content":"The name of the file.","pos":[0,21]}]}],"pos":[68819,68841],"yaml":true},{"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"pos":[0,62],"content":"The number of bytes buffered for reads and writes to the file.","nodes":[{"content":"The number of bytes buffered for reads and writes to the file.","pos":[0,62]}]}],"pos":[68906,68969],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file.","nodes":[{"pos":[0,112],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileOptions\"&gt;&lt;/xref&gt;</ph> values that describes how to create or overwrite the file.","source":"One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file."}],"pos":[69040,69153],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> values that determines the access control and audit security for the file.","nodes":[{"pos":[0,149],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> values that determines the access control and audit security for the file.","source":"One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> values that determines the access control and audit security for the file."}],"pos":[69250,69400],"yaml":true},{"content":"A new file with the specified buffer size, file options, and file security.","nodes":[{"pos":[0,75],"content":"A new file with the specified buffer size, file options, and file security.","nodes":[{"content":"A new file with the specified buffer size, file options, and file security.","pos":[0,75]}]}],"pos":[69464,69540],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>path</code> specified a file that is read-only.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,120],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."}],"pos":[69703,69830],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[69924,70105],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[70207,70236],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[70342,70553],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[70671,70744],"yaml":true},{"content":"An I/O error occurred while creating the file.","nodes":[{"pos":[0,46],"content":"An I/O error occurred while creating the file.","nodes":[{"content":"An I/O error occurred while creating the file.","pos":[0,46]}]}],"pos":[70832,70879],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[70981,71024],"yaml":true},{"content":"Creates or opens a file for writing UTF-8 encoded text. If the file already exists, its contents are overwritten.","nodes":[{"pos":[0,113],"content":"Creates or opens a file for writing UTF-8 encoded text. If the file already exists, its contents are overwritten.","nodes":[{"content":"Creates or opens a file for writing UTF-8 encoded text. If the file already exists, its contents are overwritten.","pos":[0,113],"nodes":[{"content":"Creates or opens a file for writing UTF-8 encoded text.","pos":[0,55]},{"content":"If the file already exists, its contents are overwritten.","pos":[56,113]}]}]}],"pos":[72061,72175],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload with the `append` parameter set to `false`. If the file specified by `path` does not exist, it is created. If the file does exist, its contents are overwritten. Additional threads are permitted to read the file while it is open.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,356],"content":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload with the `append` parameter set to `false`. If the file specified by `path` does not exist, it is created. If the file does exist, its contents are overwritten. Additional threads are permitted to read the file while it is open.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor overload with the <ph id=\"ph2\">`append`</ph> parameter set to <ph id=\"ph3\">`false`</ph>.","pos":[0,171],"source":"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload with the `append` parameter set to `false`."},{"content":"If the file specified by <ph id=\"ph1\">`path`</ph> does not exist, it is created.","pos":[172,234],"source":" If the file specified by `path` does not exist, it is created."},{"content":"If the file does exist, its contents are overwritten.","pos":[235,288]},{"content":"Additional threads are permitted to read the file while it is open.","pos":[289,356]}]},{"pos":[363,629],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[636,731],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[72186,72924],"yaml":true,"extradata":"MT"},{"content":"The file to be opened for writing.","nodes":[{"pos":[0,34],"content":"The file to be opened for writing.","nodes":[{"content":"The file to be opened for writing.","pos":[0,34]}]}],"pos":[73530,73565],"yaml":true},{"content":"A <xref href=\"System.IO.StreamWriter\"></xref> that writes to the specified file using UTF-8 encoding.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> that writes to the specified file using UTF-8 encoding.","source":"A <xref href=\"System.IO.StreamWriter\"></xref> that writes to the specified file using UTF-8 encoding."}],"pos":[73631,73733],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[73900,73950],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[74044,74225],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[74327,74356],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[74462,74673],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[74791,74864],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[74966,75009],"yaml":true},{"content":"Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.File.Encrypt(System.String)\"></xref> method.","nodes":[{"pos":[0,134],"content":"Decrypts a file that was encrypted by the current account using the <ph id=\"ph1\">&lt;xref href=\"System.IO.File.Encrypt(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.File.Encrypt(System.String)\"></xref> method."}],"pos":[76284,76419],"yaml":true},{"content":"The <xref:System.IO.File.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.File.Encrypt%2A> method.  The <xref:System.IO.File.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.  \n  \n The <xref:System.IO.File.Decrypt%2A> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file. If the file is not encrypted, <xref:System.IO.File.Decrypt%2A> will return a nonzero value, which indicates success.  \n  \n Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \n  \n The current file system must be formatted as NTFS and the current operating system must be Windows NT or later.","nodes":[{"pos":[0,262],"content":"The <xref:System.IO.File.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.File.Encrypt%2A> method.  The <xref:System.IO.File.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.","nodes":[{"content":"The <xref:System.IO.File.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.File.Encrypt%2A> method.  The <xref:System.IO.File.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.","pos":[0,262],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method allows you to decrypt a file that was encrypted using the <ph id=\"ph2\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method.","pos":[0,142],"source":"The <xref:System.IO.File.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.File.Encrypt%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method can decrypt only files that were encrypted using the current user account.","pos":[144,262],"source":"  The <xref:System.IO.File.Decrypt%2A> method can decrypt only files that were encrypted using the current user account."}]}]},{"pos":[269,550],"content":"The <xref:System.IO.File.Decrypt%2A> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file. If the file is not encrypted, <xref:System.IO.File.Decrypt%2A> will return a nonzero value, which indicates success.","nodes":[{"content":"The <xref:System.IO.File.Decrypt%2A> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file. If the file is not encrypted, <xref:System.IO.File.Decrypt%2A> will return a nonzero value, which indicates success.","pos":[0,281],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file.","pos":[0,164],"source":"The <xref:System.IO.File.Decrypt%2A> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file."},{"content":"If the file is not encrypted, <ph id=\"ph1\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> will return a nonzero value, which indicates success.","pos":[165,281],"source":" If the file is not encrypted, <xref:System.IO.File.Decrypt%2A> will return a nonzero value, which indicates success."}]}]},{"pos":[557,788],"content":"Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","pos":[0,231],"source":"Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method."}]},{"pos":[795,906],"content":"The current file system must be formatted as NTFS and the current operating system must be Windows NT or later.","nodes":[{"content":"The current file system must be formatted as NTFS and the current operating system must be Windows NT or later.","pos":[0,111]}]}],"pos":[76430,77345],"yaml":true,"extradata":"MT"},{"content":"A path that describes a file to decrypt.","nodes":[{"pos":[0,40],"content":"A path that describes a file to decrypt.","nodes":[{"content":"A path that describes a file to decrypt.","pos":[0,40]}]}],"pos":[78089,78130],"yaml":true},{"content":"The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,194],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[78274,78469],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[78571,78614],"yaml":true},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[78724,78756],"yaml":true},{"content":"The file described by the <code>path</code> parameter could not be found.","nodes":[{"pos":[0,73],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>path</code> parameter could not be found."}],"pos":[78864,78938],"yaml":true},{"content":"An I/O error occurred while opening the file. For example, the encrypted file is already open.  \n  \n -or-  \n  \n This operation is not supported on the current platform.","nodes":[{"pos":[0,94],"content":"An I/O error occurred while opening the file. For example, the encrypted file is already open.","nodes":[{"content":"An I/O error occurred while opening the file. For example, the encrypted file is already open.","pos":[0,94],"nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]},{"content":"For example, the encrypted file is already open.","pos":[46,94]}]}]},{"pos":[101,105],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[112,168],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]}],"pos":[79026,79201],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[79307,79518],"yaml":true},{"content":"The current operating system is not Windows NT or later.","nodes":[{"pos":[0,56],"content":"The current operating system is not Windows NT or later.","nodes":[{"content":"The current operating system is not Windows NT or later.","pos":[0,56]}]}],"pos":[79636,79693],"yaml":true},{"content":"The file system is not NTFS.","nodes":[{"pos":[0,28],"content":"The file system is not NTFS.","nodes":[{"content":"The file system is not NTFS.","pos":[0,28]}]}],"pos":[79795,79824],"yaml":true},{"content":"The <code>path</code> parameter specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The <code>path</code> parameter specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a file that is read-only.","source":"The <code>path</code> parameter specified a file that is read-only."},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,141],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,213],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a directory.","source":"The <code>path</code> parameter specified a directory."},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,280],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[79938,80233],"yaml":true},{"content":"Deletes the specified file.","nodes":[{"pos":[0,27],"content":"Deletes the specified file.","nodes":[{"content":"Deletes the specified file.","pos":[0,27]}]}],"pos":[81318,81346],"yaml":true},{"content":"Specify a file name with any relative or absolute path information for the `path` parameter. Wildcard characters cannot be included. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n If the file to be deleted does not exist, no exception is thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,315],"content":"Specify a file name with any relative or absolute path information for the `path` parameter. Wildcard characters cannot be included. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"Specify a file name with any relative or absolute path information for the <ph id=\"ph1\">`path`</ph> parameter.","pos":[0,92],"source":"Specify a file name with any relative or absolute path information for the `path` parameter."},{"content":"Wildcard characters cannot be included.","pos":[93,132]},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[133,219]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[220,315],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[322,387],"content":"If the file to be deleted does not exist, no exception is thrown.","nodes":[{"content":"If the file to be deleted does not exist, no exception is thrown.","pos":[0,65]}]},{"pos":[394,489],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[81357,81853],"yaml":true,"extradata":"MT"},{"content":"The name of the file to be deleted. Wildcard characters are not supported.","nodes":[{"pos":[0,74],"content":"The name of the file to be deleted. Wildcard characters are not supported.","nodes":[{"content":"The name of the file to be deleted. Wildcard characters are not supported.","pos":[0,74],"nodes":[{"content":"The name of the file to be deleted.","pos":[0,35]},{"content":"Wildcard characters are not supported.","pos":[36,74]}]}]}],"pos":[82366,82441],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[82584,82765],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[82867,82896],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[83014,83087],"yaml":true},{"content":"The specified file is in use.  \n  \n -or-  \n  \n There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).","nodes":[{"pos":[0,29],"content":"The specified file is in use.","nodes":[{"content":"The specified file is in use.","pos":[0,29]}]},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,333],"content":"There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).","nodes":[{"content":"There is an open handle on the file, and the operating system is Windows XP or earlier.","pos":[0,87]},{"content":"This open handle can result from enumerating directories and files.","pos":[88,155]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Enumerate Directories and Files<ept id=\"p1\">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.","pos":[156,286],"source":" For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md)."}]}],"pos":[83175,83515],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[83617,83660],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[83766,83977],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n The file is an executable file that is in use.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n <code>path</code> specified a read-only file.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,113],"content":"The file is an executable file that is in use.","nodes":[{"content":"The file is an executable file that is in use.","pos":[0,46]}]},{"pos":[120,124],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[131,164],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[171,175],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[182,227],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a read-only file.","source":"<code>path</code> specified a read-only file."}],"pos":[84091,84333],"yaml":true},{"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","nodes":[{"pos":[0,81],"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","nodes":[{"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","pos":[0,81]}]}],"pos":[85608,85690],"yaml":true},{"content":"The <xref:System.IO.File.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it. Use the <xref:System.IO.File.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.File.Encrypt%2A> method.  \n  \n The <xref:System.IO.File.Encrypt%2A> method requires exclusive access to the file being encrypted, and will fail if another process is using the file.  \n  \n Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \n  \n This method is not available on all versions of Windows. For example, it is not available on Home editions.  \n  \n The current file system must be formatted as NTFS.","nodes":[{"pos":[0,262],"content":"The <xref:System.IO.File.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it. Use the <xref:System.IO.File.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.File.Encrypt%2A> method.","nodes":[{"content":"The <xref:System.IO.File.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it. Use the <xref:System.IO.File.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.File.Encrypt%2A> method.","pos":[0,262],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method allows you to encrypt a file so that only the account used to call this method can decrypt it.","pos":[0,138],"source":"The <xref:System.IO.File.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method to decrypt a file encrypted by the <ph id=\"ph2\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method.","pos":[139,262],"source":" Use the <xref:System.IO.File.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.File.Encrypt%2A> method."}]}]},{"pos":[269,419],"content":"The <xref:System.IO.File.Encrypt%2A> method requires exclusive access to the file being encrypted, and will fail if another process is using the file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method requires exclusive access to the file being encrypted, and will fail if another process is using the file.","pos":[0,150],"source":"The <xref:System.IO.File.Encrypt%2A> method requires exclusive access to the file being encrypted, and will fail if another process is using the file."}]},{"pos":[426,657],"content":"Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.IO.File.Encrypt%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.IO.File.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","pos":[0,231],"source":"Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method."}]},{"pos":[664,771],"content":"This method is not available on all versions of Windows. For example, it is not available on Home editions.","nodes":[{"content":"This method is not available on all versions of Windows. For example, it is not available on Home editions.","pos":[0,107],"nodes":[{"content":"This method is not available on all versions of Windows.","pos":[0,56]},{"content":"For example, it is not available on Home editions.","pos":[57,107]}]}]},{"pos":[778,828],"content":"The current file system must be formatted as NTFS.","nodes":[{"content":"The current file system must be formatted as NTFS.","pos":[0,50]}]}],"pos":[85701,86540],"yaml":true,"extradata":"MT"},{"content":"A path that describes a file to encrypt.","nodes":[{"pos":[0,40],"content":"A path that describes a file to encrypt.","nodes":[{"content":"A path that describes a file to encrypt.","pos":[0,40]}]}],"pos":[87284,87325],"yaml":true},{"content":"The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,194],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[87469,87664],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[87766,87809],"yaml":true},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[87919,87951],"yaml":true},{"content":"The file described by the <code>path</code> parameter could not be found.","nodes":[{"pos":[0,73],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>path</code> parameter could not be found."}],"pos":[88059,88133],"yaml":true},{"content":"An I/O error occurred while opening the file.  \n  \n -or-  \n  \n This operation is not supported on the current platform.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,119],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]}],"pos":[88221,88347],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[88453,88664],"yaml":true},{"content":"The current operating system is not Windows NT or later.","nodes":[{"pos":[0,56],"content":"The current operating system is not Windows NT or later.","nodes":[{"content":"The current operating system is not Windows NT or later.","pos":[0,56]}]}],"pos":[88782,88839],"yaml":true},{"content":"The file system is not NTFS.","nodes":[{"pos":[0,28],"content":"The file system is not NTFS.","nodes":[{"content":"The file system is not NTFS.","pos":[0,28]}]}],"pos":[88941,88970],"yaml":true},{"content":"The <code>path</code> parameter specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The <code>path</code> parameter specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a file that is read-only.","source":"The <code>path</code> parameter specified a file that is read-only."},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,141],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,213],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a directory.","source":"The <code>path</code> parameter specified a directory."},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,280],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[89084,89379],"yaml":true},{"content":"Determines whether the specified file exists.","nodes":[{"pos":[0,45],"content":"Determines whether the specified file exists.","nodes":[{"content":"Determines whether the specified file exists.","pos":[0,45]}]}],"pos":[90464,90510],"yaml":true},{"content":"The <xref:System.IO.File.Exists%2A> method should not be used for path validation, this method merely checks if the file specified in `path` exists. Passing an invalid path to <xref:System.IO.File.Exists%2A> returns `false`. To check whether the path contains any invalid characters, you can call the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve the characters that are invalid for the file system. You can also create a regular expression to test the whether the path is valid for your environment. For examples of acceptable paths, see <xref:System.IO.File>.  \n  \n To check if a directory exists, see <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.  \n  \n Be aware that another process can potentially do something with the file in between the time you call the <xref:System.IO.File.Exists%2A> method and perform another operation on the file, such as <xref:System.IO.File.Delete%2A>.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n If `path` describes a directory, this method returns `false`. Trailing spaces are removed from the `path` parameter before determining if the file exists.  \n  \n The <xref:System.IO.File.Exists%2A> method returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","nodes":[{"pos":[0,579],"content":"The <xref:System.IO.File.Exists%2A> method should not be used for path validation, this method merely checks if the file specified in `path` exists. Passing an invalid path to <xref:System.IO.File.Exists%2A> returns `false`. To check whether the path contains any invalid characters, you can call the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve the characters that are invalid for the file system. You can also create a regular expression to test the whether the path is valid for your environment. For examples of acceptable paths, see <xref:System.IO.File>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Exists%2A&gt;</ph> method should not be used for path validation, this method merely checks if the file specified in <ph id=\"ph2\">`path`</ph> exists.","pos":[0,148],"source":"The <xref:System.IO.File.Exists%2A> method should not be used for path validation, this method merely checks if the file specified in `path` exists."},{"content":"Passing an invalid path to <ph id=\"ph1\">&lt;xref:System.IO.File.Exists%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[149,224],"source":" Passing an invalid path to <xref:System.IO.File.Exists%2A> returns `false`."},{"content":"To check whether the path contains any invalid characters, you can call the <ph id=\"ph1\">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method to retrieve the characters that are invalid for the file system.","pos":[225,417],"source":" To check whether the path contains any invalid characters, you can call the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve the characters that are invalid for the file system."},{"content":"You can also create a regular expression to test the whether the path is valid for your environment.","pos":[418,518]},{"content":"For examples of acceptable paths, see <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph>.","pos":[519,579],"source":" For examples of acceptable paths, see <xref:System.IO.File>."}]},{"pos":[586,684],"content":"To check if a directory exists, see <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.","nodes":[{"content":"To check if a directory exists, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.Exists%2A?displayProperty=fullName&gt;</ph>.","pos":[0,98],"source":"To check if a directory exists, see <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>."}]},{"pos":[691,919],"content":"Be aware that another process can potentially do something with the file in between the time you call the <xref:System.IO.File.Exists%2A> method and perform another operation on the file, such as <xref:System.IO.File.Delete%2A>.","nodes":[{"content":"Be aware that another process can potentially do something with the file in between the time you call the <ph id=\"ph1\">&lt;xref:System.IO.File.Exists%2A&gt;</ph> method and perform another operation on the file, such as <ph id=\"ph2\">&lt;xref:System.IO.File.Delete%2A&gt;</ph>.","pos":[0,228],"source":"Be aware that another process can potentially do something with the file in between the time you call the <xref:System.IO.File.Exists%2A> method and perform another operation on the file, such as <xref:System.IO.File.Delete%2A>."}]},{"pos":[926,1192],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[1199,1353],"content":"If `path` describes a directory, this method returns `false`. Trailing spaces are removed from the `path` parameter before determining if the file exists.","nodes":[{"content":"If <ph id=\"ph1\">`path`</ph> describes a directory, this method returns <ph id=\"ph2\">`false`</ph>.","pos":[0,61],"source":"If `path` describes a directory, this method returns `false`."},{"content":"Trailing spaces are removed from the <ph id=\"ph1\">`path`</ph> parameter before determining if the file exists.","pos":[62,154],"source":" Trailing spaces are removed from the `path` parameter before determining if the file exists."}]},{"pos":[1360,1708],"content":"The <xref:System.IO.File.Exists%2A> method returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Exists%2A&gt;</ph> method returns <ph id=\"ph2\">`false`</ph> if any error occurs while trying to determine if the specified file exists.","pos":[0,134],"source":"The <xref:System.IO.File.Exists%2A> method returns `false` if any error occurs while trying to determine if the specified file exists."},{"content":"This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","pos":[135,348]}]}],"pos":[90521,92242],"yaml":true,"extradata":"MT"},{"content":"The file to check.","nodes":[{"pos":[0,18],"content":"The file to check.","nodes":[{"content":"The file to check.","pos":[0,18]}]}],"pos":[92663,92682],"yaml":true},{"content":"`true` if the caller has the required permissions and <code>path</code> contains the name of an existing file; otherwise, `false`. This method also returns `false` if <code>path</code> is `null`, an invalid path, or a zero-length string. If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns `false` regardless of the existence of <code>path</code>.","nodes":[{"pos":[0,420],"content":"`true` if the caller has the required permissions and <code>path</code> contains the name of an existing file; otherwise, `false`. This method also returns `false` if <code>path</code> is `null`, an invalid path, or a zero-length string. If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns `false` regardless of the existence of <code>path</code>.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the caller has the required permissions and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the name of an existing file; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,130],"source":"`true` if the caller has the required permissions and <code>path</code> contains the name of an existing file; otherwise, `false`."},{"content":"This method also returns <ph id=\"ph1\">`false`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>, an invalid path, or a zero-length string.","pos":[131,237],"source":" This method also returns `false` if <code>path</code> is `null`, an invalid path, or a zero-length string."},{"content":"If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns <ph id=\"ph1\">`false`</ph> regardless of the existence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[238,420],"source":" If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns `false` regardless of the existence of <code>path</code>."}]}],"pos":[92740,93163],"yaml":true},{"content":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for a specified file.","nodes":[{"pos":[0,155],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control list (ACL) entries for a specified file.","source":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for a specified file."}],"pos":[94503,94659],"yaml":true},{"content":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \n  \n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"pos":[0,118],"content":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for a file.","pos":[0,118],"source":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file."}]},{"pos":[125,390],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]},{"pos":[397,962],"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","pos":[0,565],"nodes":[{"content":"In NTFS environments, <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.","pos":[0,308],"source":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder."},{"content":"To deny <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.","pos":[309,565],"source":" To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory."}]}]}],"pos":[94670,95639],"yaml":true,"extradata":"MT"},{"content":"The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information.","nodes":[{"pos":[0,167],"content":"The path to a file containing a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that describes the file's access control list (ACL) information.","source":"The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information."}],"pos":[96608,96776],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter."}],"pos":[96862,97037],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[97184,97230],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[97362,97405],"yaml":true},{"content":"The file could not be found.","nodes":[{"pos":[0,28],"content":"The file could not be found.","nodes":[{"content":"The file could not be found.","pos":[0,28]}]}],"pos":[97495,97524],"yaml":true},{"content":"The <code>path</code> parameter specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The <code>path</code> parameter specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a file that is read-only.","source":"The <code>path</code> parameter specified a file that is read-only."},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,141],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,213],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a directory.","source":"The <code>path</code> parameter specified a directory."},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,280],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[97638,97933],"yaml":true},{"content":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for a particular file.","nodes":[{"pos":[0,174],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for a particular file.","source":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for a particular file."}],"pos":[99190,99365],"yaml":true},{"content":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \n  \n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"pos":[0,118],"content":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for a file.","pos":[0,118],"source":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file."}]},{"pos":[125,390],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]},{"pos":[397,962],"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","pos":[0,565],"nodes":[{"content":"In NTFS environments, <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.","pos":[0,308],"source":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder."},{"content":"To deny <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.","pos":[309,565],"source":" To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory."}]}]}],"pos":[99376,100345],"yaml":true,"extradata":"MT"},{"content":"The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information.","nodes":[{"pos":[0,167],"content":"The path to a file containing a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that describes the file's access control list (ACL) information.","source":"The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information."}],"pos":[100602,100770],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies the type of access control list (ACL) information to receive.","nodes":[{"pos":[0,167],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;&lt;/xref&gt;</ph> values that specifies the type of access control list (ACL) information to receive.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies the type of access control list (ACL) information to receive."}],"pos":[100879,101047],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter."}],"pos":[101133,101308],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[101455,101501],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[101633,101676],"yaml":true},{"content":"The file could not be found.","nodes":[{"pos":[0,28],"content":"The file could not be found.","nodes":[{"content":"The file could not be found.","pos":[0,28]}]}],"pos":[101766,101795],"yaml":true},{"content":"The <code>path</code> parameter specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The <code>path</code> parameter specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a file that is read-only.","source":"The <code>path</code> parameter specified a file that is read-only."},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,141],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,213],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a directory.","source":"The <code>path</code> parameter specified a directory."},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,280],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[101909,102204],"yaml":true},{"content":"Gets the <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path.","nodes":[{"pos":[0,79],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAttributes\"&gt;&lt;/xref&gt;</ph> of the file on the path.","source":"Gets the <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path."}],"pos":[103259,103339],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[103350,103723],"yaml":true,"extradata":"MT"},{"content":"The path to the file.","nodes":[{"pos":[0,21],"content":"The path to the file.","nodes":[{"content":"The path to the file.","pos":[0,21]}]}],"pos":[104438,104460],"yaml":true},{"content":"The <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAttributes\"&gt;&lt;/xref&gt;</ph> of the file on the path.","source":"The <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path."}],"pos":[104528,104603],"yaml":true},{"content":"<code>path</code> is empty, contains only white spaces, or contains invalid characters.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.","source":"<code>path</code> is empty, contains only white spaces, or contains invalid characters."}],"pos":[104753,104841],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[104947,105158],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[105260,105303],"yaml":true},{"content":"<code>path</code> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found.","source":"<code>path</code> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found."}],"pos":[105411,105528],"yaml":true},{"content":"<code>path</code> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.","source":"<code>path</code> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found."}],"pos":[105646,105773],"yaml":true},{"content":"This file is being used by another process.","nodes":[{"pos":[0,43],"content":"This file is being used by another process.","nodes":[{"content":"This file is being used by another process.","pos":[0,43]}]}],"pos":[105861,105905],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[106019,106069],"yaml":true},{"content":"Returns the creation date and time of the specified file or directory.","nodes":[{"pos":[0,70],"content":"Returns the creation date and time of the specified file or directory.","nodes":[{"content":"Returns the creation date and time of the specified file or directory.","pos":[0,70]}]}],"pos":[107392,107463],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \n  \n NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,159],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","leadings":["","> "],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[9,155]}]},{"pos":[166,432],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[439,622],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC), adjusted to local time.","pos":[119,183]}]},{"pos":[629,875],"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","nodes":[{"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[0,246],"nodes":[{"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time.","pos":[0,113]},{"content":"As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[114,246]}]}]},{"pos":[882,977],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[107474,108463],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain creation date and time information.","nodes":[{"pos":[0,77],"content":"The file or directory for which to obtain creation date and time information.","nodes":[{"content":"The file or directory for which to obtain creation date and time information.","pos":[0,77]}]}],"pos":[108842,108920],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in local time.","nodes":[{"pos":[0,158],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the creation date and time for the specified file or directory.","pos":[0,119],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory."},{"content":"This value is expressed in local time.","pos":[120,158]}]}],"pos":[108979,109138],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[109310,109360],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[109454,109635],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[109737,109766],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[109872,110083],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[110185,110228],"yaml":true},{"content":"Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.","nodes":[{"pos":[0,108],"content":"Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.","nodes":[{"content":"Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.","pos":[0,108]}]}],"pos":[111569,111678],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \n  \n NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,159],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","leadings":["","> "],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[9,155]}]},{"pos":[166,325],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[119,159]}]},{"pos":[332,578],"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","nodes":[{"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[0,246],"nodes":[{"content":"NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time.","pos":[0,113]},{"content":"As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[114,246]}]}]},{"pos":[585,680],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[111689,112379],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain creation date and time information.","nodes":[{"pos":[0,77],"content":"The file or directory for which to obtain creation date and time information.","nodes":[{"content":"The file or directory for which to obtain creation date and time information.","pos":[0,77]}]}],"pos":[112798,112876],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in UTC time.","nodes":[{"pos":[0,156],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the creation date and time for the specified file or directory.","pos":[0,119],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory."},{"content":"This value is expressed in UTC time.","pos":[120,156]}]}],"pos":[112935,113092],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[113267,113317],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[113411,113592],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[113694,113723],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[113829,114040],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[114142,114185],"yaml":true},{"content":"Returns the date and time the specified file or directory was last accessed.","nodes":[{"pos":[0,76],"content":"Returns the date and time the specified file or directory was last accessed.","nodes":[{"content":"Returns the date and time the specified file or directory was last accessed.","pos":[0,76]}]}],"pos":[115520,115597],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,159],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","leadings":["","> "],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[9,155]}]},{"pos":[166,349],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC), adjusted to local time.","pos":[119,183]}]},{"pos":[356,622],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[629,724],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[115608,116342],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain access date and time information.","nodes":[{"pos":[0,75],"content":"The file or directory for which to obtain access date and time information.","nodes":[{"content":"The file or directory for which to obtain access date and time information.","pos":[0,75]}]}],"pos":[116957,117033],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.","nodes":[{"pos":[0,168],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the date and time that the specified file or directory was last accessed.","pos":[0,129],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed."},{"content":"This value is expressed in local time.","pos":[130,168]}]}],"pos":[117092,117261],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[117435,117485],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[117579,117760],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[117862,117891],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[117997,118208],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[118310,118353],"yaml":true},{"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.","nodes":[{"pos":[0,119],"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.","nodes":[{"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.","pos":[0,119]}]}],"pos":[119706,119826],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,159],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","leadings":["","> "],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[9,155]}]},{"pos":[166,325],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[119,159]}]},{"pos":[332,598],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[605,700],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[119837,120547],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain access date and time information.","nodes":[{"pos":[0,75],"content":"The file or directory for which to obtain access date and time information.","nodes":[{"content":"The file or directory for which to obtain access date and time information.","pos":[0,75]}]}],"pos":[120705,120781],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.","nodes":[{"pos":[0,166],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the date and time that the specified file or directory was last accessed.","pos":[0,129],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed."},{"content":"This value is expressed in UTC time.","pos":[130,166]}]}],"pos":[120840,121007],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[121184,121234],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[121328,121509],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[121611,121640],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[121746,121957],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[122059,122102],"yaml":true},{"content":"Returns the date and time the specified file or directory was last written to.","nodes":[{"pos":[0,78],"content":"Returns the date and time the specified file or directory was last written to.","nodes":[{"content":"Returns the date and time the specified file or directory was last written to.","pos":[0,78]}]}],"pos":[123431,123510],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,419],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","leadings":["","> "],"nodes":[{"content":" This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","pos":[8,415],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[1,147]},{"content":"Each operating system manages the last write time according to its own rules.","pos":[148,225]},{"content":"To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","pos":[226,407]}]}]},{"pos":[426,609],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC), adjusted to local time.","pos":[119,183]}]},{"pos":[616,882],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[889,984],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[123521,124515],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain write date and time information.","nodes":[{"pos":[0,74],"content":"The file or directory for which to obtain write date and time information.","nodes":[{"content":"The file or directory for which to obtain write date and time information.","pos":[0,74]}]}],"pos":[125119,125194],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.","nodes":[{"pos":[0,170],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the date and time that the specified file or directory was last written to.","pos":[0,131],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to."},{"content":"This value is expressed in local time.","pos":[132,170]}]}],"pos":[125253,125424],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[125597,125647],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[125741,125922],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[126024,126053],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[126159,126370],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[126472,126515],"yaml":true},{"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.","nodes":[{"pos":[0,121],"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.","nodes":[{"content":"Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.","pos":[0,121]}]}],"pos":[127862,127984],"yaml":true},{"content":"> [!NOTE]\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.  \n  \n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,419],"content":"[!NOTE]\n This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","leadings":["","> "],"nodes":[{"content":" This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","pos":[8,415],"nodes":[{"content":"This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.","pos":[1,147]},{"content":"Each operating system manages the last write time according to its own rules.","pos":[148,225]},{"content":"To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.","pos":[226,407]}]}]},{"pos":[426,585],"content":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).","nodes":[{"content":"If the file described in the <ph id=\"ph1\">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.","pos":[0,118],"source":"If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D."},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[119,159]}]},{"pos":[592,858],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[865,960],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[127995,128965],"yaml":true,"extradata":"MT"},{"content":"The file or directory for which to obtain write date and time information.","nodes":[{"pos":[0,74],"content":"The file or directory for which to obtain write date and time information.","nodes":[{"content":"The file or directory for which to obtain write date and time information.","pos":[0,74]}]}],"pos":[129122,129197],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.","nodes":[{"pos":[0,168],"content":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure set to the date and time that the specified file or directory was last written to.","pos":[0,131],"source":"A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to."},{"content":"This value is expressed in UTC time.","pos":[132,168]}]}],"pos":[129256,129425],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[129601,129651],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[129745,129926],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[130028,130057],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[130163,130374],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[130476,130519],"yaml":true},{"content":"Moves a specified file to a new location, providing the option to specify a new file name.","nodes":[{"pos":[0,90],"content":"Moves a specified file to a new location, providing the option to specify a new file name.","nodes":[{"content":"Moves a specified file to a new location, providing the option to specify a new file name.","pos":[0,90]}]}],"pos":[131842,131933],"yaml":true},{"content":"This method works across disk volumes, and it does not throw an exception if the source and destination are the same. Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <xref:System.IO.IOException>. You cannot use the Move method to overwrite an existing file.  \n  \n The `sourceFileName` and `destFileName` arguments can include relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n If you try to move a file across disk volumes and that file is in use, the file is copied to the destination, but it is not deleted from the source.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,318],"content":"This method works across disk volumes, and it does not throw an exception if the source and destination are the same. Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <xref:System.IO.IOException>. You cannot use the Move method to overwrite an existing file.","nodes":[{"content":"This method works across disk volumes, and it does not throw an exception if the source and destination are the same. Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <xref:System.IO.IOException>. You cannot use the Move method to overwrite an existing file.","pos":[0,318],"nodes":[{"content":"This method works across disk volumes, and it does not throw an exception if the source and destination are the same.","pos":[0,117]},{"content":"Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>.","pos":[118,256],"source":" Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <xref:System.IO.IOException>."},{"content":"You cannot use the Move method to overwrite an existing file.","pos":[257,318]}]}]},{"pos":[325,608],"content":"The `sourceFileName` and `destFileName` arguments can include relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`sourceFileName`</ph> and <ph id=\"ph2\">`destFileName`</ph> arguments can include relative or absolute path information.","pos":[0,100],"source":"The `sourceFileName` and `destFileName` arguments can include relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[101,187]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[188,283],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[615,763],"content":"If you try to move a file across disk volumes and that file is in use, the file is copied to the destination, but it is not deleted from the source.","nodes":[{"content":"If you try to move a file across disk volumes and that file is in use, the file is copied to the destination, but it is not deleted from the source.","pos":[0,148]}]},{"pos":[770,865],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[131944,132818],"yaml":true,"extradata":"MT"},{"content":"The name of the file to move. Can include a relative or absolute path.","nodes":[{"pos":[0,70],"content":"The name of the file to move. Can include a relative or absolute path.","nodes":[{"content":"The name of the file to move. Can include a relative or absolute path.","pos":[0,70],"nodes":[{"content":"The name of the file to move.","pos":[0,29]},{"content":"Can include a relative or absolute path.","pos":[30,70]}]}]}],"pos":[133356,133427],"yaml":true},{"content":"The new path and name for the file.","nodes":[{"pos":[0,35],"content":"The new path and name for the file.","nodes":[{"content":"The new path and name for the file.","pos":[0,35]}]}],"pos":[133495,133531],"yaml":true},{"content":"The destination file already exists.  \n  \n -or-  \n  \n <code>sourceFileName</code> was not found.","nodes":[{"pos":[0,36],"content":"The destination file already exists.","nodes":[{"content":"The destination file already exists.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,96],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> was not found.","source":"<code>sourceFileName</code> was not found."}],"pos":[133666,133769],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is `null`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is `null`."}],"pos":[133871,133939],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains invalid characters as defined in <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,207],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters as defined in <ph id=\"ph3\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains invalid characters as defined in <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[134033,134241],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[134355,134405],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[134511,134722],"yaml":true},{"content":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,133],"content":"The path specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is invalid, (for example, it is on an unmapped drive).","source":"The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid, (for example, it is on an unmapped drive)."}],"pos":[134840,134974],"yaml":true},{"content":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;sourceFileName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is in an invalid format.","source":"<code>sourceFileName</code> or <code>destFileName</code> is in an invalid format."}],"pos":[135076,135158],"yaml":true},{"content":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path with read/write access.","nodes":[{"pos":[0,95],"content":"Opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> on the specified path with read/write access.","source":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path with read/write access."}],"pos":[136502,136598],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[136609,136982],"yaml":true,"extradata":"MT"},{"content":"The file to open.","nodes":[{"pos":[0,17],"content":"The file to open.","nodes":[{"content":"The file to open.","pos":[0,17]}]}],"pos":[137708,137726],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","source":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten."}],"pos":[137791,137986],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> opened in the specified mode and path, with read/write access and not shared.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> opened in the specified mode and path, with read/write access and not shared.","source":"A <xref href=\"System.IO.FileStream\"></xref> opened in the specified mode and path, with read/write access and not shared."}],"pos":[138050,138172],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[138313,138494],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[138596,138625],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[138731,138942],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[139060,139134],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[139222,139268],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.  \n  \n -or-  \n  \n <code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[259,263],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[270,378],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.FileMode.Create\"&gt;&lt;/xref&gt;</ph> and the specified file is a hidden file.","source":"<code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file."}],"pos":[139382,139781],"yaml":true},{"content":"<code>mode</code> specified an invalid value.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> specified an invalid value.","source":"<code>mode</code> specified an invalid value."}],"pos":[139895,139941],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[140049,140104],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[140206,140249],"yaml":true},{"content":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, with the specified mode and access.","nodes":[{"pos":[0,108],"content":"Opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> on the specified path, with the specified mode and access.","source":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, with the specified mode and access."}],"pos":[141692,141801],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]}],"pos":[141812,142079],"yaml":true,"extradata":"MT"},{"content":"The file to open.","nodes":[{"pos":[0,17],"content":"The file to open.","nodes":[{"content":"The file to open.","pos":[0,17]}]}],"pos":[142677,142695],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","source":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten."}],"pos":[142760,142955],"yaml":true},{"content":"A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> value that specifies the operations that can be performed on the file.","source":"A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file."}],"pos":[143024,143139],"yaml":true},{"content":"An unshared <xref href=\"System.IO.FileStream\"></xref> that provides access to the specified file, with the specified mode and access.","nodes":[{"pos":[0,133],"content":"An unshared <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> that provides access to the specified file, with the specified mode and access.","source":"An unshared <xref href=\"System.IO.FileStream\"></xref> that provides access to the specified file, with the specified mode and access."}],"pos":[143203,143337],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.  \n  \n -or-  \n  \n <code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."},{"pos":[187,191],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[198,314],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> specified <ph id=\"ph2\">`Read`</ph> and <ph id=\"ph3\">&lt;code&gt;mode&lt;/code&gt;</ph> specified <ph id=\"ph4\">`Create`</ph>, <ph id=\"ph5\">`CreateNew`</ph>, <ph id=\"ph6\">`Truncate`</ph>, or <ph id=\"ph7\">`Append`</ph>.","source":"<code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`."}],"pos":[143478,143801],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[143903,143932],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[144038,144249],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[144367,144441],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[144529,144575],"yaml":true},{"content":"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.  \n  \n -or-  \n  \n <code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only and <ph id=\"ph2\">&lt;code&gt;access&lt;/code&gt;</ph> is not <ph id=\"ph3\">`Read`</ph>.","source":"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`."},{"pos":[98,102],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[109,149],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,216],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[223,227],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[234,342],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.FileMode.Create\"&gt;&lt;/xref&gt;</ph> and the specified file is a hidden file.","source":"<code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file."}],"pos":[144689,145048],"yaml":true},{"content":"<code>mode</code> or <code>access</code> specified an invalid value.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;access&lt;/code&gt;</ph> specified an invalid value.","source":"<code>mode</code> or <code>access</code> specified an invalid value."}],"pos":[145162,145231],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[145339,145394],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[145496,145539],"yaml":true},{"content":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.","nodes":[{"pos":[0,171],"content":"Opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.","source":"Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option."}],"pos":[147075,147247],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[147258,147631],"yaml":true,"extradata":"MT"},{"content":"The file to open.","nodes":[{"pos":[0,17],"content":"The file to open.","nodes":[{"content":"The file to open.","pos":[0,17]}]}],"pos":[148289,148307],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","nodes":[{"pos":[0,194],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.","source":"A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten."}],"pos":[148372,148567],"yaml":true},{"content":"A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> value that specifies the operations that can be performed on the file.","source":"A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file."}],"pos":[148636,148751],"yaml":true},{"content":"A <xref href=\"System.IO.FileShare\"></xref> value specifying the type of access other threads have to the file.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileShare\"&gt;&lt;/xref&gt;</ph> value specifying the type of access other threads have to the file.","source":"A <xref href=\"System.IO.FileShare\"></xref> value specifying the type of access other threads have to the file."}],"pos":[148818,148929],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.","nodes":[{"pos":[0,165],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.","source":"A <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option."}],"pos":[148993,149159],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.  \n  \n -or-  \n  \n <code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."},{"pos":[187,191],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[198,314],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> specified <ph id=\"ph2\">`Read`</ph> and <ph id=\"ph3\">&lt;code&gt;mode&lt;/code&gt;</ph> specified <ph id=\"ph4\">`Create`</ph>, <ph id=\"ph5\">`CreateNew`</ph>, <ph id=\"ph6\">`Truncate`</ph>, or <ph id=\"ph7\">`Append`</ph>.","source":"<code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`."}],"pos":[149300,149623],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[149725,149754],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[149860,150071],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[150189,150263],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[150351,150397],"yaml":true},{"content":"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.  \n  \n -or-  \n  \n <code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only and <ph id=\"ph2\">&lt;code&gt;access&lt;/code&gt;</ph> is not <ph id=\"ph3\">`Read`</ph>.","source":"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`."},{"pos":[98,102],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[109,149],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,216],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[223,227],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[234,342],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.FileMode.Create\"&gt;&lt;/xref&gt;</ph> and the specified file is a hidden file.","source":"<code>mode</code> is <xref href=\"System.IO.FileMode.Create\"></xref> and the specified file is a hidden file."}],"pos":[150511,150870],"yaml":true},{"content":"<code>mode</code>, <code>access</code>, or <code>share</code> specified an invalid value.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;share&lt;/code&gt;</ph> specified an invalid value.","source":"<code>mode</code>, <code>access</code>, or <code>share</code> specified an invalid value."}],"pos":[150984,151074],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[151182,151237],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[151339,151382],"yaml":true},{"content":"Opens an existing file for reading.","nodes":[{"pos":[0,35],"content":"Opens an existing file for reading.","nodes":[{"content":"Opens an existing file for reading.","pos":[0,35]}]}],"pos":[152663,152699],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with a <xref:System.IO.FileMode> value of <xref:System.IO.FileMode.Open>, a <xref:System.IO.FileAccess> value of <xref:System.IO.FileAccess.Read> and a <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.Read>.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,395],"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with a <xref:System.IO.FileMode> value of <xref:System.IO.FileMode.Open>, a <xref:System.IO.FileAccess> value of <xref:System.IO.FileAccess.Read> and a <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.Read>.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29&gt;</ph> constructor overload with a <ph id=\"ph2\">&lt;xref:System.IO.FileMode&gt;</ph> value of <ph id=\"ph3\">&lt;xref:System.IO.FileMode.Open&gt;</ph>, a <ph id=\"ph4\">&lt;xref:System.IO.FileAccess&gt;</ph> value of <ph id=\"ph5\">&lt;xref:System.IO.FileAccess.Read&gt;</ph> and a <ph id=\"ph6\">&lt;xref:System.IO.FileShare&gt;</ph> value of <ph id=\"ph7\">&lt;xref:System.IO.FileShare.Read&gt;</ph>.","pos":[0,395],"source":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with a <xref:System.IO.FileMode> value of <xref:System.IO.FileMode.Open>, a <xref:System.IO.FileAccess> value of <xref:System.IO.FileAccess.Read> and a <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.Read>."}]},{"pos":[402,668],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[675,770],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[152710,153487],"yaml":true,"extradata":"MT"},{"content":"The file to be opened for reading.","nodes":[{"pos":[0,34],"content":"The file to be opened for reading.","nodes":[{"content":"The file to be opened for reading.","pos":[0,34]}]}],"pos":[154052,154087],"yaml":true},{"content":"A read-only <xref href=\"System.IO.FileStream\"></xref> on the specified path.","nodes":[{"pos":[0,76],"content":"A read-only <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> on the specified path.","source":"A read-only <xref href=\"System.IO.FileStream\"></xref> on the specified path."}],"pos":[154151,154228],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[154373,154554],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[154656,154685],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[154791,155002],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[155120,155194],"yaml":true},{"content":"<code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,107],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[155308,155422],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[155530,155585],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[155687,155730],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[155818,155864],"yaml":true},{"content":"Opens an existing UTF-8 encoded text file for reading.","nodes":[{"pos":[0,54],"content":"Opens an existing UTF-8 encoded text file for reading.","nodes":[{"content":"Opens an existing UTF-8 encoded text file for reading.","pos":[0,54]}]}],"pos":[157145,157200],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.StreamReader.%23ctor%28System.String%29> constructor overload.  \n  \n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,111],"content":"This method is equivalent to the <xref:System.IO.StreamReader.%23ctor%28System.String%29> constructor overload.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.StreamReader.%23ctor%28System.String%29&gt;</ph> constructor overload.","pos":[0,111],"source":"This method is equivalent to the <xref:System.IO.StreamReader.%23ctor%28System.String%29> constructor overload."}]},{"pos":[118,384],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[391,486],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[157211,157704],"yaml":true,"extradata":"MT"},{"content":"The file to be opened for reading.","nodes":[{"pos":[0,34],"content":"The file to be opened for reading.","nodes":[{"content":"The file to be opened for reading.","pos":[0,34]}]}],"pos":[158276,158311],"yaml":true},{"content":"A <xref href=\"System.IO.StreamReader\"></xref> on the specified path.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> on the specified path.","source":"A <xref href=\"System.IO.StreamReader\"></xref> on the specified path."}],"pos":[158377,158446],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[158611,158661],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[158755,158936],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[159038,159067],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[159173,159384],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[159502,159576],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[159684,159739],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[159841,159884],"yaml":true},{"content":"Opens an existing file or creates a new file for writing.","nodes":[{"pos":[0,57],"content":"Opens an existing file or creates a new file for writing.","nodes":[{"content":"Opens an existing file or creates a new file for writing.","pos":[0,57]}]}],"pos":[161171,161229],"yaml":true},{"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with file mode set to <xref:System.IO.FileMode.OpenOrCreate>, the access set to <xref:System.IO.FileAccess.Write>, and the share mode set to <xref:System.IO.FileShare.None>.  \n  \n The <xref:System.IO.File.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (such as \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").  \n  \n The `path` parameter may specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, use the <xref:System.IO.Directory.GetCurrentDirectory%2A> method.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,348],"content":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with file mode set to <xref:System.IO.FileMode.OpenOrCreate>, the access set to <xref:System.IO.FileAccess.Write>, and the share mode set to <xref:System.IO.FileShare.None>.","nodes":[{"content":"This method is equivalent to the <ph id=\"ph1\">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29&gt;</ph> constructor overload with file mode set to <ph id=\"ph2\">&lt;xref:System.IO.FileMode.OpenOrCreate&gt;</ph>, the access set to <ph id=\"ph3\">&lt;xref:System.IO.FileAccess.Write&gt;</ph>, and the share mode set to <ph id=\"ph4\">&lt;xref:System.IO.FileShare.None&gt;</ph>.","pos":[0,348],"source":"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with file mode set to <xref:System.IO.FileMode.OpenOrCreate>, the access set to <xref:System.IO.FileAccess.Write>, and the share mode set to <xref:System.IO.FileShare.None>."}]},{"pos":[355,864],"content":"The <xref:System.IO.File.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (such as \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","nodes":[{"content":"The <xref:System.IO.File.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (such as \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","pos":[0,509],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.OpenWrite%2A&gt;</ph> method opens a file if one already exists for the file path, or creates a new file if one does not exist.","pos":[0,144],"source":"The <xref:System.IO.File.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist."},{"content":"For an existing file, it does not append the new text to the existing text.","pos":[145,220]},{"content":"Instead, it overwrites the existing characters with the new characters.","pos":[221,292]},{"content":"If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (such as \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","pos":[293,509]}]}]},{"pos":[871,1136],"content":"The `path` parameter may specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, use the <xref:System.IO.Directory.GetCurrentDirectory%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter may specify relative or absolute path information.","pos":[0,71],"source":"The `path` parameter may specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[72,158]},{"content":"To obtain the current working directory, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.","pos":[159,265],"source":" To obtain the current working directory, use the <xref:System.IO.Directory.GetCurrentDirectory%2A> method."}]},{"pos":[1143,1238],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[161240,162493],"yaml":true,"extradata":"MT"},{"content":"The file to be opened for writing.","nodes":[{"pos":[0,34],"content":"The file to be opened for writing.","nodes":[{"content":"The file to be opened for writing.","pos":[0,34]}]}],"pos":[163080,163115],"yaml":true},{"content":"An unshared <xref href=\"System.IO.FileStream\"></xref> object on the specified path with <xref href=\"System.IO.FileAccess.Write\"></xref> access.","nodes":[{"pos":[0,143],"content":"An unshared <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object on the specified path with <ph id=\"ph2\">&lt;xref href=\"System.IO.FileAccess.Write\"&gt;&lt;/xref&gt;</ph> access.","source":"An unshared <xref href=\"System.IO.FileStream\"></xref> object on the specified path with <xref href=\"System.IO.FileAccess.Write\"></xref> access."}],"pos":[163179,163323],"yaml":true},{"content":"The caller does not have the required permission.  \n  \n -or-  \n  \n <code>path</code> specified a read-only file or directory.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,125],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a read-only file or directory.","source":"<code>path</code> specified a read-only file or directory."}],"pos":[163489,163621],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[163715,163896],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[163998,164027],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[164133,164344],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[164462,164536],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[164638,164681],"yaml":true},{"content":"Opens a binary file, reads the contents of the file into a byte array, and then closes the file.","nodes":[{"pos":[0,96],"content":"Opens a binary file, reads the contents of the file into a byte array, and then closes the file.","nodes":[{"content":"Opens a binary file, reads the contents of the file into a byte array, and then closes the file.","pos":[0,96]}]}],"pos":[165986,166083],"yaml":true},{"content":"Given a file path, this method opens the file, reads the contents of the file into a byte array, and then closes the file.","nodes":[{"pos":[0,122],"content":"Given a file path, this method opens the file, reads the contents of the file into a byte array, and then closes the file.","nodes":[{"content":"Given a file path, this method opens the file, reads the contents of the file into a byte array, and then closes the file.","pos":[0,122]}]}],"pos":[166094,166217],"yaml":true,"extradata":"MT"},{"content":"The file to open for reading.","nodes":[{"pos":[0,29],"content":"The file to open for reading.","nodes":[{"content":"The file to open for reading.","pos":[0,29]}]}],"pos":[166365,166395],"yaml":true},{"content":"A byte array containing the contents of the file.","nodes":[{"pos":[0,49],"content":"A byte array containing the contents of the file.","nodes":[{"content":"A byte array containing the contents of the file.","pos":[0,49]}]}],"pos":[166452,166502],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[166651,166832],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[166934,166963],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[167069,167280],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[167398,167471],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[167559,167605],"yaml":true},{"content":"This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,56],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,114],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[121,125],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[132,181],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[167719,167911],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[168019,168074],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[168176,168219],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[168331,168381],"yaml":true},{"content":"Opens a text file, reads all lines of the file, and then closes the file.","nodes":[{"pos":[0,73],"content":"Opens a text file, reads all lines of the file, and then closes the file.","nodes":[{"content":"Opens a text file, reads all lines of the file, and then closes the file.","pos":[0,73]}]}],"pos":[170886,170960],"yaml":true},{"content":"This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"pos":[0,382],"content":"This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","nodes":[{"content":"This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","pos":[0,382],"nodes":[{"content":"This method opens a file, reads each line of the file, then adds each line as an element of a string array.","pos":[0,107]},{"content":"It then closes the file.","pos":[108,132]},{"content":"A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed.","pos":[133,294]},{"content":"The resulting string does not contain the terminating carriage return and/or line feed.","pos":[295,382]}]}]},{"pos":[389,586],"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[0,197],"nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks.","pos":[0,110]},{"content":"Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[111,197]}]}]}],"pos":[170971,171564],"yaml":true,"extradata":"MT"},{"content":"The file to open for reading.","nodes":[{"pos":[0,29],"content":"The file to open for reading.","nodes":[{"content":"The file to open for reading.","pos":[0,29]}]}],"pos":[172234,172264],"yaml":true},{"content":"A string array containing all lines of the file.","nodes":[{"pos":[0,48],"content":"A string array containing all lines of the file.","nodes":[{"content":"A string array containing all lines of the file.","pos":[0,48]}]}],"pos":[172323,172372],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[172521,172702],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[172804,172833],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[172939,173150],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[173268,173341],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[173429,173475],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[173589,173856],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[173964,174019],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[174121,174164],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[174276,174326],"yaml":true},{"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","nodes":[{"pos":[0,96],"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","nodes":[{"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","pos":[0,96]}]}],"pos":[175724,175821],"yaml":true},{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"pos":[0,386],"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","pos":[0,386],"nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string array.","pos":[0,111]},{"content":"It then closes the file.","pos":[112,136]},{"content":"A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed.","pos":[137,298]},{"content":"The resulting string does not contain the terminating carriage return and/or line feed.","pos":[299,386]}]}]},{"pos":[393,590],"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[0,197],"nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks.","pos":[0,110]},{"content":"Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[111,197]}]}]}],"pos":[175832,176429],"yaml":true,"extradata":"MT"},{"content":"The file to open for reading.","nodes":[{"pos":[0,29],"content":"The file to open for reading.","nodes":[{"content":"The file to open for reading.","pos":[0,29]}]}],"pos":[177184,177214],"yaml":true},{"content":"The encoding applied to the contents of the file.","nodes":[{"pos":[0,49],"content":"The encoding applied to the contents of the file.","nodes":[{"content":"The encoding applied to the contents of the file.","pos":[0,49]}]}],"pos":[177285,177335],"yaml":true},{"content":"A string array containing all lines of the file.","nodes":[{"pos":[0,48],"content":"A string array containing all lines of the file.","nodes":[{"content":"A string array containing all lines of the file.","pos":[0,48]}]}],"pos":[177394,177443],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[177592,177773],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[177875,177904],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[178010,178221],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[178339,178412],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[178500,178546],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[178660,178927],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[179035,179090],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[179192,179235],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[179347,179397],"yaml":true},{"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","nodes":[{"pos":[0,96],"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","nodes":[{"content":"Opens a file, reads all lines of the file with the specified encoding, and then closes the file.","pos":[0,96]}]}],"pos":[183395,183492],"yaml":true},{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter.","nodes":[{"pos":[0,380],"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","pos":[0,380],"nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string.","pos":[0,105]},{"content":"It then closes the file.","pos":[106,130]},{"content":"A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed.","pos":[131,292]},{"content":"The resulting string does not contain the terminating carriage return and/or line feed.","pos":[293,380]}]}]},{"pos":[387,584],"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[0,197],"nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks.","pos":[0,110]},{"content":"Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[111,197]}]}]},{"pos":[591,680],"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[0,89]}]},{"pos":[687,871],"content":"To use the encoding settings as configured for your operating system, specify the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=fullName&gt;</ph> property for the <ph id=\"ph2\">`encoding`</ph> parameter.","source":"To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."}],"pos":[183503,184385],"yaml":true,"extradata":"MT"},{"content":"The file to open for reading.","nodes":[{"pos":[0,29],"content":"The file to open for reading.","nodes":[{"content":"The file to open for reading.","pos":[0,29]}]}],"pos":[185114,185144],"yaml":true},{"content":"The encoding applied to the contents of the file.","nodes":[{"pos":[0,49],"content":"The encoding applied to the contents of the file.","nodes":[{"content":"The encoding applied to the contents of the file.","pos":[0,49]}]}],"pos":[185215,185265],"yaml":true},{"content":"A string containing all lines of the file.","nodes":[{"pos":[0,42],"content":"A string containing all lines of the file.","nodes":[{"content":"A string containing all lines of the file.","pos":[0,42]}]}],"pos":[185322,185365],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[185513,185694],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[185796,185825],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[185931,186142],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[186260,186333],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[186421,186467],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[186581,186848],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[186956,187011],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[187113,187156],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[187268,187318],"yaml":true},{"content":"Opens a text file, reads all lines of the file, and then closes the file.","nodes":[{"pos":[0,73],"content":"Opens a text file, reads all lines of the file, and then closes the file.","nodes":[{"content":"Opens a text file, reads all lines of the file, and then closes the file.","pos":[0,73]}]}],"pos":[188617,188691],"yaml":true},{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"pos":[0,380],"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.","pos":[0,380],"nodes":[{"content":"This method opens a file, reads each line of the file, and then adds each line as an element of a string.","pos":[0,105]},{"content":"It then closes the file.","pos":[106,130]},{"content":"A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed.","pos":[131,292]},{"content":"The resulting string does not contain the terminating carriage return and/or line feed.","pos":[293,380]}]}]},{"pos":[387,584],"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[0,197],"nodes":[{"content":"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks.","pos":[0,110]},{"content":"Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.","pos":[111,197]}]}]},{"pos":[591,802],"content":"Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29&gt;</ph> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.","pos":[0,211],"source":"Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly."}]},{"pos":[809,898],"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[0,89]}]}],"pos":[188702,189611],"yaml":true,"extradata":"MT"},{"content":"The file to open for reading.","nodes":[{"pos":[0,29],"content":"The file to open for reading.","nodes":[{"content":"The file to open for reading.","pos":[0,29]}]}],"pos":[190273,190303],"yaml":true},{"content":"A string containing all lines of the file.","nodes":[{"pos":[0,42],"content":"A string containing all lines of the file.","nodes":[{"content":"A string containing all lines of the file.","pos":[0,42]}]}],"pos":[190360,190403],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[190551,190732],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[190834,190863],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[190969,191180],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[191298,191371],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[191459,191505],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[191619,191886],"yaml":true},{"content":"The file specified in <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified in <code>path</code> was not found."}],"pos":[191994,192049],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[192151,192194],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[192306,192356],"yaml":true},{"content":"Reads the lines of a file.","nodes":[{"pos":[0,26],"content":"Reads the lines of a file.","nodes":[{"content":"Reads the lines of a file.","pos":[0,26]}]}],"pos":[196225,196252],"yaml":true},{"content":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned; when you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.  \n  \n You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:  \n  \n-   Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines.  \n  \n-   Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method.  \n  \n-   Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.  \n  \n This method uses <xref:System.Text.Encoding.UTF8%2A> for the encoding value.","nodes":[{"pos":[0,504],"content":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned; when you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.","nodes":[{"content":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned; when you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.","pos":[0,504],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.File.ReadAllLines%2A&gt;</ph> methods differ as follows: When you use <ph id=\"ph3\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph>, you can start enumerating the collection of strings before the whole collection is returned; when you use <ph id=\"ph4\">&lt;xref:System.IO.File.ReadAllLines%2A&gt;</ph>, you must wait for the whole array of strings be returned before you can access the array.","pos":[0,391],"source":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned; when you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array."},{"content":"Therefore, when you are working with very large files, <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> can be more efficient.","pos":[392,504],"source":" Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient."}]}]},{"pos":[511,589],"content":"You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> method to do the following:","pos":[0,78],"source":"You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:"}]},{"pos":[599,753],"content":"Perform <bpt id=\"p1\">[</bpt>LINQ to Objects<ept id=\"p1\">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> queries on a file to obtain a filtered set of its lines.","source":"Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines."},{"pos":[763,1161],"content":"Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method.","nodes":[{"content":"Write the returned collection of lines to a file with the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName&gt;</ph> method, or append them to an existing file with the <ph id=\"ph2\">&lt;xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName&gt;</ph> method.","pos":[0,398],"source":"Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method."}]},{"pos":[1171,1438],"content":"Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.","nodes":[{"content":"Create an immediately populated instance of a collection that takes an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of strings for its constructor, such as a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> or a <ph id=\"ph3\">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.","pos":[0,267],"source":"Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>."}]},{"pos":[1445,1521],"content":"This method uses <xref:System.Text.Encoding.UTF8%2A> for the encoding value.","nodes":[{"content":"This method uses <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> for the encoding value.","pos":[0,76],"source":"This method uses <xref:System.Text.Encoding.UTF8%2A> for the encoding value."}]}],"pos":[196263,197797],"yaml":true,"extradata":"MT"},{"content":"The file to read.","nodes":[{"pos":[0,17],"content":"The file to read.","nodes":[{"content":"The file to read.","pos":[0,17]}]}],"pos":[198950,198968],"yaml":true},{"content":"All the lines of the file, or the lines that are the result of a query.","nodes":[{"pos":[0,71],"content":"All the lines of the file, or the lines that are the result of a query.","nodes":[{"content":"All the lines of the file, or the lines that are the result of a query.","pos":[0,71]}]}],"pos":[199065,199137],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,191],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[199283,199475],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[199577,199606],"yaml":true},{"content":"<code>path</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[199724,199796],"yaml":true},{"content":"The file specified by <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified by <code>path</code> was not found."}],"pos":[199904,199959],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[200047,200093],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[200199,200389],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[200501,200551],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[185,189],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[196,245],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[200665,200925],"yaml":true},{"content":"Read the lines of a file that has a specified encoding.","nodes":[{"pos":[0,55],"content":"Read the lines of a file that has a specified encoding.","nodes":[{"content":"Read the lines of a file that has a specified encoding.","pos":[0,55]}]}],"pos":[202305,202361],"yaml":true},{"content":"Use this method to specify an encoding to use read the file.  \n  \n The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned. When you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.  \n  \n You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:  \n  \n-   Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines.  \n  \n-   Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method.  \n  \n-   Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.","nodes":[{"pos":[0,60],"content":"Use this method to specify an encoding to use read the file.","nodes":[{"content":"Use this method to specify an encoding to use read the file.","pos":[0,60]}]},{"pos":[67,571],"content":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned. When you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.","nodes":[{"content":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned. When you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.","pos":[0,504],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.File.ReadAllLines%2A&gt;</ph> methods differ as follows: When you use <ph id=\"ph3\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph>, you can start enumerating the collection of strings before the whole collection is returned.","pos":[0,249],"source":"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned."},{"content":"When you use <ph id=\"ph1\">&lt;xref:System.IO.File.ReadAllLines%2A&gt;</ph>, you must wait for the whole array of strings be returned before you can access the array.","pos":[250,391],"source":" When you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array."},{"content":"Therefore, when you are working with very large files, <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> can be more efficient.","pos":[392,504],"source":" Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient."}]}]},{"pos":[578,656],"content":"You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> method to do the following:","pos":[0,78],"source":"You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:"}]},{"pos":[666,820],"content":"Perform <bpt id=\"p1\">[</bpt>LINQ to Objects<ept id=\"p1\">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> queries on a file to obtain a filtered set of its lines.","source":"Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines."},{"pos":[830,1274],"content":"Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method.","nodes":[{"content":"Write the returned collection of lines to a file with the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName&gt;</ph> method, or append them to an existing file with the <ph id=\"ph2\">&lt;xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName&gt;</ph> method.","pos":[0,444],"source":"Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method."}]},{"pos":[1284,1551],"content":"Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.","nodes":[{"content":"Create an immediately populated instance of a collection that takes an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of strings for its constructor, such as a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> or a <ph id=\"ph3\">&lt;xref:System.Collections.Generic.Queue%601&gt;</ph>.","pos":[0,267],"source":"Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>."}]}],"pos":[202372,203936],"yaml":true,"extradata":"MT"},{"content":"The file to read.","nodes":[{"pos":[0,17],"content":"The file to read.","nodes":[{"content":"The file to read.","pos":[0,17]}]}],"pos":[204152,204170],"yaml":true},{"content":"The encoding that is applied to the contents of the file.","nodes":[{"pos":[0,57],"content":"The encoding that is applied to the contents of the file.","nodes":[{"content":"The encoding that is applied to the contents of the file.","pos":[0,57]}]}],"pos":[204241,204299],"yaml":true},{"content":"All the lines of the file, or the lines that are the result of a query.","nodes":[{"pos":[0,71],"content":"All the lines of the file, or the lines that are the result of a query.","nodes":[{"content":"All the lines of the file, or the lines that are the result of a query.","pos":[0,71]}]}],"pos":[204396,204468],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,194],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[204614,204809],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[204911,204940],"yaml":true},{"content":"<code>path</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[205058,205130],"yaml":true},{"content":"The file specified by <code>path</code> was not found.","nodes":[{"pos":[0,54],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","source":"The file specified by <code>path</code> was not found."}],"pos":[205238,205293],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[205381,205427],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[205533,205723],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[205835,205885],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[185,189],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[196,245],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[205999,206259],"yaml":true},{"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file.","nodes":[{"pos":[0,148],"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file.","nodes":[{"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file.","pos":[0,148]}]}],"pos":[207666,207815],"yaml":true},{"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.  \n  \n If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.  \n  \n Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced.","nodes":[{"pos":[0,177],"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.","nodes":[{"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.","pos":[0,177],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of another file.","pos":[0,120],"source":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file."},{"content":"It also creates a backup of the file that was replaced.","pos":[122,177]}]}]},{"pos":[184,411],"content":"If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.","nodes":[{"content":"If the <ph id=\"ph1\">`sourceFileName`</ph> and <ph id=\"ph2\">`destinationFileName`</ph> are on different volumes, this method will raise an exception.","pos":[0,112],"source":"If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception."},{"content":"If the <ph id=\"ph1\">`destinationBackupFileName`</ph> is on a different volume from the source file, the backup file will be deleted.","pos":[113,227],"source":" If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted."}]},{"pos":[418,540],"content":"Pass <ph id=\"ph1\">`null`</ph> to the <ph id=\"ph2\">`destinationBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.","source":"Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced."}],"pos":[207826,208373],"yaml":true,"extradata":"MT"},{"content":"The name of a file that replaces the file specified by <code>destinationFileName</code>.","nodes":[{"pos":[0,88],"content":"The name of a file that replaces the file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The name of a file that replaces the file specified by <code>destinationFileName</code>."}],"pos":[209100,209189],"yaml":true},{"content":"The name of the file being replaced.","nodes":[{"pos":[0,36],"content":"The name of the file being replaced.","nodes":[{"content":"The name of the file being replaced.","pos":[0,36]}]}],"pos":[209264,209301],"yaml":true},{"content":"The name of the backup file.","nodes":[{"pos":[0,28],"content":"The name of the backup file.","nodes":[{"content":"The name of the backup file.","pos":[0,28]}]}],"pos":[209382,209411],"yaml":true},{"content":"The path described by the <code>destinationFileName</code> parameter was not of a legal form.  \n  \n -or-  \n  \n The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form.","nodes":[{"pos":[0,93],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destinationFileName</code> parameter was not of a legal form."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,210],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form."}],"pos":[209555,209772],"yaml":true},{"content":"The <code>destinationFileName</code> parameter is `null`.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destinationFileName</code> parameter is `null`."}],"pos":[209874,209932],"yaml":true},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[210042,210074],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.  \n  \n -or-  \n  \n The file described by the <code>destinationBackupFileName</code> parameter could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,212],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>destinationBackupFileName</code> parameter could not be found."}],"pos":[210182,210403],"yaml":true},{"content":"An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]},{"pos":[52,59],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[66,168],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters specify the same file.","source":"The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."}],"pos":[210491,210667],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[210773,210984],"yaml":true},{"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","nodes":[{"pos":[0,94],"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","nodes":[{"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","pos":[0,94]}]}],"pos":[211102,211197],"yaml":true},{"content":"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n Source or destination parameters specify a directory instead of a file.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,113],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter specifies a file that is read-only.","source":"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only."},{"pos":[120,124],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[131,187],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,276],"content":"Source or destination parameters specify a directory instead of a file.","nodes":[{"content":"Source or destination parameters specify a directory instead of a file.","pos":[0,71]}]},{"pos":[283,287],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[294,343],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[211311,211669],"yaml":true},{"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file and optionally ignores merge errors.","nodes":[{"pos":[0,184],"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file and optionally ignores merge errors.","nodes":[{"content":"Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file and optionally ignores merge errors.","pos":[0,184]}]}],"pos":[212964,213149],"yaml":true},{"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.  \n  \n If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.  \n  \n Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced.","nodes":[{"pos":[0,177],"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.","nodes":[{"content":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.","pos":[0,177],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of another file.","pos":[0,120],"source":"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file."},{"content":"It also creates a backup of the file that was replaced.","pos":[122,177]}]}]},{"pos":[184,411],"content":"If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.","nodes":[{"content":"If the <ph id=\"ph1\">`sourceFileName`</ph> and <ph id=\"ph2\">`destinationFileName`</ph> are on different volumes, this method will raise an exception.","pos":[0,112],"source":"If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception."},{"content":"If the <ph id=\"ph1\">`destinationBackupFileName`</ph> is on a different volume from the source file, the backup file will be deleted.","pos":[113,227],"source":" If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted."}]},{"pos":[418,540],"content":"Pass <ph id=\"ph1\">`null`</ph> to the <ph id=\"ph2\">`destinationBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.","source":"Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced."}],"pos":[213160,213707],"yaml":true,"extradata":"MT"},{"content":"The name of a file that replaces the file specified by <code>destinationFileName</code>.","nodes":[{"pos":[0,88],"content":"The name of a file that replaces the file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The name of a file that replaces the file specified by <code>destinationFileName</code>."}],"pos":[214461,214550],"yaml":true},{"content":"The name of the file being replaced.","nodes":[{"pos":[0,36],"content":"The name of the file being replaced.","nodes":[{"content":"The name of the file being replaced.","pos":[0,36]}]}],"pos":[214625,214662],"yaml":true},{"content":"The name of the backup file.","nodes":[{"pos":[0,28],"content":"The name of the backup file.","nodes":[{"content":"The name of the backup file.","pos":[0,28]}]}],"pos":[214743,214772],"yaml":true},{"content":"`true` to ignore merge errors (such as attributes and access control lists (ACLs)) from the replaced file to the replacement file; otherwise, `false`.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">`true`</ph> to ignore merge errors (such as attributes and access control lists (ACLs)) from the replaced file to the replacement file; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to ignore merge errors (such as attributes and access control lists (ACLs)) from the replaced file to the replacement file; otherwise, `false`."}],"pos":[214849,215002],"yaml":true},{"content":"The path described by the <code>destinationFileName</code> parameter was not of a legal form.  \n  \n -or-  \n  \n The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form.","nodes":[{"pos":[0,93],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destinationFileName</code> parameter was not of a legal form."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,210],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form."}],"pos":[215146,215363],"yaml":true},{"content":"The <code>destinationFileName</code> parameter is `null`.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destinationFileName</code> parameter is `null`."}],"pos":[215465,215523],"yaml":true},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[215633,215665],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.  \n  \n -or-  \n  \n The file described by the <code>destinationBackupFileName</code> parameter could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,212],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>destinationBackupFileName</code> parameter could not be found."}],"pos":[215773,215994],"yaml":true},{"content":"An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]},{"pos":[52,59],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[66,168],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters specify the same file.","source":"The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."}],"pos":[216082,216258],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[216364,216575],"yaml":true},{"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","nodes":[{"pos":[0,94],"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","nodes":[{"content":"The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.","pos":[0,94]}]}],"pos":[216693,216788],"yaml":true},{"content":"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n Source or destination parameters specify a directory instead of a file.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,113],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationFileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter specifies a file that is read-only.","source":"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only."},{"pos":[120,124],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[131,187],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,276],"content":"Source or destination parameters specify a directory instead of a file.","nodes":[{"content":"Source or destination parameters specify a directory instead of a file.","pos":[0,71]}]},{"pos":[283,287],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[294,343],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[216902,217260],"yaml":true},{"content":"Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the specified file.","nodes":[{"pos":[0,150],"content":"Applies access control list (ACL) entries described by a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object to the specified file.","source":"Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the specified file."}],"pos":[218535,218686],"yaml":true},{"content":"The <xref:System.IO.File.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.  \n  \n> [!CAUTION]\n>  The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.File.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.File.SetAccessControl%2A> to apply it back to the file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \n  \n The <xref:System.IO.File.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.  \n  \n To copy ACL information from one file to another:  \n  \n1.  Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.  \n  \n2.  Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.  \n  \n3.  Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.  \n  \n4.  Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.  \n  \n5.  Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.File.SetAccessControl%2A> method.  \n  \n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"pos":[0,147],"content":"The <xref:System.IO.File.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.","pos":[0,147],"source":"The <xref:System.IO.File.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list."}]},{"pos":[155,475],"content":"[!CAUTION]\n The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.File.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.File.SetAccessControl%2A> to apply it back to the file.","leadings":["","> "],"nodes":[{"content":" The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.File.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.File.SetAccessControl%2A> to apply it back to the file.","pos":[11,318],"nodes":[{"content":"The ACL specified for the <ph id=\"ph1\">`fileSecurity`</ph> parameter replaces the existing ACL for the file.","pos":[1,91],"source":" The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file."},{"content":"To add permissions for a new user, use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, modify it, and then use <ph id=\"ph2\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> to apply it back to the file.","pos":[92,307],"source":" To add permissions for a new user, use the <xref:System.IO.File.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.File.SetAccessControl%2A> to apply it back to the file."}]}]},{"pos":[482,747],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]},{"pos":[754,1208],"content":"The <xref:System.IO.File.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.","nodes":[{"content":"The <xref:System.IO.File.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.","pos":[0,454],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> method persists only <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> objects that have been modified after object creation.","pos":[0,171],"source":"The <xref:System.IO.File.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object has not been modified, it will not be persisted to a file.","pos":[173,293],"source":"  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file."},{"content":"Therefore, it is not possible to retrieve a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from one file and reapply the same object to another file.","pos":[295,454],"source":"  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file."}]}]},{"pos":[1215,1264],"content":"To copy ACL information from one file to another:","nodes":[{"content":"To copy ACL information from one file to another:","pos":[0,49]}]},{"pos":[1274,1425],"content":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.File.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from the source file.","pos":[0,151],"source":"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file."}]},{"pos":[1435,1530],"content":"Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.","nodes":[{"content":"Create a new <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object for the destination file.","pos":[0,95],"source":"Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file."}]},{"pos":[1540,1833],"content":"Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to retrieve the ACL information.","pos":[0,293],"source":"Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information."}]},{"pos":[1843,2153],"content":"Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object.","pos":[0,310],"source":"Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object."}]},{"pos":[2163,2323],"content":"Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.File.SetAccessControl%2A> method.","nodes":[{"content":"Set the destination <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to the destination file using the <ph id=\"ph2\">&lt;xref:System.IO.File.SetAccessControl%2A&gt;</ph> method.","pos":[0,160],"source":"Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.File.SetAccessControl%2A> method."}]},{"pos":[2330,2895],"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","nodes":[{"content":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.","pos":[0,565],"nodes":[{"content":"In NTFS environments, <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.","pos":[0,308],"source":"In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder."},{"content":"To deny <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.","pos":[309,565],"source":" To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory."}]}]}],"pos":[218697,221616],"yaml":true,"extradata":"MT"},{"content":"A file to add or remove access control list (ACL) entries from.","nodes":[{"pos":[0,63],"content":"A file to add or remove access control list (ACL) entries from.","nodes":[{"content":"A file to add or remove access control list (ACL) entries from.","pos":[0,63]}]}],"pos":[222600,222664],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an ACL entry to apply to the file described by the <code>path</code> parameter.","nodes":[{"pos":[0,167],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that describes an ACL entry to apply to the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an ACL entry to apply to the file described by the <code>path</code> parameter."}],"pos":[222761,222929],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[223076,223122],"yaml":true},{"content":"The <code>path</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>path</code> parameter is `null`."}],"pos":[223254,223297],"yaml":true},{"content":"The file could not be found.","nodes":[{"pos":[0,28],"content":"The file could not be found.","nodes":[{"content":"The file could not be found.","pos":[0,28]}]}],"pos":[223387,223416],"yaml":true},{"content":"The <code>path</code> parameter specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The <code>path</code> parameter specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a file that is read-only.","source":"The <code>path</code> parameter specified a file that is read-only."},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,141],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,213],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specified a directory.","source":"The <code>path</code> parameter specified a directory."},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,280],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[223530,223825],"yaml":true},{"content":"The <code>fileSecurity</code> parameter is `null`.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileSecurity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileSecurity</code> parameter is `null`."}],"pos":[223927,223978],"yaml":true},{"content":"Sets the specified <xref href=\"System.IO.FileAttributes\"></xref> of the file on the specified path.","nodes":[{"pos":[0,99],"content":"Sets the specified <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAttributes\"&gt;&lt;/xref&gt;</ph> of the file on the specified path.","source":"Sets the specified <xref href=\"System.IO.FileAttributes\"></xref> of the file on the specified path."}],"pos":[225156,225256],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n Certain file attributes, such as <xref:System.IO.FileAttributes.Hidden> and <xref:System.IO.FileAttributes.ReadOnly>, can be combined. Other attributes, such as <xref:System.IO.FileAttributes.Normal>, must be used alone.  \n  \n It is not possible to change the compression status of a <xref:System.IO.File> object using the <xref:System.IO.File.SetAttributes%2A> method.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,493],"content":"Certain file attributes, such as <xref:System.IO.FileAttributes.Hidden> and <xref:System.IO.FileAttributes.ReadOnly>, can be combined. Other attributes, such as <xref:System.IO.FileAttributes.Normal>, must be used alone.","nodes":[{"content":"Certain file attributes, such as <xref:System.IO.FileAttributes.Hidden> and <xref:System.IO.FileAttributes.ReadOnly>, can be combined. Other attributes, such as <xref:System.IO.FileAttributes.Normal>, must be used alone.","pos":[0,220],"nodes":[{"content":"Certain file attributes, such as <ph id=\"ph1\">&lt;xref:System.IO.FileAttributes.Hidden&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.FileAttributes.ReadOnly&gt;</ph>, can be combined.","pos":[0,134],"source":"Certain file attributes, such as <xref:System.IO.FileAttributes.Hidden> and <xref:System.IO.FileAttributes.ReadOnly>, can be combined."},{"content":"Other attributes, such as <ph id=\"ph1\">&lt;xref:System.IO.FileAttributes.Normal&gt;</ph>, must be used alone.","pos":[135,220],"source":" Other attributes, such as <xref:System.IO.FileAttributes.Normal>, must be used alone."}]}]},{"pos":[500,642],"content":"It is not possible to change the compression status of a <xref:System.IO.File> object using the <xref:System.IO.File.SetAttributes%2A> method.","nodes":[{"content":"It is not possible to change the compression status of a <ph id=\"ph1\">&lt;xref:System.IO.File&gt;</ph> object using the <ph id=\"ph2\">&lt;xref:System.IO.File.SetAttributes%2A&gt;</ph> method.","pos":[0,142],"source":"It is not possible to change the compression status of a <xref:System.IO.File> object using the <xref:System.IO.File.SetAttributes%2A> method."}]},{"pos":[649,744],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[225267,226020],"yaml":true,"extradata":"MT"},{"content":"The path to the file.","nodes":[{"pos":[0,21],"content":"The path to the file.","nodes":[{"content":"The path to the file.","pos":[0,21]}]}],"pos":[226756,226778],"yaml":true},{"content":"A bitwise combination of the enumeration values.","nodes":[{"pos":[0,48],"content":"A bitwise combination of the enumeration values.","nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]}],"pos":[226859,226908],"yaml":true},{"content":"<code>path</code> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid.","source":"<code>path</code> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid."}],"pos":[227058,227177],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[227283,227494],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[227596,227639],"yaml":true},{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"pos":[0,73],"content":"The specified path is invalid, (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid, (for example, it is on an unmapped drive).","pos":[0,73]}]}],"pos":[227757,227831],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[227939,227965],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[228079,228346],"yaml":true},{"content":"Sets the date and time the file was created.","nodes":[{"pos":[0,44],"content":"Sets the date and time the file was created.","nodes":[{"content":"Sets the date and time the file was created.","pos":[0,44]}]}],"pos":[229747,229792],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,509],"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","nodes":[{"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[0,236],"nodes":[{"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time.","pos":[0,103]},{"content":"As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[104,236]}]}]},{"pos":[516,611],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[229803,230421],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the creation date and time information.","nodes":[{"pos":[0,65],"content":"The file for which to set the creation date and time information.","nodes":[{"content":"The file for which to set the creation date and time information.","pos":[0,65]}]}],"pos":[230593,230659],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"pos":[0,158],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the creation date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,119],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>."},{"content":"This value is expressed in local time.","pos":[120,158]}]}],"pos":[230729,230888],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[231054,231088],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[231182,231363],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[231465,231494],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[231600,231811],"yaml":true},{"content":"An I/O error occurred while performing the operation.","nodes":[{"pos":[0,53],"content":"An I/O error occurred while performing the operation.","nodes":[{"content":"An I/O error occurred while performing the operation.","pos":[0,53]}]}],"pos":[231899,231953],"yaml":true},{"content":"<code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;creationTime&lt;/code&gt;</ph> specifies a value outside the range of dates, times, or both permitted for this operation.","source":"<code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation."}],"pos":[232067,232184],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[232298,232348],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[232450,232493],"yaml":true},{"content":"Sets the date and time, in coordinated universal time (UTC), that the file was created.","nodes":[{"pos":[0,87],"content":"Sets the date and time, in coordinated universal time (UTC), that the file was created.","nodes":[{"content":"Sets the date and time, in coordinated universal time (UTC), that the file was created.","pos":[0,87]}]}],"pos":[233912,234000],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,509],"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","nodes":[{"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[0,236],"nodes":[{"content":"NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time.","pos":[0,103]},{"content":"As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.","pos":[104,236]}]}]},{"pos":[516,611],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[234011,234629],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the creation date and time information.","nodes":[{"pos":[0,65],"content":"The file for which to set the creation date and time information.","nodes":[{"content":"The file for which to set the creation date and time information.","pos":[0,65]}]}],"pos":[234807,234873],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"pos":[0,156],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the creation date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,119],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>."},{"content":"This value is expressed in UTC time.","pos":[120,156]}]}],"pos":[234946,235103],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[235272,235306],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[235400,235581],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[235683,235712],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[235818,236029],"yaml":true},{"content":"An I/O error occurred while performing the operation.","nodes":[{"pos":[0,53],"content":"An I/O error occurred while performing the operation.","nodes":[{"content":"An I/O error occurred while performing the operation.","pos":[0,53]}]}],"pos":[236117,236171],"yaml":true},{"content":"<code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;creationTime&lt;/code&gt;</ph> specifies a value outside the range of dates, times, or both permitted for this operation.","source":"<code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation."}],"pos":[236285,236402],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[236516,236566],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[236668,236711],"yaml":true},{"content":"Sets the date and time the specified file was last accessed.","nodes":[{"pos":[0,60],"content":"Sets the date and time the specified file was last accessed.","nodes":[{"content":"Sets the date and time the specified file was last accessed.","pos":[0,60]}]}],"pos":[238124,238185],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[238196,238569],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the access date and time information.","nodes":[{"pos":[0,63],"content":"The file for which to set the access date and time information.","nodes":[{"content":"The file for which to set the access date and time information.","pos":[0,63]}]}],"pos":[239289,239353],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"pos":[0,161],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the last access date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,122],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>."},{"content":"This value is expressed in local time.","pos":[123,161]}]}],"pos":[239425,239587],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[239741,239922],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[240024,240053],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[240159,240370],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[240478,240512],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[240626,240676],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[240778,240821],"yaml":true},{"content":"<code>lastAccessTime</code> specifies a value outside the range of dates or times permitted for this operation.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">&lt;code&gt;lastAccessTime&lt;/code&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.","source":"<code>lastAccessTime</code> specifies a value outside the range of dates or times permitted for this operation."}],"pos":[240935,241047],"yaml":true},{"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.","nodes":[{"pos":[0,103],"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.","nodes":[{"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.","pos":[0,103]}]}],"pos":[242478,242582],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[242593,242966],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the access date and time information.","nodes":[{"pos":[0,63],"content":"The file for which to set the access date and time information.","nodes":[{"content":"The file for which to set the access date and time information.","pos":[0,63]}]}],"pos":[243148,243212],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"pos":[0,159],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the last access date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,122],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>."},{"content":"This value is expressed in UTC time.","pos":[123,159]}]}],"pos":[243287,243447],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[243604,243785],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[243887,243916],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[244022,244233],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[244341,244375],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[244489,244539],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[244641,244684],"yaml":true},{"content":"<code>lastAccessTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">&lt;code&gt;lastAccessTimeUtc&lt;/code&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.","source":"<code>lastAccessTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation."}],"pos":[244798,244913],"yaml":true},{"content":"Sets the date and time that the specified file was last written to.","nodes":[{"pos":[0,67],"content":"Sets the date and time that the specified file was last written to.","nodes":[{"content":"Sets the date and time that the specified file was last written to.","pos":[0,67]}]}],"pos":[246320,246388],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[246399,246772],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the date and time information.","nodes":[{"pos":[0,56],"content":"The file for which to set the date and time information.","nodes":[{"content":"The file for which to set the date and time information.","pos":[0,56]}]}],"pos":[247498,247555],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"pos":[0,160],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in local time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the last write date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,121],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>."},{"content":"This value is expressed in local time.","pos":[122,160]}]}],"pos":[247626,247787],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[247940,248121],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[248223,248252],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[248358,248569],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[248677,248711],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[248825,248875],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[248977,249020],"yaml":true},{"content":"<code>lastWriteTime</code> specifies a value outside the range of dates or times permitted for this operation.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">&lt;code&gt;lastWriteTime&lt;/code&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.","source":"<code>lastWriteTime</code> specifies a value outside the range of dates or times permitted for this operation."}],"pos":[249134,249245],"yaml":true},{"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.","nodes":[{"pos":[0,105],"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.","nodes":[{"content":"Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.","pos":[0,105]}]}],"pos":[250670,250776],"yaml":true},{"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,266],"content":"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter is permitted to specify relative or absolute path information.","pos":[0,83],"source":"The `path` parameter is permitted to specify relative or absolute path information."},{"content":"Relative path information is interpreted as relative to the current working directory.","pos":[84,170]},{"content":"To obtain the current working directory, see <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.","pos":[171,266],"source":" To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>."}]},{"pos":[273,368],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[250787,251160],"yaml":true,"extradata":"MT"},{"content":"The file for which to set the date and time information.","nodes":[{"pos":[0,56],"content":"The file for which to set the date and time information.","nodes":[{"content":"The file for which to set the date and time information.","pos":[0,56]}]}],"pos":[251340,251397],"yaml":true},{"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"pos":[0,158],"content":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in UTC time.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> containing the value to set for the last write date and time of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,121],"source":"A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>."},{"content":"This value is expressed in UTC time.","pos":[122,158]}]}],"pos":[251471,251630],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[251786,251967],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[252069,252098],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[252204,252415],"yaml":true},{"content":"The specified path was not found.","nodes":[{"pos":[0,33],"content":"The specified path was not found.","nodes":[{"content":"The specified path was not found.","pos":[0,33]}]}],"pos":[252523,252557],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[252671,252721],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[252823,252866],"yaml":true},{"content":"<code>lastWriteTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">&lt;code&gt;lastWriteTimeUtc&lt;/code&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.","source":"<code>lastWriteTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation."}],"pos":[252980,253094],"yaml":true},{"content":"Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"pos":[0,144],"content":"Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"content":"Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.","pos":[0,144],"nodes":[{"content":"Creates a new file, writes the specified byte array to the file, and then closes the file.","pos":[0,90]},{"content":"If the target file already exists, it is overwritten.","pos":[91,144]}]}]}],"pos":[254471,254616],"yaml":true},{"content":"Given a byte array and a file path, this method opens the specified file, writes the contents of the byte array to the file, and then closes the file.","nodes":[{"pos":[0,150],"content":"Given a byte array and a file path, this method opens the specified file, writes the contents of the byte array to the file, and then closes the file.","nodes":[{"content":"Given a byte array and a file path, this method opens the specified file, writes the contents of the byte array to the file, and then closes the file.","pos":[0,150]}]}],"pos":[254627,254778],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[254939,254961],"yaml":true},{"content":"The bytes to write to the file.","nodes":[{"pos":[0,31],"content":"The bytes to write to the file.","nodes":[{"content":"The bytes to write to the file.","pos":[0,31]}]}],"pos":[255022,255054],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[255204,255385],"yaml":true},{"content":"<code>path</code> is `null` or the byte array is empty.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or the byte array is empty.","source":"<code>path</code> is `null` or the byte array is empty."}],"pos":[255487,255543],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[255649,255860],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[255978,256051],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[256139,256185],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[256299,256566],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[256668,256711],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[256823,256873],"yaml":true},{"content":"Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.","nodes":[{"pos":[0,124],"content":"Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.","nodes":[{"content":"Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.","pos":[0,124]}]}],"pos":[259684,259809],"yaml":true},{"content":"If the target file already exists, it is overwritten.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file using the specified encoding, and then closes the file.","nodes":[{"pos":[0,53],"content":"If the target file already exists, it is overwritten.","nodes":[{"content":"If the target file already exists, it is overwritten.","pos":[0,53]}]},{"pos":[60,227],"content":"Given a string array and a file path, this method opens the specified file, writes the string array to the file using the specified encoding, and then closes the file.","nodes":[{"content":"Given a string array and a file path, this method opens the specified file, writes the string array to the file using the specified encoding, and then closes the file.","pos":[0,167]}]}],"pos":[259820,260052],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[260814,260836],"yaml":true},{"content":"The string array to write to the file.","nodes":[{"pos":[0,38],"content":"The string array to write to the file.","nodes":[{"content":"The string array to write to the file.","pos":[0,38]}]}],"pos":[260902,260941],"yaml":true},{"content":"An <xref href=\"System.Text.Encoding\"></xref> object that represents the character encoding applied to the string array.","nodes":[{"pos":[0,119],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> object that represents the character encoding applied to the string array.","source":"An <xref href=\"System.Text.Encoding\"></xref> object that represents the character encoding applied to the string array."}],"pos":[261012,261132],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[261282,261463],"yaml":true},{"content":"Either <code>path</code> or <code>contents</code> is `null`.","nodes":[{"pos":[0,60],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"Either <code>path</code> or <code>contents</code> is `null`."}],"pos":[261565,261626],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[261732,261943],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[262061,262134],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[262222,262268],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[262382,262649],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[262751,262794],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[262906,262956],"yaml":true},{"content":"Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.","nodes":[{"pos":[0,121],"content":"Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.","nodes":[{"content":"Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.","pos":[0,121]}]}],"pos":[264401,264523],"yaml":true},{"content":"If the target file already exists, it is overwritten.  \n  \n You can use this method to create a file that contains the following:  \n  \n-   The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method.  \n  \n-   The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.","nodes":[{"pos":[0,53],"content":"If the target file already exists, it is overwritten.","nodes":[{"content":"If the target file already exists, it is overwritten.","pos":[0,53]}]},{"pos":[60,129],"content":"You can use this method to create a file that contains the following:","nodes":[{"content":"You can use this method to create a file that contains the following:","pos":[0,69]}]},{"pos":[139,343],"content":"The results of a <bpt id=\"p1\">[</bpt>LINQ to Objects<ept id=\"p1\">](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9)</ept> query on the lines of a file, as obtained by using the <ph id=\"ph1\">&lt;xref:System.IO.File.ReadLines%2A&gt;</ph> method.","source":"The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method."},{"pos":[353,462],"content":"The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.","nodes":[{"content":"The contents of a collection that implements an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of strings.","pos":[0,109],"source":"The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings."}]}],"pos":[264534,265005],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[265240,265262],"yaml":true},{"content":"The lines to write to the file.","nodes":[{"pos":[0,31],"content":"The lines to write to the file.","nodes":[{"content":"The lines to write to the file.","pos":[0,31]}]}],"pos":[265366,265398],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[265469,265500],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,191],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[265650,265842],"yaml":true},{"content":"Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`.","nodes":[{"pos":[0,84],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">encoding</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`null`</ph>.","source":"Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`."}],"pos":[265944,266029],"yaml":true},{"content":"<code>path</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[266147,266219],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[266307,266353],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[266459,266649],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[266751,266794],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[266906,266956],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[185,189],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[196,245],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[267070,267330],"yaml":true},{"content":"Creates a new file, write the specified string array to the file, and then closes the file.","nodes":[{"pos":[0,91],"content":"Creates a new file, write the specified string array to the file, and then closes the file.","nodes":[{"content":"Creates a new file, write the specified string array to the file, and then closes the file.","pos":[0,91]}]}],"pos":[268719,268811],"yaml":true},{"content":"If the target file already exists, it is overwritten.  \n  \n The default behavior of the <xref:System.IO.File.WriteAllLines%2A> method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file.","nodes":[{"pos":[0,53],"content":"If the target file already exists, it is overwritten.","nodes":[{"content":"If the target file already exists, it is overwritten.","pos":[0,53]}]},{"pos":[60,488],"content":"The default behavior of the <xref:System.IO.File.WriteAllLines%2A> method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","nodes":[{"content":"The default behavior of the <xref:System.IO.File.WriteAllLines%2A> method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","pos":[0,428],"nodes":[{"content":"The default behavior of the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%2A&gt;</ph> method is to write out data using UTF-8 encoding without a byte order mark (BOM).","pos":[0,148],"source":"The default behavior of the <xref:System.IO.File.WriteAllLines%2A> method is to write out data using UTF-8 encoding without a byte order mark (BOM)."},{"content":"If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29&gt;</ph> method overload with <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[149,428],"source":" If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding."}]}]},{"pos":[495,633],"content":"Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file.","nodes":[{"content":"Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file.","pos":[0,138]}]}],"pos":[268822,269462],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[270139,270161],"yaml":true},{"content":"The string array to write to the file.","nodes":[{"pos":[0,38],"content":"The string array to write to the file.","nodes":[{"content":"The string array to write to the file.","pos":[0,38]}]}],"pos":[270227,270266],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[270416,270597],"yaml":true},{"content":"Either <code>path</code> or <code>contents</code> is `null`.","nodes":[{"pos":[0,60],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"Either <code>path</code> or <code>contents</code> is `null`."}],"pos":[270699,270760],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[270866,271077],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[271195,271268],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[271356,271402],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[271516,271783],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[271885,271928],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[272040,272090],"yaml":true},{"content":"Creates a new file, writes a collection of strings to the file, and then closes the file.","nodes":[{"pos":[0,89],"content":"Creates a new file, writes a collection of strings to the file, and then closes the file.","nodes":[{"content":"Creates a new file, writes a collection of strings to the file, and then closes the file.","pos":[0,89]}]}],"pos":[273442,273532],"yaml":true},{"content":"The default behavior of the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method is to write out data by using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n If the target file already exists, it is overwritten.  \n  \n You can use this method to create the contents for a collection class that takes an <xref:System.Collections.Generic.IEnumerable%601> in its constructor, such as a <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, or a <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> class.","nodes":[{"pos":[0,545],"content":"The default behavior of the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method is to write out data by using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","nodes":[{"content":"The default behavior of the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method is to write out data by using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","pos":[0,545],"nodes":[{"content":"The default behavior of the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29&gt;</ph> method is to write out data by using UTF-8 encoding without a byte order mark (BOM).","pos":[0,227],"source":"The default behavior of the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method is to write out data by using UTF-8 encoding without a byte order mark (BOM)."},{"content":"If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29&gt;</ph> method overload with <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[228,545],"source":" If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding."}]}]},{"pos":[552,605],"content":"If the target file already exists, it is overwritten.","nodes":[{"content":"If the target file already exists, it is overwritten.","pos":[0,53]}]},{"pos":[612,959],"content":"You can use this method to create the contents for a collection class that takes an <xref:System.Collections.Generic.IEnumerable%601> in its constructor, such as a <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, or a <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> class.","nodes":[{"content":"You can use this method to create the contents for a collection class that takes an <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> in its constructor, such as a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.List%601.%23ctor%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.Generic.HashSet%601.%23ctor%2A&gt;</ph>, or a <ph id=\"ph4\">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%2A&gt;</ph> class.","pos":[0,347],"source":"You can use this method to create the contents for a collection class that takes an <xref:System.Collections.Generic.IEnumerable%601> in its constructor, such as a <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, or a <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> class."}]}],"pos":[273543,274509],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[275120,275142],"yaml":true},{"content":"The lines to write to the file.","nodes":[{"pos":[0,31],"content":"The lines to write to the file.","nodes":[{"content":"The lines to write to the file.","pos":[0,31]}]}],"pos":[275246,275278],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.","nodes":[{"pos":[0,191],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.GetInvalidPathChars\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method."}],"pos":[275428,275620],"yaml":true},{"content":"Either <code>path</code> or <code>contents</code> is `null`.","nodes":[{"pos":[0,60],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">contents</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"Either <code>path</code> or <code>contents</code> is `null`."}],"pos":[275722,275783],"yaml":true},{"content":"<code>path</code> is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is invalid (for example, it is on an unmapped drive).","source":"<code>path</code> is invalid (for example, it is on an unmapped drive)."}],"pos":[275901,275973],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[276061,276107],"yaml":true},{"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"pos":[0,189],"content":"<code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the system-defined maximum length.","pos":[0,60],"source":"<code>path</code> exceeds the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[61,189]}]}],"pos":[276213,276403],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[276505,276548],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[276660,276710],"yaml":true},{"content":"<code>path</code> specifies a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> is a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specifies a file that is read-only.","source":"<code>path</code> specifies a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,178],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a directory.","source":"<code>path</code> is a directory."},{"pos":[185,189],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[196,245],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[276824,277084],"yaml":true},{"content":"Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"pos":[0,140],"content":"Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"content":"Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.","pos":[0,140],"nodes":[{"content":"Creates a new file, writes the specified string to the file, and then closes the file.","pos":[0,86]},{"content":"If the target file already exists, it is overwritten.","pos":[87,140]}]}]}],"pos":[281801,281942],"yaml":true},{"content":"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <xref:System.Text.Encoding.GetPreamble%2A> method will return an empty byte array. If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string and a file path, this method opens the specified file, writes the string to the file, and then closes the file.","nodes":[{"pos":[0,433],"content":"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <xref:System.Text.Encoding.GetPreamble%2A> method will return an empty byte array. If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","nodes":[{"content":"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <xref:System.Text.Encoding.GetPreamble%2A> method will return an empty byte array. If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.","pos":[0,433],"nodes":[{"content":"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method will return an empty byte array.","pos":[0,160],"source":"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <xref:System.Text.Encoding.GetPreamble%2A> method will return an empty byte array."},{"content":"If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <ph id=\"ph1\">&lt;xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29&gt;</ph> method overload with <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[161,433],"source":" If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding."}]}]},{"pos":[440,566],"content":"Given a string and a file path, this method opens the specified file, writes the string to the file, and then closes the file.","nodes":[{"content":"Given a string and a file path, this method opens the specified file, writes the string to the file, and then closes the file.","pos":[0,126]}]}],"pos":[281953,282524],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[283193,283215],"yaml":true},{"content":"The string to write to the file.","nodes":[{"pos":[0,32],"content":"The string to write to the file.","nodes":[{"content":"The string to write to the file.","pos":[0,32]}]}],"pos":[283279,283312],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[283461,283642],"yaml":true},{"content":"<code>path</code> is `null` or <code>contents</code> is empty.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;code&gt;contents&lt;/code&gt;</ph> is empty.","source":"<code>path</code> is `null` or <code>contents</code> is empty."}],"pos":[283744,283807],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[283913,284124],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[284242,284315],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[284403,284449],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[284563,284830],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[284932,284975],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[285087,285137],"yaml":true},{"content":"Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"pos":[0,169],"content":"Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.","nodes":[{"content":"Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.","pos":[0,169],"nodes":[{"content":"Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file.","pos":[0,115]},{"content":"If the target file already exists, it is overwritten.","pos":[116,169]}]}]}],"pos":[286601,286771],"yaml":true},{"content":"Given a string and a file path, this method opens the specified file, writes the string to the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"pos":[0,245],"content":"Given a string and a file path, this method opens the specified file, writes the string to the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","nodes":[{"content":"Given a string and a file path, this method opens the specified file, writes the string to the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[0,245],"nodes":[{"content":"Given a string and a file path, this method opens the specified file, writes the string to the file using the specified encoding, and then closes the file.","pos":[0,155]},{"content":"The file handle is guaranteed to be closed by this method, even if exceptions are raised.","pos":[156,245]}]}]}],"pos":[286782,287028],"yaml":true,"extradata":"MT"},{"content":"The file to write to.","nodes":[{"pos":[0,21],"content":"The file to write to.","nodes":[{"content":"The file to write to.","pos":[0,21]}]}],"pos":[287764,287786],"yaml":true},{"content":"The string to write to the file.","nodes":[{"pos":[0,32],"content":"The string to write to the file.","nodes":[{"content":"The string to write to the file.","pos":[0,32]}]}],"pos":[287850,287883],"yaml":true},{"content":"The encoding to apply to the string.","nodes":[{"pos":[0,36],"content":"The encoding to apply to the string.","nodes":[{"content":"The encoding to apply to the string.","pos":[0,36]}]}],"pos":[287954,287991],"yaml":true},{"content":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id=\"ph2\">&lt;xref href=\"System.IO.Path.InvalidPathChars\"&gt;&lt;/xref&gt;</ph>.","source":"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>."}],"pos":[288140,288321],"yaml":true},{"content":"<code>path</code> is `null` or <code>contents</code> is empty.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;code&gt;contents&lt;/code&gt;</ph> is empty.","source":"<code>path</code> is `null` or <code>contents</code> is empty."}],"pos":[288423,288486],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[288592,288803],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[288921,288994],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[289082,289128],"yaml":true},{"content":"<code>path</code> specified a file that is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n <code>path</code> specified a directory.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a file that is read-only.","source":"<code>path</code> specified a file that is read-only."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,127],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,185],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> specified a directory.","source":"<code>path</code> specified a directory."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,252],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[289242,289509],"yaml":true},{"content":"<code>path</code> is in an invalid format.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is in an invalid format.","source":"<code>path</code> is in an invalid format."}],"pos":[289611,289654],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[289766,289816],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.File\n  commentId: T:System.IO.File\n  id: File\n  children:\n  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  - System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  - System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  - System.IO.File.AppendAllText(System.String,System.String)\n  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  - System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  - System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  - System.IO.File.AppendText(System.String)\n  - System.IO.File.Copy(System.String,System.String)\n  - System.IO.File.Copy(System.String,System.String,System.Boolean)\n  - System.IO.File.Create(System.String)\n  - System.IO.File.Create(System.String,System.Int32)\n  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)\n  - System.IO.File.CreateText(System.String)\n  - System.IO.File.Decrypt(System.String)\n  - System.IO.File.Delete(System.String)\n  - System.IO.File.Encrypt(System.String)\n  - System.IO.File.Exists(System.String)\n  - System.IO.File.GetAccessControl(System.String)\n  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.IO.File.GetAttributes(System.String)\n  - System.IO.File.GetCreationTime(System.String)\n  - System.IO.File.GetCreationTimeUtc(System.String)\n  - System.IO.File.GetLastAccessTime(System.String)\n  - System.IO.File.GetLastAccessTimeUtc(System.String)\n  - System.IO.File.GetLastWriteTime(System.String)\n  - System.IO.File.GetLastWriteTimeUtc(System.String)\n  - System.IO.File.Move(System.String,System.String)\n  - System.IO.File.Open(System.String,System.IO.FileMode)\n  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.File.OpenRead(System.String)\n  - System.IO.File.OpenText(System.String)\n  - System.IO.File.OpenWrite(System.String)\n  - System.IO.File.ReadAllBytes(System.String)\n  - System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)\n  - System.IO.File.ReadAllLines(System.String)\n  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  - System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)\n  - System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  - System.IO.File.ReadAllText(System.String)\n  - System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)\n  - System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  - System.IO.File.ReadLines(System.String)\n  - System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  - System.IO.File.Replace(System.String,System.String,System.String)\n  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)\n  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)\n  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  - System.IO.File.SetCreationTime(System.String,System.DateTime)\n  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  - System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  - System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)\n  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)\n  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  - System.IO.File.WriteAllLines(System.String,System.String[])\n  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  - System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  - System.IO.File.WriteAllText(System.String,System.String)\n  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  - System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  - System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: File\n  nameWithType: File\n  fullName: System.IO.File\n  type: Class\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Provides static methods for the creation, copying, deletion, moving, and opening of a single file, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n Use the <xref:System.IO.File> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the <xref:System.IO.File> class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \\n  \\n Many of the <xref:System.IO.File> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.File> members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \\n  \\n Because all <xref:System.IO.File> methods are static, it might be more efficient to use a <xref:System.IO.File> method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All <xref:System.IO.File> methods require the path to the file that you are manipulating.  \\n  \\n The static methods of the <xref:System.IO.File> class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \\n  \\n By default, full read/write access to new files is granted to all users.  \\n  \\n The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.File> methods.  \\n  \\n|Enumeration|Description|  \\n|-----------------|-----------------|  \\n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \\n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \\n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \\n  \\n> [!NOTE]\\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \\\"c:\\\\temp c:\\\\windows\\\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \\n  \\n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \\n  \\n-   \\\"c:\\\\\\\\\\\\MyDir\\\\\\\\\\\\MyFile.txt\\\" in C#, or \\\"c:\\\\MyDir\\\\MyFile.txt\\\" in Visual Basic.  \\n  \\n-   \\\"c:\\\\\\\\\\\\MyDir\\\" in C#, or \\\"c:\\\\MyDir\\\" in Visual Basic.  \\n  \\n-   \\\"MyDir\\\\\\\\\\\\MySubdir\\\" in C#, or \\\"MyDir\\\\MySubDir\\\" in Visual Basic.  \\n  \\n-   \\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\MyServer\\\\\\\\\\\\MyShare\\\" in C#, or \\\"\\\\\\\\\\\\MyServer\\\\MyShare\\\" in Visual Basic.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.IO.File> class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\\\temp` folder.  \\n  \\n [!code-cpp[File Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Class Example/CPP/file class example.cpp#1)]\\n [!code-csharp[File Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Class Example/CS/file class example.cs#1)]\\n [!code-vb[File Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Class Example/VB/file class example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static class File\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllLines(String, IEnumerable<String>)\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>)\n  fullName: File.AppendAllLines(String, IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Appends lines to a file, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.\n  remarks: The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.\n  example:\n  - \"The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \\n  \\n [!code-csharp[System.IO.File.WriteAllAppendAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.file.writeallappendall/cs/program.cs#1)]\\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.file.writeallappendall/vb/program.vb#1)]\"\n  syntax:\n    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to append the lines to. The file is created if it doesn't already exist.\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The lines to append to the file.\n  overload: System.IO.File.AppendAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code> or <code>contents</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>path</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have permission to write to the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  commentId: M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>, Encoding)\n  fullName: File.AppendAllLines(String, IEnumerable<String>, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Appends lines to a file by using a specified encoding, and then closes the file. If the specified file does not exist, this method creates a file, writes the specified lines to the file, and then closes the file.\n  remarks: \"The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.  \\n  \\n You can use this method to create a file that contains the following:  \\n  \\n-   The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method.  \\n  \\n-   The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.\"\n  syntax:\n    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to append the lines to. The file is created if it doesn't already exist.\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The lines to append to the file.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.File.AppendAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>path</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  commentId: M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  id: AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  nameWithType: File.AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  fullName: File.AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task AppendAllLinesAsync (string path, System.Collections.Generic.IEnumerable<string> contents, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.AppendAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  id: AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  nameWithType: File.AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  fullName: File.AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task AppendAllLinesAsync (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.AppendAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllText(System.String,System.String)\n  commentId: M:System.IO.File.AppendAllText(System.String,System.String)\n  id: AppendAllText(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllText(String, String)\n  nameWithType: File.AppendAllText(String, String)\n  fullName: File.AppendAllText(String, String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.\n  remarks: \"Given a string and a file path, this method opens the specified file, appends the string to the end of the file, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \\n  \\n The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.AppendAllText%2A> method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \\n  \\n [!code-csharp[System.IO.File.AllText#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static void AppendAllText (string path, string contents);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to append the specified string to.\n    - id: contents\n      type: System.String\n      description: The string to append to the file.\n  overload: System.IO.File.AppendAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  id: AppendAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllText(String, String, Encoding)\n  nameWithType: File.AppendAllText(String, String, Encoding)\n  fullName: File.AppendAllText(String, String, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Appends the specified string to the file, creating the file if it does not already exist.\n  remarks: \"Given a string and a file path, this method opens the specified file, appends the string to the end of the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \\n  \\n The method creates the file if it doesn’t exist, but it doesn't create new directories. Therefore, the value of the `path` parameter must contain existing directories.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.AppendAllText%2A> method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \\n  \\n [!code-csharp[System.IO.File.AllText_Encoding#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText_Encoding#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to append the specified string to.\n    - id: contents\n      type: System.String\n      description: The string to append to the file.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.File.AppendAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  id: AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllTextAsync(String, String, CancellationToken)\n  nameWithType: File.AppendAllTextAsync(String, String, CancellationToken)\n  fullName: File.AppendAllTextAsync(String, String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task AppendAllTextAsync (string path, string contents, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.String\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.AppendAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  id: AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendAllTextAsync(String, String, Encoding, CancellationToken)\n  nameWithType: File.AppendAllTextAsync(String, String, Encoding, CancellationToken)\n  fullName: File.AppendAllTextAsync(String, String, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task AppendAllTextAsync (string path, string contents, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.String\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.AppendAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendText(System.String)\n  commentId: M:System.IO.File.AppendText(System.String)\n  id: AppendText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: AppendText(String)\n  nameWithType: File.AppendText(String)\n  fullName: File.AppendText(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends UTF-8 encoded text to an existing file, or to a new file if the specified file does not exist.\n  remarks: \"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload. If the file specified by `path` does not exist, it is created. If the file does exist, write operations to the <xref:System.IO.StreamWriter> append text to the file. Additional threads are permitted to read the file while it is open.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n The `path` parameter is not case-sensitive.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \\n  \\n [!code-cpp[File_AppendText#1](~/samples/snippets/cpp/VS_Snippets_CLR/File_AppendText/CPP/file_appendtext.cpp#1)]\\n [!code-csharp[File_AppendText#1](~/samples/snippets/csharp/VS_Snippets_CLR/File_AppendText/CS/file_appendtext.cs#1)]\\n [!code-vb[File_AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File_AppendText/VB/file_appendtext.vb#1)]\"\n  syntax:\n    content: public static System.IO.StreamWriter AppendText (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file to append to.\n    return:\n      type: System.IO.StreamWriter\n      description: A stream writer that appends UTF-8 encoded text to the specified file or to a new file.\n  overload: System.IO.File.AppendText*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, the directory doesn’t exist or it is on an unmapped drive).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Copy(System.String,System.String)\n  commentId: M:System.IO.File.Copy(System.String,System.String)\n  id: Copy(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Copy(String, String)\n  nameWithType: File.Copy(String, String)\n  fullName: File.Copy(String, String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Copies an existing file to a new file. Overwriting a file of the same name is not allowed.\n  remarks: \"This method is equivalent to the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29> method overload with the `overwrite` parameter set to `false`.  \\n  \\n The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see the <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> method. This method does not support wildcard characters in the parameters.  \\n  \\n The attributes of the original file are retained in the copied file.\"\n  example:\n  - \"The following example copies files to the C:\\\\archives\\\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \\n  \\n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName>method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \\n  \\n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \\n  \\n [!code-csharp[FileCopyDelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/filecopydelete/cs/program.cs#1)]\\n [!code-vb[FileCopyDelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/filecopydelete/vb/program.vb#1)]\"\n  syntax:\n    content: public static void Copy (string sourceFileName, string destFileName);\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: The file to copy.\n    - id: destFileName\n      type: System.String\n      description: The name of the destination file. This cannot be a directory or an existing file.\n  overload: System.IO.File.Copy*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>sourceFileName</code> or <code>destFileName</code> specifies a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>sourceFileName</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"<code>destFileName</code> exists.  \\n  \\n -or-  \\n  \\n An I/O error has occurred.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)\n  commentId: M:System.IO.File.Copy(System.String,System.String,System.Boolean)\n  id: Copy(System.String,System.String,System.Boolean)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Copy(String, String, Boolean)\n  nameWithType: File.Copy(String, String, Boolean)\n  fullName: File.Copy(String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Copies an existing file to a new file. Overwriting a file of the same name is allowed.\n  remarks: \"The `sourceFileName` and `destFileName` parameters can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. This method does not support wildcard characters in the parameters.  \\n  \\n The attributes of the original file are retained in the copied file.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example copies files to the C:\\\\archives\\\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \\n  \\n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \\n  \\n It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \\n  \\n [!code-csharp[FileCopyDelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/filecopydelete/cs/program.cs#1)]\\n [!code-vb[FileCopyDelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/filecopydelete/vb/program.vb#1)]\"\n  syntax:\n    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: The file to copy.\n    - id: destFileName\n      type: System.String\n      description: The name of the destination file. This cannot be a directory.\n    - id: overwrite\n      type: System.Boolean\n      description: '`true` if the destination file can be overwritten; otherwise, `false`.'\n  overload: System.IO.File.Copy*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>destFileName</code> is read-only.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>sourceFileName</code> or <code>destFileName</code> specifies a directory.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>sourceFileName</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"<code>destFileName</code> exists and <code>overwrite</code> is `false`.  \\n  \\n -or-  \\n  \\n An I/O error has occurred.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Create(System.String)\n  commentId: M:System.IO.File.Create(System.String)\n  id: Create(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: File.Create(String)\n  fullName: File.Create(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates or overwrites a file in the specified path.\n  remarks: \"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.  \\n  \\n This method is equivalent to the <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29> method overload using the default buffer size.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \\n  \\n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \\n  \\n [!code-cpp[File Create1#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Create1/CPP/file create1.cpp#1)]\\n [!code-csharp[File Create1#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Create1/CS/file create1.cs#1)]\\n [!code-vb[File Create1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Create1/VB/file create1.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream Create (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path and name of the file to create.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> that provides read/write access to the file specified in <code>path</code>.\n  overload: System.IO.File.Create*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a file that is read-only.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while creating the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Create(System.String,System.Int32)\n  commentId: M:System.IO.File.Create(System.String,System.Int32)\n  id: Create(System.String,System.Int32)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Create(String, Int32)\n  nameWithType: File.Create(String, Int32)\n  fullName: File.Create(String, Int32)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates or overwrites the specified file.\n  remarks: \"The <xref:System.IO.FileStream> object created by this method has a default <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.None>; no other process or code can access the created file until the original file handle is closed.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \\n  \\n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example creates a file with the specified buffer size.  \\n  \\n [!code-cpp[File Create2#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Create2/CPP/file create2.cpp#1)]\\n [!code-csharp[File Create2#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Create2/CS/file create2.cs#1)]\\n [!code-vb[File Create2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Create2/VB/file create2.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream Create (string path, int bufferSize);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the file.\n    - id: bufferSize\n      type: System.Int32\n      description: The number of bytes buffered for reads and writes to the file.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> with the specified buffer size that provides read/write access to the file specified in <code>path</code>.\n  overload: System.IO.File.Create*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a file that is read-only.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while creating the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  commentId: M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  id: Create(System.String,System.Int32,System.IO.FileOptions)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Create(String, Int32, FileOptions)\n  nameWithType: File.Create(String, Int32, FileOptions)\n  fullName: File.Create(String, Int32, FileOptions)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates or overwrites the specified file, specifying a buffer size and a <xref href=\"System.IO.FileOptions\"></xref> value that describes how to create or overwrite the file.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \\n  \\n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the file.\n    - id: bufferSize\n      type: System.Int32\n      description: The number of bytes buffered for reads and writes to the file.\n    - id: options\n      type: System.IO.FileOptions\n      description: One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file.\n    return:\n      type: System.IO.FileStream\n      description: A new file with the specified buffer size.\n  overload: System.IO.File.Create*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a file that is read-only.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while creating the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)\n  commentId: M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)\n  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Create(String, Int32, FileOptions, FileSecurity)\n  nameWithType: File.Create(String, Int32, FileOptions, FileSecurity)\n  fullName: File.Create(String, Int32, FileOptions, FileSecurity)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Creates or overwrites the specified file with the specified buffer size, file options, and file security.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> constructor overload. If the specified file does not exist, it is created; if it does exist and it is not read-only, the contents are overwritten.  \\n  \\n By default, full read/write access to new files is granted to all users. The file is opened with read/write access and must be closed before it can be opened by another application.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the file.\n    - id: bufferSize\n      type: System.Int32\n      description: The number of bytes buffered for reads and writes to the file.\n    - id: options\n      type: System.IO.FileOptions\n      description: One of the <xref href=\"System.IO.FileOptions\"></xref> values that describes how to create or overwrite the file.\n    - id: fileSecurity\n      type: System.Security.AccessControl.FileSecurity\n      description: One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> values that determines the access control and audit security for the file.\n    return:\n      type: System.IO.FileStream\n      description: A new file with the specified buffer size, file options, and file security.\n  overload: System.IO.File.Create*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a file that is read-only.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while creating the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.CreateText(System.String)\n  commentId: M:System.IO.File.CreateText(System.String)\n  id: CreateText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: CreateText(String)\n  nameWithType: File.CreateText(String)\n  fullName: File.CreateText(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates or opens a file for writing UTF-8 encoded text. If the file already exists, its contents are overwritten.\n  remarks: \"This method is equivalent to the <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> constructor overload with the `append` parameter set to `false`. If the file specified by `path` does not exist, it is created. If the file does exist, its contents are overwritten. Additional threads are permitted to read the file while it is open.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example creates a file for text writing and reading.  \\n  \\n [!code-cpp[File CreateText#1](~/samples/snippets/cpp/VS_Snippets_CLR/File CreateText/CPP/file createtext.cpp#1)]\\n [!code-csharp[File CreateText#1](~/samples/snippets/csharp/VS_Snippets_CLR/File CreateText/CS/file createtext.cs#1)]\\n [!code-vb[File CreateText#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File CreateText/VB/file createtext.vb#1)]\"\n  syntax:\n    content: public static System.IO.StreamWriter CreateText (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to be opened for writing.\n    return:\n      type: System.IO.StreamWriter\n      description: A <xref href=\"System.IO.StreamWriter\"></xref> that writes to the specified file using UTF-8 encoding.\n  overload: System.IO.File.CreateText*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Decrypt(System.String)\n  commentId: M:System.IO.File.Decrypt(System.String)\n  id: Decrypt(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Decrypt(String)\n  nameWithType: File.Decrypt(String)\n  fullName: File.Decrypt(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.File.Encrypt(System.String)\"></xref> method.\n  remarks: \"The <xref:System.IO.File.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.File.Encrypt%2A> method.  The <xref:System.IO.File.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.  \\n  \\n The <xref:System.IO.File.Decrypt%2A> method requires exclusive access to the file being decrypted, and will raise an exception if another process is using the file. If the file is not encrypted, <xref:System.IO.File.Decrypt%2A> will return a nonzero value, which indicates success.  \\n  \\n Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \\n  \\n The current file system must be formatted as NTFS and the current operating system must be Windows NT or later.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \\n  \\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/CS/sample.cs#1)]\\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/VB/sample.vb#1)]\"\n  syntax:\n    content: public static void Decrypt (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: A path that describes a file to decrypt.\n  overload: System.IO.File.Decrypt*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file described by the <code>path</code> parameter could not be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"An I/O error occurred while opening the file. For example, the encrypted file is already open.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Windows NT or later.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The file system is not NTFS.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>path</code> parameter specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The <code>path</code> parameter specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Delete(System.String)\n  commentId: M:System.IO.File.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Delete(String)\n  nameWithType: File.Delete(String)\n  fullName: File.Delete(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Deletes the specified file.\n  remarks: \"Specify a file name with any relative or absolute path information for the `path` parameter. Wildcard characters cannot be included. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n If the file to be deleted does not exist, no exception is thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example copies groups of files to the C:\\\\archives\\\\2008 backup folder and then deletes them from the source folder.  \\n  \\n [!code-csharp[FileCopyDelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/filecopydelete/cs/program.cs#1)]\\n [!code-vb[FileCopyDelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/filecopydelete/vb/program.vb#1)]\"\n  syntax:\n    content: public static void Delete (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the file to be deleted. Wildcard characters are not supported.\n  overload: System.IO.File.Delete*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The specified file is in use.  \\n  \\n -or-  \\n  \\n There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n The file is an executable file that is in use.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a read-only file.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Encrypt(System.String)\n  commentId: M:System.IO.File.Encrypt(System.String)\n  id: Encrypt(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Encrypt(String)\n  nameWithType: File.Encrypt(String)\n  fullName: File.Encrypt(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Encrypts a file so that only the account used to encrypt the file can decrypt it.\n  remarks: \"The <xref:System.IO.File.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it. Use the <xref:System.IO.File.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.File.Encrypt%2A> method.  \\n  \\n The <xref:System.IO.File.Encrypt%2A> method requires exclusive access to the file being encrypted, and will fail if another process is using the file.  \\n  \\n Both the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \\n  \\n This method is not available on all versions of Windows. For example, it is not available on Home editions.  \\n  \\n The current file system must be formatted as NTFS.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \\n  \\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/CS/sample.cs#1)]\\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.Encrypt-Decrypt/VB/sample.vb#1)]\"\n  syntax:\n    content: public static void Encrypt (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: A path that describes a file to encrypt.\n  overload: System.IO.File.Encrypt*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>path</code> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file described by the <code>path</code> parameter could not be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"An I/O error occurred while opening the file.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Windows NT or later.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The file system is not NTFS.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>path</code> parameter specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The <code>path</code> parameter specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Exists(System.String)\n  commentId: M:System.IO.File.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Exists(String)\n  nameWithType: File.Exists(String)\n  fullName: File.Exists(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Determines whether the specified file exists.\n  remarks: \"The <xref:System.IO.File.Exists%2A> method should not be used for path validation, this method merely checks if the file specified in `path` exists. Passing an invalid path to <xref:System.IO.File.Exists%2A> returns `false`. To check whether the path contains any invalid characters, you can call the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve the characters that are invalid for the file system. You can also create a regular expression to test the whether the path is valid for your environment. For examples of acceptable paths, see <xref:System.IO.File>.  \\n  \\n To check if a directory exists, see <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.  \\n  \\n Be aware that another process can potentially do something with the file in between the time you call the <xref:System.IO.File.Exists%2A> method and perform another operation on the file, such as <xref:System.IO.File.Delete%2A>.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n If `path` describes a directory, this method returns `false`. Trailing spaces are removed from the `path` parameter before determining if the file exists.  \\n  \\n The <xref:System.IO.File.Exists%2A> method returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.\"\n  example:\n  - \"The following example determines if a file exists.  \\n  \\n [!code-csharp[File Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Exists/CS/program.cs#1)]\\n [!code-vb[File Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Exists/VB/program.vb#1)]\"\n  syntax:\n    content: public static bool Exists (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the caller has the required permissions and <code>path</code> contains the name of an existing file; otherwise, `false`. This method also returns `false` if <code>path</code> is `null`, an invalid path, or a zero-length string. If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns `false` regardless of the existence of <code>path</code>.'\n  overload: System.IO.File.Exists*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetAccessControl(System.String)\n  commentId: M:System.IO.File.GetAccessControl(System.String)\n  id: GetAccessControl(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetAccessControl(String)\n  nameWithType: File.GetAccessControl(String)\n  fullName: File.GetAccessControl(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for a specified file.\n  remarks: \"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \\n  \\n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information.\n    return:\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter.\n  overload: System.IO.File.GetAccessControl*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.Runtime.InteropServices.SEHException\n    commentId: T:System.Runtime.InteropServices.SEHException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>path</code> parameter specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The <code>path</code> parameter specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)\n  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetAccessControl(String, AccessControlSections)\n  nameWithType: File.GetAccessControl(String, AccessControlSections)\n  fullName: File.GetAccessControl(String, AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for a particular file.\n  remarks: \"Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for a file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \\n  \\n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.\"\n  syntax:\n    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to a file containing a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes the file's access control list (ACL) information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies the type of access control list (ACL) information to receive.\n    return:\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the file described by the <code>path</code> parameter.\n  overload: System.IO.File.GetAccessControl*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.Runtime.InteropServices.SEHException\n    commentId: T:System.Runtime.InteropServices.SEHException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>path</code> parameter specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The <code>path</code> parameter specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetAttributes(System.String)\n  commentId: M:System.IO.File.GetAttributes(System.String)\n  id: GetAttributes(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetAttributes(String)\n  nameWithType: File.GetAttributes(String)\n  fullName: File.GetAttributes(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets the <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \\n  \\n [!code-cpp[File GetAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/File GetAttributes/CPP/file getattributes.cpp#1)]\\n [!code-csharp[File GetAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/File GetAttributes/CS/file getattributes.cs#1)]\\n [!code-vb[File GetAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File GetAttributes/VB/file getattributes.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileAttributes GetAttributes (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file.\n    return:\n      type: System.IO.FileAttributes\n      description: The <xref href=\"System.IO.FileAttributes\"></xref> of the file on the path.\n  overload: System.IO.File.GetAttributes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is empty, contains only white spaces, or contains invalid characters.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>path</code> represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: This file is being used by another process.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetCreationTime(System.String)\n  commentId: M:System.IO.File.GetCreationTime(System.String)\n  id: GetCreationTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetCreationTime(String)\n  nameWithType: File.GetCreationTime(String)\n  fullName: File.GetCreationTime(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the creation date and time of the specified file or directory.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \\n  \\n NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates `GetCreationTime`.  \\n  \\n [!code-vb[System.IO.File.GetCreationTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.file.getcreationtime/vb/module1.vb#1)]\"\n  syntax:\n    content: public static DateTime GetCreationTime (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain creation date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in local time.\n  overload: System.IO.File.GetCreationTime*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetCreationTimeUtc(System.String)\n  commentId: M:System.IO.File.GetCreationTimeUtc(System.String)\n  id: GetCreationTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetCreationTimeUtc(String)\n  nameWithType: File.GetCreationTimeUtc(String)\n  fullName: File.GetCreationTimeUtc(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \\n  \\n NTFS-formatted drives may cache information about a file, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates the <xref:System.IO.File.GetCreationTimeUtc%2A> method.  \\n  \\n [!code-vb[System.IO.File.GetCreationTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.file.getcreationtime/vb/module2.vb#2)]\"\n  syntax:\n    content: public static DateTime GetCreationTimeUtc (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain creation date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the creation date and time for the specified file or directory. This value is expressed in UTC time.\n  overload: System.IO.File.GetCreationTimeUtc*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetLastAccessTime(System.String)\n  commentId: M:System.IO.File.GetLastAccessTime(System.String)\n  id: GetLastAccessTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetLastAccessTime(String)\n  nameWithType: File.GetLastAccessTime(String)\n  fullName: File.GetLastAccessTime(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the date and time the specified file or directory was last accessed.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates `GetLastAccessTime`.  \\n  \\n [!code-cpp[File GetLastAccess#1](~/samples/snippets/cpp/VS_Snippets_CLR/File GetLastAccess/CPP/file getlastaccess.cpp#1)]\\n [!code-csharp[File GetLastAccess#1](~/samples/snippets/csharp/VS_Snippets_CLR/File GetLastAccess/CS/file getlastaccess.cs#1)]\\n [!code-vb[File GetLastAccess#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File GetLastAccess/VB/file getlastaccess.vb#1)]\"\n  syntax:\n    content: public static DateTime GetLastAccessTime (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain access date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.\n  overload: System.IO.File.GetLastAccessTime*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetLastAccessTimeUtc(System.String)\n  commentId: M:System.IO.File.GetLastAccessTimeUtc(System.String)\n  id: GetLastAccessTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetLastAccessTimeUtc(String)\n  nameWithType: File.GetLastAccessTimeUtc(String)\n  fullName: File.GetLastAccessTimeUtc(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static DateTime GetLastAccessTimeUtc (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain access date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.\n  overload: System.IO.File.GetLastAccessTimeUtc*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetLastWriteTime(System.String)\n  commentId: M:System.IO.File.GetLastWriteTime(System.String)\n  id: GetLastWriteTime(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetLastWriteTime(String)\n  nameWithType: File.GetLastWriteTime(String)\n  fullName: File.GetLastWriteTime(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the date and time the specified file or directory was last written to.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates `GetLastWriteTime`.  \\n  \\n [!code-cpp[File GetLastWrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/File GetLastWrite/CPP/file getlastwrite.cpp#1)]\\n [!code-csharp[File GetLastWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/File GetLastWrite/CS/file getlastwrite.cs#1)]\\n [!code-vb[File GetLastWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File GetLastWrite/VB/file getlastwrite.vb#1)]\"\n  syntax:\n    content: public static DateTime GetLastWriteTime (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain write date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.\n  overload: System.IO.File.GetLastWriteTime*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.GetLastWriteTimeUtc(System.String)\n  commentId: M:System.IO.File.GetLastWriteTimeUtc(System.String)\n  id: GetLastWriteTimeUtc(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: GetLastWriteTimeUtc(String)\n  nameWithType: File.GetLastWriteTimeUtc(String)\n  fullName: File.GetLastWriteTimeUtc(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.\n  remarks: \"> [!NOTE]\\n>  This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system. Each operating system manages the last write time according to its own rules. To improve performance, an operating system might not set the last write time value to the exact time of the last write operation, but might set it to a close approximation instead.  \\n  \\n If the file described in the `path` parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC).  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static DateTime GetLastWriteTimeUtc (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file or directory for which to obtain write date and time information.\n    return:\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.\n  overload: System.IO.File.GetLastWriteTimeUtc*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Move(System.String,System.String)\n  commentId: M:System.IO.File.Move(System.String,System.String)\n  id: Move(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Move(String, String)\n  nameWithType: File.Move(String, String)\n  fullName: File.Move(String, String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Moves a specified file to a new location, providing the option to specify a new file name.\n  remarks: \"This method works across disk volumes, and it does not throw an exception if the source and destination are the same. Note that if you attempt to replace a file by moving a file of the same name into that directory, you get an <xref:System.IO.IOException>. You cannot use the Move method to overwrite an existing file.  \\n  \\n The `sourceFileName` and `destFileName` arguments can include relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n If you try to move a file across disk volumes and that file is in use, the file is copied to the destination, but it is not deleted from the source.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example moves a file.  \\n  \\n [!code-cpp[File Move#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Move/CPP/file move.cpp#1)]\\n [!code-csharp[File Move#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Move/CS/file move.cs#1)]\\n [!code-vb[File Move#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Move/VB/file move.vb#1)]\"\n  syntax:\n    content: public static void Move (string sourceFileName, string destFileName);\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: The name of the file to move. Can include a relative or absolute path.\n    - id: destFileName\n      type: System.String\n      description: The new path and name for the file.\n  overload: System.IO.File.Move*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The destination file already exists.  \\n  \\n -or-  \\n  \\n <code>sourceFileName</code> was not found.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is a zero-length string, contains only white space, or contains invalid characters as defined in <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The path specified in <code>sourceFileName</code> or <code>destFileName</code> is invalid, (for example, it is on an unmapped drive).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>sourceFileName</code> or <code>destFileName</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Open(System.String,System.IO.FileMode)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode)\n  id: Open(System.String,System.IO.FileMode)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Open(String, FileMode)\n  nameWithType: File.Open(String, FileMode)\n  fullName: File.Open(String, FileMode)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path with read/write access.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \\n  \\n [!code-cpp[File Open1#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Open1/CPP/file open1.cpp#1)]\\n [!code-csharp[File Open1#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Open1/CS/file open1.cs#1)]\\n [!code-vb[File Open1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Open1/VB/file open1.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> opened in the specified mode and path, with read/write access and not shared.\n  overload: System.IO.File.Open*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode.Create\\\"></xref> and the specified file is a hidden file.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>mode</code> specified an invalid value.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Open(String, FileMode, FileAccess)\n  nameWithType: File.Open(String, FileMode, FileAccess)\n  fullName: File.Open(String, FileMode, FileAccess)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, with the specified mode and access.\n  remarks: The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.\n  example:\n  - \"The following example opens a file with read-only access.  \\n  \\n [!code-cpp[file open2#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Open2/CPP/file open2.cpp#1)]\\n [!code-csharp[file open2#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Open2/CS/file open2.cs#1)]\\n [!code-vb[file open2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Open2/VB/file open2.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n    - id: access\n      type: System.IO.FileAccess\n      description: A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file.\n    return:\n      type: System.IO.FileStream\n      description: An unshared <xref href=\"System.IO.FileStream\"></xref> that provides access to the specified file, with the specified mode and access.\n  overload: System.IO.File.Open*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode.Create\\\"></xref> and the specified file is a hidden file.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>mode</code> or <code>access</code> specified an invalid value.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Open(String, FileMode, FileAccess, FileShare)\n  nameWithType: File.Open(String, FileMode, FileAccess, FileShare)\n  fullName: File.Open(String, FileMode, FileAccess, FileShare)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example opens a file with read-only access and with file sharing disallowed.  \\n  \\n [!code-cpp[file open3#1](~/samples/snippets/cpp/VS_Snippets_CLR/File Open3/CPP/file open3.cpp#1)]\\n [!code-csharp[file open3#1](~/samples/snippets/csharp/VS_Snippets_CLR/File Open3/CS/file open3.cs#1)]\\n [!code-vb[file open3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File Open3/VB/file open3.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.\n    - id: access\n      type: System.IO.FileAccess\n      description: A <xref href=\"System.IO.FileAccess\"></xref> value that specifies the operations that can be performed on the file.\n    - id: share\n      type: System.IO.FileShare\n      description: A <xref href=\"System.IO.FileShare\"></xref> value specifying the type of access other threads have to the file.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.\n  overload: System.IO.File.Open*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\\\"System.IO.Path.InvalidPathChars\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>access</code> specified `Read` and <code>mode</code> specified `Create`, `CreateNew`, `Truncate`, or `Append`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only and <code>access</code> is not `Read`.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>mode</code> is <xref href=\\\"System.IO.FileMode.Create\\\"></xref> and the specified file is a hidden file.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>mode</code>, <code>access</code>, or <code>share</code> specified an invalid value.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.OpenRead(System.String)\n  commentId: M:System.IO.File.OpenRead(System.String)\n  id: OpenRead(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: OpenRead(String)\n  nameWithType: File.OpenRead(String)\n  fullName: File.OpenRead(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens an existing file for reading.\n  remarks: \"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with a <xref:System.IO.FileMode> value of <xref:System.IO.FileMode.Open>, a <xref:System.IO.FileAccess> value of <xref:System.IO.FileAccess.Read> and a <xref:System.IO.FileShare> value of <xref:System.IO.FileShare.Read>.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example opens a file for reading.  \\n  \\n [!code-cpp[file openread#1](~/samples/snippets/cpp/VS_Snippets_CLR/File OpenRead/CPP/file openread.cpp#1)]\\n [!code-csharp[file openread#1](~/samples/snippets/csharp/VS_Snippets_CLR/File OpenRead/CS/file openread.cs#1)]\\n [!code-vb[file openread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File OpenRead/VB/file openread.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream OpenRead (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to be opened for reading.\n    return:\n      type: System.IO.FileStream\n      description: A read-only <xref href=\"System.IO.FileStream\"></xref> on the specified path.\n  overload: System.IO.File.OpenRead*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.OpenText(System.String)\n  commentId: M:System.IO.File.OpenText(System.String)\n  id: OpenText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: OpenText(String)\n  nameWithType: File.OpenText(String)\n  fullName: File.OpenText(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens an existing UTF-8 encoded text file for reading.\n  remarks: \"This method is equivalent to the <xref:System.IO.StreamReader.%23ctor%28System.String%29> constructor overload.  \\n  \\n The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example opens a text file for reading.  \\n  \\n [!code-cpp[file opentext#1](~/samples/snippets/cpp/VS_Snippets_CLR/File OpenText/CPP/file opentext.cpp#1)]\\n [!code-csharp[file opentext#1](~/samples/snippets/csharp/VS_Snippets_CLR/File OpenText/CS/file opentext.cs#1)]\\n [!code-vb[file opentext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File OpenText/VB/file opentext.vb#1)]\"\n  syntax:\n    content: public static System.IO.StreamReader OpenText (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to be opened for reading.\n    return:\n      type: System.IO.StreamReader\n      description: A <xref href=\"System.IO.StreamReader\"></xref> on the specified path.\n  overload: System.IO.File.OpenText*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.OpenWrite(System.String)\n  commentId: M:System.IO.File.OpenWrite(System.String)\n  id: OpenWrite(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: OpenWrite(String)\n  nameWithType: File.OpenWrite(String)\n  fullName: File.OpenWrite(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens an existing file or creates a new file for writing.\n  remarks: \"This method is equivalent to the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> constructor overload with file mode set to <xref:System.IO.FileMode.OpenOrCreate>, the access set to <xref:System.IO.FileAccess.Write>, and the share mode set to <xref:System.IO.FileShare.None>.  \\n  \\n The <xref:System.IO.File.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \\\"This is a test of the OpenWrite method\\\") with a shorter string (such as \\\"Second run\\\"), the file will contain a mix of the strings (\\\"Second runtest of the OpenWrite method\\\").  \\n  \\n The `path` parameter may specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, use the <xref:System.IO.Directory.GetCurrentDirectory%2A> method.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example opens a file for reading and writing.  \\n  \\n [!code-cpp[file openwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/File OpenWrite/CPP/file openwrite.cpp#1)]\\n [!code-csharp[file openwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/File OpenWrite/CS/file openwrite.cs#1)]\\n [!code-vb[file openwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File OpenWrite/VB/file openwrite.vb#1)]\"\n  syntax:\n    content: public static System.IO.FileStream OpenWrite (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to be opened for writing.\n    return:\n      type: System.IO.FileStream\n      description: An unshared <xref href=\"System.IO.FileStream\"></xref> object on the specified path with <xref href=\"System.IO.FileAccess.Write\"></xref> access.\n  overload: System.IO.File.OpenWrite*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The caller does not have the required permission.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a read-only file or directory.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllBytes(System.String)\n  commentId: M:System.IO.File.ReadAllBytes(System.String)\n  id: ReadAllBytes(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllBytes(String)\n  nameWithType: File.ReadAllBytes(String)\n  fullName: File.ReadAllBytes(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a binary file, reads the contents of the file into a byte array, and then closes the file.\n  remarks: Given a file path, this method opens the file, reads the contents of the file into a byte array, and then closes the file.\n  syntax:\n    content: public static byte[] ReadAllBytes (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open for reading.\n    return:\n      type: System.Byte[]\n      description: A byte array containing the contents of the file.\n  overload: System.IO.File.ReadAllBytes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)\n  id: ReadAllBytesAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllBytesAsync(String, CancellationToken)\n  nameWithType: File.ReadAllBytesAsync(String, CancellationToken)\n  fullName: File.ReadAllBytesAsync(String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task<byte[]> ReadAllBytesAsync (string path, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Byte[]}\n      description: ''\n  overload: System.IO.File.ReadAllBytesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllLines(System.String)\n  commentId: M:System.IO.File.ReadAllLines(System.String)\n  id: ReadAllLines(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllLines(String)\n  nameWithType: File.ReadAllLines(String)\n  fullName: File.ReadAllLines(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a text file, reads all lines of the file, and then closes the file.\n  remarks: \"This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\\\r'), a line feed ('\\\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \\n  \\n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.ReadAllLines%2A> method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllLines#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllLines/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllLines#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllLines/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static string[] ReadAllLines (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open for reading.\n    return:\n      type: System.String[]\n      description: A string array containing all lines of the file.\n  overload: System.IO.File.ReadAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  id: ReadAllLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllLines(String, Encoding)\n  nameWithType: File.ReadAllLines(String, Encoding)\n  fullName: File.ReadAllLines(String, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file, reads all lines of the file with the specified encoding, and then closes the file.\n  remarks: \"This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\\\r'), a line feed ('\\\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \\n  \\n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.ReadAllLines%2A> method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllLines_Encoding#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllLines_Encoding/cs/AllText_Encoding.cs#00)]\\n [!code-vb[System.IO.File.AllLines_Encoding#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllLines_Encoding/vb/AllText_Encoding.vb#00)]\"\n  syntax:\n    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open for reading.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding applied to the contents of the file.\n    return:\n      type: System.String[]\n      description: A string array containing all lines of the file.\n  overload: System.IO.File.ReadAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)\n  id: ReadAllLinesAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllLinesAsync(String, CancellationToken)\n  nameWithType: File.ReadAllLinesAsync(String, CancellationToken)\n  fullName: File.ReadAllLinesAsync(String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task<string[]> ReadAllLinesAsync (string path, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.String[]}\n      description: ''\n  overload: System.IO.File.ReadAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  id: ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllLinesAsync(String, Encoding, CancellationToken)\n  nameWithType: File.ReadAllLinesAsync(String, Encoding, CancellationToken)\n  fullName: File.ReadAllLinesAsync(String, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task<string[]> ReadAllLinesAsync (string path, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.String[]}\n      description: ''\n  overload: System.IO.File.ReadAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  id: ReadAllText(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllText(String, Encoding)\n  nameWithType: File.ReadAllText(String, Encoding)\n  fullName: File.ReadAllText(String, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file, reads all lines of the file with the specified encoding, and then closes the file.\n  remarks: \"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\\\r'), a line feed ('\\\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \\n  \\n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \\n  \\n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \\n  \\n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.ReadAllText%2A> method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllText_Encoding#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText_Encoding#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static string ReadAllText (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open for reading.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding applied to the contents of the file.\n    return:\n      type: System.String\n      description: A string containing all lines of the file.\n  overload: System.IO.File.ReadAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllText(System.String)\n  commentId: M:System.IO.File.ReadAllText(System.String)\n  id: ReadAllText(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllText(String)\n  nameWithType: File.ReadAllText(String)\n  fullName: File.ReadAllText(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a text file, reads all lines of the file, and then closes the file.\n  remarks: \"This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\\\r'), a line feed ('\\\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \\n  \\n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \\n  \\n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \\n  \\n The file handle is guaranteed to be closed by this method, even if exceptions are raised.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.ReadAllText%2A> method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllText#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static string ReadAllText (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to open for reading.\n    return:\n      type: System.String\n      description: A string containing all lines of the file.\n  overload: System.IO.File.ReadAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified in <code>path</code> was not found.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)\n  id: ReadAllTextAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllTextAsync(String, CancellationToken)\n  nameWithType: File.ReadAllTextAsync(String, CancellationToken)\n  fullName: File.ReadAllTextAsync(String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task<string> ReadAllTextAsync (string path, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: ''\n  overload: System.IO.File.ReadAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  id: ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadAllTextAsync(String, Encoding, CancellationToken)\n  nameWithType: File.ReadAllTextAsync(String, Encoding, CancellationToken)\n  fullName: File.ReadAllTextAsync(String, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task<string> ReadAllTextAsync (string path, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: ''\n  overload: System.IO.File.ReadAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadLines(System.String)\n  commentId: M:System.IO.File.ReadLines(System.String)\n  id: ReadLines(System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadLines(String)\n  nameWithType: File.ReadLines(String)\n  fullName: File.ReadLines(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Reads the lines of a file.\n  remarks: \"The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned; when you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.  \\n  \\n You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:  \\n  \\n-   Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines.  \\n  \\n-   Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> method.  \\n  \\n-   Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.  \\n  \\n This method uses <xref:System.Text.Encoding.UTF8%2A> for the encoding value.\"\n  example:\n  - \"The following example reads the lines of a file to find lines that contain specified strings.  \\n  \\n [!code-csharp[System.IO.File.ReadLines#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.file.readlines/cs/program.cs#1)]\\n [!code-vb[System.IO.File.ReadLines#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.file.readlines/vb/program.vb#1)]  \\n  \\n The following example uses the <xref:System.IO.File.ReadLines%2A> method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \\\"Microsoft\\\".  \\n  \\n [!code-csharp[System.IO.Directory.EnumerateFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.enumeratefiles/cs/program.cs#1)]\\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.enumeratefiles/vb/program.vb#1)]\"\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to read.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: All the lines of the file, or the lines that are the result of a query.\n  overload: System.IO.File.ReadLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>path</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  id: ReadLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: ReadLines(String, Encoding)\n  nameWithType: File.ReadLines(String, Encoding)\n  fullName: File.ReadLines(String, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Read the lines of a file that has a specified encoding.\n  remarks: \"Use this method to specify an encoding to use read the file.  \\n  \\n The <xref:System.IO.File.ReadLines%2A> and <xref:System.IO.File.ReadAllLines%2A> methods differ as follows: When you use <xref:System.IO.File.ReadLines%2A>, you can start enumerating the collection of strings before the whole collection is returned. When you use <xref:System.IO.File.ReadAllLines%2A>, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, <xref:System.IO.File.ReadLines%2A> can be more efficient.  \\n  \\n You can use the <xref:System.IO.File.ReadLines%2A> method to do the following:  \\n  \\n-   Perform [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) queries on a file to obtain a filtered set of its lines.  \\n  \\n-   Write the returned collection of lines to a file with the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method, or append them to an existing file with the <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> method.  \\n  \\n-   Create an immediately populated instance of a collection that takes an <xref:System.Collections.Generic.IEnumerable%601> collection of strings for its constructor, such as a <xref:System.Collections.Generic.IList%601> or a <xref:System.Collections.Generic.Queue%601>.\"\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding that is applied to the contents of the file.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: All the lines of the file, or the lines that are the result of a query.\n  overload: System.IO.File.ReadLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>path</code> was not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Replace(System.String,System.String,System.String)\n  commentId: M:System.IO.File.Replace(System.String,System.String,System.String)\n  id: Replace(System.String,System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Replace(String, String, String)\n  nameWithType: File.Replace(String, String, String)\n  fullName: File.Replace(String, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file.\n  remarks: \"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.  \\n  \\n If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.  \\n  \\n Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \\n  \\n [!code-cpp[IO.File.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.Replace/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.Replace/CS/sample.cs#1)]\\n [!code-vb[IO.File.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.Replace/VB/sample.vb#1)]\"\n  syntax:\n    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: The name of a file that replaces the file specified by <code>destinationFileName</code>.\n    - id: destinationFileName\n      type: System.String\n      description: The name of the file being replaced.\n    - id: destinationBackupFileName\n      type: System.String\n      description: The name of the backup file.\n  overload: System.IO.File.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The path described by the <code>destinationFileName</code> parameter was not of a legal form.  \\n  \\n -or-  \\n  \\n The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destinationFileName</code> parameter is `null`.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object could not be found.  \\n  \\n -or-  \\n  \\n The file described by the <code>destinationBackupFileName</code> parameter could not be found.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"An I/O error occurred while opening the file.  \\n  \\n \\\\- or -  \\n  \\n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n Source or destination parameters specify a directory instead of a file.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)\n  commentId: M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)\n  id: Replace(System.String,System.String,System.String,System.Boolean)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: Replace(String, String, String, Boolean)\n  nameWithType: File.Replace(String, String, String, Boolean)\n  fullName: File.Replace(String, String, String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file and optionally ignores merge errors.\n  remarks: \"The <xref:System.IO.File.Replace%2A> method replaces the contents of a specified file with the contents of another file.  It also creates a backup of the file that was replaced.  \\n  \\n If the `sourceFileName` and `destinationFileName` are on different volumes, this method will raise an exception. If the `destinationBackupFileName` is on a different volume from the source file, the backup file will be deleted.  \\n  \\n Pass `null` to the `destinationBackupFileName` parameter if you do not want to create a backup of the file being replaced.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \\n  \\n [!code-cpp[IO.File.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.Replace/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.Replace/CS/sample.cs#1)]\\n [!code-vb[IO.File.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.Replace/VB/sample.vb#1)]\"\n  syntax:\n    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);\n    parameters:\n    - id: sourceFileName\n      type: System.String\n      description: The name of a file that replaces the file specified by <code>destinationFileName</code>.\n    - id: destinationFileName\n      type: System.String\n      description: The name of the file being replaced.\n    - id: destinationBackupFileName\n      type: System.String\n      description: The name of the backup file.\n    - id: ignoreMetadataErrors\n      type: System.Boolean\n      description: '`true` to ignore merge errors (such as attributes and access control lists (ACLs)) from the replaced file to the replacement file; otherwise, `false`.'\n  overload: System.IO.File.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The path described by the <code>destinationFileName</code> parameter was not of a legal form.  \\n  \\n -or-  \\n  \\n The path described by the <code>destinationBackupFileName</code> parameter was not of a legal form.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destinationFileName</code> parameter is `null`.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object could not be found.  \\n  \\n -or-  \\n  \\n The file described by the <code>destinationBackupFileName</code> parameter could not be found.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"An I/O error occurred while opening the file.  \\n  \\n \\\\- or -  \\n  \\n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file.\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>sourceFileName</code> or <code>destinationFileName</code> parameter specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n Source or destination parameters specify a directory instead of a file.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)\n  commentId: M:System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)\n  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetAccessControl(String, FileSecurity)\n  nameWithType: File.SetAccessControl(String, FileSecurity)\n  fullName: File.SetAccessControl(String, FileSecurity)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the specified file.\n  remarks: \"The <xref:System.IO.File.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.  \\n  \\n> [!CAUTION]\\n>  The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.File.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.File.SetAccessControl%2A> to apply it back to the file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \\n  \\n The <xref:System.IO.File.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.  \\n  \\n To copy ACL information from one file to another:  \\n  \\n1.  Use the <xref:System.IO.File.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.  \\n  \\n2.  Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.  \\n  \\n3.  Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.  \\n  \\n4.  Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.  \\n  \\n5.  Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.File.SetAccessControl%2A> method.  \\n  \\n In NTFS environments, <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> are granted to the user if the user has <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> rights on the parent folder. To deny <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> and <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, deny <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> on the parent directory.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);\n    parameters:\n    - id: path\n      type: System.String\n      description: A file to add or remove access control list (ACL) entries from.\n    - id: fileSecurity\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an ACL entry to apply to the file described by the <code>path</code> parameter.\n  overload: System.IO.File.SetAccessControl*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.Runtime.InteropServices.SEHException\n    commentId: T:System.Runtime.InteropServices.SEHException\n    description: The <code>path</code> parameter is `null`.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The <code>path</code> parameter specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The <code>path</code> parameter specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>fileSecurity</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  commentId: M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  id: SetAttributes(System.String,System.IO.FileAttributes)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetAttributes(String, FileAttributes)\n  nameWithType: File.SetAttributes(String, FileAttributes)\n  fullName: File.SetAttributes(String, FileAttributes)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the specified <xref href=\"System.IO.FileAttributes\"></xref> of the file on the specified path.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n Certain file attributes, such as <xref:System.IO.FileAttributes.Hidden> and <xref:System.IO.FileAttributes.ReadOnly>, can be combined. Other attributes, such as <xref:System.IO.FileAttributes.Normal>, must be used alone.  \\n  \\n It is not possible to change the compression status of a <xref:System.IO.File> object using the <xref:System.IO.File.SetAttributes%2A> method.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \\n  \\n [!code-cpp[File GetAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/File GetAttributes/CPP/file getattributes.cpp#1)]\\n [!code-csharp[File GetAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/File GetAttributes/CS/file getattributes.cs#1)]\\n [!code-vb[File GetAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File GetAttributes/VB/file getattributes.vb#1)]\"\n  syntax:\n    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the file.\n    - id: fileAttributes\n      type: System.IO.FileAttributes\n      description: A bitwise combination of the enumeration values.\n  overload: System.IO.File.SetAttributes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, (for example, it is on an unmapped drive).\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetCreationTime(System.String,System.DateTime)\n  id: SetCreationTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetCreationTime(String, DateTime)\n  nameWithType: File.SetCreationTime(String, DateTime)\n  fullName: File.SetCreationTime(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time the file was created.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static void SetCreationTime (string path, DateTime creationTime);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the creation date and time information.\n    - id: creationTime\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in local time.\n  overload: System.IO.File.SetCreationTime*\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while performing the operation.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  id: SetCreationTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetCreationTimeUtc(String, DateTime)\n  nameWithType: File.SetCreationTimeUtc(String, DateTime)\n  fullName: File.SetCreationTimeUtc(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time, in coordinated universal time (UTC), that the file was created.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time. As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the creation date and time information.\n    - id: creationTimeUtc\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the creation date and time of <code>path</code>. This value is expressed in UTC time.\n  overload: System.IO.File.SetCreationTimeUtc*\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while performing the operation.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>creationTime</code> specifies a value outside the range of dates, times, or both permitted for this operation.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  id: SetLastAccessTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetLastAccessTime(String, DateTime)\n  nameWithType: File.SetLastAccessTime(String, DateTime)\n  fullName: File.SetLastAccessTime(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time the specified file was last accessed.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \\n  \\n [!code-cpp[file setlastaccess#1](~/samples/snippets/cpp/VS_Snippets_CLR/File SetLastAccess/CPP/file setlastaccess.cpp#1)]\\n [!code-csharp[file setlastaccess#1](~/samples/snippets/csharp/VS_Snippets_CLR/File SetLastAccess/CS/file setlastaccess.cs#1)]\\n [!code-vb[file setlastaccess#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File SetLastAccess/VB/file setlastaccess.vb#1)]\"\n  syntax:\n    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the access date and time information.\n    - id: lastAccessTime\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in local time.\n  overload: System.IO.File.SetLastAccessTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>lastAccessTime</code> specifies a value outside the range of dates or times permitted for this operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  id: SetLastAccessTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetLastAccessTimeUtc(String, DateTime)\n  nameWithType: File.SetLastAccessTimeUtc(String, DateTime)\n  fullName: File.SetLastAccessTimeUtc(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the access date and time information.\n    - id: lastAccessTimeUtc\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the last access date and time of <code>path</code>. This value is expressed in UTC time.\n  overload: System.IO.File.SetLastAccessTimeUtc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>lastAccessTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  id: SetLastWriteTime(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetLastWriteTime(String, DateTime)\n  nameWithType: File.SetLastWriteTime(String, DateTime)\n  fullName: File.SetLastWriteTime(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time that the specified file was last written to.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \\n  \\n [!code-cpp[file setlastwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/File SetLastWrite/CPP/file setlastwrite.cpp#1)]\\n [!code-csharp[file setlastwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/File SetLastWrite/CS/file setlastwrite.cs#1)]\\n [!code-vb[file setlastwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/File SetLastWrite/VB/file setlastwrite.vb#1)]\"\n  syntax:\n    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the date and time information.\n    - id: lastWriteTime\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in local time.\n  overload: System.IO.File.SetLastWriteTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>lastWriteTime</code> specifies a value outside the range of dates or times permitted for this operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  id: SetLastWriteTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: SetLastWriteTimeUtc(String, DateTime)\n  nameWithType: File.SetLastWriteTimeUtc(String, DateTime)\n  fullName: File.SetLastWriteTimeUtc(String, DateTime)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.\n  remarks: \"The `path` parameter is permitted to specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see <xref:System.IO.Directory.GetCurrentDirectory%2A>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file for which to set the date and time information.\n    - id: lastWriteTimeUtc\n      type: System.DateTime\n      description: A <xref href=\"System.DateTime\"></xref> containing the value to set for the last write date and time of <code>path</code>. This value is expressed in UTC time.\n  overload: System.IO.File.SetLastWriteTimeUtc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The specified path was not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>lastWriteTimeUtc</code> specifies a value outside the range of dates or times permitted for this operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  commentId: M:System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  id: WriteAllBytes(System.String,System.Byte[])\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllBytes(String, Byte[])\n  nameWithType: File.WriteAllBytes(String, Byte[])\n  fullName: File.WriteAllBytes(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.\n  remarks: Given a byte array and a file path, this method opens the specified file, writes the contents of the byte array to the file, and then closes the file.\n  syntax:\n    content: public static void WriteAllBytes (string path, byte[] bytes);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: bytes\n      type: System.Byte[]\n      description: The bytes to write to the file.\n  overload: System.IO.File.WriteAllBytes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null` or the byte array is empty.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)\n  commentId: M:System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)\n  id: WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllBytesAsync(String, Byte[], CancellationToken)\n  nameWithType: File.WriteAllBytesAsync(String, Byte[], CancellationToken)\n  fullName: File.WriteAllBytesAsync(String, Byte[], CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task WriteAllBytesAsync (string path, byte[] bytes, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: bytes\n      type: System.Byte[]\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.WriteAllBytesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)\n  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLines(String, String[], Encoding)\n  nameWithType: File.WriteAllLines(String, String[], Encoding)\n  fullName: File.WriteAllLines(String, String[], Encoding)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.\n  remarks: \"If the target file already exists, it is overwritten.  \\n  \\n Given a string array and a file path, this method opens the specified file, writes the string array to the file using the specified encoding, and then closes the file.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.WriteAllLines%2A> method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllLines_Encoding#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllLines_Encoding/cs/AllText_Encoding.cs#00)]\\n [!code-vb[System.IO.File.AllLines_Encoding#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllLines_Encoding/vb/AllText_Encoding.vb#00)]\"\n  syntax:\n    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.String[]\n      description: The string array to write to the file.\n    - id: encoding\n      type: System.Text.Encoding\n      description: An <xref href=\"System.Text.Encoding\"></xref> object that represents the character encoding applied to the string array.\n  overload: System.IO.File.WriteAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code> or <code>contents</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>, Encoding)\n  fullName: File.WriteAllLines(String, IEnumerable<String>, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.\n  remarks: \"If the target file already exists, it is overwritten.  \\n  \\n You can use this method to create a file that contains the following:  \\n  \\n-   The results of a [LINQ to Objects](http://msdn.microsoft.com/library/73cafe73-37cf-46e7-bfa7-97c7eea7ced9) query on the lines of a file, as obtained by using the <xref:System.IO.File.ReadLines%2A> method.  \\n  \\n-   The contents of a collection that implements an <xref:System.Collections.Generic.IEnumerable%601> of strings.\"\n  syntax:\n    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The lines to write to the file.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.File.WriteAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code>, <code>contents</code>, or <code>encoding</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllLines(System.String,System.String[])\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.String[])\n  id: WriteAllLines(System.String,System.String[])\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLines(String, String[])\n  nameWithType: File.WriteAllLines(String, String[])\n  fullName: File.WriteAllLines(String, String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Creates a new file, write the specified string array to the file, and then closes the file.\n  remarks: \"If the target file already exists, it is overwritten.  \\n  \\n The default behavior of the <xref:System.IO.File.WriteAllLines%2A> method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.String%5B%5D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \\n  \\n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.WriteAllLines%2A> method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllLines#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllLines/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllLines#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllLines/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static void WriteAllLines (string path, string[] contents);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.String[]\n      description: The string array to write to the file.\n  overload: System.IO.File.WriteAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code> or <code>contents</code> is `null`.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLines(String, IEnumerable<String>)\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>)\n  fullName: File.WriteAllLines(String, IEnumerable<String>)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a new file, writes a collection of strings to the file, and then closes the file.\n  remarks: \"The default behavior of the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method is to write out data by using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \\n  \\n If the target file already exists, it is overwritten.  \\n  \\n You can use this method to create the contents for a collection class that takes an <xref:System.Collections.Generic.IEnumerable%601> in its constructor, such as a <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, or a <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> class.\"\n  example:\n  - \"The following example writes selected lines from a sample data file to a file.  \\n  \\n [!code-csharp[System.IO.File.WriteAllAppendAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.file.writeallappendall/cs/program.cs#1)]\\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.file.writeallappendall/vb/program.vb#1)]\"\n  syntax:\n    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The lines to write to the file.\n  overload: System.IO.File.WriteAllLines*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\"></xref> method.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>path</code> or <code>contents</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: <code>path</code> is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: <code>path</code> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specifies a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> is a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  commentId: M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  id: WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  nameWithType: File.WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  fullName: File.WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task WriteAllLinesAsync (string path, System.Collections.Generic.IEnumerable<string> contents, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.WriteAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  id: WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  nameWithType: File.WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  fullName: File.WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task WriteAllLinesAsync (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.WriteAllLinesAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllText(System.String,System.String)\n  commentId: M:System.IO.File.WriteAllText(System.String,System.String)\n  id: WriteAllText(System.String,System.String)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllText(String, String)\n  nameWithType: File.WriteAllText(String, String)\n  fullName: File.WriteAllText(String, String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.\n  remarks: \"This method uses UTF-8 encoding without a Byte-Order Mark (BOM), so using the <xref:System.Text.Encoding.GetPreamble%2A> method will return an empty byte array. If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29> method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \\n  \\n Given a string and a file path, this method opens the specified file, writes the string to the file, and then closes the file.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.WriteAllText%2A> method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllText#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static void WriteAllText (string path, string contents);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.String\n      description: The string to write to the file.\n  overload: System.IO.File.WriteAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null` or <code>contents</code> is empty.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  commentId: M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  id: WriteAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllText(String, String, Encoding)\n  nameWithType: File.WriteAllText(String, String, Encoding)\n  fullName: File.WriteAllText(String, String, Encoding)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.\n  remarks: Given a string and a file path, this method opens the specified file, writes the string to the file using the specified encoding, and then closes the file. The file handle is guaranteed to be closed by this method, even if exceptions are raised.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.File.WriteAllText%2A> method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \\n  \\n [!code-csharp[System.IO.File.AllText_Encoding#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/cs/AllText.cs#00)]\\n [!code-vb[System.IO.File.AllText_Encoding#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.File.AllText_Encoding/vb/AllText.vb#00)]\"\n  syntax:\n    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The file to write to.\n    - id: contents\n      type: System.String\n      description: The string to write to the file.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding to apply to the string.\n  overload: System.IO.File.WriteAllText*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null` or <code>contents</code> is empty.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"<code>path</code> specified a file that is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n <code>path</code> specified a directory.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>path</code> is in an invalid format.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  id: WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllTextAsync(String, String, CancellationToken)\n  nameWithType: File.WriteAllTextAsync(String, String, CancellationToken)\n  fullName: File.WriteAllTextAsync(String, String, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task WriteAllTextAsync (string path, string contents, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.String\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.WriteAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  commentId: M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  id: WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  langs:\n  - csharp\n  name: WriteAllTextAsync(String, String, Encoding, CancellationToken)\n  nameWithType: File.WriteAllTextAsync(String, String, Encoding, CancellationToken)\n  fullName: File.WriteAllTextAsync(String, String, Encoding, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  syntax:\n    content: public static System.Threading.Tasks.Task WriteAllTextAsync (string path, string contents, System.Text.Encoding encoding, System.Threading.CancellationToken cancellationToken = null);\n    parameters:\n    - id: path\n      type: System.String\n      description: ''\n    - id: contents\n      type: System.String\n      description: ''\n    - id: encoding\n      type: System.Text.Encoding\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.File.WriteAllTextAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.DirectoryNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.IO.PathTooLongException\n  parent: System.IO\n  isExternal: false\n  name: PathTooLongException\n  nameWithType: PathTooLongException\n  fullName: System.IO.PathTooLongException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.DriveNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DriveNotFoundException\n  nameWithType: DriveNotFoundException\n  fullName: System.IO.DriveNotFoundException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Runtime.InteropServices.SEHException\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SEHException\n  nameWithType: SEHException\n  fullName: System.Runtime.InteropServices.SEHException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLines(String, IEnumerable<String>)\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>)\n  fullName: File.AppendAllLines(String, IEnumerable<String>)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType: File.AppendAllLines(String, IEnumerable<String>, Encoding)\n  fullName: File.AppendAllLines(String, IEnumerable<String>, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  nameWithType: File.AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  fullName: File.AppendAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  nameWithType: File.AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  fullName: File.AppendAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n- uid: System.IO.File.AppendAllText(System.String,System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllText(String, String)\n  nameWithType: File.AppendAllText(String, String)\n  fullName: File.AppendAllText(String, String)\n- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllText(String, String, Encoding)\n  nameWithType: File.AppendAllText(String, String, Encoding)\n  fullName: File.AppendAllText(String, String, Encoding)\n- uid: System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllTextAsync(String, String, CancellationToken)\n  nameWithType: File.AppendAllTextAsync(String, String, CancellationToken)\n  fullName: File.AppendAllTextAsync(String, String, CancellationToken)\n- uid: System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllTextAsync(String, String, Encoding, CancellationToken)\n  nameWithType: File.AppendAllTextAsync(String, String, Encoding, CancellationToken)\n  fullName: File.AppendAllTextAsync(String, String, Encoding, CancellationToken)\n- uid: System.IO.File.AppendText(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: AppendText(String)\n  nameWithType: File.AppendText(String)\n  fullName: File.AppendText(String)\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  nameWithType: StreamWriter\n  fullName: System.IO.StreamWriter\n- uid: System.IO.File.Copy(System.String,System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Copy(String, String)\n  nameWithType: File.Copy(String, String)\n  fullName: File.Copy(String, String)\n- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)\n  parent: System.IO.File\n  isExternal: false\n  name: Copy(String, String, Boolean)\n  nameWithType: File.Copy(String, String, Boolean)\n  fullName: File.Copy(String, String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.File.Create(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Create(String)\n  nameWithType: File.Create(String)\n  fullName: File.Create(String)\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream\n- uid: System.IO.File.Create(System.String,System.Int32)\n  parent: System.IO.File\n  isExternal: false\n  name: Create(String, Int32)\n  nameWithType: File.Create(String, Int32)\n  fullName: File.Create(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)\n  parent: System.IO.File\n  isExternal: false\n  name: Create(String, Int32, FileOptions)\n  nameWithType: File.Create(String, Int32, FileOptions)\n  fullName: File.Create(String, Int32, FileOptions)\n- uid: System.IO.FileOptions\n  parent: System.IO\n  isExternal: false\n  name: FileOptions\n  nameWithType: FileOptions\n  fullName: System.IO.FileOptions\n- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.File\n  isExternal: false\n  name: Create(String, Int32, FileOptions, FileSecurity)\n  nameWithType: File.Create(String, Int32, FileOptions, FileSecurity)\n  fullName: File.Create(String, Int32, FileOptions, FileSecurity)\n- uid: System.Security.AccessControl.FileSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSecurity\n  nameWithType: FileSecurity\n  fullName: System.Security.AccessControl.FileSecurity\n- uid: System.IO.File.CreateText(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: CreateText(String)\n  nameWithType: File.CreateText(String)\n  fullName: File.CreateText(String)\n- uid: System.IO.File.Decrypt(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Decrypt(String)\n  nameWithType: File.Decrypt(String)\n  fullName: File.Decrypt(String)\n- uid: System.IO.File.Delete(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Delete(String)\n  nameWithType: File.Delete(String)\n  fullName: File.Delete(String)\n- uid: System.IO.File.Encrypt(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Encrypt(String)\n  nameWithType: File.Encrypt(String)\n  fullName: File.Encrypt(String)\n- uid: System.IO.File.Exists(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Exists(String)\n  nameWithType: File.Exists(String)\n  fullName: File.Exists(String)\n- uid: System.IO.File.GetAccessControl(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetAccessControl(String)\n  nameWithType: File.GetAccessControl(String)\n  fullName: File.GetAccessControl(String)\n- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.IO.File\n  isExternal: false\n  name: GetAccessControl(String, AccessControlSections)\n  nameWithType: File.GetAccessControl(String, AccessControlSections)\n  fullName: File.GetAccessControl(String, AccessControlSections)\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n- uid: System.IO.File.GetAttributes(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetAttributes(String)\n  nameWithType: File.GetAttributes(String)\n  fullName: File.GetAttributes(String)\n- uid: System.IO.FileAttributes\n  parent: System.IO\n  isExternal: false\n  name: FileAttributes\n  nameWithType: FileAttributes\n  fullName: System.IO.FileAttributes\n- uid: System.IO.File.GetCreationTime(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetCreationTime(String)\n  nameWithType: File.GetCreationTime(String)\n  fullName: File.GetCreationTime(String)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IO.File.GetCreationTimeUtc(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetCreationTimeUtc(String)\n  nameWithType: File.GetCreationTimeUtc(String)\n  fullName: File.GetCreationTimeUtc(String)\n- uid: System.IO.File.GetLastAccessTime(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastAccessTime(String)\n  nameWithType: File.GetLastAccessTime(String)\n  fullName: File.GetLastAccessTime(String)\n- uid: System.IO.File.GetLastAccessTimeUtc(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastAccessTimeUtc(String)\n  nameWithType: File.GetLastAccessTimeUtc(String)\n  fullName: File.GetLastAccessTimeUtc(String)\n- uid: System.IO.File.GetLastWriteTime(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastWriteTime(String)\n  nameWithType: File.GetLastWriteTime(String)\n  fullName: File.GetLastWriteTime(String)\n- uid: System.IO.File.GetLastWriteTimeUtc(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastWriteTimeUtc(String)\n  nameWithType: File.GetLastWriteTimeUtc(String)\n  fullName: File.GetLastWriteTimeUtc(String)\n- uid: System.IO.File.Move(System.String,System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Move(String, String)\n  nameWithType: File.Move(String, String)\n  fullName: File.Move(String, String)\n- uid: System.IO.File.Open(System.String,System.IO.FileMode)\n  parent: System.IO.File\n  isExternal: false\n  name: Open(String, FileMode)\n  nameWithType: File.Open(String, FileMode)\n  fullName: File.Open(String, FileMode)\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.File\n  isExternal: false\n  name: Open(String, FileMode, FileAccess)\n  nameWithType: File.Open(String, FileMode, FileAccess)\n  fullName: File.Open(String, FileMode, FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.File\n  isExternal: false\n  name: Open(String, FileMode, FileAccess, FileShare)\n  nameWithType: File.Open(String, FileMode, FileAccess, FileShare)\n  fullName: File.Open(String, FileMode, FileAccess, FileShare)\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n- uid: System.IO.File.OpenRead(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: OpenRead(String)\n  nameWithType: File.OpenRead(String)\n  fullName: File.OpenRead(String)\n- uid: System.IO.File.OpenText(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: OpenText(String)\n  nameWithType: File.OpenText(String)\n  fullName: File.OpenText(String)\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n- uid: System.IO.File.OpenWrite(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: OpenWrite(String)\n  nameWithType: File.OpenWrite(String)\n  fullName: File.OpenWrite(String)\n- uid: System.IO.File.ReadAllBytes(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllBytes(String)\n  nameWithType: File.ReadAllBytes(String)\n  fullName: File.ReadAllBytes(String)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllBytesAsync(String, CancellationToken)\n  nameWithType: File.ReadAllBytesAsync(String, CancellationToken)\n  fullName: File.ReadAllBytesAsync(String, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Byte[]}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Byte[]>\n  nameWithType: Task<Byte[]>\n  fullName: System.Threading.Tasks.Task<System.Byte[]>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.File.ReadAllLines(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLines(String)\n  nameWithType: File.ReadAllLines(String)\n  fullName: File.ReadAllLines(String)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLines(String, Encoding)\n  nameWithType: File.ReadAllLines(String, Encoding)\n  fullName: File.ReadAllLines(String, Encoding)\n- uid: System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLinesAsync(String, CancellationToken)\n  nameWithType: File.ReadAllLinesAsync(String, CancellationToken)\n  fullName: File.ReadAllLinesAsync(String, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.String[]}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<String[]>\n  nameWithType: Task<String[]>\n  fullName: System.Threading.Tasks.Task<System.String[]>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLinesAsync(String, Encoding, CancellationToken)\n  nameWithType: File.ReadAllLinesAsync(String, Encoding, CancellationToken)\n  fullName: File.ReadAllLinesAsync(String, Encoding, CancellationToken)\n- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllText(String, Encoding)\n  nameWithType: File.ReadAllText(String, Encoding)\n  fullName: File.ReadAllText(String, Encoding)\n- uid: System.IO.File.ReadAllText(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllText(String)\n  nameWithType: File.ReadAllText(String)\n  fullName: File.ReadAllText(String)\n- uid: System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllTextAsync(String, CancellationToken)\n  nameWithType: File.ReadAllTextAsync(String, CancellationToken)\n  fullName: File.ReadAllTextAsync(String, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.String}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<String>\n  nameWithType: Task<String>\n  fullName: System.Threading.Tasks.Task<System.String>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllTextAsync(String, Encoding, CancellationToken)\n  nameWithType: File.ReadAllTextAsync(String, Encoding, CancellationToken)\n  fullName: File.ReadAllTextAsync(String, Encoding, CancellationToken)\n- uid: System.IO.File.ReadLines(System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadLines(String)\n  nameWithType: File.ReadLines(String)\n  fullName: File.ReadLines(String)\n- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: ReadLines(String, Encoding)\n  nameWithType: File.ReadLines(String, Encoding)\n  fullName: File.ReadLines(String, Encoding)\n- uid: System.IO.File.Replace(System.String,System.String,System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: Replace(String, String, String)\n  nameWithType: File.Replace(String, String, String)\n  fullName: File.Replace(String, String, String)\n- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)\n  parent: System.IO.File\n  isExternal: false\n  name: Replace(String, String, String, Boolean)\n  nameWithType: File.Replace(String, String, String, Boolean)\n  fullName: File.Replace(String, String, String, Boolean)\n- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.File\n  isExternal: false\n  name: SetAccessControl(String, FileSecurity)\n  nameWithType: File.SetAccessControl(String, FileSecurity)\n  fullName: File.SetAccessControl(String, FileSecurity)\n- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)\n  parent: System.IO.File\n  isExternal: false\n  name: SetAttributes(String, FileAttributes)\n  nameWithType: File.SetAttributes(String, FileAttributes)\n  fullName: File.SetAttributes(String, FileAttributes)\n- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetCreationTime(String, DateTime)\n  nameWithType: File.SetCreationTime(String, DateTime)\n  fullName: File.SetCreationTime(String, DateTime)\n- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetCreationTimeUtc(String, DateTime)\n  nameWithType: File.SetCreationTimeUtc(String, DateTime)\n  fullName: File.SetCreationTimeUtc(String, DateTime)\n- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastAccessTime(String, DateTime)\n  nameWithType: File.SetLastAccessTime(String, DateTime)\n  fullName: File.SetLastAccessTime(String, DateTime)\n- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastAccessTimeUtc(String, DateTime)\n  nameWithType: File.SetLastAccessTimeUtc(String, DateTime)\n  fullName: File.SetLastAccessTimeUtc(String, DateTime)\n- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastWriteTime(String, DateTime)\n  nameWithType: File.SetLastWriteTime(String, DateTime)\n  fullName: File.SetLastWriteTime(String, DateTime)\n- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastWriteTimeUtc(String, DateTime)\n  nameWithType: File.SetLastWriteTimeUtc(String, DateTime)\n  fullName: File.SetLastWriteTimeUtc(String, DateTime)\n- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllBytes(String, Byte[])\n  nameWithType: File.WriteAllBytes(String, Byte[])\n  fullName: File.WriteAllBytes(String, Byte[])\n- uid: System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllBytesAsync(String, Byte[], CancellationToken)\n  nameWithType: File.WriteAllBytesAsync(String, Byte[], CancellationToken)\n  fullName: File.WriteAllBytesAsync(String, Byte[], CancellationToken)\n- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLines(String, String[], Encoding)\n  nameWithType: File.WriteAllLines(String, String[], Encoding)\n  fullName: File.WriteAllLines(String, String[], Encoding)\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLines(String, IEnumerable<String>, Encoding)\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>, Encoding)\n  fullName: File.WriteAllLines(String, IEnumerable<String>, Encoding)\n- uid: System.IO.File.WriteAllLines(System.String,System.String[])\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLines(String, String[])\n  nameWithType: File.WriteAllLines(String, String[])\n  fullName: File.WriteAllLines(String, String[])\n- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLines(String, IEnumerable<String>)\n  nameWithType: File.WriteAllLines(String, IEnumerable<String>)\n  fullName: File.WriteAllLines(String, IEnumerable<String>)\n- uid: System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  nameWithType: File.WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n  fullName: File.WriteAllLinesAsync(String, IEnumerable<String>, CancellationToken)\n- uid: System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  nameWithType: File.WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n  fullName: File.WriteAllLinesAsync(String, IEnumerable<String>, Encoding, CancellationToken)\n- uid: System.IO.File.WriteAllText(System.String,System.String)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllText(String, String)\n  nameWithType: File.WriteAllText(String, String)\n  fullName: File.WriteAllText(String, String)\n- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllText(String, String, Encoding)\n  nameWithType: File.WriteAllText(String, String, Encoding)\n  fullName: File.WriteAllText(String, String, Encoding)\n- uid: System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllTextAsync(String, String, CancellationToken)\n  nameWithType: File.WriteAllTextAsync(String, String, CancellationToken)\n  fullName: File.WriteAllTextAsync(String, String, CancellationToken)\n- uid: System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllTextAsync(String, String, Encoding, CancellationToken)\n  nameWithType: File.WriteAllTextAsync(String, String, Encoding, CancellationToken)\n  fullName: File.WriteAllTextAsync(String, String, Encoding, CancellationToken)\n- uid: System.IO.File.GetAccessControl*\n  parent: System.IO.File\n  isExternal: false\n  name: GetAccessControl\n  nameWithType: File.GetAccessControl\n  fullName: File.GetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Replace*\n  parent: System.IO.File\n  isExternal: false\n  name: Replace\n  nameWithType: File.Replace\n  fullName: File.Replace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllLines*\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLines\n  nameWithType: File.AppendAllLines\n  fullName: File.AppendAllLines\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllLinesAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllLinesAsync\n  nameWithType: File.AppendAllLinesAsync\n  fullName: File.AppendAllLinesAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllText*\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllText\n  nameWithType: File.AppendAllText\n  fullName: File.AppendAllText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendAllTextAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: AppendAllTextAsync\n  nameWithType: File.AppendAllTextAsync\n  fullName: File.AppendAllTextAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.AppendText*\n  parent: System.IO.File\n  isExternal: false\n  name: AppendText\n  nameWithType: File.AppendText\n  fullName: File.AppendText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Copy*\n  parent: System.IO.File\n  isExternal: false\n  name: Copy\n  nameWithType: File.Copy\n  fullName: File.Copy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Create*\n  parent: System.IO.File\n  isExternal: false\n  name: Create\n  nameWithType: File.Create\n  fullName: File.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.CreateText*\n  parent: System.IO.File\n  isExternal: false\n  name: CreateText\n  nameWithType: File.CreateText\n  fullName: File.CreateText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Decrypt*\n  parent: System.IO.File\n  isExternal: false\n  name: Decrypt\n  nameWithType: File.Decrypt\n  fullName: File.Decrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Delete*\n  parent: System.IO.File\n  isExternal: false\n  name: Delete\n  nameWithType: File.Delete\n  fullName: File.Delete\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Encrypt*\n  parent: System.IO.File\n  isExternal: false\n  name: Encrypt\n  nameWithType: File.Encrypt\n  fullName: File.Encrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Exists*\n  parent: System.IO.File\n  isExternal: false\n  name: Exists\n  nameWithType: File.Exists\n  fullName: File.Exists\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetAttributes*\n  parent: System.IO.File\n  isExternal: false\n  name: GetAttributes\n  nameWithType: File.GetAttributes\n  fullName: File.GetAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetCreationTime*\n  parent: System.IO.File\n  isExternal: false\n  name: GetCreationTime\n  nameWithType: File.GetCreationTime\n  fullName: File.GetCreationTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetCreationTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: GetCreationTimeUtc\n  nameWithType: File.GetCreationTimeUtc\n  fullName: File.GetCreationTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetLastAccessTime*\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastAccessTime\n  nameWithType: File.GetLastAccessTime\n  fullName: File.GetLastAccessTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetLastAccessTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastAccessTimeUtc\n  nameWithType: File.GetLastAccessTimeUtc\n  fullName: File.GetLastAccessTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetLastWriteTime*\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastWriteTime\n  nameWithType: File.GetLastWriteTime\n  fullName: File.GetLastWriteTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.GetLastWriteTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: GetLastWriteTimeUtc\n  nameWithType: File.GetLastWriteTimeUtc\n  fullName: File.GetLastWriteTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Move*\n  parent: System.IO.File\n  isExternal: false\n  name: Move\n  nameWithType: File.Move\n  fullName: File.Move\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.Open*\n  parent: System.IO.File\n  isExternal: false\n  name: Open\n  nameWithType: File.Open\n  fullName: File.Open\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.OpenRead*\n  parent: System.IO.File\n  isExternal: false\n  name: OpenRead\n  nameWithType: File.OpenRead\n  fullName: File.OpenRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.OpenText*\n  parent: System.IO.File\n  isExternal: false\n  name: OpenText\n  nameWithType: File.OpenText\n  fullName: File.OpenText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.OpenWrite*\n  parent: System.IO.File\n  isExternal: false\n  name: OpenWrite\n  nameWithType: File.OpenWrite\n  fullName: File.OpenWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllBytes*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllBytes\n  nameWithType: File.ReadAllBytes\n  fullName: File.ReadAllBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllBytesAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllBytesAsync\n  nameWithType: File.ReadAllBytesAsync\n  fullName: File.ReadAllBytesAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllLines*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLines\n  nameWithType: File.ReadAllLines\n  fullName: File.ReadAllLines\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllLinesAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllLinesAsync\n  nameWithType: File.ReadAllLinesAsync\n  fullName: File.ReadAllLinesAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllText*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllText\n  nameWithType: File.ReadAllText\n  fullName: File.ReadAllText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadAllTextAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadAllTextAsync\n  nameWithType: File.ReadAllTextAsync\n  fullName: File.ReadAllTextAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.ReadLines*\n  parent: System.IO.File\n  isExternal: false\n  name: ReadLines\n  nameWithType: File.ReadLines\n  fullName: File.ReadLines\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetAccessControl*\n  parent: System.IO.File\n  isExternal: false\n  name: SetAccessControl\n  nameWithType: File.SetAccessControl\n  fullName: File.SetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetAttributes*\n  parent: System.IO.File\n  isExternal: false\n  name: SetAttributes\n  nameWithType: File.SetAttributes\n  fullName: File.SetAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetCreationTime*\n  parent: System.IO.File\n  isExternal: false\n  name: SetCreationTime\n  nameWithType: File.SetCreationTime\n  fullName: File.SetCreationTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetCreationTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: SetCreationTimeUtc\n  nameWithType: File.SetCreationTimeUtc\n  fullName: File.SetCreationTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetLastAccessTime*\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastAccessTime\n  nameWithType: File.SetLastAccessTime\n  fullName: File.SetLastAccessTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetLastAccessTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastAccessTimeUtc\n  nameWithType: File.SetLastAccessTimeUtc\n  fullName: File.SetLastAccessTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetLastWriteTime*\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastWriteTime\n  nameWithType: File.SetLastWriteTime\n  fullName: File.SetLastWriteTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.SetLastWriteTimeUtc*\n  parent: System.IO.File\n  isExternal: false\n  name: SetLastWriteTimeUtc\n  nameWithType: File.SetLastWriteTimeUtc\n  fullName: File.SetLastWriteTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllBytes*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllBytes\n  nameWithType: File.WriteAllBytes\n  fullName: File.WriteAllBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllBytesAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllBytesAsync\n  nameWithType: File.WriteAllBytesAsync\n  fullName: File.WriteAllBytesAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllLines*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLines\n  nameWithType: File.WriteAllLines\n  fullName: File.WriteAllLines\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllLinesAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllLinesAsync\n  nameWithType: File.WriteAllLinesAsync\n  fullName: File.WriteAllLinesAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllText*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllText\n  nameWithType: File.WriteAllText\n  fullName: File.WriteAllText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.IO.File.WriteAllTextAsync*\n  parent: System.IO.File\n  isExternal: false\n  name: WriteAllTextAsync\n  nameWithType: File.WriteAllTextAsync\n  fullName: File.WriteAllTextAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/File.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}