### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  commentId: T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  id: ContextValue`1
  children:
  - Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor
  - Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value
  langs:
  - csharp
  name: ContextValue<T>
  nameWithType: ContextValue<T>
  fullName: Microsoft.VisualBasic.MyServices.Internal.ContextValue<T>
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices.Internal
  summary: This class supports `My` in Visual Basic.
  remarks: "This class supports `My` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. It is not intended to be used directly from your code.  \n  \n This class stores an object in a context appropriate for the run time environment."
  syntax:
    content: public class ContextValue<T>
    typeParameters:
    - id: T
      description: The type of the object to store.
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  altCompliant: None
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.MyServices.Internal/ContextValue`1.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor
  commentId: M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  langs:
  - csharp
  name: ContextValue<T>()
  nameWithType: ContextValue<T>.ContextValue<T>()
  fullName: ContextValue<T>.ContextValue<T>()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices.Internal
  summary: This class supports `My` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  remarks: "This class supports `My` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. It is not intended to be used directly from your code.  \n  \n This class stores an object in a context appropriate for the run time environment. The value of the <xref:Microsoft.VisualBasic.MyServices.Internal.ContextValue%601.Value%2A> property is initialized to `Nothing`."
  syntax:
    content: public ContextValue ();
    parameters: []
  overload: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.MyServices.Internal/ContextValue`1.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value
  commentId: P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value
  id: Value
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  langs:
  - csharp
  name: Value
  nameWithType: ContextValue<T>.Value
  fullName: ContextValue<T>.Value
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices.Internal
  summary: This property supports `My` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  remarks: "This class supports `My` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. It is not intended to be used directly from your code.  \n  \n The value associated with this class is set or retrieved in the context appropriate for the run time environment."
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      [set: System.Security.SecuritySafeCritical]

      public T Value { get; set; }
    return:
      type: T
      description: The value associated with this class.
  overload: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  internal_use_only: true
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.MyServices.Internal/ContextValue`1.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  isExternal: false
  name: ContextValue<T>()
  nameWithType: ContextValue<T>.ContextValue<T>()
  fullName: ContextValue<T>.ContextValue<T>()
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  isExternal: false
  name: Value
  nameWithType: ContextValue<T>.Value
  fullName: ContextValue<T>.Value
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor*
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  isExternal: false
  name: ContextValue<T>
  nameWithType: ContextValue<T>.ContextValue<T>
  fullName: ContextValue<T>.ContextValue<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.MyServices.Internal/ContextValue`1.xml
- uid: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value*
  parent: Microsoft.VisualBasic.MyServices.Internal.ContextValue`1
  isExternal: false
  name: Value
  nameWithType: ContextValue<T>.Value
  fullName: ContextValue<T>.Value
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.MyServices.Internal/ContextValue`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
