{"nodes":[{"content":"Provides a mechanism for receiving push-based notifications.","nodes":[{"pos":[0,60],"content":"Provides a mechanism for receiving push-based notifications.","nodes":[{"content":"Provides a mechanism for receiving push-based notifications.","pos":[0,60]}]}],"pos":[457,518],"yaml":true},{"content":"The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern. The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer). `T` represents the class that provides the notification information.  \n  \n An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method. This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.  \n  \n The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:  \n  \n-   The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.  \n  \n-   The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.  \n  \n-   The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.","nodes":[{"pos":[0,453],"content":"The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern. The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer). `T` represents the class that provides the notification information.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.","pos":[0,180],"source":"The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id=\"ph2\">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).","pos":[181,384],"source":" The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer)."},{"content":"<ph id=\"ph1\">`T`</ph> represents the class that provides the notification information.","pos":[385,453],"source":"`T` represents the class that provides the notification information."}]},{"pos":[460,885],"content":"An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method. This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.","nodes":[{"content":"An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method. This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.","pos":[0,425],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id=\"ph2\">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id=\"ph3\">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,272],"source":"An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method."},{"content":"This method returns an <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.","pos":[273,425],"source":" This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications."}]}]},{"pos":[892,1003],"content":"The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:","pos":[0,111],"source":"The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:"}]},{"pos":[1013,1163],"content":"The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.","pos":[0,150],"source":"The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information."}]},{"pos":[1173,1396],"content":"The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.","pos":[0,223],"source":"The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition."}]},{"pos":[1406,1571],"content":"The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.","pos":[0,165],"source":"The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers."}]}],"pos":[529,2113],"yaml":true,"extradata":"MT"},{"content":"The object that provides notification information.","nodes":[{"pos":[0,50],"content":"The object that provides notification information.","nodes":[{"content":"The object that provides notification information.","pos":[0,50]}]}],"pos":[6102,6153],"yaml":true},{"content":"Notifies the observer that the provider has finished sending push-based notifications.","nodes":[{"pos":[0,86],"content":"Notifies the observer that the provider has finished sending push-based notifications.","nodes":[{"content":"Notifies the observer that the provider has finished sending push-based notifications.","pos":[0,86]}]}],"pos":[7703,7790],"yaml":true},{"content":"When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,379],"content":"When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method.","nodes":[{"content":"When the observer's <ph id=\"ph1\">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id=\"ph2\">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id=\"ph3\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id=\"ph5\">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,379],"source":"When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method."}]}],"pos":[7801,8181],"yaml":true,"extradata":"MT"},{"content":"Notifies the observer that the provider has experienced an error condition.","nodes":[{"pos":[0,75],"content":"Notifies the observer that the provider has experienced an error condition.","nodes":[{"content":"Notifies the observer that the provider has experienced an error condition.","pos":[0,75]}]}],"pos":[10491,10567],"yaml":true},{"content":"Although `error` is an object that is derived from <xref:System.Exception?displayProperty=fullName>, it does not necessarily represent an exception that is thrown by the provider. It can also represent a routine or expected error condition, such as data that is missing or unavailable. The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.","nodes":[{"pos":[0,443],"content":"Although `error` is an object that is derived from <xref:System.Exception?displayProperty=fullName>, it does not necessarily represent an exception that is thrown by the provider. It can also represent a routine or expected error condition, such as data that is missing or unavailable. The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.","nodes":[{"content":"Although <ph id=\"ph1\">`error`</ph> is an object that is derived from <ph id=\"ph2\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.","pos":[0,179],"source":"Although `error` is an object that is derived from <xref:System.Exception?displayProperty=fullName>, it does not necessarily represent an exception that is thrown by the provider."},{"content":"It can also represent a routine or expected error condition, such as data that is missing or unavailable.","pos":[180,285]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.","pos":[286,443],"source":" The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling."}]}],"pos":[10578,11022],"yaml":true,"extradata":"MT"},{"content":"An object that provides additional information about the error.","nodes":[{"pos":[0,63],"content":"An object that provides additional information about the error.","nodes":[{"content":"An object that provides additional information about the error.","pos":[0,63]}]}],"pos":[11847,11911],"yaml":true},{"content":"Provides the observer with new data.","nodes":[{"pos":[0,36],"content":"Provides the observer with new data.","nodes":[{"content":"Provides the observer with new data.","pos":[0,36]}]}],"pos":[13375,13412],"yaml":true},{"content":"After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.","nodes":[{"pos":[0,222],"content":"After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.","nodes":[{"content":"After an observer has called a provider's <ph id=\"ph1\">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName&gt;</ph> method, the provider calls the observer's <ph id=\"ph2\">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.","pos":[0,222],"source":"After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications."}]}],"pos":[13423,13646],"yaml":true,"extradata":"MT"},{"content":"The current notification information.","nodes":[{"pos":[0,37],"content":"The current notification information.","nodes":[{"content":"The current notification information.","pos":[0,37]}]}],"pos":[14296,14334],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IObserver`1\n  commentId: T:System.IObserver`1\n  id: IObserver`1\n  children:\n  - System.IObserver`1.OnCompleted\n  - System.IObserver`1.OnError(System.Exception)\n  - System.IObserver`1.OnNext(`0)\n  langs:\n  - csharp\n  name: IObserver<T>\n  nameWithType: IObserver<T>\n  fullName: System.IObserver<T>\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides a mechanism for receiving push-based notifications.\n  remarks: \"The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern. The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer). `T` represents the class that provides the notification information.  \\n  \\n An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method. This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.  \\n  \\n The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:  \\n  \\n-   The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.  \\n  \\n-   The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.  \\n  \\n-   The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.\"\n  example:\n  - \"The following example illustrates the observer design pattern. It defines a `Location` class that contains latitude and longitude information.  \\n  \\n [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]\\n [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  \\n  \\n The `LocationReporter` class provides the <xref:System.IObserver%601> implementation. It displays information about the current location to the console. Its constructor includes a `name` parameter, which allows the `LocationReporter` instance to identify itself in its string output. It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method. This enables the method to assign the returned <xref:System.IDisposable> reference to a private variable. The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> method of the object returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method. The following code defines the `LocationReporter` class.  \\n  \\n [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]\\n [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  \\n  \\n The `LocationTracker` class provides the <xref:System.IObservable%601> implementation. Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data. If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.  \\n  \\n [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]\\n [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  \\n  \\n If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationNotFoundException` object, which is shown in the following example. It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationNotFoundException` object. Note that `LocationNotFoundException` derives from <xref:System.Exception> but does not add any new members.  \\n  \\n [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]\\n [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  \\n  \\n Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object. The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications. The `LocationTracker` class also includes an `EndTransmission` method. When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.  \\n  \\n The following code then instantiates the provider and the observer.  \\n  \\n [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]\\n [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]\"\n  syntax:\n    content: public interface IObserver<in T>\n    typeParameters:\n    - id: T\n      description: The object that provides notification information.\n  derivedClasses:\n  - System.Web.Hosting.LowPhysicalMemoryObserver\n  - System.Web.Hosting.RecycleLimitObserver\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IObserver`1.OnCompleted\n  commentId: M:System.IObserver`1.OnCompleted\n  id: OnCompleted\n  parent: System.IObserver`1\n  langs:\n  - csharp\n  name: OnCompleted()\n  nameWithType: IObserver<T>.OnCompleted()\n  fullName: IObserver<T>.OnCompleted()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Notifies the observer that the provider has finished sending push-based notifications.\n  remarks: When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method.\n  example:\n  - \"The following example provides an implementation of the <xref:System.IObserver%601.OnCompleted%2A> method in a latitude/longitude tracking application. The method simply reports that no further data is available and calls the provider's <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation. See the Example section of the <xref:System.IObserver%601> topic for the complete example.  \\n  \\n [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]\\n [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]\"\n  syntax:\n    content: public void OnCompleted ();\n    parameters: []\n  overload: System.IObserver`1.OnCompleted*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IObserver`1.OnError(System.Exception)\n  commentId: M:System.IObserver`1.OnError(System.Exception)\n  id: OnError(System.Exception)\n  parent: System.IObserver`1\n  langs:\n  - csharp\n  name: OnError(Exception)\n  nameWithType: IObserver<T>.OnError(Exception)\n  fullName: IObserver<T>.OnError(Exception)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Notifies the observer that the provider has experienced an error condition.\n  remarks: Although `error` is an object that is derived from <xref:System.Exception?displayProperty=fullName>, it does not necessarily represent an exception that is thrown by the provider. It can also represent a routine or expected error condition, such as data that is missing or unavailable. The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.\n  example:\n  - \"The following example provides an implementation of the <xref:System.IObserver%601.OnError%2A> method in a latitude/longitude tracking application. The method simply reports that data is currently unavailable; it does not make use of the <xref:System.Exception> object passed to it as a parameter. See the Example section of the <xref:System.IObserver%601> topic for the complete example.  \\n  \\n [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]\\n [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]\"\n  syntax:\n    content: public void OnError (Exception error);\n    parameters:\n    - id: error\n      type: System.Exception\n      description: An object that provides additional information about the error.\n  overload: System.IObserver`1.OnError*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IObserver`1.OnNext(`0)\n  commentId: M:System.IObserver`1.OnNext(`0)\n  id: OnNext(`0)\n  parent: System.IObserver`1\n  langs:\n  - csharp\n  name: OnNext(T)\n  nameWithType: IObserver<T>.OnNext(T)\n  fullName: IObserver<T>.OnNext(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides the observer with new data.\n  remarks: After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.\n  example:\n  - \"The following example provides an implementation of the <xref:System.IObserver%601.OnNext%2A> method in a latitude/longitude tracking application. See the Example section of the <xref:System.IObserver%601> topic for the complete example.  \\n  \\n [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]\\n [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]\"\n  syntax:\n    content: public void OnNext (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The current notification information.\n  overload: System.IObserver`1.OnNext*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IObserver`1.OnCompleted\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnCompleted()\n  nameWithType: IObserver<T>.OnCompleted()\n  fullName: IObserver<T>.OnCompleted()\n- uid: System.IObserver`1.OnError(System.Exception)\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnError(Exception)\n  nameWithType: IObserver<T>.OnError(Exception)\n  fullName: IObserver<T>.OnError(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IObserver`1.OnNext(`0)\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnNext(T)\n  nameWithType: IObserver<T>.OnNext(T)\n  fullName: IObserver<T>.OnNext(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.IObserver`1.OnCompleted*\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnCompleted\n  nameWithType: IObserver<T>.OnCompleted\n  fullName: IObserver<T>.OnCompleted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n- uid: System.IObserver`1.OnError*\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnError\n  nameWithType: IObserver<T>.OnError\n  fullName: IObserver<T>.OnError\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n- uid: System.IObserver`1.OnNext*\n  parent: System.IObserver`1\n  isExternal: false\n  name: OnNext\n  nameWithType: IObserver<T>.OnNext\n  fullName: IObserver<T>.OnNext\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IObserver`1.xml\n"}