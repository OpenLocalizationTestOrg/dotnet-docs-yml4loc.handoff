{"nodes":[{"content":"The exception that is thrown when a requested method or operation is not implemented.","nodes":[{"pos":[0,85],"content":"The exception that is thrown when a requested method or operation is not implemented.","nodes":[{"content":"The exception that is thrown when a requested method or operation is not implemented.","pos":[0,85]}]}],"pos":[709,795],"yaml":true},{"content":"The <xref:System.NotImplementedException> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.  \n  \n <xref:System.NotImplementedException> uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality. For a list of initial values for an instance of <xref:System.NotImplementedException>, see the <xref:System.NotImplementedException.%23ctor%2A> constructors.  \n  \n## Throwing the exception  \n You might choose to throw a  <xref:System.NotImplementedException> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code. In other words,  a <xref:System.NotImplementedException> exception should be synonymous with \"still in development.\"  \n  \n## Handling the exception  \n The <xref:System.NotImplementedException> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality. As a result, you should not handle this error in a `try/catch` block.   Instead, you should remove the member invocation from your code.  You can include a call to the member when it is implemented in the production version of a library.  \n  \n In some cases, a <xref:System.NotImplementedException> exception may not be used to indicate functionality that is still in development in a pre-production library. However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.  \n  \n## NotImplementedException and other exception types  \n The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type. You should use throw one of these instead of a <xref:System.NotImplementedException> exception under the following conditions.  \n  \n <xref:System.PlatformNotSupportedException> exception  \n If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.  \n  \n <xref:System.NotSupportedException> exception  \n Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible. For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists. The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface.  \n  \n You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes. In that case, making the member abstract causes existing subclasses to fail to load.","nodes":[{"pos":[0,174],"content":"The <xref:System.NotImplementedException> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.","pos":[0,174],"source":"The <xref:System.NotImplementedException> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented."}]},{"pos":[181,500],"content":"<xref:System.NotImplementedException> uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality. For a list of initial values for an instance of <xref:System.NotImplementedException>, see the <xref:System.NotImplementedException.%23ctor%2A> constructors.","nodes":[{"content":"<xref:System.NotImplementedException> uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality. For a list of initial values for an instance of <xref:System.NotImplementedException>, see the <xref:System.NotImplementedException.%23ctor%2A> constructors.","pos":[0,319],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> uses the default <ph id=\"ph2\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> implementation, which supports reference equality.","pos":[0,161],"source":"<xref:System.NotImplementedException> uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality."},{"content":"For a list of initial values for an instance of <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.NotImplementedException.%23ctor%2A&gt;</ph> constructors.","pos":[162,319],"source":" For a list of initial values for an instance of <xref:System.NotImplementedException>, see the <xref:System.NotImplementedException.%23ctor%2A> constructors."}]}]},{"pos":[509,531],"content":"Throwing the exception","linkify":"Throwing the exception","nodes":[{"content":"Throwing the exception","pos":[0,22]}]},{"pos":[535,871],"content":"You might choose to throw a  <xref:System.NotImplementedException> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code. In other words,  a <xref:System.NotImplementedException> exception should be synonymous with \"still in development.\"","nodes":[{"content":"You might choose to throw a  <xref:System.NotImplementedException> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code. In other words,  a <xref:System.NotImplementedException> exception should be synonymous with \"still in development.\"","pos":[0,336],"nodes":[{"content":"You might choose to throw a  <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code.","pos":[0,219],"source":"You might choose to throw a  <xref:System.NotImplementedException> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code."},{"content":"In other words,  a <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception should be synonymous with \"still in development.\"","pos":[220,336],"source":" In other words,  a <xref:System.NotImplementedException> exception should be synonymous with \"still in development.\""}]}]},{"pos":[880,902],"content":"Handling the exception","linkify":"Handling the exception","nodes":[{"content":"Handling the exception","pos":[0,22]}]},{"pos":[906,1330],"content":"The <xref:System.NotImplementedException> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality. As a result, you should not handle this error in a `try/catch` block.   Instead, you should remove the member invocation from your code.  You can include a call to the member when it is implemented in the production version of a library.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality.","pos":[0,186],"source":"The <xref:System.NotImplementedException> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality."},{"content":"As a result, you should not handle this error in a <ph id=\"ph1\">`try/catch`</ph> block.","pos":[187,256],"source":" As a result, you should not handle this error in a `try/catch` block."},{"content":"Instead, you should remove the member invocation from your code.","pos":[259,323]},{"content":"You can include a call to the member when it is implemented in the production version of a library.","pos":[325,424]}]},{"pos":[1337,1630],"content":"In some cases, a <xref:System.NotImplementedException> exception may not be used to indicate functionality that is still in development in a pre-production library. However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.","nodes":[{"content":"In some cases, a <xref:System.NotImplementedException> exception may not be used to indicate functionality that is still in development in a pre-production library. However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.","pos":[0,293],"nodes":[{"content":"In some cases, a <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception may not be used to indicate functionality that is still in development in a pre-production library.","pos":[0,164],"source":"In some cases, a <xref:System.NotImplementedException> exception may not be used to indicate functionality that is still in development in a pre-production library."},{"content":"However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.","pos":[165,293]}]}]},{"pos":[1639,1688],"content":"NotImplementedException and other exception types","linkify":"NotImplementedException and other exception types","nodes":[{"content":"NotImplementedException and other exception types","pos":[0,49]}]},{"pos":[1692,2042],"content":"The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type. You should use throw one of these instead of a <xref:System.NotImplementedException> exception under the following conditions.","nodes":[{"content":"The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type. You should use throw one of these instead of a <xref:System.NotImplementedException> exception under the following conditions.","pos":[0,350],"nodes":[{"content":"The .NET Framework also includes two other exception types, <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.PlatformNotSupportedException&gt;</ph>, that indicate that no implementation exists for a particular member of a type.","pos":[0,223],"source":"The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type."},{"content":"You should use throw one of these instead of a <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> exception under the following conditions.","pos":[224,350],"source":" You should use throw one of these instead of a <xref:System.NotImplementedException> exception under the following conditions."}]}]},{"pos":[2049,2320],"content":"<xref:System.PlatformNotSupportedException> exception  \n If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.PlatformNotSupportedException&gt;</ph> exception","pos":[0,53],"source":"<xref:System.PlatformNotSupportedException> exception"},{"content":"If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.","pos":[57,271]}]},{"pos":[2327,2923],"content":"<xref:System.NotSupportedException> exception  \n Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible. For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists. The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception","pos":[0,45],"source":"<xref:System.NotSupportedException> exception"},{"content":"Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible. For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists. The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface.","pos":[49,596],"nodes":[{"content":"Throw a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception if the implementation of an interface  member or an override to an abstract base class method is not possible.","pos":[0,164],"source":"Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible."},{"content":"For example, the   <ph id=\"ph1\">&lt;xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName&gt;</ph> method throws a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists.","pos":[165,414],"source":" For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists."},{"content":"The method must be present in this case because the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class implements the <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[415,547],"source":" The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface."}]}]},{"pos":[2930,3200],"content":"You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes. In that case, making the member abstract causes existing subclasses to fail to load.","nodes":[{"content":"You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes. In that case, making the member abstract causes existing subclasses to fail to load.","pos":[0,270],"nodes":[{"content":"You should also throw a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes.","pos":[0,185],"source":"You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes."},{"content":"In that case, making the member abstract causes existing subclasses to fail to load.","pos":[186,270]}]}]}],"pos":[806,4032],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with default properties.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.NotImplementedException\"&gt;&lt;/xref&gt;</ph> class with default properties.","source":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with default properties."}],"pos":[6996,7113],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The empty string (\"\").|","nodes":[{"pos":[0,111],"content":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>."}]},{"pos":[118,126],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[127,132],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[168,209],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[210,217],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[222,256],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[257,279],"content":"The empty string (\"\").","nodes":[{"content":"The empty string (\"\").","pos":[0,22]}]}],"pos":[7124,7414],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.NotImplementedException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message."}],"pos":[9138,9262],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,111],"content":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>."}]},{"pos":[118,126],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[127,132],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[168,209],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[210,217],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[222,256],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[257,282],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[9273,9564],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[9715,9777],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with serialized data.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.NotImplementedException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with serialized data."}],"pos":[11748,11862],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[12138,12282],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[12377,12518],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,198],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.NotImplementedException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[13905,14104],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,545],"content":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>."}]},{"pos":[552,560],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[561,566],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[602,643],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[644,674],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[679,713],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[714,739],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[14115,14865],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[15033,15095],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[15159,15353],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.NotImplementedException\n  commentId: T:System.NotImplementedException\n  id: NotImplementedException\n  children:\n  - System.NotImplementedException.#ctor\n  - System.NotImplementedException.#ctor(System.String)\n  - System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.NotImplementedException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when a requested method or operation is not implemented.\n  remarks: \"The <xref:System.NotImplementedException> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.  \\n  \\n <xref:System.NotImplementedException> uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality. For a list of initial values for an instance of <xref:System.NotImplementedException>, see the <xref:System.NotImplementedException.%23ctor%2A> constructors.  \\n  \\n## Throwing the exception  \\n You might choose to throw a  <xref:System.NotImplementedException> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code. In other words,  a <xref:System.NotImplementedException> exception should be synonymous with \\\"still in development.\\\"  \\n  \\n## Handling the exception  \\n The <xref:System.NotImplementedException> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality. As a result, you should not handle this error in a `try/catch` block.   Instead, you should remove the member invocation from your code.  You can include a call to the member when it is implemented in the production version of a library.  \\n  \\n In some cases, a <xref:System.NotImplementedException> exception may not be used to indicate functionality that is still in development in a pre-production library. However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.  \\n  \\n## NotImplementedException and other exception types  \\n The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type. You should use throw one of these instead of a <xref:System.NotImplementedException> exception under the following conditions.  \\n  \\n <xref:System.PlatformNotSupportedException> exception  \\n If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.  \\n  \\n <xref:System.NotSupportedException> exception  \\n Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible. For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists. The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface.  \\n  \\n You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes. In that case, making the member abstract causes existing subclasses to fail to load.\"\n  example:\n  - \"The following example throws this exception for a method that has not been developed.  \\n  \\n [!code-csharp[System.NotImplementedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.notimplementedexception/cs/program.cs#1)]\\n [!code-vb[System.NotImplementedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.notimplementedexception/vb/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class NotImplementedException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.NotImplementedException.#ctor\n  commentId: M:System.NotImplementedException.#ctor\n  id: '#ctor'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  name: NotImplementedException()\n  nameWithType: NotImplementedException.NotImplementedException()\n  fullName: NotImplementedException.NotImplementedException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with default properties.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The empty string (\\\"\\\").|\"\n  syntax:\n    content: public NotImplementedException ();\n    parameters: []\n  overload: System.NotImplementedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.NotImplementedException.#ctor(System.String)\n  commentId: M:System.NotImplementedException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  name: NotImplementedException(String)\n  nameWithType: NotImplementedException.NotImplementedException(String)\n  fullName: NotImplementedException.NotImplementedException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public NotImplementedException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n  overload: System.NotImplementedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  name: NotImplementedException(SerializationInfo, StreamingContext)\n  nameWithType: NotImplementedException.NotImplementedException(SerializationInfo, StreamingContext)\n  fullName: NotImplementedException.NotImplementedException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with serialized data.\n  syntax:\n    content: protected NotImplementedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.NotImplementedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.NotImplementedException.#ctor(System.String,System.Exception)\n  commentId: M:System.NotImplementedException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  name: NotImplementedException(String, Exception)\n  nameWithType: NotImplementedException.NotImplementedException(String, Exception)\n  fullName: NotImplementedException.NotImplementedException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.NotImplementedException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public NotImplementedException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.NotImplementedException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.NotImplementedException.#ctor\n  parent: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException()\n  nameWithType: NotImplementedException.NotImplementedException()\n  fullName: NotImplementedException.NotImplementedException()\n- uid: System.NotImplementedException.#ctor(System.String)\n  parent: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException(String)\n  nameWithType: NotImplementedException.NotImplementedException(String)\n  fullName: NotImplementedException.NotImplementedException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException(SerializationInfo, StreamingContext)\n  nameWithType: NotImplementedException.NotImplementedException(SerializationInfo, StreamingContext)\n  fullName: NotImplementedException.NotImplementedException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.NotImplementedException.#ctor(System.String,System.Exception)\n  parent: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException(String, Exception)\n  nameWithType: NotImplementedException.NotImplementedException(String, Exception)\n  fullName: NotImplementedException.NotImplementedException(String, Exception)\n- uid: System.NotImplementedException.#ctor*\n  parent: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException.NotImplementedException\n  fullName: NotImplementedException.NotImplementedException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotImplementedException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}